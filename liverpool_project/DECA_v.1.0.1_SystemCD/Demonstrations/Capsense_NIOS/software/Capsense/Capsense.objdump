
Capsense.elf:     file format elf32-littlenios2
Capsense.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0002022c

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00013934 memsz 0x00013934 flags r-x
    LOAD off    0x00014954 vaddr 0x00033954 paddr 0x00035440 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00016f2c vaddr 0x00036f2c paddr 0x00036f2c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000020c  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000132a8  0002022c  0002022c  0000122c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000480  000334d4  000334d4  000144d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  00033954  00035440  00014954  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00036f2c  00036f2c  00016f2c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  0003708c  0003708c  00016440  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00016440  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000df0  00000000  00000000  00016468  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00027834  00000000  00000000  00017258  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009c8a  00000000  00000000  0003ea8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000c9ee  00000000  00000000  00048716  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002444  00000000  00000000  00055104  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003996  00000000  00000000  00057548  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001b5ee  00000000  00000000  0005aede  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000040  00000000  00000000  000764cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000014f8  00000000  00000000  00076510  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007aee4  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000a  00000000  00000000  0007aee7  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0007aef1  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0007aef2  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0007aef3  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0007aef7  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0007aefb  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0007aeff  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0007af08  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0007af11  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000b  00000000  00000000  0007af1a  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000032  00000000  00000000  0007af25  2**0
                  CONTENTS, READONLY
 29 .jdi          00004066  00000000  00000000  0007af57  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     00041f85  00000000  00000000  0007efbd  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
0002022c l    d  .text	00000000 .text
000334d4 l    d  .rodata	00000000 .rodata
00033954 l    d  .rwdata	00000000 .rwdata
00036f2c l    d  .bss	00000000 .bss
0003708c l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Capsense_bsp//obj/HAL/src/crt0.o
00020264 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 I2C_core.c
00000000 l    df *ABS*	00000000 debug.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00033662 l     O .rodata	00000010 zeroes.4166
00033672 l     O .rodata	00000010 blanks.4165
00000000 l    df *ABS*	00000000 vfprintf.c
00033682 l     O .rodata	00000010 zeroes.4181
00033692 l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00025200 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00026da8 l     F .text	00000008 __fp_lock
00026db0 l     F .text	00000008 __fp_unlock
00026dc4 l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00033954 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00033d98 l     O .rwdata	00000020 lc_ctype_charset
00033d78 l     O .rwdata	00000020 lc_message_charset
00033db8 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000336c4 l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
000337e8 l     O .rodata	00000010 zeroes.4110
000337f8 l     O .rodata	00000010 blanks.4109
00000000 l    df *ABS*	00000000 vfprintf.c
0002b68c l     F .text	000000fc __sprint_r.part.0
00033818 l     O .rodata	00000010 blanks.4125
00033808 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0002e190 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
00030ae0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00030c08 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00030c34 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
00030d3c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00030e38 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00030f1c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00031100 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00035430 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
00031550 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
000316a0 l     F .text	00000038 alt_dev_reg
000343a0 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00031994 l     F .text	00000204 altera_avalon_jtag_uart_irq
00031b98 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
000321b8 l     F .text	00000074 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00032568 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00032a00 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00032b58 l     F .text	00000050 alt_get_errno
00032ba8 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00036f60 g     O .bss	00000004 alt_instruction_exception_handler
00029934 g     F .text	00000074 _mprec_log10
00029a20 g     F .text	0000008c __any_on
0002d0b8 g     F .text	00000054 _isatty_r
000336d0 g     O .rodata	00000028 __mprec_tinytens
00031048 g     F .text	00000078 alt_main
00020be8 g     F .text	000000b8 _puts_r
00036f8c g     O .bss	00000100 alt_irq
0002d10c g     F .text	0000005c _lseek_r
00020524 g     F .text	00000060 ACK_check
00035440 g       *ABS*	00000000 __flash_rwdata_start
00020498 g     F .text	0000008c ACK_single_check
0002f500 g     F .text	00000084 .hidden __eqdf2
0003708c g       *ABS*	00000000 __alt_heap_start
00020bac g     F .text	0000003c printf
0002d334 g     F .text	0000009c _wcrtomb_r
0002a1ec g     F .text	0000005c __sseek
0002710c g     F .text	00000010 __sinit
0002d1c4 g     F .text	00000154 __swbuf_r
00027b84 g     F .text	0000007c _setlocale_r
00026f64 g     F .text	00000078 __sfmoreglue
000310e0 g     F .text	00000020 __malloc_unlock
000287e4 g     F .text	0000015c memmove
00020584 g     F .text	000001fc OC_I2C_Write
000270f4 g     F .text	00000018 _cleanup
00028a64 g     F .text	000000a8 _Balloc
0002f584 g     F .text	000000e0 .hidden __gtdf2
00032dfc g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
00020000 g     F .entry	0000000c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
0002d060 g     F .text	00000058 _fstat_r
00036f44 g     O .bss	00000004 errno
0002a168 g     F .text	00000008 __seofread
0002a4bc g     F .text	000011d0 ___svfiprintf_internal_r
00036f4c g     O .bss	00000004 alt_argv
0003d400 g       *ABS*	00000000 _gp
00031520 g     F .text	00000030 usleep
00034220 g     O .rwdata	00000180 alt_fd_list
00032e1c g     F .text	00000090 alt_find_dev
000286ac g     F .text	00000138 memcpy
00026db8 g     F .text	0000000c _cleanup_r
00030908 g     F .text	000000d0 .hidden __floatsidf
00032ae0 g     F .text	00000078 alt_io_redirect
0002f664 g     F .text	000000e0 .hidden __ltdf2
000334d4 g       *ABS*	00000000 __DTOR_END__
00020ca0 g     F .text	00000014 puts
00033094 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0002a04c g     F .text	00000074 __fpclassifyd
00029890 g     F .text	000000a4 __ratio
0002cbc4 g     F .text	00000024 __vfiprintf_internal
00031d94 g     F .text	0000020c altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
00020b80 g     F .text	0000002c _printf_r
0002e2ac g     F .text	00000008 .hidden __udivsi3
00030d8c g     F .text	000000ac isatty
00033720 g     O .rodata	000000c8 __mprec_tens
00027c00 g     F .text	0000000c __locale_charset
00025090 g     F .text	00000040 vsnprintf
00036f40 g     O .bss	00000004 __malloc_top_pad
00035408 g     O .rwdata	00000004 __mb_cur_max
00027c30 g     F .text	0000000c _localeconv_r
00028e8c g     F .text	0000003c __i2b
00027570 g     F .text	000004a4 __sfvwrite_r
0002a0c0 g     F .text	00000054 _sbrk_r
0002d168 g     F .text	0000005c _read_r
00035428 g     O .rwdata	00000004 alt_max_fd
0002cd70 g     F .text	00000100 _fclose_r
00026d78 g     F .text	00000030 fflush
00036f3c g     O .bss	00000004 __malloc_max_sbrked_mem
0002e2e4 g     F .text	0000089c .hidden __adddf3
00029638 g     F .text	0000011c __b2d
0002db74 g     F .text	0000061c .hidden __umoddi3
00030f6c g     F .text	000000dc lseek
00035400 g     O .rwdata	00000004 _global_impure_ptr
00029aac g     F .text	000005a0 _realloc_r
0003708c g       *ABS*	00000000 __bss_end
00032910 g     F .text	000000f0 alt_iic_isr_register
0003141c g     F .text	00000104 alt_tick
0002d534 g     F .text	00000640 .hidden __udivdi3
0002ce84 g     F .text	00000184 _fputwc_r
000336f8 g     O .rodata	00000028 __mprec_bigtens
00028c70 g     F .text	00000104 __s2b
000309d8 g     F .text	000000a4 .hidden __floatunsidf
000293e0 g     F .text	00000060 __mcmp
0002712c g     F .text	00000018 __fp_lock_all
000328c4 g     F .text	0000004c alt_ic_irq_enabled
00031384 g     F .text	00000098 alt_alarm_stop
00036f5c g     O .bss	00000004 alt_irq_active
00020780 g     F .text	00000064 ACK_judge_for_read
000200fc g     F .exceptions	000000d0 alt_irq_handler
000341f8 g     O .rwdata	00000028 alt_dev_null
000202cc g     F .text	00000058 Write32_Data
0003254c g     F .text	0000001c alt_dcache_flush_all
00028d74 g     F .text	00000068 __hi0bits
00030880 g     F .text	00000088 .hidden __fixdfsi
00035440 g       *ABS*	00000000 __ram_rwdata_end
00035420 g     O .rwdata	00000008 alt_dev_list
000315a0 g     F .text	00000100 write
00033954 g       *ABS*	00000000 __ram_rodata_end
00030c84 g     F .text	000000b8 fstat
0002f664 g     F .text	000000e0 .hidden __ledf2
000209fc g     F .text	0000006c myprintf
00029158 g     F .text	00000140 __pow5mult
0002b7a0 g     F .text	00001424 ___vfiprintf_internal_r
00036f34 g     O .bss	00000004 __nlocale_changed
0002e2b4 g     F .text	00000008 .hidden __umodsi3
0003708c g       *ABS*	00000000 end
000318d0 g     F .text	000000c4 altera_avalon_jtag_uart_init
000201cc g     F .exceptions	00000060 alt_instruction_exception_entry
000334d4 g       *ABS*	00000000 __CTOR_LIST__
000386a0 g       *ABS*	00000000 __alt_stack_pointer
0003222c g     F .text	00000088 alt_avalon_timer_sc_init
00030a7c g     F .text	00000064 .hidden __clzsi2
00031fa0 g     F .text	00000218 altera_avalon_jtag_uart_write
0002711c g     F .text	00000004 __sfp_lock_acquire
000285c4 g     F .text	000000e8 memchr
00022e80 g     F .text	000020fc ___vfprintf_internal_r
00020cb4 g     F .text	00000058 _sprintf_r
00027280 g     F .text	000002f0 _free_r
00027c0c g     F .text	00000010 __locale_mb_cur_max
0003330c g     F .text	00000194 __call_exitprocs
00036f30 g     O .bss	00000004 __mlocale_changed
0003540c g     O .rwdata	00000004 __malloc_sbrk_base
0002022c g     F .text	0000003c _start
00036f54 g     O .bss	00000004 _alt_tick_rate
00029298 g     F .text	00000148 __lshift
00036f58 g     O .bss	00000004 _alt_nticks
00031150 g     F .text	00000104 read
0003170c g     F .text	00000060 alt_sys_init
0002a2f4 g     F .text	000001c8 __ssprint_r
000331f8 g     F .text	00000114 __register_exitproc
00028ec8 g     F .text	00000290 __multiply
00031c40 g     F .text	00000068 altera_avalon_jtag_uart_close
0002e2bc g     F .text	00000028 .hidden __mulsi3
00033954 g       *ABS*	00000000 __ram_rwdata_start
000334d4 g       *ABS*	00000000 __ram_rodata_start
00036f64 g     O .bss	00000028 __malloc_current_mallinfo
00029754 g     F .text	0000013c __d2b
0003176c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00032fc0 g     F .text	000000d4 alt_get_fd
000323f4 g     F .text	00000158 alt_busy_sleep
0002cc44 g     F .text	00000054 _close_r
0003317c g     F .text	0000007c memcmp
0003182c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0003708c g       *ABS*	00000000 __alt_stack_base
0003187c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000250d0 g     F .text	00000130 __swsetup_r
0002037c g     F .text	0000011c oc_i2c_init
0002eb80 g     F .text	00000980 .hidden __divdf3
00026fdc g     F .text	00000118 __sfp
000299a8 g     F .text	00000078 __copybits
00033df0 g     O .rwdata	00000408 __malloc_av_
00027128 g     F .text	00000004 __sinit_lock_release
00024fa0 g     F .text	000000f0 _vsnprintf_r
0002f744 g     F .text	0000086c .hidden __muldf3
0002a114 g     F .text	00000054 __sread
00032eac g     F .text	00000114 alt_find_file
000325b8 g     F .text	000000a4 alt_dev_llist_insert
000310c0 g     F .text	00000020 __malloc_lock
000312d4 g     F .text	000000b0 sbrk
00020e10 g     F .text	00002070 ___svfprintf_internal_r
00026b50 g     F .text	00000228 _fflush_r
0002cc98 g     F .text	000000d8 _calloc_r
00036f2c g       *ABS*	00000000 __bss_start
00028940 g     F .text	00000124 memset
00020268 g     F .text	00000064 main
00036f50 g     O .bss	00000004 alt_envp
00036f38 g     O .bss	00000004 __malloc_max_total_mem
00020a68 g     F .text	00000088 myprintf_hexarray
000317cc g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0002d318 g     F .text	0000001c __swbuf
0002a248 g     F .text	00000008 __sclose
000386a0 g       *ABS*	00000000 __alt_heap_limit
0002ce70 g     F .text	00000014 fclose
00025428 g     F .text	00001728 _dtoa_r
00027e1c g     F .text	000007a8 _malloc_r
0002d4a8 g     F .text	00000030 __ascii_wctomb
0003542c g     O .rwdata	00000004 alt_errno
00027a14 g     F .text	000000b8 _fwalk
0002e1fc g     F .text	00000054 .hidden __divsi3
0002715c g     F .text	00000124 _malloc_trim_r
000334d4 g       *ABS*	00000000 __CTOR_END__
0002a250 g     F .text	000000a4 strcmp
000334d4 g       *ABS*	00000000 __flash_rodata_start
000334d4 g       *ABS*	00000000 __DTOR_LIST__
0002f500 g     F .text	00000084 .hidden __nedf2
000316d8 g     F .text	00000034 alt_irq_init
00031254 g     F .text	00000080 alt_release_fd
00020d0c g     F .text	0000006c sprintf
00033828 g     O .rodata	00000100 .hidden __clz_tab
000209cc g     F .text	00000030 debug_output
00036f2c g     O .bss	00000004 _PathLocale
00033130 g     F .text	00000014 atexit
0002cbe8 g     F .text	0000005c _write_r
00027c3c g     F .text	0000001c setlocale
00035404 g     O .rwdata	00000004 _impure_ptr
00036f48 g     O .bss	00000004 alt_argc
000326b8 g     F .text	0000005c _do_dtors
00027c28 g     F .text	00000008 __locale_cjk_lang
00020af0 g     F .text	00000090 myprintf_dwordarray
00020020 g       .exceptions	00000000 alt_irq_entry
000295d8 g     F .text	00000060 __ulp
00027144 g     F .text	00000018 __fp_unlock_all
00035418 g     O .rwdata	00000008 alt_fs_list
00020324 g     F .text	00000058 Read32_Data
000207e4 g     F .text	000001e8 OC_I2C_Read
00020020 g       *ABS*	00000000 __ram_exceptions_start
00027c58 g     F .text	0000000c localeconv
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2
00032730 g     F .text	00000050 alt_ic_isr_register
00035440 g       *ABS*	00000000 _edata
0003708c g       *ABS*	00000000 _end
0002022c g       *ABS*	00000000 __ram_exceptions_end
00031ca8 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
00032820 g     F .text	000000a4 alt_ic_irq_disable
0002a170 g     F .text	0000007c __swrite
00035410 g     O .rwdata	00000004 __malloc_trim_threshold
00027c1c g     F .text	0000000c __locale_msgcharset
00033144 g     F .text	00000038 exit
00027acc g     F .text	000000b8 _fwalk_reent
00029440 g     F .text	00000198 __mdiff
0002e250 g     F .text	0000005c .hidden __modsi3
000386a0 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00027120 g     F .text	00000004 __sfp_lock_release
000334a0 g     F .text	00000034 _exit
000322b4 g     F .text	00000140 alt_alarm_start
00027c64 g     F .text	000001b8 __smakebuf_r
00020d78 g     F .text	00000098 strlen
00032c9c g     F .text	00000160 open
0002f584 g     F .text	000000e0 .hidden __gedf2
00035414 g     O .rwdata	00000004 __wctomb
0002b788 g     F .text	00000018 __sprint_r
00032714 g     F .text	0000001c alt_icache_flush_all
0003543c g     O .rwdata	00000004 alt_priority_mask
00032780 g     F .text	000000a0 alt_ic_irq_enable
00024f7c g     F .text	00000024 __vfprintf_internal
0002d4d8 g     F .text	0000005c _wctomb_r
0002ffb0 g     F .text	000008d0 .hidden __subdf3
00028ddc g     F .text	000000b0 __lo0bits
00035434 g     O .rwdata	00000008 alt_alarm_list
0003265c g     F .text	0000005c _do_ctors
0002d3d0 g     F .text	000000d8 wcrtomb
00030b30 g     F .text	000000d8 close
00030e9c g     F .text	00000080 alt_load
0002d008 g     F .text	00000058 fputwc
00000000  w      *UND*	00000000 free
00027124 g     F .text	00000004 __sinit_lock_acquire
00028b34 g     F .text	0000013c __multadd
00028b0c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20000:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20004:	08408b14 	ori	at,at,556
    jmp r1
   20008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
   2008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201cc0 	call	201cc <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	008000f4 	movhi	r2,3
   20140:	109be304 	addi	r2,r2,28556
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	008000f4 	movhi	r2,3
   20158:	109be304 	addi	r2,r2,28556
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <_gp+0xfffe2d2c>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <_gp+0xfffe2d20>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	e037883a 	mov	sp,fp
   201bc:	dfc00117 	ldw	ra,4(sp)
   201c0:	df000017 	ldw	fp,0(sp)
   201c4:	dec00204 	addi	sp,sp,8
   201c8:	f800283a 	ret

000201cc <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201cc:	defffb04 	addi	sp,sp,-20
   201d0:	dfc00415 	stw	ra,16(sp)
   201d4:	df000315 	stw	fp,12(sp)
   201d8:	df000304 	addi	fp,sp,12
   201dc:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   201e0:	00bfffc4 	movi	r2,-1
   201e4:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
   201e8:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   201ec:	d0a6d817 	ldw	r2,-25760(gp)
   201f0:	10000726 	beq	r2,zero,20210 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   201f4:	d0a6d817 	ldw	r2,-25760(gp)
   201f8:	e0fffd17 	ldw	r3,-12(fp)
   201fc:	1809883a 	mov	r4,r3
   20200:	e17fff17 	ldw	r5,-4(fp)
   20204:	e1bffe17 	ldw	r6,-8(fp)
   20208:	103ee83a 	callr	r2
   2020c:	00000206 	br	20218 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20210:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   20214:	0005883a 	mov	r2,zero
}
   20218:	e037883a 	mov	sp,fp
   2021c:	dfc00117 	ldw	ra,4(sp)
   20220:	df000017 	ldw	fp,0(sp)
   20224:	dec00204 	addi	sp,sp,8
   20228:	f800283a 	ret

Disassembly of section .text:

0002022c <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   2022c:	06c000f4 	movhi	sp,3
    ori sp, sp, %lo(__alt_stack_pointer)
   20230:	dee1a814 	ori	sp,sp,34464
    movhi gp, %hi(_gp)
   20234:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20238:	d6b50014 	ori	gp,gp,54272
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   2023c:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20240:	109bcb14 	ori	r2,r2,28460

    movhi r3, %hi(__bss_end)
   20244:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20248:	18dc2314 	ori	r3,r3,28812

    beq r2, r3, 1f
   2024c:	10c00326 	beq	r2,r3,2025c <_start+0x30>

0:
    stw zero, (r2)
   20250:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   20254:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20258:	10fffd36 	bltu	r2,r3,20250 <_gp+0xfffe2e50>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   2025c:	0030e9c0 	call	30e9c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20260:	00310480 	call	31048 <alt_main>

00020264 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   20264:	003fff06 	br	20264 <_gp+0xfffe2e64>

00020268 <main>:
#include "I2C_core.h"
#define Device_Addr 0x6e //0x37
#define Button_State 0xaa

int main()
{
   20268:	deffbc04 	addi	sp,sp,-272
   2026c:	dfc04315 	stw	ra,268(sp)
   20270:	df004215 	stw	fp,264(sp)
   20274:	df004204 	addi	fp,sp,264
  alt_u16 Data16;
  alt_u8 szData1[2];
  alt_u8 szData0[1];

  int value,i;
  oc_i2c_init(I2C_OPENCORES_BASE);
   20278:	01000134 	movhi	r4,4
   2027c:	21040804 	addi	r4,r4,4128
   20280:	002037c0 	call	2037c <oc_i2c_init>
  printf("Please touch the CapSense Buttons on DECA.");
   20284:	010000f4 	movhi	r4,3
   20288:	210d3504 	addi	r4,r4,13524
   2028c:	0020bac0 	call	20bac <printf>
  while(1)
  {
    OC_I2C_Read(I2C_OPENCORES_BASE,Device_Addr,Button_State,&szValue,2);
   20290:	00800084 	movi	r2,2
   20294:	d8800015 	stw	r2,0(sp)
   20298:	01000134 	movhi	r4,4
   2029c:	21040804 	addi	r4,r4,4128
   202a0:	01401b84 	movi	r5,110
   202a4:	01802a84 	movi	r6,170
   202a8:	e1ffbf04 	addi	r7,fp,-260
   202ac:	00207e40 	call	207e4 <OC_I2C_Read>
    IOWR(LED_BASE,0,~szValue[0]);
   202b0:	e0bfbf03 	ldbu	r2,-260(fp)
   202b4:	10803fcc 	andi	r2,r2,255
   202b8:	0086303a 	nor	r3,zero,r2
   202bc:	00800134 	movhi	r2,4
   202c0:	10841004 	addi	r2,r2,4160
   202c4:	10c00035 	stwio	r3,0(r2)
  }
   202c8:	003ff106 	br	20290 <_gp+0xfffe2e90>

000202cc <Write32_Data>:

#define SLEEP_TIME 15  //us
#define TRUE 1
#define FALSE 0

bool Write32_Data(alt_32 base_address, alt_32 offset_address, alt_32 Data){
   202cc:	defffb04 	addi	sp,sp,-20
   202d0:	df000415 	stw	fp,16(sp)
   202d4:	df000404 	addi	fp,sp,16
   202d8:	e13ffd15 	stw	r4,-12(fp)
   202dc:	e17ffe15 	stw	r5,-8(fp)
   202e0:	e1bfff15 	stw	r6,-4(fp)
	bool bPass;
    IOWR(base_address, offset_address,Data);
   202e4:	e0bffe17 	ldw	r2,-8(fp)
   202e8:	1085883a 	add	r2,r2,r2
   202ec:	1085883a 	add	r2,r2,r2
   202f0:	1007883a 	mov	r3,r2
   202f4:	e0bffd17 	ldw	r2,-12(fp)
   202f8:	1885883a 	add	r2,r3,r2
   202fc:	1007883a 	mov	r3,r2
   20300:	e0bfff17 	ldw	r2,-4(fp)
   20304:	18800035 	stwio	r2,0(r3)
    bPass=TRUE;
   20308:	00800044 	movi	r2,1
   2030c:	e0bffc15 	stw	r2,-16(fp)
    return bPass;
   20310:	e0bffc17 	ldw	r2,-16(fp)
}
   20314:	e037883a 	mov	sp,fp
   20318:	df000017 	ldw	fp,0(sp)
   2031c:	dec00104 	addi	sp,sp,4
   20320:	f800283a 	ret

00020324 <Read32_Data>:



bool  Read32_Data(alt_32 base_address, alt_32 offset_address, alt_32 *pData32){
   20324:	defffb04 	addi	sp,sp,-20
   20328:	df000415 	stw	fp,16(sp)
   2032c:	df000404 	addi	fp,sp,16
   20330:	e13ffd15 	stw	r4,-12(fp)
   20334:	e17ffe15 	stw	r5,-8(fp)
   20338:	e1bfff15 	stw	r6,-4(fp)
	bool bPass;
	*pData32 =IORD(base_address ,offset_address  );
   2033c:	e0bffe17 	ldw	r2,-8(fp)
   20340:	1085883a 	add	r2,r2,r2
   20344:	1085883a 	add	r2,r2,r2
   20348:	1007883a 	mov	r3,r2
   2034c:	e0bffd17 	ldw	r2,-12(fp)
   20350:	1885883a 	add	r2,r3,r2
   20354:	10c00037 	ldwio	r3,0(r2)
   20358:	e0bfff17 	ldw	r2,-4(fp)
   2035c:	10c00015 	stw	r3,0(r2)
	bPass=TRUE;
   20360:	00800044 	movi	r2,1
   20364:	e0bffc15 	stw	r2,-16(fp)
    return bPass;
   20368:	e0bffc17 	ldw	r2,-16(fp)
}
   2036c:	e037883a 	mov	sp,fp
   20370:	df000017 	ldw	fp,0(sp)
   20374:	dec00104 	addi	sp,sp,4
   20378:	f800283a 	ret

0002037c <oc_i2c_init>:

bool oc_i2c_init(alt_32 i2c_base)
{
   2037c:	defffb04 	addi	sp,sp,-20
   20380:	dfc00415 	stw	ra,16(sp)
   20384:	df000315 	stw	fp,12(sp)
   20388:	df000304 	addi	fp,sp,12
   2038c:	e13fff15 	stw	r4,-4(fp)
	bool bSuccess=TRUE;
   20390:	00800044 	movi	r2,1
   20394:	e0bffd15 	stw	r2,-12(fp)
	alt_u32 read_data;
    // I2c sysclock =50M hz
	// i2c scl max 400k
	//scl =sysclock/(prescale*5)
	//add
	IOWR(i2c_base,2,0);
   20398:	e0bfff17 	ldw	r2,-4(fp)
   2039c:	10800204 	addi	r2,r2,8
   203a0:	0007883a 	mov	r3,zero
   203a4:	10c00035 	stwio	r3,0(r2)
	IOWR(i2c_base,4,0x1);
   203a8:	e0bfff17 	ldw	r2,-4(fp)
   203ac:	10800404 	addi	r2,r2,16
   203b0:	1007883a 	mov	r3,r2
   203b4:	00800044 	movi	r2,1
   203b8:	18800035 	stwio	r2,0(r3)
	//add
   IOWR(i2c_base, 0,0x18);//write low prescale
   203bc:	e0bfff17 	ldw	r2,-4(fp)
   203c0:	00c00604 	movi	r3,24
   203c4:	10c00035 	stwio	r3,0(r2)
   IOWR(i2c_base, 1,0x00);//write hi prescale
   203c8:	e0bfff17 	ldw	r2,-4(fp)
   203cc:	10800104 	addi	r2,r2,4
   203d0:	0007883a 	mov	r3,zero
   203d4:	10c00035 	stwio	r3,0(r2)
   //add



   //enable the I2C core, but disable the IRQ
   IOWR( i2c_base, 2,0x80);
   203d8:	e0bfff17 	ldw	r2,-4(fp)
   203dc:	10800204 	addi	r2,r2,8
   203e0:	1007883a 	mov	r3,r2
   203e4:	00802004 	movi	r2,128
   203e8:	18800035 	stwio	r2,0(r3)

    read_data =IORD(i2c_base, 0);
   203ec:	e0bfff17 	ldw	r2,-4(fp)
   203f0:	10800037 	ldwio	r2,0(r2)
   203f4:	e0bffe15 	stw	r2,-8(fp)
    if( (read_data & 0x00ff) != 0x18)
   203f8:	e0bffe17 	ldw	r2,-8(fp)
   203fc:	10803fcc 	andi	r2,r2,255
   20400:	10800620 	cmpeqi	r2,r2,24
   20404:	10000a1e 	bne	r2,zero,20430 <oc_i2c_init+0xb4>
    {
    	bSuccess = FALSE;
   20408:	e03ffd15 	stw	zero,-12(fp)
       	read_data =IORD(i2c_base, 1);
   2040c:	e0bfff17 	ldw	r2,-4(fp)
   20410:	10800104 	addi	r2,r2,4
   20414:	10800037 	ldwio	r2,0(r2)
   20418:	e0bffe15 	stw	r2,-8(fp)
		if((read_data & 0x00ff) != 0x00){
   2041c:	e0bffe17 	ldw	r2,-8(fp)
   20420:	10803fcc 	andi	r2,r2,255
   20424:	10000d26 	beq	r2,zero,2045c <oc_i2c_init+0xe0>
			bSuccess = FALSE;
   20428:	e03ffd15 	stw	zero,-12(fp)
   2042c:	00000b06 	br	2045c <oc_i2c_init+0xe0>
		}
    }
    else if (bSuccess){
   20430:	e0bffd17 	ldw	r2,-12(fp)
   20434:	10000926 	beq	r2,zero,2045c <oc_i2c_init+0xe0>
    	read_data =IORD(i2c_base, 2);
   20438:	e0bfff17 	ldw	r2,-4(fp)
   2043c:	10800204 	addi	r2,r2,8
   20440:	10800037 	ldwio	r2,0(r2)
   20444:	e0bffe15 	stw	r2,-8(fp)
        if( (read_data & 0x00ff) != 0x80 ){
   20448:	e0bffe17 	ldw	r2,-8(fp)
   2044c:	10803fcc 	andi	r2,r2,255
   20450:	10802020 	cmpeqi	r2,r2,128
   20454:	1000011e 	bne	r2,zero,2045c <oc_i2c_init+0xe0>
            bSuccess = FALSE;
   20458:	e03ffd15 	stw	zero,-12(fp)
        }
    }

   if (bSuccess)
   2045c:	e0bffd17 	ldw	r2,-12(fp)
   20460:	10000426 	beq	r2,zero,20474 <oc_i2c_init+0xf8>
       printf("\nI2C core is enabled! \r\n");
   20464:	010000f4 	movhi	r4,3
   20468:	210d4004 	addi	r4,r4,13568
   2046c:	0020ca00 	call	20ca0 <puts>
   20470:	00000306 	br	20480 <oc_i2c_init+0x104>
   else
       printf("\nI2C core is not enabled! \r\n");
   20474:	010000f4 	movhi	r4,3
   20478:	210d4604 	addi	r4,r4,13592
   2047c:	0020ca00 	call	20ca0 <puts>

   return bSuccess;
   20480:	e0bffd17 	ldw	r2,-12(fp)

}
   20484:	e037883a 	mov	sp,fp
   20488:	dfc00117 	ldw	ra,4(sp)
   2048c:	df000017 	ldw	fp,0(sp)
   20490:	dec00204 	addi	sp,sp,8
   20494:	f800283a 	ret

00020498 <ACK_single_check>:

bool  ACK_single_check(alt_32 i2c_base)
{
   20498:	defffb04 	addi	sp,sp,-20
   2049c:	dfc00415 	stw	ra,16(sp)
   204a0:	df000315 	stw	fp,12(sp)
   204a4:	df000304 	addi	fp,sp,12
   204a8:	e13fff15 	stw	r4,-4(fp)
	bool bSuccess=TRUE;
   204ac:	00800044 	movi	r2,1
   204b0:	e0bffd15 	stw	r2,-12(fp)
	alt_32 read_data;

    usleep(SLEEP_TIME);
   204b4:	010003c4 	movi	r4,15
   204b8:	00315200 	call	31520 <usleep>
    read_data =IORD(i2c_base, 4);
   204bc:	e0bfff17 	ldw	r2,-4(fp)
   204c0:	10800404 	addi	r2,r2,16
   204c4:	10800037 	ldwio	r2,0(r2)
   204c8:	e0bffe15 	stw	r2,-8(fp)
    if(read_data & 0x02)
   204cc:	e0bffe17 	ldw	r2,-8(fp)
   204d0:	1080008c 	andi	r2,r2,2
   204d4:	10000126 	beq	r2,zero,204dc <ACK_single_check+0x44>
            bSuccess = FALSE;
   204d8:	e03ffd15 	stw	zero,-12(fp)
     if (bSuccess){
   204dc:	e0bffd17 	ldw	r2,-12(fp)
   204e0:	10000a26 	beq	r2,zero,2050c <ACK_single_check+0x74>
            usleep(SLEEP_TIME);
   204e4:	010003c4 	movi	r4,15
   204e8:	00315200 	call	31520 <usleep>
            read_data =IORD(i2c_base, 4);
   204ec:	e0bfff17 	ldw	r2,-4(fp)
   204f0:	10800404 	addi	r2,r2,16
   204f4:	10800037 	ldwio	r2,0(r2)
   204f8:	e0bffe15 	stw	r2,-8(fp)
                if(read_data & 0x80)
   204fc:	e0bffe17 	ldw	r2,-8(fp)
   20500:	1080200c 	andi	r2,r2,128
   20504:	10000126 	beq	r2,zero,2050c <ACK_single_check+0x74>
                    bSuccess = FALSE;
   20508:	e03ffd15 	stw	zero,-12(fp)
     }
    return bSuccess;
   2050c:	e0bffd17 	ldw	r2,-12(fp)
}
   20510:	e037883a 	mov	sp,fp
   20514:	dfc00117 	ldw	ra,4(sp)
   20518:	df000017 	ldw	fp,0(sp)
   2051c:	dec00204 	addi	sp,sp,8
   20520:	f800283a 	ret

00020524 <ACK_check>:


bool  ACK_check(alt_32 i2c_base){
   20524:	defffb04 	addi	sp,sp,-20
   20528:	dfc00415 	stw	ra,16(sp)
   2052c:	df000315 	stw	fp,12(sp)
   20530:	df000304 	addi	fp,sp,12
   20534:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess = FALSE;
   20538:	e03ffd15 	stw	zero,-12(fp)
    int i=0;
   2053c:	e03ffe15 	stw	zero,-8(fp)

    while(!bSuccess && i++ < 10){
   20540:	00000306 	br	20550 <ACK_check+0x2c>
        bSuccess = ACK_single_check(i2c_base);
   20544:	e13fff17 	ldw	r4,-4(fp)
   20548:	00204980 	call	20498 <ACK_single_check>
   2054c:	e0bffd15 	stw	r2,-12(fp)

bool  ACK_check(alt_32 i2c_base){
    bool bSuccess = FALSE;
    int i=0;

    while(!bSuccess && i++ < 10){
   20550:	e0bffd17 	ldw	r2,-12(fp)
   20554:	1000051e 	bne	r2,zero,2056c <ACK_check+0x48>
   20558:	e0bffe17 	ldw	r2,-8(fp)
   2055c:	10c00044 	addi	r3,r2,1
   20560:	e0fffe15 	stw	r3,-8(fp)
   20564:	10800290 	cmplti	r2,r2,10
   20568:	103ff61e 	bne	r2,zero,20544 <_gp+0xfffe3144>
        bSuccess = ACK_single_check(i2c_base);
    }

    return bSuccess;
   2056c:	e0bffd17 	ldw	r2,-12(fp)
}
   20570:	e037883a 	mov	sp,fp
   20574:	dfc00117 	ldw	ra,4(sp)
   20578:	df000017 	ldw	fp,0(sp)
   2057c:	dec00204 	addi	sp,sp,8
   20580:	f800283a 	ret

00020584 <OC_I2C_Write>:

bool  OC_I2C_Write(alt_32 i2c_base,alt_u8 device_address,alt_u8 sub_address, alt_u8 pData)
{
   20584:	defff804 	addi	sp,sp,-32
   20588:	dfc00715 	stw	ra,28(sp)
   2058c:	df000615 	stw	fp,24(sp)
   20590:	df000604 	addi	fp,sp,24
   20594:	e13ffc15 	stw	r4,-16(fp)
   20598:	2809883a 	mov	r4,r5
   2059c:	3007883a 	mov	r3,r6
   205a0:	3805883a 	mov	r2,r7
   205a4:	e13ffd05 	stb	r4,-12(fp)
   205a8:	e0fffe05 	stb	r3,-8(fp)
   205ac:	e0bfff05 	stb	r2,-4(fp)
    alt_32 Data32;
    alt_u32 Timeout;
    bool bDone = FALSE;
   205b0:	e03ffa15 	stw	zero,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   205b4:	008000f4 	movhi	r2,3
   205b8:	109bd604 	addi	r2,r2,28504
   205bc:	10c00017 	ldw	r3,0(r2)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   205c0:	008000f4 	movhi	r2,3
   205c4:	109bd504 	addi	r2,r2,28500
   205c8:	10800017 	ldw	r2,0(r2)
    Timeout = alt_nticks() + alt_ticks_per_second()/2;
   205cc:	1004d07a 	srli	r2,r2,1
   205d0:	1885883a 	add	r2,r3,r2
   205d4:	e0bffb15 	stw	r2,-20(fp)
  while(!bDone)
   205d8:	00003806 	br	206bc <OC_I2C_Write+0x138>
  {
	//DWORD reg_data = 0x0;
   //set the tx reg audio chip dev address with write bit
   if (!Write32_Data( i2c_base, 3,device_address)){
   205dc:	e0bffd03 	ldbu	r2,-12(fp)
   205e0:	e13ffc17 	ldw	r4,-16(fp)
   205e4:	014000c4 	movi	r5,3
   205e8:	100d883a 	mov	r6,r2
   205ec:	00202cc0 	call	202cc <Write32_Data>
   205f0:	1000051e 	bne	r2,zero,20608 <OC_I2C_Write+0x84>
       printf("OC_I2C_Write error[0]\r\n");
   205f4:	010000f4 	movhi	r4,3
   205f8:	210d4d04 	addi	r4,r4,13620
   205fc:	0020ca00 	call	20ca0 <puts>
       return TRUE;
   20600:	00800044 	movi	r2,1
   20604:	00005906 	br	2076c <OC_I2C_Write+0x1e8>
   }
   //set STA and WR bits(bit7 and bit4)
   if (!Write32_Data( i2c_base, 4,0x90)){
   20608:	e13ffc17 	ldw	r4,-16(fp)
   2060c:	01400104 	movi	r5,4
   20610:	01802404 	movi	r6,144
   20614:	00202cc0 	call	202cc <Write32_Data>
   20618:	1000051e 	bne	r2,zero,20630 <OC_I2C_Write+0xac>
       printf("OC_I2C_Write error[1]\r\n");
   2061c:	010000f4 	movhi	r4,3
   20620:	210d5304 	addi	r4,r4,13644
   20624:	0020ca00 	call	20ca0 <puts>
       return TRUE;
   20628:	00800044 	movi	r2,1
   2062c:	00004f06 	br	2076c <OC_I2C_Write+0x1e8>
   }
   usleep(SLEEP_TIME);
   20630:	010003c4 	movi	r4,15
   20634:	00315200 	call	31520 <usleep>
   //set the txr reg data with reg address + 1 data MSB
   if (!Write32_Data( i2c_base, 3,sub_address)){
   20638:	e0bffe03 	ldbu	r2,-8(fp)
   2063c:	e13ffc17 	ldw	r4,-16(fp)
   20640:	014000c4 	movi	r5,3
   20644:	100d883a 	mov	r6,r2
   20648:	00202cc0 	call	202cc <Write32_Data>
   2064c:	1000051e 	bne	r2,zero,20664 <OC_I2C_Write+0xe0>
       printf("OC_I2C_Write error[3]\r\n");
   20650:	010000f4 	movhi	r4,3
   20654:	210d5904 	addi	r4,r4,13668
   20658:	0020ca00 	call	20ca0 <puts>
       return TRUE;
   2065c:	00800044 	movi	r2,1
   20660:	00004206 	br	2076c <OC_I2C_Write+0x1e8>
   }

   //set WR bits(bit4)
    if (!Write32_Data( i2c_base, 4,0x10)){
   20664:	e13ffc17 	ldw	r4,-16(fp)
   20668:	01400104 	movi	r5,4
   2066c:	01800404 	movi	r6,16
   20670:	00202cc0 	call	202cc <Write32_Data>
   20674:	1000051e 	bne	r2,zero,2068c <OC_I2C_Write+0x108>
        printf("OC_I2C_Write error[4]\r\n");
   20678:	010000f4 	movhi	r4,3
   2067c:	210d5f04 	addi	r4,r4,13692
   20680:	0020ca00 	call	20ca0 <puts>
        return TRUE;
   20684:	00800044 	movi	r2,1
   20688:	00003806 	br	2076c <OC_I2C_Write+0x1e8>
    }

   //wait TIP bit go to 0 to end Tx
    if (ACK_check( i2c_base))
   2068c:	e13ffc17 	ldw	r4,-16(fp)
   20690:	00205240 	call	20524 <ACK_check>
   20694:	10000226 	beq	r2,zero,206a0 <OC_I2C_Write+0x11c>
  	  bDone = TRUE;
   20698:	00800044 	movi	r2,1
   2069c:	e0bffa15 	stw	r2,-24(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   206a0:	008000f4 	movhi	r2,3
   206a4:	109bd604 	addi	r2,r2,28504
   206a8:	10800017 	ldw	r2,0(r2)
    if(alt_nticks() > Timeout)
   206ac:	e0fffb17 	ldw	r3,-20(fp)
   206b0:	1880022e 	bgeu	r3,r2,206bc <OC_I2C_Write+0x138>
  	  bDone = TRUE;
   206b4:	00800044 	movi	r2,1
   206b8:	e0bffa15 	stw	r2,-24(fp)
{
    alt_32 Data32;
    alt_u32 Timeout;
    bool bDone = FALSE;
    Timeout = alt_nticks() + alt_ticks_per_second()/2;
  while(!bDone)
   206bc:	e0bffa17 	ldw	r2,-24(fp)
   206c0:	103fc626 	beq	r2,zero,205dc <_gp+0xfffe31dc>
  	  bDone = TRUE;
  }
#if 1

    //set the txr reg data with the data
      if (!Write32_Data( i2c_base, 3,pData)){
   206c4:	e0bfff03 	ldbu	r2,-4(fp)
   206c8:	e13ffc17 	ldw	r4,-16(fp)
   206cc:	014000c4 	movi	r5,3
   206d0:	100d883a 	mov	r6,r2
   206d4:	00202cc0 	call	202cc <Write32_Data>
   206d8:	1000051e 	bne	r2,zero,206f0 <OC_I2C_Write+0x16c>
          printf("OC_I2C_Write error[6]\r\n");
   206dc:	010000f4 	movhi	r4,3
   206e0:	210d6504 	addi	r4,r4,13716
   206e4:	0020ca00 	call	20ca0 <puts>
          return TRUE;
   206e8:	00800044 	movi	r2,1
   206ec:	00001f06 	br	2076c <OC_I2C_Write+0x1e8>
      }

     //set STO and WR bits(bit7 and bit4)
     if (!Write32_Data( i2c_base, 4,0x10)){
   206f0:	e13ffc17 	ldw	r4,-16(fp)
   206f4:	01400104 	movi	r5,4
   206f8:	01800404 	movi	r6,16
   206fc:	00202cc0 	call	202cc <Write32_Data>
   20700:	1000051e 	bne	r2,zero,20718 <OC_I2C_Write+0x194>
         printf("OC_I2C_Write error[7]\r\n");
   20704:	010000f4 	movhi	r4,3
   20708:	210d6b04 	addi	r4,r4,13740
   2070c:	0020ca00 	call	20ca0 <puts>
          return TRUE;
   20710:	00800044 	movi	r2,1
   20714:	00001506 	br	2076c <OC_I2C_Write+0x1e8>
     }

     //wait TIP bit go to 0 to end Tx
      if(!ACK_check( i2c_base)){
   20718:	e13ffc17 	ldw	r4,-16(fp)
   2071c:	00205240 	call	20524 <ACK_check>
   20720:	1000051e 	bne	r2,zero,20738 <OC_I2C_Write+0x1b4>
          printf("OC_I2C_Write error[8]\r\n");
   20724:	010000f4 	movhi	r4,3
   20728:	210d7104 	addi	r4,r4,13764
   2072c:	0020ca00 	call	20ca0 <puts>
          return TRUE;
   20730:	00800044 	movi	r2,1
   20734:	00000d06 	br	2076c <OC_I2C_Write+0x1e8>
   //wait TIP bit go to 0 to end Tx
    if(!ACK_check( i2c_base))
        return false;
#endif

     if (!Write32_Data( i2c_base, 4,0x40)){
   20738:	e13ffc17 	ldw	r4,-16(fp)
   2073c:	01400104 	movi	r5,4
   20740:	01801004 	movi	r6,64
   20744:	00202cc0 	call	202cc <Write32_Data>
   20748:	1000051e 	bne	r2,zero,20760 <OC_I2C_Write+0x1dc>
         printf("OC_I2C_Write error[9]\r\n");
   2074c:	010000f4 	movhi	r4,3
   20750:	210d7704 	addi	r4,r4,13788
   20754:	0020ca00 	call	20ca0 <puts>
         return TRUE;
   20758:	00800044 	movi	r2,1
   2075c:	00000306 	br	2076c <OC_I2C_Write+0x1e8>
     }
     usleep(SLEEP_TIME);
   20760:	010003c4 	movi	r4,15
   20764:	00315200 	call	31520 <usleep>

     return FALSE;
   20768:	0005883a 	mov	r2,zero

}
   2076c:	e037883a 	mov	sp,fp
   20770:	dfc00117 	ldw	ra,4(sp)
   20774:	df000017 	ldw	fp,0(sp)
   20778:	dec00204 	addi	sp,sp,8
   2077c:	f800283a 	ret

00020780 <ACK_judge_for_read>:

bool ACK_judge_for_read(alt_32 i2c_base)
{
   20780:	defffb04 	addi	sp,sp,-20
   20784:	dfc00415 	stw	ra,16(sp)
   20788:	df000315 	stw	fp,12(sp)
   2078c:	df000304 	addi	fp,sp,12
   20790:	e13fff15 	stw	r4,-4(fp)
	bool bSuccess;
    alt_32 this_data;
    usleep(SLEEP_TIME);
   20794:	010003c4 	movi	r4,15
   20798:	00315200 	call	31520 <usleep>
    bSuccess =  Read32_Data ( i2c_base, 4, &this_data);
   2079c:	e0bffe04 	addi	r2,fp,-8
   207a0:	e13fff17 	ldw	r4,-4(fp)
   207a4:	01400104 	movi	r5,4
   207a8:	100d883a 	mov	r6,r2
   207ac:	00203240 	call	20324 <Read32_Data>
   207b0:	e0bffd15 	stw	r2,-12(fp)
    if (bSuccess){
   207b4:	e0bffd17 	ldw	r2,-12(fp)
   207b8:	10000426 	beq	r2,zero,207cc <ACK_judge_for_read+0x4c>
        if(this_data & 0x02)
   207bc:	e0bffe17 	ldw	r2,-8(fp)
   207c0:	1080008c 	andi	r2,r2,2
   207c4:	10000126 	beq	r2,zero,207cc <ACK_judge_for_read+0x4c>
            bSuccess = FALSE;
   207c8:	e03ffd15 	stw	zero,-12(fp)
    }
   //wait the rx ACK signal 0-valid

    return bSuccess;
   207cc:	e0bffd17 	ldw	r2,-12(fp)

}
   207d0:	e037883a 	mov	sp,fp
   207d4:	dfc00117 	ldw	ra,4(sp)
   207d8:	df000017 	ldw	fp,0(sp)
   207dc:	dec00204 	addi	sp,sp,8
   207e0:	f800283a 	ret

000207e4 <OC_I2C_Read>:


bool  OC_I2C_Read(alt_32 i2c_base,alt_u8 device_address,alt_u8 sub_address, alt_u8 *pData8, int nReadLength){
   207e4:	defff604 	addi	sp,sp,-40
   207e8:	dfc00915 	stw	ra,36(sp)
   207ec:	df000815 	stw	fp,32(sp)
   207f0:	df000804 	addi	fp,sp,32
   207f4:	e13ffc15 	stw	r4,-16(fp)
   207f8:	2807883a 	mov	r3,r5
   207fc:	3005883a 	mov	r2,r6
   20800:	e1ffff15 	stw	r7,-4(fp)
   20804:	e0fffd05 	stb	r3,-12(fp)
   20808:	e0bffe05 	stb	r2,-8(fp)

    alt_32 Data32;
    alt_u32 Timeout;
    int i;
    bool bDone = FALSE;
   2080c:	e03ff915 	stw	zero,-28(fp)
   20810:	008000f4 	movhi	r2,3
   20814:	109bd604 	addi	r2,r2,28504
   20818:	10c00017 	ldw	r3,0(r2)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2081c:	008000f4 	movhi	r2,3
   20820:	109bd504 	addi	r2,r2,28500
   20824:	10800017 	ldw	r2,0(r2)
    Timeout = alt_nticks() + alt_ticks_per_second()/2;
   20828:	1004d07a 	srli	r2,r2,1
   2082c:	1885883a 	add	r2,r3,r2
   20830:	e0bffa15 	stw	r2,-24(fp)
    while(!bDone)
   20834:	00003206 	br	20900 <OC_I2C_Read+0x11c>
    {
      //set the tx reg audio chip dev address with write bit
      IOWR( i2c_base, 3,device_address);
   20838:	e0bffc17 	ldw	r2,-16(fp)
   2083c:	10800304 	addi	r2,r2,12
   20840:	1007883a 	mov	r3,r2
   20844:	e0bffd03 	ldbu	r2,-12(fp)
   20848:	18800035 	stwio	r2,0(r3)
      //set STA and WR bits(bit7 and bit4)
      IOWR( i2c_base, 4,0x90);
   2084c:	e0bffc17 	ldw	r2,-16(fp)
   20850:	10800404 	addi	r2,r2,16
   20854:	1007883a 	mov	r3,r2
   20858:	00802404 	movi	r2,144
   2085c:	18800035 	stwio	r2,0(r3)
      //wait TIP bit go to 0 to end Tx
      usleep(SLEEP_TIME);
   20860:	010003c4 	movi	r4,15
   20864:	00315200 	call	31520 <usleep>
      IOWR(i2c_base, 3,sub_address);
   20868:	e0bffc17 	ldw	r2,-16(fp)
   2086c:	10800304 	addi	r2,r2,12
   20870:	1007883a 	mov	r3,r2
   20874:	e0bffe03 	ldbu	r2,-8(fp)
   20878:	18800035 	stwio	r2,0(r3)
      //set WR bits(bit4)
      IOWR( i2c_base, 4,0x10);
   2087c:	e0bffc17 	ldw	r2,-16(fp)
   20880:	10800404 	addi	r2,r2,16
   20884:	1007883a 	mov	r3,r2
   20888:	00800404 	movi	r2,16
   2088c:	18800035 	stwio	r2,0(r3)
      //wait TIP bit go to 0 to end Tx
      usleep(SLEEP_TIME);
   20890:	010003c4 	movi	r4,15
   20894:	00315200 	call	31520 <usleep>
      //read
      //set the tx reg audio chip dev address with read bit 1
      IOWR(i2c_base, 3,device_address|0x01);
   20898:	e0bffc17 	ldw	r2,-16(fp)
   2089c:	10800304 	addi	r2,r2,12
   208a0:	1007883a 	mov	r3,r2
   208a4:	e0bffd03 	ldbu	r2,-12(fp)
   208a8:	10800054 	ori	r2,r2,1
   208ac:	10803fcc 	andi	r2,r2,255
   208b0:	18800035 	stwio	r2,0(r3)
      //set STA and WR bits(bit7 and bit4)
      IOWR( i2c_base, 4,0x90);
   208b4:	e0bffc17 	ldw	r2,-16(fp)
   208b8:	10800404 	addi	r2,r2,16
   208bc:	1007883a 	mov	r3,r2
   208c0:	00802404 	movi	r2,144
   208c4:	18800035 	stwio	r2,0(r3)
      usleep(SLEEP_TIME);
   208c8:	010003c4 	movi	r4,15
   208cc:	00315200 	call	31520 <usleep>
      //wait TIP bit go to 0 to end Tx
      if (ACK_check( i2c_base))
   208d0:	e13ffc17 	ldw	r4,-16(fp)
   208d4:	00205240 	call	20524 <ACK_check>
   208d8:	10000226 	beq	r2,zero,208e4 <OC_I2C_Read+0x100>
    	  bDone = TRUE;
   208dc:	00800044 	movi	r2,1
   208e0:	e0bff915 	stw	r2,-28(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   208e4:	008000f4 	movhi	r2,3
   208e8:	109bd604 	addi	r2,r2,28504
   208ec:	10800017 	ldw	r2,0(r2)
      if(alt_nticks() > Timeout)
   208f0:	e0fffa17 	ldw	r3,-24(fp)
   208f4:	1880022e 	bgeu	r3,r2,20900 <OC_I2C_Read+0x11c>
    	  bDone = TRUE;
   208f8:	00800044 	movi	r2,1
   208fc:	e0bff915 	stw	r2,-28(fp)
    alt_32 Data32;
    alt_u32 Timeout;
    int i;
    bool bDone = FALSE;
    Timeout = alt_nticks() + alt_ticks_per_second()/2;
    while(!bDone)
   20900:	e0bff917 	ldw	r2,-28(fp)
   20904:	103fcc26 	beq	r2,zero,20838 <_gp+0xfffe3438>
      if (ACK_check( i2c_base))
    	  bDone = TRUE;
      if(alt_nticks() > Timeout)
    	  bDone = TRUE;
     }
    for(i=0;i<nReadLength;i++){
   20908:	e03ff815 	stw	zero,-32(fp)
   2090c:	00001f06 	br	2098c <OC_I2C_Read+0x1a8>
   //set the RD and ACK bit(bit5 and bit3)
    	IOWR( i2c_base, 4,((i+1) == nReadLength)?0x28:0x20);
   20910:	e0bffc17 	ldw	r2,-16(fp)
   20914:	10800404 	addi	r2,r2,16
   20918:	1009883a 	mov	r4,r2
   2091c:	e0bff817 	ldw	r2,-32(fp)
   20920:	10c00044 	addi	r3,r2,1
   20924:	e0800217 	ldw	r2,8(fp)
   20928:	1880021e 	bne	r3,r2,20934 <OC_I2C_Read+0x150>
   2092c:	00800a04 	movi	r2,40
   20930:	00000106 	br	20938 <OC_I2C_Read+0x154>
   20934:	00800804 	movi	r2,32
   20938:	20800035 	stwio	r2,0(r4)
        if (!ACK_judge_for_read( i2c_base)){
   2093c:	e13ffc17 	ldw	r4,-16(fp)
   20940:	00207800 	call	20780 <ACK_judge_for_read>
   20944:	1000051e 	bne	r2,zero,2095c <OC_I2C_Read+0x178>
            printf("OC_I2C_Read error[10]\r\n");
   20948:	010000f4 	movhi	r4,3
   2094c:	210d7d04 	addi	r4,r4,13812
   20950:	0020ca00 	call	20ca0 <puts>
            return FALSE;
   20954:	0005883a 	mov	r2,zero
   20958:	00001706 	br	209b8 <OC_I2C_Read+0x1d4>
        }
        Data32=IORD( i2c_base, 3);
   2095c:	e0bffc17 	ldw	r2,-16(fp)
   20960:	10800304 	addi	r2,r2,12
   20964:	10800037 	ldwio	r2,0(r2)
   20968:	e0bffb15 	stw	r2,-20(fp)
        *(pData8+i) =  Data32 & 0xff;
   2096c:	e0bff817 	ldw	r2,-32(fp)
   20970:	e0ffff17 	ldw	r3,-4(fp)
   20974:	1885883a 	add	r2,r3,r2
   20978:	e0fffb17 	ldw	r3,-20(fp)
   2097c:	10c00005 	stb	r3,0(r2)
      if (ACK_check( i2c_base))
    	  bDone = TRUE;
      if(alt_nticks() > Timeout)
    	  bDone = TRUE;
     }
    for(i=0;i<nReadLength;i++){
   20980:	e0bff817 	ldw	r2,-32(fp)
   20984:	10800044 	addi	r2,r2,1
   20988:	e0bff815 	stw	r2,-32(fp)
   2098c:	e0fff817 	ldw	r3,-32(fp)
   20990:	e0800217 	ldw	r2,8(fp)
   20994:	18bfde16 	blt	r3,r2,20910 <_gp+0xfffe3510>
            return FALSE;
        }
        Data32=IORD( i2c_base, 3);
        *(pData8+i) =  Data32 & 0xff;
    }
    IOWR( i2c_base, 4,0x40);
   20998:	e0bffc17 	ldw	r2,-16(fp)
   2099c:	10800404 	addi	r2,r2,16
   209a0:	1007883a 	mov	r3,r2
   209a4:	00801004 	movi	r2,64
   209a8:	18800035 	stwio	r2,0(r3)
    usleep(SLEEP_TIME);
   209ac:	010003c4 	movi	r4,15
   209b0:	00315200 	call	31520 <usleep>


   return TRUE;
   209b4:	00800044 	movi	r2,1

}
   209b8:	e037883a 	mov	sp,fp
   209bc:	dfc00117 	ldw	ra,4(sp)
   209c0:	df000017 	ldw	fp,0(sp)
   209c4:	dec00204 	addi	sp,sp,8
   209c8:	f800283a 	ret

000209cc <debug_output>:
    UART_WriteString(pMessage);  // UART debug
}

#else

void debug_output(char *pMessage){
   209cc:	defffd04 	addi	sp,sp,-12
   209d0:	dfc00215 	stw	ra,8(sp)
   209d4:	df000115 	stw	fp,4(sp)
   209d8:	df000104 	addi	fp,sp,4
   209dc:	e13fff15 	stw	r4,-4(fp)
    
    printf(pMessage);
   209e0:	e13fff17 	ldw	r4,-4(fp)
   209e4:	0020bac0 	call	20bac <printf>
}
   209e8:	e037883a 	mov	sp,fp
   209ec:	dfc00117 	ldw	ra,4(sp)
   209f0:	df000017 	ldw	fp,0(sp)
   209f4:	dec00204 	addi	sp,sp,8
   209f8:	f800283a 	ret

000209fc <myprintf>:





int myprintf(char *format, ...){
   209fc:	deff7804 	addi	sp,sp,-544
   20a00:	dfc08415 	stw	ra,528(sp)
   20a04:	df008315 	stw	fp,524(sp)
   20a08:	df008304 	addi	fp,sp,524
   20a0c:	e1400215 	stw	r5,8(fp)
   20a10:	e1800315 	stw	r6,12(fp)
   20a14:	e1c00415 	stw	r7,16(fp)
   20a18:	e13fff15 	stw	r4,-4(fp)
    int rc;
    char szText[512];
    
    va_list paramList;
    va_start(paramList, format);
   20a1c:	e0800204 	addi	r2,fp,8
   20a20:	e0bffe15 	stw	r2,-8(fp)
    rc = vsnprintf(szText, 512, format, paramList);
   20a24:	e0bffe17 	ldw	r2,-8(fp)
   20a28:	e0ff7e04 	addi	r3,fp,-520
   20a2c:	1809883a 	mov	r4,r3
   20a30:	01408004 	movi	r5,512
   20a34:	e1bfff17 	ldw	r6,-4(fp)
   20a38:	100f883a 	mov	r7,r2
   20a3c:	00250900 	call	25090 <vsnprintf>
   20a40:	e0bf7d15 	stw	r2,-524(fp)
    va_end(paramList);
    
    debug_output(szText);
   20a44:	e0bf7e04 	addi	r2,fp,-520
   20a48:	1009883a 	mov	r4,r2
   20a4c:	00209cc0 	call	209cc <debug_output>

    return rc;    
   20a50:	e0bf7d17 	ldw	r2,-524(fp)
}
   20a54:	e037883a 	mov	sp,fp
   20a58:	dfc00117 	ldw	ra,4(sp)
   20a5c:	df000017 	ldw	fp,0(sp)
   20a60:	dec00504 	addi	sp,sp,20
   20a64:	f800283a 	ret

00020a68 <myprintf_hexarray>:


int myprintf_hexarray(unsigned char *pHex, int len){
   20a68:	defff704 	addi	sp,sp,-36
   20a6c:	dfc00815 	stw	ra,32(sp)
   20a70:	df000715 	stw	fp,28(sp)
   20a74:	df000704 	addi	fp,sp,28
   20a78:	e13ffe15 	stw	r4,-8(fp)
   20a7c:	e17fff15 	stw	r5,-4(fp)
    int i;
    unsigned char szText[16];
    for(i=0;i<len;i++){
   20a80:	e03ff915 	stw	zero,-28(fp)
   20a84:	00001106 	br	20acc <myprintf_hexarray+0x64>
        sprintf(szText, "[%02X]", *(pHex+i));
   20a88:	e0bff917 	ldw	r2,-28(fp)
   20a8c:	e0fffe17 	ldw	r3,-8(fp)
   20a90:	1885883a 	add	r2,r3,r2
   20a94:	10800003 	ldbu	r2,0(r2)
   20a98:	10803fcc 	andi	r2,r2,255
   20a9c:	e0fffa04 	addi	r3,fp,-24
   20aa0:	1809883a 	mov	r4,r3
   20aa4:	014000f4 	movhi	r5,3
   20aa8:	294d8304 	addi	r5,r5,13836
   20aac:	100d883a 	mov	r6,r2
   20ab0:	0020d0c0 	call	20d0c <sprintf>
        DEBUG((szText));
   20ab4:	e0bffa04 	addi	r2,fp,-24
   20ab8:	1009883a 	mov	r4,r2
   20abc:	00209fc0 	call	209fc <myprintf>


int myprintf_hexarray(unsigned char *pHex, int len){
    int i;
    unsigned char szText[16];
    for(i=0;i<len;i++){
   20ac0:	e0bff917 	ldw	r2,-28(fp)
   20ac4:	10800044 	addi	r2,r2,1
   20ac8:	e0bff915 	stw	r2,-28(fp)
   20acc:	e0fff917 	ldw	r3,-28(fp)
   20ad0:	e0bfff17 	ldw	r2,-4(fp)
   20ad4:	18bfec16 	blt	r3,r2,20a88 <_gp+0xfffe3688>
        sprintf(szText, "[%02X]", *(pHex+i));
        DEBUG((szText));
    }
    return len;
   20ad8:	e0bfff17 	ldw	r2,-4(fp)
}
   20adc:	e037883a 	mov	sp,fp
   20ae0:	dfc00117 	ldw	ra,4(sp)
   20ae4:	df000017 	ldw	fp,0(sp)
   20ae8:	dec00204 	addi	sp,sp,8
   20aec:	f800283a 	ret

00020af0 <myprintf_dwordarray>:

int  myprintf_dwordarray(unsigned int *pArray, int nElementCount){
   20af0:	defff704 	addi	sp,sp,-36
   20af4:	dfc00815 	stw	ra,32(sp)
   20af8:	df000715 	stw	fp,28(sp)
   20afc:	df000704 	addi	fp,sp,28
   20b00:	e13ffe15 	stw	r4,-8(fp)
   20b04:	e17fff15 	stw	r5,-4(fp)
    int i;
    char szText[16];
    for(i=0;i<nElementCount;i++){
   20b08:	e03ff915 	stw	zero,-28(fp)
   20b0c:	00001306 	br	20b5c <myprintf_dwordarray+0x6c>
        sprintf(szText, "[%08X]", *(pArray+i));
   20b10:	e0bff917 	ldw	r2,-28(fp)
   20b14:	1085883a 	add	r2,r2,r2
   20b18:	1085883a 	add	r2,r2,r2
   20b1c:	1007883a 	mov	r3,r2
   20b20:	e0bffe17 	ldw	r2,-8(fp)
   20b24:	10c5883a 	add	r2,r2,r3
   20b28:	10800017 	ldw	r2,0(r2)
   20b2c:	e0fffa04 	addi	r3,fp,-24
   20b30:	1809883a 	mov	r4,r3
   20b34:	014000f4 	movhi	r5,3
   20b38:	294d8504 	addi	r5,r5,13844
   20b3c:	100d883a 	mov	r6,r2
   20b40:	0020d0c0 	call	20d0c <sprintf>
        DEBUG((szText));
   20b44:	e0bffa04 	addi	r2,fp,-24
   20b48:	1009883a 	mov	r4,r2
   20b4c:	00209fc0 	call	209fc <myprintf>
}

int  myprintf_dwordarray(unsigned int *pArray, int nElementCount){
    int i;
    char szText[16];
    for(i=0;i<nElementCount;i++){
   20b50:	e0bff917 	ldw	r2,-28(fp)
   20b54:	10800044 	addi	r2,r2,1
   20b58:	e0bff915 	stw	r2,-28(fp)
   20b5c:	e0fff917 	ldw	r3,-28(fp)
   20b60:	e0bfff17 	ldw	r2,-4(fp)
   20b64:	18bfea16 	blt	r3,r2,20b10 <_gp+0xfffe3710>
        sprintf(szText, "[%08X]", *(pArray+i));
        DEBUG((szText));
    }
    return nElementCount;
   20b68:	e0bfff17 	ldw	r2,-4(fp)
}
   20b6c:	e037883a 	mov	sp,fp
   20b70:	dfc00117 	ldw	ra,4(sp)
   20b74:	df000017 	ldw	fp,0(sp)
   20b78:	dec00204 	addi	sp,sp,8
   20b7c:	f800283a 	ret

00020b80 <_printf_r>:
   20b80:	defffd04 	addi	sp,sp,-12
   20b84:	dfc00015 	stw	ra,0(sp)
   20b88:	d9800115 	stw	r6,4(sp)
   20b8c:	d9c00215 	stw	r7,8(sp)
   20b90:	280d883a 	mov	r6,r5
   20b94:	21400217 	ldw	r5,8(r4)
   20b98:	d9c00104 	addi	r7,sp,4
   20b9c:	0022e800 	call	22e80 <___vfprintf_internal_r>
   20ba0:	dfc00017 	ldw	ra,0(sp)
   20ba4:	dec00304 	addi	sp,sp,12
   20ba8:	f800283a 	ret

00020bac <printf>:
   20bac:	defffc04 	addi	sp,sp,-16
   20bb0:	dfc00015 	stw	ra,0(sp)
   20bb4:	d9400115 	stw	r5,4(sp)
   20bb8:	d9800215 	stw	r6,8(sp)
   20bbc:	d9c00315 	stw	r7,12(sp)
   20bc0:	008000f4 	movhi	r2,3
   20bc4:	10950104 	addi	r2,r2,21508
   20bc8:	10800017 	ldw	r2,0(r2)
   20bcc:	200b883a 	mov	r5,r4
   20bd0:	d9800104 	addi	r6,sp,4
   20bd4:	11000217 	ldw	r4,8(r2)
   20bd8:	0024f7c0 	call	24f7c <__vfprintf_internal>
   20bdc:	dfc00017 	ldw	ra,0(sp)
   20be0:	dec00404 	addi	sp,sp,16
   20be4:	f800283a 	ret

00020be8 <_puts_r>:
   20be8:	defff604 	addi	sp,sp,-40
   20bec:	dc000715 	stw	r16,28(sp)
   20bf0:	2021883a 	mov	r16,r4
   20bf4:	2809883a 	mov	r4,r5
   20bf8:	dc400815 	stw	r17,32(sp)
   20bfc:	dfc00915 	stw	ra,36(sp)
   20c00:	2823883a 	mov	r17,r5
   20c04:	0020d780 	call	20d78 <strlen>
   20c08:	00c000f4 	movhi	r3,3
   20c0c:	18d50104 	addi	r3,r3,21508
   20c10:	18c00017 	ldw	r3,0(r3)
   20c14:	11000044 	addi	r4,r2,1
   20c18:	d8800115 	stw	r2,4(sp)
   20c1c:	18c00217 	ldw	r3,8(r3)
   20c20:	014000f4 	movhi	r5,3
   20c24:	294d8704 	addi	r5,r5,13852
   20c28:	1880030b 	ldhu	r2,12(r3)
   20c2c:	d9400215 	stw	r5,8(sp)
   20c30:	d9000615 	stw	r4,24(sp)
   20c34:	01400044 	movi	r5,1
   20c38:	01000084 	movi	r4,2
   20c3c:	d9000515 	stw	r4,20(sp)
   20c40:	dc400015 	stw	r17,0(sp)
   20c44:	d9400315 	stw	r5,12(sp)
   20c48:	dec00415 	stw	sp,16(sp)
   20c4c:	1108000c 	andi	r4,r2,8192
   20c50:	2000061e 	bne	r4,zero,20c6c <_puts_r+0x84>
   20c54:	19401917 	ldw	r5,100(r3)
   20c58:	0137ffc4 	movi	r4,-8193
   20c5c:	10880014 	ori	r2,r2,8192
   20c60:	2908703a 	and	r4,r5,r4
   20c64:	1880030d 	sth	r2,12(r3)
   20c68:	19001915 	stw	r4,100(r3)
   20c6c:	81400217 	ldw	r5,8(r16)
   20c70:	8009883a 	mov	r4,r16
   20c74:	d9800404 	addi	r6,sp,16
   20c78:	00275700 	call	27570 <__sfvwrite_r>
   20c7c:	1000061e 	bne	r2,zero,20c98 <_puts_r+0xb0>
   20c80:	00800284 	movi	r2,10
   20c84:	dfc00917 	ldw	ra,36(sp)
   20c88:	dc400817 	ldw	r17,32(sp)
   20c8c:	dc000717 	ldw	r16,28(sp)
   20c90:	dec00a04 	addi	sp,sp,40
   20c94:	f800283a 	ret
   20c98:	00bfffc4 	movi	r2,-1
   20c9c:	003ff906 	br	20c84 <_gp+0xfffe3884>

00020ca0 <puts>:
   20ca0:	008000f4 	movhi	r2,3
   20ca4:	10950104 	addi	r2,r2,21508
   20ca8:	200b883a 	mov	r5,r4
   20cac:	11000017 	ldw	r4,0(r2)
   20cb0:	0020be81 	jmpi	20be8 <_puts_r>

00020cb4 <_sprintf_r>:
   20cb4:	deffe404 	addi	sp,sp,-112
   20cb8:	2807883a 	mov	r3,r5
   20cbc:	dfc01a15 	stw	ra,104(sp)
   20cc0:	d9c01b15 	stw	r7,108(sp)
   20cc4:	00a00034 	movhi	r2,32768
   20cc8:	10bfffc4 	addi	r2,r2,-1
   20ccc:	02008204 	movi	r8,520
   20cd0:	d8800215 	stw	r2,8(sp)
   20cd4:	d8800515 	stw	r2,20(sp)
   20cd8:	d80b883a 	mov	r5,sp
   20cdc:	d9c01b04 	addi	r7,sp,108
   20ce0:	00bfffc4 	movi	r2,-1
   20ce4:	d8c00015 	stw	r3,0(sp)
   20ce8:	d8c00415 	stw	r3,16(sp)
   20cec:	da00030d 	sth	r8,12(sp)
   20cf0:	d880038d 	sth	r2,14(sp)
   20cf4:	0020e100 	call	20e10 <___svfprintf_internal_r>
   20cf8:	d8c00017 	ldw	r3,0(sp)
   20cfc:	18000005 	stb	zero,0(r3)
   20d00:	dfc01a17 	ldw	ra,104(sp)
   20d04:	dec01c04 	addi	sp,sp,112
   20d08:	f800283a 	ret

00020d0c <sprintf>:
   20d0c:	deffe304 	addi	sp,sp,-116
   20d10:	2007883a 	mov	r3,r4
   20d14:	dfc01a15 	stw	ra,104(sp)
   20d18:	d9801b15 	stw	r6,108(sp)
   20d1c:	d9c01c15 	stw	r7,112(sp)
   20d20:	010000f4 	movhi	r4,3
   20d24:	21150104 	addi	r4,r4,21508
   20d28:	21000017 	ldw	r4,0(r4)
   20d2c:	00a00034 	movhi	r2,32768
   20d30:	10bfffc4 	addi	r2,r2,-1
   20d34:	280d883a 	mov	r6,r5
   20d38:	02008204 	movi	r8,520
   20d3c:	d8800215 	stw	r2,8(sp)
   20d40:	d8800515 	stw	r2,20(sp)
   20d44:	d80b883a 	mov	r5,sp
   20d48:	d9c01b04 	addi	r7,sp,108
   20d4c:	00bfffc4 	movi	r2,-1
   20d50:	d8c00015 	stw	r3,0(sp)
   20d54:	d8c00415 	stw	r3,16(sp)
   20d58:	da00030d 	sth	r8,12(sp)
   20d5c:	d880038d 	sth	r2,14(sp)
   20d60:	0020e100 	call	20e10 <___svfprintf_internal_r>
   20d64:	d8c00017 	ldw	r3,0(sp)
   20d68:	18000005 	stb	zero,0(r3)
   20d6c:	dfc01a17 	ldw	ra,104(sp)
   20d70:	dec01d04 	addi	sp,sp,116
   20d74:	f800283a 	ret

00020d78 <strlen>:
   20d78:	208000cc 	andi	r2,r4,3
   20d7c:	10002026 	beq	r2,zero,20e00 <strlen+0x88>
   20d80:	20800007 	ldb	r2,0(r4)
   20d84:	10002026 	beq	r2,zero,20e08 <strlen+0x90>
   20d88:	2005883a 	mov	r2,r4
   20d8c:	00000206 	br	20d98 <strlen+0x20>
   20d90:	10c00007 	ldb	r3,0(r2)
   20d94:	18001826 	beq	r3,zero,20df8 <strlen+0x80>
   20d98:	10800044 	addi	r2,r2,1
   20d9c:	10c000cc 	andi	r3,r2,3
   20da0:	183ffb1e 	bne	r3,zero,20d90 <_gp+0xfffe3990>
   20da4:	10c00017 	ldw	r3,0(r2)
   20da8:	01ffbff4 	movhi	r7,65279
   20dac:	39ffbfc4 	addi	r7,r7,-257
   20db0:	00ca303a 	nor	r5,zero,r3
   20db4:	01a02074 	movhi	r6,32897
   20db8:	19c7883a 	add	r3,r3,r7
   20dbc:	31a02004 	addi	r6,r6,-32640
   20dc0:	1946703a 	and	r3,r3,r5
   20dc4:	1986703a 	and	r3,r3,r6
   20dc8:	1800091e 	bne	r3,zero,20df0 <strlen+0x78>
   20dcc:	10800104 	addi	r2,r2,4
   20dd0:	10c00017 	ldw	r3,0(r2)
   20dd4:	19cb883a 	add	r5,r3,r7
   20dd8:	00c6303a 	nor	r3,zero,r3
   20ddc:	28c6703a 	and	r3,r5,r3
   20de0:	1986703a 	and	r3,r3,r6
   20de4:	183ff926 	beq	r3,zero,20dcc <_gp+0xfffe39cc>
   20de8:	00000106 	br	20df0 <strlen+0x78>
   20dec:	10800044 	addi	r2,r2,1
   20df0:	10c00007 	ldb	r3,0(r2)
   20df4:	183ffd1e 	bne	r3,zero,20dec <_gp+0xfffe39ec>
   20df8:	1105c83a 	sub	r2,r2,r4
   20dfc:	f800283a 	ret
   20e00:	2005883a 	mov	r2,r4
   20e04:	003fe706 	br	20da4 <_gp+0xfffe39a4>
   20e08:	0005883a 	mov	r2,zero
   20e0c:	f800283a 	ret

00020e10 <___svfprintf_internal_r>:
   20e10:	deffb504 	addi	sp,sp,-300
   20e14:	dfc04a15 	stw	ra,296(sp)
   20e18:	dd804715 	stw	r22,284(sp)
   20e1c:	d9002f15 	stw	r4,188(sp)
   20e20:	282d883a 	mov	r22,r5
   20e24:	d9802915 	stw	r6,164(sp)
   20e28:	d9c02d15 	stw	r7,180(sp)
   20e2c:	df004915 	stw	fp,292(sp)
   20e30:	ddc04815 	stw	r23,288(sp)
   20e34:	dd404615 	stw	r21,280(sp)
   20e38:	dd004515 	stw	r20,276(sp)
   20e3c:	dcc04415 	stw	r19,272(sp)
   20e40:	dc804315 	stw	r18,268(sp)
   20e44:	dc404215 	stw	r17,264(sp)
   20e48:	dc004115 	stw	r16,260(sp)
   20e4c:	0027c300 	call	27c30 <_localeconv_r>
   20e50:	10800017 	ldw	r2,0(r2)
   20e54:	1009883a 	mov	r4,r2
   20e58:	d8803515 	stw	r2,212(sp)
   20e5c:	0020d780 	call	20d78 <strlen>
   20e60:	d8803915 	stw	r2,228(sp)
   20e64:	b080030b 	ldhu	r2,12(r22)
   20e68:	1080200c 	andi	r2,r2,128
   20e6c:	10000226 	beq	r2,zero,20e78 <___svfprintf_internal_r+0x68>
   20e70:	b0800417 	ldw	r2,16(r22)
   20e74:	10067426 	beq	r2,zero,22848 <___svfprintf_internal_r+0x1a38>
   20e78:	d9001dc4 	addi	r4,sp,119
   20e7c:	ddc01e04 	addi	r23,sp,120
   20e80:	d9400404 	addi	r5,sp,16
   20e84:	050000f4 	movhi	r20,3
   20e88:	b905c83a 	sub	r2,r23,r4
   20e8c:	a50d9884 	addi	r20,r20,13922
   20e90:	d9002815 	stw	r4,160(sp)
   20e94:	d9401e15 	stw	r5,120(sp)
   20e98:	d8002015 	stw	zero,128(sp)
   20e9c:	d8001f15 	stw	zero,124(sp)
   20ea0:	d8003315 	stw	zero,204(sp)
   20ea4:	d8003715 	stw	zero,220(sp)
   20ea8:	d8003815 	stw	zero,224(sp)
   20eac:	d8003b15 	stw	zero,236(sp)
   20eb0:	d8003a15 	stw	zero,232(sp)
   20eb4:	d8003015 	stw	zero,192(sp)
   20eb8:	2811883a 	mov	r8,r5
   20ebc:	d8803d15 	stw	r2,244(sp)
   20ec0:	d8c02917 	ldw	r3,164(sp)
   20ec4:	18800007 	ldb	r2,0(r3)
   20ec8:	1001fa26 	beq	r2,zero,216b4 <___svfprintf_internal_r+0x8a4>
   20ecc:	00c00944 	movi	r3,37
   20ed0:	dc002917 	ldw	r16,164(sp)
   20ed4:	10c0021e 	bne	r2,r3,20ee0 <___svfprintf_internal_r+0xd0>
   20ed8:	00001606 	br	20f34 <___svfprintf_internal_r+0x124>
   20edc:	10c08526 	beq	r2,r3,210f4 <___svfprintf_internal_r+0x2e4>
   20ee0:	84000044 	addi	r16,r16,1
   20ee4:	80800007 	ldb	r2,0(r16)
   20ee8:	103ffc1e 	bne	r2,zero,20edc <_gp+0xfffe3adc>
   20eec:	d9002917 	ldw	r4,164(sp)
   20ef0:	8123c83a 	sub	r17,r16,r4
   20ef4:	88000f26 	beq	r17,zero,20f34 <___svfprintf_internal_r+0x124>
   20ef8:	d8802917 	ldw	r2,164(sp)
   20efc:	d8c02017 	ldw	r3,128(sp)
   20f00:	44400115 	stw	r17,4(r8)
   20f04:	40800015 	stw	r2,0(r8)
   20f08:	d8801f17 	ldw	r2,124(sp)
   20f0c:	1c47883a 	add	r3,r3,r17
   20f10:	d8c02015 	stw	r3,128(sp)
   20f14:	10800044 	addi	r2,r2,1
   20f18:	d8801f15 	stw	r2,124(sp)
   20f1c:	00c001c4 	movi	r3,7
   20f20:	18807716 	blt	r3,r2,21100 <___svfprintf_internal_r+0x2f0>
   20f24:	42000204 	addi	r8,r8,8
   20f28:	d8c03017 	ldw	r3,192(sp)
   20f2c:	1c47883a 	add	r3,r3,r17
   20f30:	d8c03015 	stw	r3,192(sp)
   20f34:	80800007 	ldb	r2,0(r16)
   20f38:	10007826 	beq	r2,zero,2111c <___svfprintf_internal_r+0x30c>
   20f3c:	80800044 	addi	r2,r16,1
   20f40:	84000047 	ldb	r16,1(r16)
   20f44:	0027883a 	mov	r19,zero
   20f48:	0039883a 	mov	fp,zero
   20f4c:	dcc02a05 	stb	r19,168(sp)
   20f50:	d8002785 	stb	zero,158(sp)
   20f54:	027fffc4 	movi	r9,-1
   20f58:	d8002e15 	stw	zero,184(sp)
   20f5c:	04401604 	movi	r17,88
   20f60:	04800244 	movi	r18,9
   20f64:	da002915 	stw	r8,164(sp)
   20f68:	e027883a 	mov	r19,fp
   20f6c:	17000044 	addi	fp,r2,1
   20f70:	80bff804 	addi	r2,r16,-32
   20f74:	88830036 	bltu	r17,r2,21b78 <___svfprintf_internal_r+0xd68>
   20f78:	100490ba 	slli	r2,r2,2
   20f7c:	010000b4 	movhi	r4,2
   20f80:	2103e404 	addi	r4,r4,3984
   20f84:	1105883a 	add	r2,r2,r4
   20f88:	10800017 	ldw	r2,0(r2)
   20f8c:	1000683a 	jmp	r2
   20f90:	000219bc 	xorhi	zero,zero,2150
   20f94:	00021b78 	rdprs	zero,zero,2157
   20f98:	00021b78 	rdprs	zero,zero,2157
   20f9c:	000219d8 	cmpnei	zero,zero,2151
   20fa0:	00021b78 	rdprs	zero,zero,2157
   20fa4:	00021b78 	rdprs	zero,zero,2157
   20fa8:	00021b78 	rdprs	zero,zero,2157
   20fac:	00021b78 	rdprs	zero,zero,2157
   20fb0:	00021b78 	rdprs	zero,zero,2157
   20fb4:	00021b78 	rdprs	zero,zero,2157
   20fb8:	00021ac4 	movi	zero,2155
   20fbc:	00021aec 	andhi	zero,zero,2155
   20fc0:	00021b78 	rdprs	zero,zero,2157
   20fc4:	0002117c 	xorhi	zero,zero,2117
   20fc8:	0002118c 	andi	zero,zero,2118
   20fcc:	00021b78 	rdprs	zero,zero,2157
   20fd0:	000211dc 	xori	zero,zero,2119
   20fd4:	000211ec 	andhi	zero,zero,2119
   20fd8:	000211ec 	andhi	zero,zero,2119
   20fdc:	000211ec 	andhi	zero,zero,2119
   20fe0:	000211ec 	andhi	zero,zero,2119
   20fe4:	000211ec 	andhi	zero,zero,2119
   20fe8:	000211ec 	andhi	zero,zero,2119
   20fec:	000211ec 	andhi	zero,zero,2119
   20ff0:	000211ec 	andhi	zero,zero,2119
   20ff4:	000211ec 	andhi	zero,zero,2119
   20ff8:	00021b78 	rdprs	zero,zero,2157
   20ffc:	00021b78 	rdprs	zero,zero,2157
   21000:	00021b78 	rdprs	zero,zero,2157
   21004:	00021b78 	rdprs	zero,zero,2157
   21008:	00021b78 	rdprs	zero,zero,2157
   2100c:	00021b78 	rdprs	zero,zero,2157
   21010:	00021b78 	rdprs	zero,zero,2157
   21014:	00021b78 	rdprs	zero,zero,2157
   21018:	00021b78 	rdprs	zero,zero,2157
   2101c:	00021b78 	rdprs	zero,zero,2157
   21020:	00021230 	cmpltui	zero,zero,2120
   21024:	000216bc 	xorhi	zero,zero,2138
   21028:	00021b78 	rdprs	zero,zero,2157
   2102c:	000216bc 	xorhi	zero,zero,2138
   21030:	00021b78 	rdprs	zero,zero,2157
   21034:	00021b78 	rdprs	zero,zero,2157
   21038:	00021b78 	rdprs	zero,zero,2157
   2103c:	00021b78 	rdprs	zero,zero,2157
   21040:	00021764 	muli	zero,zero,2141
   21044:	00021b78 	rdprs	zero,zero,2157
   21048:	00021b78 	rdprs	zero,zero,2157
   2104c:	00021774 	movhi	zero,2141
   21050:	00021b78 	rdprs	zero,zero,2157
   21054:	00021b78 	rdprs	zero,zero,2157
   21058:	00021b78 	rdprs	zero,zero,2157
   2105c:	00021b78 	rdprs	zero,zero,2157
   21060:	00021b78 	rdprs	zero,zero,2157
   21064:	000217b4 	movhi	zero,2142
   21068:	00021b78 	rdprs	zero,zero,2157
   2106c:	00021b78 	rdprs	zero,zero,2157
   21070:	00021908 	cmpgei	zero,zero,2148
   21074:	00021b78 	rdprs	zero,zero,2157
   21078:	00021b78 	rdprs	zero,zero,2157
   2107c:	00021b78 	rdprs	zero,zero,2157
   21080:	00021b78 	rdprs	zero,zero,2157
   21084:	00021b78 	rdprs	zero,zero,2157
   21088:	00021b78 	rdprs	zero,zero,2157
   2108c:	00021b78 	rdprs	zero,zero,2157
   21090:	00021b78 	rdprs	zero,zero,2157
   21094:	00021b78 	rdprs	zero,zero,2157
   21098:	00021b78 	rdprs	zero,zero,2157
   2109c:	00021970 	cmpltui	zero,zero,2149
   210a0:	00021834 	movhi	zero,2144
   210a4:	000216bc 	xorhi	zero,zero,2138
   210a8:	000216bc 	xorhi	zero,zero,2138
   210ac:	000216bc 	xorhi	zero,zero,2138
   210b0:	000218a0 	cmpeqi	zero,zero,2146
   210b4:	00021834 	movhi	zero,2144
   210b8:	00021b78 	rdprs	zero,zero,2157
   210bc:	00021b78 	rdprs	zero,zero,2157
   210c0:	000218b0 	cmpltui	zero,zero,2146
   210c4:	00021b78 	rdprs	zero,zero,2157
   210c8:	000218c8 	cmpgei	zero,zero,2147
   210cc:	00021b3c 	xorhi	zero,zero,2156
   210d0:	000217e8 	cmpgeui	zero,zero,2143
   210d4:	00021ab4 	movhi	zero,2154
   210d8:	00021b78 	rdprs	zero,zero,2157
   210dc:	000219e8 	cmpgeui	zero,zero,2151
   210e0:	00021b78 	rdprs	zero,zero,2157
   210e4:	00021b00 	call	21b0 <__reset-0x1de50>
   210e8:	00021b78 	rdprs	zero,zero,2157
   210ec:	00021b78 	rdprs	zero,zero,2157
   210f0:	00021a68 	cmpgeui	zero,zero,2153
   210f4:	d9402917 	ldw	r5,164(sp)
   210f8:	8163c83a 	sub	r17,r16,r5
   210fc:	003f7d06 	br	20ef4 <_gp+0xfffe3af4>
   21100:	d9002f17 	ldw	r4,188(sp)
   21104:	b00b883a 	mov	r5,r22
   21108:	b80d883a 	mov	r6,r23
   2110c:	002a2f40 	call	2a2f4 <__ssprint_r>
   21110:	1000081e 	bne	r2,zero,21134 <___svfprintf_internal_r+0x324>
   21114:	da000404 	addi	r8,sp,16
   21118:	003f8306 	br	20f28 <_gp+0xfffe3b28>
   2111c:	d8802017 	ldw	r2,128(sp)
   21120:	10000426 	beq	r2,zero,21134 <___svfprintf_internal_r+0x324>
   21124:	d9002f17 	ldw	r4,188(sp)
   21128:	b00b883a 	mov	r5,r22
   2112c:	d9801e04 	addi	r6,sp,120
   21130:	002a2f40 	call	2a2f4 <__ssprint_r>
   21134:	b080030b 	ldhu	r2,12(r22)
   21138:	1080100c 	andi	r2,r2,64
   2113c:	10000d1e 	bne	r2,zero,21174 <___svfprintf_internal_r+0x364>
   21140:	d8803017 	ldw	r2,192(sp)
   21144:	dfc04a17 	ldw	ra,296(sp)
   21148:	df004917 	ldw	fp,292(sp)
   2114c:	ddc04817 	ldw	r23,288(sp)
   21150:	dd804717 	ldw	r22,284(sp)
   21154:	dd404617 	ldw	r21,280(sp)
   21158:	dd004517 	ldw	r20,276(sp)
   2115c:	dcc04417 	ldw	r19,272(sp)
   21160:	dc804317 	ldw	r18,268(sp)
   21164:	dc404217 	ldw	r17,264(sp)
   21168:	dc004117 	ldw	r16,260(sp)
   2116c:	dec04b04 	addi	sp,sp,300
   21170:	f800283a 	ret
   21174:	00bfffc4 	movi	r2,-1
   21178:	003ff206 	br	21144 <_gp+0xfffe3d44>
   2117c:	e005883a 	mov	r2,fp
   21180:	9cc00114 	ori	r19,r19,4
   21184:	e4000007 	ldb	r16,0(fp)
   21188:	003f7806 	br	20f6c <_gp+0xfffe3b6c>
   2118c:	e4000007 	ldb	r16,0(fp)
   21190:	01000a84 	movi	r4,42
   21194:	e0800044 	addi	r2,fp,1
   21198:	81071026 	beq	r16,r4,22ddc <___svfprintf_internal_r+0x1fcc>
   2119c:	857ff404 	addi	r21,r16,-48
   211a0:	1039883a 	mov	fp,r2
   211a4:	0013883a 	mov	r9,zero
   211a8:	957f7136 	bltu	r18,r21,20f70 <_gp+0xfffe3b70>
   211ac:	0009883a 	mov	r4,zero
   211b0:	01400284 	movi	r5,10
   211b4:	002e2bc0 	call	2e2bc <__mulsi3>
   211b8:	e4000007 	ldb	r16,0(fp)
   211bc:	a889883a 	add	r4,r21,r2
   211c0:	e7000044 	addi	fp,fp,1
   211c4:	857ff404 	addi	r21,r16,-48
   211c8:	957ff92e 	bgeu	r18,r21,211b0 <_gp+0xfffe3db0>
   211cc:	2013883a 	mov	r9,r4
   211d0:	203f670e 	bge	r4,zero,20f70 <_gp+0xfffe3b70>
   211d4:	027fffc4 	movi	r9,-1
   211d8:	003f6506 	br	20f70 <_gp+0xfffe3b70>
   211dc:	9cc02014 	ori	r19,r19,128
   211e0:	e005883a 	mov	r2,fp
   211e4:	e4000007 	ldb	r16,0(fp)
   211e8:	003f6006 	br	20f6c <_gp+0xfffe3b6c>
   211ec:	857ff404 	addi	r21,r16,-48
   211f0:	d8002e15 	stw	zero,184(sp)
   211f4:	e021883a 	mov	r16,fp
   211f8:	0009883a 	mov	r4,zero
   211fc:	da402b15 	stw	r9,172(sp)
   21200:	01400284 	movi	r5,10
   21204:	002e2bc0 	call	2e2bc <__mulsi3>
   21208:	81400007 	ldb	r5,0(r16)
   2120c:	1549883a 	add	r4,r2,r21
   21210:	e7000044 	addi	fp,fp,1
   21214:	2d7ff404 	addi	r21,r5,-48
   21218:	e021883a 	mov	r16,fp
   2121c:	957ff82e 	bgeu	r18,r21,21200 <_gp+0xfffe3e00>
   21220:	2821883a 	mov	r16,r5
   21224:	d9002e15 	stw	r4,184(sp)
   21228:	da402b17 	ldw	r9,172(sp)
   2122c:	003f5006 	br	20f70 <_gp+0xfffe3b70>
   21230:	da002917 	ldw	r8,164(sp)
   21234:	df002915 	stw	fp,164(sp)
   21238:	9839883a 	mov	fp,r19
   2123c:	dcc02a03 	ldbu	r19,168(sp)
   21240:	e7000414 	ori	fp,fp,16
   21244:	e080080c 	andi	r2,fp,32
   21248:	dcc02785 	stb	r19,158(sp)
   2124c:	d8c02d17 	ldw	r3,180(sp)
   21250:	10018026 	beq	r2,zero,21854 <___svfprintf_internal_r+0xa44>
   21254:	d9002d17 	ldw	r4,180(sp)
   21258:	18800117 	ldw	r2,4(r3)
   2125c:	1c800017 	ldw	r18,0(r3)
   21260:	21000204 	addi	r4,r4,8
   21264:	d9002d15 	stw	r4,180(sp)
   21268:	102b883a 	mov	r21,r2
   2126c:	10018216 	blt	r2,zero,21878 <___svfprintf_internal_r+0xa68>
   21270:	dcc02783 	ldbu	r19,158(sp)
   21274:	da403215 	stw	r9,200(sp)
   21278:	00800044 	movi	r2,1
   2127c:	9546b03a 	or	r3,r18,r21
   21280:	48000216 	blt	r9,zero,2128c <___svfprintf_internal_r+0x47c>
   21284:	013fdfc4 	movi	r4,-129
   21288:	e138703a 	and	fp,fp,r4
   2128c:	1802471e 	bne	r3,zero,21bac <___svfprintf_internal_r+0xd9c>
   21290:	48035226 	beq	r9,zero,21fdc <___svfprintf_internal_r+0x11cc>
   21294:	10803fcc 	andi	r2,r2,255
   21298:	00c00044 	movi	r3,1
   2129c:	10c26626 	beq	r2,r3,21c38 <___svfprintf_internal_r+0xe28>
   212a0:	00c00084 	movi	r3,2
   212a4:	10c2e826 	beq	r2,r3,21e48 <___svfprintf_internal_r+0x1038>
   212a8:	b807883a 	mov	r3,r23
   212ac:	9008d0fa 	srli	r4,r18,3
   212b0:	a80a977a 	slli	r5,r21,29
   212b4:	a82ad0fa 	srli	r21,r21,3
   212b8:	948001cc 	andi	r18,r18,7
   212bc:	90800c04 	addi	r2,r18,48
   212c0:	18ffffc4 	addi	r3,r3,-1
   212c4:	2924b03a 	or	r18,r5,r4
   212c8:	18800005 	stb	r2,0(r3)
   212cc:	9548b03a 	or	r4,r18,r21
   212d0:	203ff61e 	bne	r4,zero,212ac <_gp+0xfffe3eac>
   212d4:	e100004c 	andi	r4,fp,1
   212d8:	d8c03115 	stw	r3,196(sp)
   212dc:	2002e826 	beq	r4,zero,21e80 <___svfprintf_internal_r+0x1070>
   212e0:	10803fcc 	andi	r2,r2,255
   212e4:	1080201c 	xori	r2,r2,128
   212e8:	10bfe004 	addi	r2,r2,-128
   212ec:	01000c04 	movi	r4,48
   212f0:	11056d26 	beq	r2,r4,228a8 <___svfprintf_internal_r+0x1a98>
   212f4:	d9403117 	ldw	r5,196(sp)
   212f8:	193fffc5 	stb	r4,-1(r3)
   212fc:	297fffc4 	addi	r5,r5,-1
   21300:	d9403115 	stw	r5,196(sp)
   21304:	b963c83a 	sub	r17,r23,r5
   21308:	8805883a 	mov	r2,r17
   2130c:	8a40010e 	bge	r17,r9,21314 <___svfprintf_internal_r+0x504>
   21310:	4805883a 	mov	r2,r9
   21314:	d8802a15 	stw	r2,168(sp)
   21318:	d8003415 	stw	zero,208(sp)
   2131c:	98803fcc 	andi	r2,r19,255
   21320:	1080201c 	xori	r2,r2,128
   21324:	10bfe004 	addi	r2,r2,-128
   21328:	10000326 	beq	r2,zero,21338 <___svfprintf_internal_r+0x528>
   2132c:	d8c02a17 	ldw	r3,168(sp)
   21330:	18c00044 	addi	r3,r3,1
   21334:	d8c02a15 	stw	r3,168(sp)
   21338:	e0c0008c 	andi	r3,fp,2
   2133c:	d8c02b15 	stw	r3,172(sp)
   21340:	18000326 	beq	r3,zero,21350 <___svfprintf_internal_r+0x540>
   21344:	d8c02a17 	ldw	r3,168(sp)
   21348:	18c00084 	addi	r3,r3,2
   2134c:	d8c02a15 	stw	r3,168(sp)
   21350:	e0c0210c 	andi	r3,fp,132
   21354:	d8c02c15 	stw	r3,176(sp)
   21358:	1802121e 	bne	r3,zero,21ba4 <___svfprintf_internal_r+0xd94>
   2135c:	d9002e17 	ldw	r4,184(sp)
   21360:	d8c02a17 	ldw	r3,168(sp)
   21364:	20ebc83a 	sub	r21,r4,r3
   21368:	05420e0e 	bge	zero,r21,21ba4 <___svfprintf_internal_r+0xd94>
   2136c:	02400404 	movi	r9,16
   21370:	d8c02017 	ldw	r3,128(sp)
   21374:	d8801f17 	ldw	r2,124(sp)
   21378:	4d45aa0e 	bge	r9,r21,22a24 <___svfprintf_internal_r+0x1c14>
   2137c:	014000f4 	movhi	r5,3
   21380:	a809883a 	mov	r4,r21
   21384:	294d9c84 	addi	r5,r5,13938
   21388:	dc003c15 	stw	r16,240(sp)
   2138c:	882b883a 	mov	r21,r17
   21390:	d9403615 	stw	r5,216(sp)
   21394:	4827883a 	mov	r19,r9
   21398:	048001c4 	movi	r18,7
   2139c:	dc002f17 	ldw	r16,188(sp)
   213a0:	2023883a 	mov	r17,r4
   213a4:	00000306 	br	213b4 <___svfprintf_internal_r+0x5a4>
   213a8:	8c7ffc04 	addi	r17,r17,-16
   213ac:	42000204 	addi	r8,r8,8
   213b0:	9c40130e 	bge	r19,r17,21400 <___svfprintf_internal_r+0x5f0>
   213b4:	010000f4 	movhi	r4,3
   213b8:	18c00404 	addi	r3,r3,16
   213bc:	10800044 	addi	r2,r2,1
   213c0:	210d9c84 	addi	r4,r4,13938
   213c4:	41000015 	stw	r4,0(r8)
   213c8:	44c00115 	stw	r19,4(r8)
   213cc:	d8c02015 	stw	r3,128(sp)
   213d0:	d8801f15 	stw	r2,124(sp)
   213d4:	90bff40e 	bge	r18,r2,213a8 <_gp+0xfffe3fa8>
   213d8:	8009883a 	mov	r4,r16
   213dc:	b00b883a 	mov	r5,r22
   213e0:	b80d883a 	mov	r6,r23
   213e4:	002a2f40 	call	2a2f4 <__ssprint_r>
   213e8:	103f521e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   213ec:	8c7ffc04 	addi	r17,r17,-16
   213f0:	d8c02017 	ldw	r3,128(sp)
   213f4:	d8801f17 	ldw	r2,124(sp)
   213f8:	da000404 	addi	r8,sp,16
   213fc:	9c7fed16 	blt	r19,r17,213b4 <_gp+0xfffe3fb4>
   21400:	dc003c17 	ldw	r16,240(sp)
   21404:	8809883a 	mov	r4,r17
   21408:	a823883a 	mov	r17,r21
   2140c:	202b883a 	mov	r21,r4
   21410:	d9403617 	ldw	r5,216(sp)
   21414:	a8c7883a 	add	r3,r21,r3
   21418:	10800044 	addi	r2,r2,1
   2141c:	41400015 	stw	r5,0(r8)
   21420:	45400115 	stw	r21,4(r8)
   21424:	d8c02015 	stw	r3,128(sp)
   21428:	d8801f15 	stw	r2,124(sp)
   2142c:	010001c4 	movi	r4,7
   21430:	20834416 	blt	r4,r2,22144 <___svfprintf_internal_r+0x1334>
   21434:	d8802787 	ldb	r2,158(sp)
   21438:	42000204 	addi	r8,r8,8
   2143c:	10000c26 	beq	r2,zero,21470 <___svfprintf_internal_r+0x660>
   21440:	d8801f17 	ldw	r2,124(sp)
   21444:	d9002784 	addi	r4,sp,158
   21448:	18c00044 	addi	r3,r3,1
   2144c:	10800044 	addi	r2,r2,1
   21450:	41000015 	stw	r4,0(r8)
   21454:	01000044 	movi	r4,1
   21458:	41000115 	stw	r4,4(r8)
   2145c:	d8c02015 	stw	r3,128(sp)
   21460:	d8801f15 	stw	r2,124(sp)
   21464:	010001c4 	movi	r4,7
   21468:	2082ee16 	blt	r4,r2,22024 <___svfprintf_internal_r+0x1214>
   2146c:	42000204 	addi	r8,r8,8
   21470:	d8802b17 	ldw	r2,172(sp)
   21474:	10000c26 	beq	r2,zero,214a8 <___svfprintf_internal_r+0x698>
   21478:	d8801f17 	ldw	r2,124(sp)
   2147c:	d9002704 	addi	r4,sp,156
   21480:	18c00084 	addi	r3,r3,2
   21484:	10800044 	addi	r2,r2,1
   21488:	41000015 	stw	r4,0(r8)
   2148c:	01000084 	movi	r4,2
   21490:	41000115 	stw	r4,4(r8)
   21494:	d8c02015 	stw	r3,128(sp)
   21498:	d8801f15 	stw	r2,124(sp)
   2149c:	010001c4 	movi	r4,7
   214a0:	2082e816 	blt	r4,r2,22044 <___svfprintf_internal_r+0x1234>
   214a4:	42000204 	addi	r8,r8,8
   214a8:	d9002c17 	ldw	r4,176(sp)
   214ac:	00802004 	movi	r2,128
   214b0:	20823126 	beq	r4,r2,21d78 <___svfprintf_internal_r+0xf68>
   214b4:	d9403217 	ldw	r5,200(sp)
   214b8:	2c67c83a 	sub	r19,r5,r17
   214bc:	04c02f0e 	bge	zero,r19,2157c <___svfprintf_internal_r+0x76c>
   214c0:	05400404 	movi	r21,16
   214c4:	d8801f17 	ldw	r2,124(sp)
   214c8:	acc4260e 	bge	r21,r19,22564 <___svfprintf_internal_r+0x1754>
   214cc:	014000f4 	movhi	r5,3
   214d0:	9809883a 	mov	r4,r19
   214d4:	294d9884 	addi	r5,r5,13922
   214d8:	dc002c15 	stw	r16,176(sp)
   214dc:	8827883a 	mov	r19,r17
   214e0:	d9402b15 	stw	r5,172(sp)
   214e4:	048001c4 	movi	r18,7
   214e8:	dc002f17 	ldw	r16,188(sp)
   214ec:	2023883a 	mov	r17,r4
   214f0:	00000306 	br	21500 <___svfprintf_internal_r+0x6f0>
   214f4:	8c7ffc04 	addi	r17,r17,-16
   214f8:	42000204 	addi	r8,r8,8
   214fc:	ac40110e 	bge	r21,r17,21544 <___svfprintf_internal_r+0x734>
   21500:	18c00404 	addi	r3,r3,16
   21504:	10800044 	addi	r2,r2,1
   21508:	45000015 	stw	r20,0(r8)
   2150c:	45400115 	stw	r21,4(r8)
   21510:	d8c02015 	stw	r3,128(sp)
   21514:	d8801f15 	stw	r2,124(sp)
   21518:	90bff60e 	bge	r18,r2,214f4 <_gp+0xfffe40f4>
   2151c:	8009883a 	mov	r4,r16
   21520:	b00b883a 	mov	r5,r22
   21524:	b80d883a 	mov	r6,r23
   21528:	002a2f40 	call	2a2f4 <__ssprint_r>
   2152c:	103f011e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   21530:	8c7ffc04 	addi	r17,r17,-16
   21534:	d8c02017 	ldw	r3,128(sp)
   21538:	d8801f17 	ldw	r2,124(sp)
   2153c:	da000404 	addi	r8,sp,16
   21540:	ac7fef16 	blt	r21,r17,21500 <_gp+0xfffe4100>
   21544:	dc002c17 	ldw	r16,176(sp)
   21548:	8809883a 	mov	r4,r17
   2154c:	9823883a 	mov	r17,r19
   21550:	2027883a 	mov	r19,r4
   21554:	d9002b17 	ldw	r4,172(sp)
   21558:	1cc7883a 	add	r3,r3,r19
   2155c:	10800044 	addi	r2,r2,1
   21560:	41000015 	stw	r4,0(r8)
   21564:	44c00115 	stw	r19,4(r8)
   21568:	d8c02015 	stw	r3,128(sp)
   2156c:	d8801f15 	stw	r2,124(sp)
   21570:	010001c4 	movi	r4,7
   21574:	2082a316 	blt	r4,r2,22004 <___svfprintf_internal_r+0x11f4>
   21578:	42000204 	addi	r8,r8,8
   2157c:	e080400c 	andi	r2,fp,256
   21580:	1001b31e 	bne	r2,zero,21c50 <___svfprintf_internal_r+0xe40>
   21584:	d8801f17 	ldw	r2,124(sp)
   21588:	d9403117 	ldw	r5,196(sp)
   2158c:	1c47883a 	add	r3,r3,r17
   21590:	10800044 	addi	r2,r2,1
   21594:	41400015 	stw	r5,0(r8)
   21598:	44400115 	stw	r17,4(r8)
   2159c:	d8c02015 	stw	r3,128(sp)
   215a0:	d8801f15 	stw	r2,124(sp)
   215a4:	010001c4 	movi	r4,7
   215a8:	20827e16 	blt	r4,r2,21fa4 <___svfprintf_internal_r+0x1194>
   215ac:	42000204 	addi	r8,r8,8
   215b0:	e080010c 	andi	r2,fp,4
   215b4:	10003226 	beq	r2,zero,21680 <___svfprintf_internal_r+0x870>
   215b8:	d8802e17 	ldw	r2,184(sp)
   215bc:	d9002a17 	ldw	r4,168(sp)
   215c0:	1121c83a 	sub	r16,r2,r4
   215c4:	04002e0e 	bge	zero,r16,21680 <___svfprintf_internal_r+0x870>
   215c8:	04400404 	movi	r17,16
   215cc:	d8801f17 	ldw	r2,124(sp)
   215d0:	8c05550e 	bge	r17,r16,22b28 <___svfprintf_internal_r+0x1d18>
   215d4:	010000f4 	movhi	r4,3
   215d8:	210d9c84 	addi	r4,r4,13938
   215dc:	d9003615 	stw	r4,216(sp)
   215e0:	048001c4 	movi	r18,7
   215e4:	dcc02f17 	ldw	r19,188(sp)
   215e8:	00000306 	br	215f8 <___svfprintf_internal_r+0x7e8>
   215ec:	843ffc04 	addi	r16,r16,-16
   215f0:	42000204 	addi	r8,r8,8
   215f4:	8c00130e 	bge	r17,r16,21644 <___svfprintf_internal_r+0x834>
   215f8:	014000f4 	movhi	r5,3
   215fc:	18c00404 	addi	r3,r3,16
   21600:	10800044 	addi	r2,r2,1
   21604:	294d9c84 	addi	r5,r5,13938
   21608:	41400015 	stw	r5,0(r8)
   2160c:	44400115 	stw	r17,4(r8)
   21610:	d8c02015 	stw	r3,128(sp)
   21614:	d8801f15 	stw	r2,124(sp)
   21618:	90bff40e 	bge	r18,r2,215ec <_gp+0xfffe41ec>
   2161c:	9809883a 	mov	r4,r19
   21620:	b00b883a 	mov	r5,r22
   21624:	b80d883a 	mov	r6,r23
   21628:	002a2f40 	call	2a2f4 <__ssprint_r>
   2162c:	103ec11e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   21630:	843ffc04 	addi	r16,r16,-16
   21634:	d8c02017 	ldw	r3,128(sp)
   21638:	d8801f17 	ldw	r2,124(sp)
   2163c:	da000404 	addi	r8,sp,16
   21640:	8c3fed16 	blt	r17,r16,215f8 <_gp+0xfffe41f8>
   21644:	d9003617 	ldw	r4,216(sp)
   21648:	1c07883a 	add	r3,r3,r16
   2164c:	10800044 	addi	r2,r2,1
   21650:	41000015 	stw	r4,0(r8)
   21654:	44000115 	stw	r16,4(r8)
   21658:	d8c02015 	stw	r3,128(sp)
   2165c:	d8801f15 	stw	r2,124(sp)
   21660:	010001c4 	movi	r4,7
   21664:	2080060e 	bge	r4,r2,21680 <___svfprintf_internal_r+0x870>
   21668:	d9002f17 	ldw	r4,188(sp)
   2166c:	b00b883a 	mov	r5,r22
   21670:	b80d883a 	mov	r6,r23
   21674:	002a2f40 	call	2a2f4 <__ssprint_r>
   21678:	103eae1e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   2167c:	d8c02017 	ldw	r3,128(sp)
   21680:	df002a17 	ldw	fp,168(sp)
   21684:	d9402e17 	ldw	r5,184(sp)
   21688:	e140010e 	bge	fp,r5,21690 <___svfprintf_internal_r+0x880>
   2168c:	2839883a 	mov	fp,r5
   21690:	d8803017 	ldw	r2,192(sp)
   21694:	1705883a 	add	r2,r2,fp
   21698:	d8803015 	stw	r2,192(sp)
   2169c:	1802491e 	bne	r3,zero,21fc4 <___svfprintf_internal_r+0x11b4>
   216a0:	d8c02917 	ldw	r3,164(sp)
   216a4:	d8001f15 	stw	zero,124(sp)
   216a8:	da000404 	addi	r8,sp,16
   216ac:	18800007 	ldb	r2,0(r3)
   216b0:	103e061e 	bne	r2,zero,20ecc <_gp+0xfffe3acc>
   216b4:	dc002917 	ldw	r16,164(sp)
   216b8:	003e1e06 	br	20f34 <_gp+0xfffe3b34>
   216bc:	d9002d17 	ldw	r4,180(sp)
   216c0:	d9402d17 	ldw	r5,180(sp)
   216c4:	da002917 	ldw	r8,164(sp)
   216c8:	21000017 	ldw	r4,0(r4)
   216cc:	29400117 	ldw	r5,4(r5)
   216d0:	df002915 	stw	fp,164(sp)
   216d4:	9839883a 	mov	fp,r19
   216d8:	dcc02a03 	ldbu	r19,168(sp)
   216dc:	d9003715 	stw	r4,220(sp)
   216e0:	d9403815 	stw	r5,224(sp)
   216e4:	da004015 	stw	r8,256(sp)
   216e8:	da403f15 	stw	r9,252(sp)
   216ec:	dcc02785 	stb	r19,158(sp)
   216f0:	002a04c0 	call	2a04c <__fpclassifyd>
   216f4:	d8c02d17 	ldw	r3,180(sp)
   216f8:	04400044 	movi	r17,1
   216fc:	da004017 	ldw	r8,256(sp)
   21700:	1c800204 	addi	r18,r3,8
   21704:	da403f17 	ldw	r9,252(sp)
   21708:	d9003717 	ldw	r4,220(sp)
   2170c:	d9403817 	ldw	r5,224(sp)
   21710:	14433e1e 	bne	r2,r17,2240c <___svfprintf_internal_r+0x15fc>
   21714:	000d883a 	mov	r6,zero
   21718:	000f883a 	mov	r7,zero
   2171c:	002f6640 	call	2f664 <__ledf2>
   21720:	da004017 	ldw	r8,256(sp)
   21724:	10050c16 	blt	r2,zero,22b58 <___svfprintf_internal_r+0x1d48>
   21728:	dcc02783 	ldbu	r19,158(sp)
   2172c:	008011c4 	movi	r2,71
   21730:	1404410e 	bge	r2,r16,22838 <___svfprintf_internal_r+0x1a28>
   21734:	014000f4 	movhi	r5,3
   21738:	294d8904 	addi	r5,r5,13860
   2173c:	d9403115 	stw	r5,196(sp)
   21740:	00c000c4 	movi	r3,3
   21744:	00bfdfc4 	movi	r2,-129
   21748:	d8c02a15 	stw	r3,168(sp)
   2174c:	e0b8703a 	and	fp,fp,r2
   21750:	dc802d15 	stw	r18,180(sp)
   21754:	1823883a 	mov	r17,r3
   21758:	d8003215 	stw	zero,200(sp)
   2175c:	d8003415 	stw	zero,208(sp)
   21760:	003eee06 	br	2131c <_gp+0xfffe3f1c>
   21764:	9cc00214 	ori	r19,r19,8
   21768:	e005883a 	mov	r2,fp
   2176c:	e4000007 	ldb	r16,0(fp)
   21770:	003dfe06 	br	20f6c <_gp+0xfffe3b6c>
   21774:	da002917 	ldw	r8,164(sp)
   21778:	df002915 	stw	fp,164(sp)
   2177c:	9f000414 	ori	fp,r19,16
   21780:	e080080c 	andi	r2,fp,32
   21784:	1000f226 	beq	r2,zero,21b50 <___svfprintf_internal_r+0xd40>
   21788:	d9402d17 	ldw	r5,180(sp)
   2178c:	0005883a 	mov	r2,zero
   21790:	2c800017 	ldw	r18,0(r5)
   21794:	2d400117 	ldw	r21,4(r5)
   21798:	29400204 	addi	r5,r5,8
   2179c:	d9402d15 	stw	r5,180(sp)
   217a0:	9546b03a 	or	r3,r18,r21
   217a4:	d8002785 	stb	zero,158(sp)
   217a8:	da403215 	stw	r9,200(sp)
   217ac:	0027883a 	mov	r19,zero
   217b0:	003eb306 	br	21280 <_gp+0xfffe3e80>
   217b4:	da002917 	ldw	r8,164(sp)
   217b8:	df002915 	stw	fp,164(sp)
   217bc:	9f000414 	ori	fp,r19,16
   217c0:	e080080c 	andi	r2,fp,32
   217c4:	1000d326 	beq	r2,zero,21b14 <___svfprintf_internal_r+0xd04>
   217c8:	d9002d17 	ldw	r4,180(sp)
   217cc:	00800044 	movi	r2,1
   217d0:	24800017 	ldw	r18,0(r4)
   217d4:	25400117 	ldw	r21,4(r4)
   217d8:	21000204 	addi	r4,r4,8
   217dc:	d9002d15 	stw	r4,180(sp)
   217e0:	9546b03a 	or	r3,r18,r21
   217e4:	003fef06 	br	217a4 <_gp+0xfffe43a4>
   217e8:	d9402d17 	ldw	r5,180(sp)
   217ec:	00800c04 	movi	r2,48
   217f0:	d8802705 	stb	r2,156(sp)
   217f4:	2c800017 	ldw	r18,0(r5)
   217f8:	00801e04 	movi	r2,120
   217fc:	d8802745 	stb	r2,157(sp)
   21800:	008000f4 	movhi	r2,3
   21804:	108d9104 	addi	r2,r2,13892
   21808:	29400104 	addi	r5,r5,4
   2180c:	da002917 	ldw	r8,164(sp)
   21810:	d8803b15 	stw	r2,236(sp)
   21814:	df002915 	stw	fp,164(sp)
   21818:	002b883a 	mov	r21,zero
   2181c:	9f000094 	ori	fp,r19,2
   21820:	d9402d15 	stw	r5,180(sp)
   21824:	00800084 	movi	r2,2
   21828:	04001e04 	movi	r16,120
   2182c:	9007883a 	mov	r3,r18
   21830:	003fdc06 	br	217a4 <_gp+0xfffe43a4>
   21834:	da002917 	ldw	r8,164(sp)
   21838:	df002915 	stw	fp,164(sp)
   2183c:	9839883a 	mov	fp,r19
   21840:	dcc02a03 	ldbu	r19,168(sp)
   21844:	e080080c 	andi	r2,fp,32
   21848:	d8c02d17 	ldw	r3,180(sp)
   2184c:	dcc02785 	stb	r19,158(sp)
   21850:	103e801e 	bne	r2,zero,21254 <_gp+0xfffe3e54>
   21854:	e080040c 	andi	r2,fp,16
   21858:	10031f26 	beq	r2,zero,224d8 <___svfprintf_internal_r+0x16c8>
   2185c:	1c800017 	ldw	r18,0(r3)
   21860:	d9402d17 	ldw	r5,180(sp)
   21864:	902bd7fa 	srai	r21,r18,31
   21868:	29400104 	addi	r5,r5,4
   2186c:	d9402d15 	stw	r5,180(sp)
   21870:	a805883a 	mov	r2,r21
   21874:	103e7e0e 	bge	r2,zero,21270 <_gp+0xfffe3e70>
   21878:	04a5c83a 	sub	r18,zero,r18
   2187c:	9004c03a 	cmpne	r2,r18,zero
   21880:	056bc83a 	sub	r21,zero,r21
   21884:	a8abc83a 	sub	r21,r21,r2
   21888:	04c00b44 	movi	r19,45
   2188c:	dcc02785 	stb	r19,158(sp)
   21890:	da403215 	stw	r9,200(sp)
   21894:	00800044 	movi	r2,1
   21898:	9546b03a 	or	r3,r18,r21
   2189c:	003e7806 	br	21280 <_gp+0xfffe3e80>
   218a0:	9cc01014 	ori	r19,r19,64
   218a4:	e005883a 	mov	r2,fp
   218a8:	e4000007 	ldb	r16,0(fp)
   218ac:	003daf06 	br	20f6c <_gp+0xfffe3b6c>
   218b0:	e4000007 	ldb	r16,0(fp)
   218b4:	00801b04 	movi	r2,108
   218b8:	80837726 	beq	r16,r2,22698 <___svfprintf_internal_r+0x1888>
   218bc:	9cc00414 	ori	r19,r19,16
   218c0:	e005883a 	mov	r2,fp
   218c4:	003da906 	br	20f6c <_gp+0xfffe3b6c>
   218c8:	da002917 	ldw	r8,164(sp)
   218cc:	df002915 	stw	fp,164(sp)
   218d0:	9839883a 	mov	fp,r19
   218d4:	dcc02a03 	ldbu	r19,168(sp)
   218d8:	e080080c 	andi	r2,fp,32
   218dc:	dcc02785 	stb	r19,158(sp)
   218e0:	1002f126 	beq	r2,zero,224a8 <___svfprintf_internal_r+0x1698>
   218e4:	d9402d17 	ldw	r5,180(sp)
   218e8:	d9003017 	ldw	r4,192(sp)
   218ec:	28800017 	ldw	r2,0(r5)
   218f0:	2007d7fa 	srai	r3,r4,31
   218f4:	29400104 	addi	r5,r5,4
   218f8:	d9402d15 	stw	r5,180(sp)
   218fc:	11000015 	stw	r4,0(r2)
   21900:	10c00115 	stw	r3,4(r2)
   21904:	003d6e06 	br	20ec0 <_gp+0xfffe3ac0>
   21908:	da002917 	ldw	r8,164(sp)
   2190c:	df002915 	stw	fp,164(sp)
   21910:	9839883a 	mov	fp,r19
   21914:	dcc02a03 	ldbu	r19,168(sp)
   21918:	014000f4 	movhi	r5,3
   2191c:	294d8c04 	addi	r5,r5,13872
   21920:	dcc02785 	stb	r19,158(sp)
   21924:	d9403b15 	stw	r5,236(sp)
   21928:	e0c0080c 	andi	r3,fp,32
   2192c:	d8802d17 	ldw	r2,180(sp)
   21930:	18005826 	beq	r3,zero,21a94 <___svfprintf_internal_r+0xc84>
   21934:	d9402d17 	ldw	r5,180(sp)
   21938:	14800017 	ldw	r18,0(r2)
   2193c:	15400117 	ldw	r21,4(r2)
   21940:	29400204 	addi	r5,r5,8
   21944:	d9402d15 	stw	r5,180(sp)
   21948:	e080004c 	andi	r2,fp,1
   2194c:	10020626 	beq	r2,zero,22168 <___svfprintf_internal_r+0x1358>
   21950:	9546b03a 	or	r3,r18,r21
   21954:	1802f326 	beq	r3,zero,22524 <___svfprintf_internal_r+0x1714>
   21958:	00800c04 	movi	r2,48
   2195c:	d8802705 	stb	r2,156(sp)
   21960:	dc002745 	stb	r16,157(sp)
   21964:	e7000094 	ori	fp,fp,2
   21968:	00800084 	movi	r2,2
   2196c:	003f8d06 	br	217a4 <_gp+0xfffe43a4>
   21970:	d8c02d17 	ldw	r3,180(sp)
   21974:	d9002d17 	ldw	r4,180(sp)
   21978:	da002917 	ldw	r8,164(sp)
   2197c:	18800017 	ldw	r2,0(r3)
   21980:	21000104 	addi	r4,r4,4
   21984:	00c00044 	movi	r3,1
   21988:	df002915 	stw	fp,164(sp)
   2198c:	d8c02a15 	stw	r3,168(sp)
   21990:	9839883a 	mov	fp,r19
   21994:	d8002785 	stb	zero,158(sp)
   21998:	d8801405 	stb	r2,80(sp)
   2199c:	d9002d15 	stw	r4,180(sp)
   219a0:	1823883a 	mov	r17,r3
   219a4:	d8c01404 	addi	r3,sp,80
   219a8:	d8003215 	stw	zero,200(sp)
   219ac:	d8003415 	stw	zero,208(sp)
   219b0:	d8c03115 	stw	r3,196(sp)
   219b4:	0005883a 	mov	r2,zero
   219b8:	003e5f06 	br	21338 <_gp+0xfffe3f38>
   219bc:	d8802a07 	ldb	r2,168(sp)
   219c0:	1002c21e 	bne	r2,zero,224cc <___svfprintf_internal_r+0x16bc>
   219c4:	00c00804 	movi	r3,32
   219c8:	d8c02a05 	stb	r3,168(sp)
   219cc:	e005883a 	mov	r2,fp
   219d0:	e4000007 	ldb	r16,0(fp)
   219d4:	003d6506 	br	20f6c <_gp+0xfffe3b6c>
   219d8:	9cc00054 	ori	r19,r19,1
   219dc:	e005883a 	mov	r2,fp
   219e0:	e4000007 	ldb	r16,0(fp)
   219e4:	003d6106 	br	20f6c <_gp+0xfffe3b6c>
   219e8:	d8c02d17 	ldw	r3,180(sp)
   219ec:	d9002d17 	ldw	r4,180(sp)
   219f0:	da002917 	ldw	r8,164(sp)
   219f4:	18c00017 	ldw	r3,0(r3)
   219f8:	df002915 	stw	fp,164(sp)
   219fc:	d8002785 	stb	zero,158(sp)
   21a00:	d8c03115 	stw	r3,196(sp)
   21a04:	9839883a 	mov	fp,r19
   21a08:	24800104 	addi	r18,r4,4
   21a0c:	18043526 	beq	r3,zero,22ae4 <___svfprintf_internal_r+0x1cd4>
   21a10:	d9003117 	ldw	r4,196(sp)
   21a14:	4803e016 	blt	r9,zero,22998 <___svfprintf_internal_r+0x1b88>
   21a18:	480d883a 	mov	r6,r9
   21a1c:	000b883a 	mov	r5,zero
   21a20:	da004015 	stw	r8,256(sp)
   21a24:	da403f15 	stw	r9,252(sp)
   21a28:	00285c40 	call	285c4 <memchr>
   21a2c:	da004017 	ldw	r8,256(sp)
   21a30:	da403f17 	ldw	r9,252(sp)
   21a34:	10045f26 	beq	r2,zero,22bb4 <___svfprintf_internal_r+0x1da4>
   21a38:	d8c03117 	ldw	r3,196(sp)
   21a3c:	10e3c83a 	sub	r17,r2,r3
   21a40:	4c40010e 	bge	r9,r17,21a48 <___svfprintf_internal_r+0xc38>
   21a44:	4823883a 	mov	r17,r9
   21a48:	8805883a 	mov	r2,r17
   21a4c:	8803d716 	blt	r17,zero,229ac <___svfprintf_internal_r+0x1b9c>
   21a50:	dcc02783 	ldbu	r19,158(sp)
   21a54:	d8802a15 	stw	r2,168(sp)
   21a58:	dc802d15 	stw	r18,180(sp)
   21a5c:	d8003215 	stw	zero,200(sp)
   21a60:	d8003415 	stw	zero,208(sp)
   21a64:	003e2d06 	br	2131c <_gp+0xfffe3f1c>
   21a68:	da002917 	ldw	r8,164(sp)
   21a6c:	df002915 	stw	fp,164(sp)
   21a70:	9839883a 	mov	fp,r19
   21a74:	dcc02a03 	ldbu	r19,168(sp)
   21a78:	010000f4 	movhi	r4,3
   21a7c:	210d9104 	addi	r4,r4,13892
   21a80:	d9003b15 	stw	r4,236(sp)
   21a84:	dcc02785 	stb	r19,158(sp)
   21a88:	e0c0080c 	andi	r3,fp,32
   21a8c:	d8802d17 	ldw	r2,180(sp)
   21a90:	183fa81e 	bne	r3,zero,21934 <_gp+0xfffe4534>
   21a94:	e0c0040c 	andi	r3,fp,16
   21a98:	18027126 	beq	r3,zero,22460 <___svfprintf_internal_r+0x1650>
   21a9c:	d8c02d17 	ldw	r3,180(sp)
   21aa0:	14800017 	ldw	r18,0(r2)
   21aa4:	002b883a 	mov	r21,zero
   21aa8:	18c00104 	addi	r3,r3,4
   21aac:	d8c02d15 	stw	r3,180(sp)
   21ab0:	003fa506 	br	21948 <_gp+0xfffe4548>
   21ab4:	9cc00814 	ori	r19,r19,32
   21ab8:	e005883a 	mov	r2,fp
   21abc:	e4000007 	ldb	r16,0(fp)
   21ac0:	003d2a06 	br	20f6c <_gp+0xfffe3b6c>
   21ac4:	d9002d17 	ldw	r4,180(sp)
   21ac8:	d9402d17 	ldw	r5,180(sp)
   21acc:	21000017 	ldw	r4,0(r4)
   21ad0:	28c00104 	addi	r3,r5,4
   21ad4:	d9002e15 	stw	r4,184(sp)
   21ad8:	2002e916 	blt	r4,zero,22680 <___svfprintf_internal_r+0x1870>
   21adc:	d8c02d15 	stw	r3,180(sp)
   21ae0:	e005883a 	mov	r2,fp
   21ae4:	e4000007 	ldb	r16,0(fp)
   21ae8:	003d2006 	br	20f6c <_gp+0xfffe3b6c>
   21aec:	00c00ac4 	movi	r3,43
   21af0:	d8c02a05 	stb	r3,168(sp)
   21af4:	e005883a 	mov	r2,fp
   21af8:	e4000007 	ldb	r16,0(fp)
   21afc:	003d1b06 	br	20f6c <_gp+0xfffe3b6c>
   21b00:	da002917 	ldw	r8,164(sp)
   21b04:	df002915 	stw	fp,164(sp)
   21b08:	9839883a 	mov	fp,r19
   21b0c:	e080080c 	andi	r2,fp,32
   21b10:	103f2d1e 	bne	r2,zero,217c8 <_gp+0xfffe43c8>
   21b14:	e080040c 	andi	r2,fp,16
   21b18:	10027826 	beq	r2,zero,224fc <___svfprintf_internal_r+0x16ec>
   21b1c:	d9402d17 	ldw	r5,180(sp)
   21b20:	002b883a 	mov	r21,zero
   21b24:	00800044 	movi	r2,1
   21b28:	2c800017 	ldw	r18,0(r5)
   21b2c:	29400104 	addi	r5,r5,4
   21b30:	d9402d15 	stw	r5,180(sp)
   21b34:	9007883a 	mov	r3,r18
   21b38:	003f1a06 	br	217a4 <_gp+0xfffe43a4>
   21b3c:	da002917 	ldw	r8,164(sp)
   21b40:	df002915 	stw	fp,164(sp)
   21b44:	9839883a 	mov	fp,r19
   21b48:	e080080c 	andi	r2,fp,32
   21b4c:	103f0e1e 	bne	r2,zero,21788 <_gp+0xfffe4388>
   21b50:	e080040c 	andi	r2,fp,16
   21b54:	10024a26 	beq	r2,zero,22480 <___svfprintf_internal_r+0x1670>
   21b58:	d8802d17 	ldw	r2,180(sp)
   21b5c:	002b883a 	mov	r21,zero
   21b60:	14800017 	ldw	r18,0(r2)
   21b64:	10800104 	addi	r2,r2,4
   21b68:	d8802d15 	stw	r2,180(sp)
   21b6c:	9007883a 	mov	r3,r18
   21b70:	0005883a 	mov	r2,zero
   21b74:	003f0b06 	br	217a4 <_gp+0xfffe43a4>
   21b78:	da002917 	ldw	r8,164(sp)
   21b7c:	df002915 	stw	fp,164(sp)
   21b80:	9839883a 	mov	fp,r19
   21b84:	dcc02a03 	ldbu	r19,168(sp)
   21b88:	dcc02785 	stb	r19,158(sp)
   21b8c:	803d6326 	beq	r16,zero,2111c <_gp+0xfffe3d1c>
   21b90:	00c00044 	movi	r3,1
   21b94:	d8c02a15 	stw	r3,168(sp)
   21b98:	dc001405 	stb	r16,80(sp)
   21b9c:	d8002785 	stb	zero,158(sp)
   21ba0:	003f7f06 	br	219a0 <_gp+0xfffe45a0>
   21ba4:	d8c02017 	ldw	r3,128(sp)
   21ba8:	003e2406 	br	2143c <_gp+0xfffe403c>
   21bac:	10803fcc 	andi	r2,r2,255
   21bb0:	00c00044 	movi	r3,1
   21bb4:	10fdba1e 	bne	r2,r3,212a0 <_gp+0xfffe3ea0>
   21bb8:	a800021e 	bne	r21,zero,21bc4 <___svfprintf_internal_r+0xdb4>
   21bbc:	00800244 	movi	r2,9
   21bc0:	14801d2e 	bgeu	r2,r18,21c38 <___svfprintf_internal_r+0xe28>
   21bc4:	dc002a15 	stw	r16,168(sp)
   21bc8:	b823883a 	mov	r17,r23
   21bcc:	9021883a 	mov	r16,r18
   21bd0:	da002b15 	stw	r8,172(sp)
   21bd4:	a825883a 	mov	r18,r21
   21bd8:	482b883a 	mov	r21,r9
   21bdc:	8009883a 	mov	r4,r16
   21be0:	900b883a 	mov	r5,r18
   21be4:	01800284 	movi	r6,10
   21be8:	000f883a 	mov	r7,zero
   21bec:	002db740 	call	2db74 <__umoddi3>
   21bf0:	10800c04 	addi	r2,r2,48
   21bf4:	8c7fffc4 	addi	r17,r17,-1
   21bf8:	8009883a 	mov	r4,r16
   21bfc:	900b883a 	mov	r5,r18
   21c00:	01800284 	movi	r6,10
   21c04:	000f883a 	mov	r7,zero
   21c08:	88800005 	stb	r2,0(r17)
   21c0c:	002d5340 	call	2d534 <__udivdi3>
   21c10:	1021883a 	mov	r16,r2
   21c14:	10c4b03a 	or	r2,r2,r3
   21c18:	1825883a 	mov	r18,r3
   21c1c:	103fef1e 	bne	r2,zero,21bdc <_gp+0xfffe47dc>
   21c20:	dc403115 	stw	r17,196(sp)
   21c24:	dc002a17 	ldw	r16,168(sp)
   21c28:	da002b17 	ldw	r8,172(sp)
   21c2c:	a813883a 	mov	r9,r21
   21c30:	bc63c83a 	sub	r17,r23,r17
   21c34:	003db406 	br	21308 <_gp+0xfffe3f08>
   21c38:	94800c04 	addi	r18,r18,48
   21c3c:	d8c01dc4 	addi	r3,sp,119
   21c40:	dc801dc5 	stb	r18,119(sp)
   21c44:	dc403d17 	ldw	r17,244(sp)
   21c48:	d8c03115 	stw	r3,196(sp)
   21c4c:	003dae06 	br	21308 <_gp+0xfffe3f08>
   21c50:	00801944 	movi	r2,101
   21c54:	14008c0e 	bge	r2,r16,21e88 <___svfprintf_internal_r+0x1078>
   21c58:	d9003717 	ldw	r4,220(sp)
   21c5c:	d9403817 	ldw	r5,224(sp)
   21c60:	000d883a 	mov	r6,zero
   21c64:	000f883a 	mov	r7,zero
   21c68:	d8c03e15 	stw	r3,248(sp)
   21c6c:	da004015 	stw	r8,256(sp)
   21c70:	002f5000 	call	2f500 <__eqdf2>
   21c74:	d8c03e17 	ldw	r3,248(sp)
   21c78:	da004017 	ldw	r8,256(sp)
   21c7c:	1000fc1e 	bne	r2,zero,22070 <___svfprintf_internal_r+0x1260>
   21c80:	d8801f17 	ldw	r2,124(sp)
   21c84:	010000f4 	movhi	r4,3
   21c88:	210d9804 	addi	r4,r4,13920
   21c8c:	18c00044 	addi	r3,r3,1
   21c90:	10800044 	addi	r2,r2,1
   21c94:	41000015 	stw	r4,0(r8)
   21c98:	01000044 	movi	r4,1
   21c9c:	41000115 	stw	r4,4(r8)
   21ca0:	d8c02015 	stw	r3,128(sp)
   21ca4:	d8801f15 	stw	r2,124(sp)
   21ca8:	010001c4 	movi	r4,7
   21cac:	20823116 	blt	r4,r2,22574 <___svfprintf_internal_r+0x1764>
   21cb0:	42000204 	addi	r8,r8,8
   21cb4:	d8802617 	ldw	r2,152(sp)
   21cb8:	d9403317 	ldw	r5,204(sp)
   21cbc:	11400216 	blt	r2,r5,21cc8 <___svfprintf_internal_r+0xeb8>
   21cc0:	e080004c 	andi	r2,fp,1
   21cc4:	103e3a26 	beq	r2,zero,215b0 <_gp+0xfffe41b0>
   21cc8:	d8803917 	ldw	r2,228(sp)
   21ccc:	d9003517 	ldw	r4,212(sp)
   21cd0:	d9403917 	ldw	r5,228(sp)
   21cd4:	1887883a 	add	r3,r3,r2
   21cd8:	d8801f17 	ldw	r2,124(sp)
   21cdc:	41000015 	stw	r4,0(r8)
   21ce0:	41400115 	stw	r5,4(r8)
   21ce4:	10800044 	addi	r2,r2,1
   21ce8:	d8c02015 	stw	r3,128(sp)
   21cec:	d8801f15 	stw	r2,124(sp)
   21cf0:	010001c4 	movi	r4,7
   21cf4:	20826c16 	blt	r4,r2,226a8 <___svfprintf_internal_r+0x1898>
   21cf8:	42000204 	addi	r8,r8,8
   21cfc:	d8803317 	ldw	r2,204(sp)
   21d00:	143fffc4 	addi	r16,r2,-1
   21d04:	043e2a0e 	bge	zero,r16,215b0 <_gp+0xfffe41b0>
   21d08:	04400404 	movi	r17,16
   21d0c:	d8801f17 	ldw	r2,124(sp)
   21d10:	8c00980e 	bge	r17,r16,21f74 <___svfprintf_internal_r+0x1164>
   21d14:	014000f4 	movhi	r5,3
   21d18:	294d9884 	addi	r5,r5,13922
   21d1c:	d9402b15 	stw	r5,172(sp)
   21d20:	04c001c4 	movi	r19,7
   21d24:	dc802f17 	ldw	r18,188(sp)
   21d28:	00000306 	br	21d38 <___svfprintf_internal_r+0xf28>
   21d2c:	42000204 	addi	r8,r8,8
   21d30:	843ffc04 	addi	r16,r16,-16
   21d34:	8c00920e 	bge	r17,r16,21f80 <___svfprintf_internal_r+0x1170>
   21d38:	18c00404 	addi	r3,r3,16
   21d3c:	10800044 	addi	r2,r2,1
   21d40:	45000015 	stw	r20,0(r8)
   21d44:	44400115 	stw	r17,4(r8)
   21d48:	d8c02015 	stw	r3,128(sp)
   21d4c:	d8801f15 	stw	r2,124(sp)
   21d50:	98bff60e 	bge	r19,r2,21d2c <_gp+0xfffe492c>
   21d54:	9009883a 	mov	r4,r18
   21d58:	b00b883a 	mov	r5,r22
   21d5c:	b80d883a 	mov	r6,r23
   21d60:	002a2f40 	call	2a2f4 <__ssprint_r>
   21d64:	103cf31e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   21d68:	d8c02017 	ldw	r3,128(sp)
   21d6c:	d8801f17 	ldw	r2,124(sp)
   21d70:	da000404 	addi	r8,sp,16
   21d74:	003fee06 	br	21d30 <_gp+0xfffe4930>
   21d78:	d9402e17 	ldw	r5,184(sp)
   21d7c:	d8802a17 	ldw	r2,168(sp)
   21d80:	28a7c83a 	sub	r19,r5,r2
   21d84:	04fdcb0e 	bge	zero,r19,214b4 <_gp+0xfffe40b4>
   21d88:	05400404 	movi	r21,16
   21d8c:	d8801f17 	ldw	r2,124(sp)
   21d90:	acc3840e 	bge	r21,r19,22ba4 <___svfprintf_internal_r+0x1d94>
   21d94:	014000f4 	movhi	r5,3
   21d98:	9809883a 	mov	r4,r19
   21d9c:	294d9884 	addi	r5,r5,13922
   21da0:	dc002c15 	stw	r16,176(sp)
   21da4:	8827883a 	mov	r19,r17
   21da8:	d9402b15 	stw	r5,172(sp)
   21dac:	048001c4 	movi	r18,7
   21db0:	dc002f17 	ldw	r16,188(sp)
   21db4:	2023883a 	mov	r17,r4
   21db8:	00000306 	br	21dc8 <___svfprintf_internal_r+0xfb8>
   21dbc:	8c7ffc04 	addi	r17,r17,-16
   21dc0:	42000204 	addi	r8,r8,8
   21dc4:	ac40110e 	bge	r21,r17,21e0c <___svfprintf_internal_r+0xffc>
   21dc8:	18c00404 	addi	r3,r3,16
   21dcc:	10800044 	addi	r2,r2,1
   21dd0:	45000015 	stw	r20,0(r8)
   21dd4:	45400115 	stw	r21,4(r8)
   21dd8:	d8c02015 	stw	r3,128(sp)
   21ddc:	d8801f15 	stw	r2,124(sp)
   21de0:	90bff60e 	bge	r18,r2,21dbc <_gp+0xfffe49bc>
   21de4:	8009883a 	mov	r4,r16
   21de8:	b00b883a 	mov	r5,r22
   21dec:	b80d883a 	mov	r6,r23
   21df0:	002a2f40 	call	2a2f4 <__ssprint_r>
   21df4:	103ccf1e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   21df8:	8c7ffc04 	addi	r17,r17,-16
   21dfc:	d8c02017 	ldw	r3,128(sp)
   21e00:	d8801f17 	ldw	r2,124(sp)
   21e04:	da000404 	addi	r8,sp,16
   21e08:	ac7fef16 	blt	r21,r17,21dc8 <_gp+0xfffe49c8>
   21e0c:	dc002c17 	ldw	r16,176(sp)
   21e10:	8809883a 	mov	r4,r17
   21e14:	9823883a 	mov	r17,r19
   21e18:	2027883a 	mov	r19,r4
   21e1c:	d9002b17 	ldw	r4,172(sp)
   21e20:	1cc7883a 	add	r3,r3,r19
   21e24:	10800044 	addi	r2,r2,1
   21e28:	41000015 	stw	r4,0(r8)
   21e2c:	44c00115 	stw	r19,4(r8)
   21e30:	d8c02015 	stw	r3,128(sp)
   21e34:	d8801f15 	stw	r2,124(sp)
   21e38:	010001c4 	movi	r4,7
   21e3c:	20816b16 	blt	r4,r2,223ec <___svfprintf_internal_r+0x15dc>
   21e40:	42000204 	addi	r8,r8,8
   21e44:	003d9b06 	br	214b4 <_gp+0xfffe40b4>
   21e48:	d9403b17 	ldw	r5,236(sp)
   21e4c:	b807883a 	mov	r3,r23
   21e50:	908003cc 	andi	r2,r18,15
   21e54:	a808973a 	slli	r4,r21,28
   21e58:	2885883a 	add	r2,r5,r2
   21e5c:	9024d13a 	srli	r18,r18,4
   21e60:	10800003 	ldbu	r2,0(r2)
   21e64:	a82ad13a 	srli	r21,r21,4
   21e68:	18ffffc4 	addi	r3,r3,-1
   21e6c:	24a4b03a 	or	r18,r4,r18
   21e70:	18800005 	stb	r2,0(r3)
   21e74:	9544b03a 	or	r2,r18,r21
   21e78:	103ff51e 	bne	r2,zero,21e50 <_gp+0xfffe4a50>
   21e7c:	d8c03115 	stw	r3,196(sp)
   21e80:	b8e3c83a 	sub	r17,r23,r3
   21e84:	003d2006 	br	21308 <_gp+0xfffe3f08>
   21e88:	d9403317 	ldw	r5,204(sp)
   21e8c:	00800044 	movi	r2,1
   21e90:	18c00044 	addi	r3,r3,1
   21e94:	1141360e 	bge	r2,r5,22370 <___svfprintf_internal_r+0x1560>
   21e98:	dc001f17 	ldw	r16,124(sp)
   21e9c:	d8803117 	ldw	r2,196(sp)
   21ea0:	d8c02015 	stw	r3,128(sp)
   21ea4:	84000044 	addi	r16,r16,1
   21ea8:	40800015 	stw	r2,0(r8)
   21eac:	00800044 	movi	r2,1
   21eb0:	40800115 	stw	r2,4(r8)
   21eb4:	dc001f15 	stw	r16,124(sp)
   21eb8:	008001c4 	movi	r2,7
   21ebc:	14013916 	blt	r2,r16,223a4 <___svfprintf_internal_r+0x1594>
   21ec0:	42000204 	addi	r8,r8,8
   21ec4:	d9003917 	ldw	r4,228(sp)
   21ec8:	d9403517 	ldw	r5,212(sp)
   21ecc:	84000044 	addi	r16,r16,1
   21ed0:	1907883a 	add	r3,r3,r4
   21ed4:	41400015 	stw	r5,0(r8)
   21ed8:	41000115 	stw	r4,4(r8)
   21edc:	d8c02015 	stw	r3,128(sp)
   21ee0:	dc001f15 	stw	r16,124(sp)
   21ee4:	008001c4 	movi	r2,7
   21ee8:	14013716 	blt	r2,r16,223c8 <___svfprintf_internal_r+0x15b8>
   21eec:	44400204 	addi	r17,r8,8
   21ef0:	d9003717 	ldw	r4,220(sp)
   21ef4:	d9403817 	ldw	r5,224(sp)
   21ef8:	000d883a 	mov	r6,zero
   21efc:	000f883a 	mov	r7,zero
   21f00:	d8c03e15 	stw	r3,248(sp)
   21f04:	002f5000 	call	2f500 <__eqdf2>
   21f08:	d8c03e17 	ldw	r3,248(sp)
   21f0c:	10009926 	beq	r2,zero,22174 <___svfprintf_internal_r+0x1364>
   21f10:	d9003317 	ldw	r4,204(sp)
   21f14:	d9403117 	ldw	r5,196(sp)
   21f18:	84000044 	addi	r16,r16,1
   21f1c:	20bfffc4 	addi	r2,r4,-1
   21f20:	1887883a 	add	r3,r3,r2
   21f24:	29000044 	addi	r4,r5,1
   21f28:	88800115 	stw	r2,4(r17)
   21f2c:	89000015 	stw	r4,0(r17)
   21f30:	d8c02015 	stw	r3,128(sp)
   21f34:	dc001f15 	stw	r16,124(sp)
   21f38:	008001c4 	movi	r2,7
   21f3c:	1400b716 	blt	r2,r16,2221c <___svfprintf_internal_r+0x140c>
   21f40:	8c400204 	addi	r17,r17,8
   21f44:	d9403a17 	ldw	r5,232(sp)
   21f48:	dcc022c4 	addi	r19,sp,139
   21f4c:	84000044 	addi	r16,r16,1
   21f50:	28c7883a 	add	r3,r5,r3
   21f54:	8cc00015 	stw	r19,0(r17)
   21f58:	89400115 	stw	r5,4(r17)
   21f5c:	d8c02015 	stw	r3,128(sp)
   21f60:	dc001f15 	stw	r16,124(sp)
   21f64:	008001c4 	movi	r2,7
   21f68:	14000e16 	blt	r2,r16,21fa4 <___svfprintf_internal_r+0x1194>
   21f6c:	8a000204 	addi	r8,r17,8
   21f70:	003d8f06 	br	215b0 <_gp+0xfffe41b0>
   21f74:	010000f4 	movhi	r4,3
   21f78:	210d9884 	addi	r4,r4,13922
   21f7c:	d9002b15 	stw	r4,172(sp)
   21f80:	d9002b17 	ldw	r4,172(sp)
   21f84:	1c07883a 	add	r3,r3,r16
   21f88:	44000115 	stw	r16,4(r8)
   21f8c:	41000015 	stw	r4,0(r8)
   21f90:	10800044 	addi	r2,r2,1
   21f94:	d8c02015 	stw	r3,128(sp)
   21f98:	d8801f15 	stw	r2,124(sp)
   21f9c:	010001c4 	movi	r4,7
   21fa0:	20bd820e 	bge	r4,r2,215ac <_gp+0xfffe41ac>
   21fa4:	d9002f17 	ldw	r4,188(sp)
   21fa8:	b00b883a 	mov	r5,r22
   21fac:	b80d883a 	mov	r6,r23
   21fb0:	002a2f40 	call	2a2f4 <__ssprint_r>
   21fb4:	103c5f1e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   21fb8:	d8c02017 	ldw	r3,128(sp)
   21fbc:	da000404 	addi	r8,sp,16
   21fc0:	003d7b06 	br	215b0 <_gp+0xfffe41b0>
   21fc4:	d9002f17 	ldw	r4,188(sp)
   21fc8:	b00b883a 	mov	r5,r22
   21fcc:	b80d883a 	mov	r6,r23
   21fd0:	002a2f40 	call	2a2f4 <__ssprint_r>
   21fd4:	103db226 	beq	r2,zero,216a0 <_gp+0xfffe42a0>
   21fd8:	003c5606 	br	21134 <_gp+0xfffe3d34>
   21fdc:	10803fcc 	andi	r2,r2,255
   21fe0:	1000201e 	bne	r2,zero,22064 <___svfprintf_internal_r+0x1254>
   21fe4:	e080004c 	andi	r2,fp,1
   21fe8:	10001e26 	beq	r2,zero,22064 <___svfprintf_internal_r+0x1254>
   21fec:	00800c04 	movi	r2,48
   21ff0:	d8c01dc4 	addi	r3,sp,119
   21ff4:	d8801dc5 	stb	r2,119(sp)
   21ff8:	dc403d17 	ldw	r17,244(sp)
   21ffc:	d8c03115 	stw	r3,196(sp)
   22000:	003cc106 	br	21308 <_gp+0xfffe3f08>
   22004:	d9002f17 	ldw	r4,188(sp)
   22008:	b00b883a 	mov	r5,r22
   2200c:	b80d883a 	mov	r6,r23
   22010:	002a2f40 	call	2a2f4 <__ssprint_r>
   22014:	103c471e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22018:	d8c02017 	ldw	r3,128(sp)
   2201c:	da000404 	addi	r8,sp,16
   22020:	003d5606 	br	2157c <_gp+0xfffe417c>
   22024:	d9002f17 	ldw	r4,188(sp)
   22028:	b00b883a 	mov	r5,r22
   2202c:	b80d883a 	mov	r6,r23
   22030:	002a2f40 	call	2a2f4 <__ssprint_r>
   22034:	103c3f1e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22038:	d8c02017 	ldw	r3,128(sp)
   2203c:	da000404 	addi	r8,sp,16
   22040:	003d0b06 	br	21470 <_gp+0xfffe4070>
   22044:	d9002f17 	ldw	r4,188(sp)
   22048:	b00b883a 	mov	r5,r22
   2204c:	b80d883a 	mov	r6,r23
   22050:	002a2f40 	call	2a2f4 <__ssprint_r>
   22054:	103c371e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22058:	d8c02017 	ldw	r3,128(sp)
   2205c:	da000404 	addi	r8,sp,16
   22060:	003d1106 	br	214a8 <_gp+0xfffe40a8>
   22064:	0023883a 	mov	r17,zero
   22068:	ddc03115 	stw	r23,196(sp)
   2206c:	003ca606 	br	21308 <_gp+0xfffe3f08>
   22070:	dc002617 	ldw	r16,152(sp)
   22074:	0401470e 	bge	zero,r16,22594 <___svfprintf_internal_r+0x1784>
   22078:	d8803317 	ldw	r2,204(sp)
   2207c:	d9403117 	ldw	r5,196(sp)
   22080:	d9003417 	ldw	r4,208(sp)
   22084:	1023883a 	mov	r17,r2
   22088:	28a1883a 	add	r16,r5,r2
   2208c:	2080010e 	bge	r4,r2,22094 <___svfprintf_internal_r+0x1284>
   22090:	2023883a 	mov	r17,r4
   22094:	04400b0e 	bge	zero,r17,220c4 <___svfprintf_internal_r+0x12b4>
   22098:	d8801f17 	ldw	r2,124(sp)
   2209c:	d9403117 	ldw	r5,196(sp)
   220a0:	1c47883a 	add	r3,r3,r17
   220a4:	10800044 	addi	r2,r2,1
   220a8:	41400015 	stw	r5,0(r8)
   220ac:	44400115 	stw	r17,4(r8)
   220b0:	d8c02015 	stw	r3,128(sp)
   220b4:	d8801f15 	stw	r2,124(sp)
   220b8:	010001c4 	movi	r4,7
   220bc:	20825f16 	blt	r4,r2,22a3c <___svfprintf_internal_r+0x1c2c>
   220c0:	42000204 	addi	r8,r8,8
   220c4:	88025b16 	blt	r17,zero,22a34 <___svfprintf_internal_r+0x1c24>
   220c8:	d8803417 	ldw	r2,208(sp)
   220cc:	1463c83a 	sub	r17,r2,r17
   220d0:	0440620e 	bge	zero,r17,2225c <___svfprintf_internal_r+0x144c>
   220d4:	04c00404 	movi	r19,16
   220d8:	d8801f17 	ldw	r2,124(sp)
   220dc:	9c41130e 	bge	r19,r17,2252c <___svfprintf_internal_r+0x171c>
   220e0:	014000f4 	movhi	r5,3
   220e4:	294d9884 	addi	r5,r5,13922
   220e8:	d9402b15 	stw	r5,172(sp)
   220ec:	054001c4 	movi	r21,7
   220f0:	dc802f17 	ldw	r18,188(sp)
   220f4:	00000306 	br	22104 <___svfprintf_internal_r+0x12f4>
   220f8:	42000204 	addi	r8,r8,8
   220fc:	8c7ffc04 	addi	r17,r17,-16
   22100:	9c410d0e 	bge	r19,r17,22538 <___svfprintf_internal_r+0x1728>
   22104:	18c00404 	addi	r3,r3,16
   22108:	10800044 	addi	r2,r2,1
   2210c:	45000015 	stw	r20,0(r8)
   22110:	44c00115 	stw	r19,4(r8)
   22114:	d8c02015 	stw	r3,128(sp)
   22118:	d8801f15 	stw	r2,124(sp)
   2211c:	a8bff60e 	bge	r21,r2,220f8 <_gp+0xfffe4cf8>
   22120:	9009883a 	mov	r4,r18
   22124:	b00b883a 	mov	r5,r22
   22128:	b80d883a 	mov	r6,r23
   2212c:	002a2f40 	call	2a2f4 <__ssprint_r>
   22130:	103c001e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22134:	d8c02017 	ldw	r3,128(sp)
   22138:	d8801f17 	ldw	r2,124(sp)
   2213c:	da000404 	addi	r8,sp,16
   22140:	003fee06 	br	220fc <_gp+0xfffe4cfc>
   22144:	d9002f17 	ldw	r4,188(sp)
   22148:	b00b883a 	mov	r5,r22
   2214c:	b80d883a 	mov	r6,r23
   22150:	002a2f40 	call	2a2f4 <__ssprint_r>
   22154:	103bf71e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22158:	d8c02017 	ldw	r3,128(sp)
   2215c:	d8802787 	ldb	r2,158(sp)
   22160:	da000404 	addi	r8,sp,16
   22164:	003cb506 	br	2143c <_gp+0xfffe403c>
   22168:	00800084 	movi	r2,2
   2216c:	9546b03a 	or	r3,r18,r21
   22170:	003d8c06 	br	217a4 <_gp+0xfffe43a4>
   22174:	d8803317 	ldw	r2,204(sp)
   22178:	14ffffc4 	addi	r19,r2,-1
   2217c:	04ff710e 	bge	zero,r19,21f44 <_gp+0xfffe4b44>
   22180:	05400404 	movi	r21,16
   22184:	acc2f80e 	bge	r21,r19,22d68 <___svfprintf_internal_r+0x1f58>
   22188:	014000f4 	movhi	r5,3
   2218c:	294d9884 	addi	r5,r5,13922
   22190:	d9402b15 	stw	r5,172(sp)
   22194:	01c001c4 	movi	r7,7
   22198:	dc802f17 	ldw	r18,188(sp)
   2219c:	00000306 	br	221ac <___svfprintf_internal_r+0x139c>
   221a0:	9cfffc04 	addi	r19,r19,-16
   221a4:	8c400204 	addi	r17,r17,8
   221a8:	acc0130e 	bge	r21,r19,221f8 <___svfprintf_internal_r+0x13e8>
   221ac:	18c00404 	addi	r3,r3,16
   221b0:	84000044 	addi	r16,r16,1
   221b4:	8d000015 	stw	r20,0(r17)
   221b8:	8d400115 	stw	r21,4(r17)
   221bc:	d8c02015 	stw	r3,128(sp)
   221c0:	dc001f15 	stw	r16,124(sp)
   221c4:	3c3ff60e 	bge	r7,r16,221a0 <_gp+0xfffe4da0>
   221c8:	9009883a 	mov	r4,r18
   221cc:	b00b883a 	mov	r5,r22
   221d0:	b80d883a 	mov	r6,r23
   221d4:	d9c03e15 	stw	r7,248(sp)
   221d8:	002a2f40 	call	2a2f4 <__ssprint_r>
   221dc:	d9c03e17 	ldw	r7,248(sp)
   221e0:	103bd41e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   221e4:	9cfffc04 	addi	r19,r19,-16
   221e8:	d8c02017 	ldw	r3,128(sp)
   221ec:	dc001f17 	ldw	r16,124(sp)
   221f0:	dc400404 	addi	r17,sp,16
   221f4:	acffed16 	blt	r21,r19,221ac <_gp+0xfffe4dac>
   221f8:	d8802b17 	ldw	r2,172(sp)
   221fc:	1cc7883a 	add	r3,r3,r19
   22200:	84000044 	addi	r16,r16,1
   22204:	88800015 	stw	r2,0(r17)
   22208:	8cc00115 	stw	r19,4(r17)
   2220c:	d8c02015 	stw	r3,128(sp)
   22210:	dc001f15 	stw	r16,124(sp)
   22214:	008001c4 	movi	r2,7
   22218:	143f490e 	bge	r2,r16,21f40 <_gp+0xfffe4b40>
   2221c:	d9002f17 	ldw	r4,188(sp)
   22220:	b00b883a 	mov	r5,r22
   22224:	b80d883a 	mov	r6,r23
   22228:	002a2f40 	call	2a2f4 <__ssprint_r>
   2222c:	103bc11e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22230:	d8c02017 	ldw	r3,128(sp)
   22234:	dc001f17 	ldw	r16,124(sp)
   22238:	dc400404 	addi	r17,sp,16
   2223c:	003f4106 	br	21f44 <_gp+0xfffe4b44>
   22240:	d9002f17 	ldw	r4,188(sp)
   22244:	b00b883a 	mov	r5,r22
   22248:	b80d883a 	mov	r6,r23
   2224c:	002a2f40 	call	2a2f4 <__ssprint_r>
   22250:	103bb81e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22254:	d8c02017 	ldw	r3,128(sp)
   22258:	da000404 	addi	r8,sp,16
   2225c:	d9403117 	ldw	r5,196(sp)
   22260:	d9003417 	ldw	r4,208(sp)
   22264:	d8802617 	ldw	r2,152(sp)
   22268:	2923883a 	add	r17,r5,r4
   2226c:	d9403317 	ldw	r5,204(sp)
   22270:	11400216 	blt	r2,r5,2227c <___svfprintf_internal_r+0x146c>
   22274:	e100004c 	andi	r4,fp,1
   22278:	20000d26 	beq	r4,zero,222b0 <___svfprintf_internal_r+0x14a0>
   2227c:	d9003917 	ldw	r4,228(sp)
   22280:	d9403517 	ldw	r5,212(sp)
   22284:	1907883a 	add	r3,r3,r4
   22288:	d9001f17 	ldw	r4,124(sp)
   2228c:	41400015 	stw	r5,0(r8)
   22290:	d9403917 	ldw	r5,228(sp)
   22294:	21000044 	addi	r4,r4,1
   22298:	d8c02015 	stw	r3,128(sp)
   2229c:	41400115 	stw	r5,4(r8)
   222a0:	d9001f15 	stw	r4,124(sp)
   222a4:	014001c4 	movi	r5,7
   222a8:	2901ec16 	blt	r5,r4,22a5c <___svfprintf_internal_r+0x1c4c>
   222ac:	42000204 	addi	r8,r8,8
   222b0:	d9003317 	ldw	r4,204(sp)
   222b4:	2085c83a 	sub	r2,r4,r2
   222b8:	8449c83a 	sub	r4,r16,r17
   222bc:	1021883a 	mov	r16,r2
   222c0:	2080010e 	bge	r4,r2,222c8 <___svfprintf_internal_r+0x14b8>
   222c4:	2021883a 	mov	r16,r4
   222c8:	04000a0e 	bge	zero,r16,222f4 <___svfprintf_internal_r+0x14e4>
   222cc:	d9001f17 	ldw	r4,124(sp)
   222d0:	1c07883a 	add	r3,r3,r16
   222d4:	44400015 	stw	r17,0(r8)
   222d8:	21000044 	addi	r4,r4,1
   222dc:	44000115 	stw	r16,4(r8)
   222e0:	d8c02015 	stw	r3,128(sp)
   222e4:	d9001f15 	stw	r4,124(sp)
   222e8:	014001c4 	movi	r5,7
   222ec:	2901f216 	blt	r5,r4,22ab8 <___svfprintf_internal_r+0x1ca8>
   222f0:	42000204 	addi	r8,r8,8
   222f4:	80020a16 	blt	r16,zero,22b20 <___svfprintf_internal_r+0x1d10>
   222f8:	1421c83a 	sub	r16,r2,r16
   222fc:	043cac0e 	bge	zero,r16,215b0 <_gp+0xfffe41b0>
   22300:	04400404 	movi	r17,16
   22304:	d8801f17 	ldw	r2,124(sp)
   22308:	8c3f1a0e 	bge	r17,r16,21f74 <_gp+0xfffe4b74>
   2230c:	014000f4 	movhi	r5,3
   22310:	294d9884 	addi	r5,r5,13922
   22314:	d9402b15 	stw	r5,172(sp)
   22318:	04c001c4 	movi	r19,7
   2231c:	dc802f17 	ldw	r18,188(sp)
   22320:	00000306 	br	22330 <___svfprintf_internal_r+0x1520>
   22324:	42000204 	addi	r8,r8,8
   22328:	843ffc04 	addi	r16,r16,-16
   2232c:	8c3f140e 	bge	r17,r16,21f80 <_gp+0xfffe4b80>
   22330:	18c00404 	addi	r3,r3,16
   22334:	10800044 	addi	r2,r2,1
   22338:	45000015 	stw	r20,0(r8)
   2233c:	44400115 	stw	r17,4(r8)
   22340:	d8c02015 	stw	r3,128(sp)
   22344:	d8801f15 	stw	r2,124(sp)
   22348:	98bff60e 	bge	r19,r2,22324 <_gp+0xfffe4f24>
   2234c:	9009883a 	mov	r4,r18
   22350:	b00b883a 	mov	r5,r22
   22354:	b80d883a 	mov	r6,r23
   22358:	002a2f40 	call	2a2f4 <__ssprint_r>
   2235c:	103b751e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22360:	d8c02017 	ldw	r3,128(sp)
   22364:	d8801f17 	ldw	r2,124(sp)
   22368:	da000404 	addi	r8,sp,16
   2236c:	003fee06 	br	22328 <_gp+0xfffe4f28>
   22370:	e088703a 	and	r4,fp,r2
   22374:	203ec81e 	bne	r4,zero,21e98 <_gp+0xfffe4a98>
   22378:	dc001f17 	ldw	r16,124(sp)
   2237c:	d9003117 	ldw	r4,196(sp)
   22380:	40800115 	stw	r2,4(r8)
   22384:	84000044 	addi	r16,r16,1
   22388:	41000015 	stw	r4,0(r8)
   2238c:	d8c02015 	stw	r3,128(sp)
   22390:	dc001f15 	stw	r16,124(sp)
   22394:	008001c4 	movi	r2,7
   22398:	143fa016 	blt	r2,r16,2221c <_gp+0xfffe4e1c>
   2239c:	44400204 	addi	r17,r8,8
   223a0:	003ee806 	br	21f44 <_gp+0xfffe4b44>
   223a4:	d9002f17 	ldw	r4,188(sp)
   223a8:	b00b883a 	mov	r5,r22
   223ac:	b80d883a 	mov	r6,r23
   223b0:	002a2f40 	call	2a2f4 <__ssprint_r>
   223b4:	103b5f1e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   223b8:	d8c02017 	ldw	r3,128(sp)
   223bc:	dc001f17 	ldw	r16,124(sp)
   223c0:	da000404 	addi	r8,sp,16
   223c4:	003ebf06 	br	21ec4 <_gp+0xfffe4ac4>
   223c8:	d9002f17 	ldw	r4,188(sp)
   223cc:	b00b883a 	mov	r5,r22
   223d0:	b80d883a 	mov	r6,r23
   223d4:	002a2f40 	call	2a2f4 <__ssprint_r>
   223d8:	103b561e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   223dc:	d8c02017 	ldw	r3,128(sp)
   223e0:	dc001f17 	ldw	r16,124(sp)
   223e4:	dc400404 	addi	r17,sp,16
   223e8:	003ec106 	br	21ef0 <_gp+0xfffe4af0>
   223ec:	d9002f17 	ldw	r4,188(sp)
   223f0:	b00b883a 	mov	r5,r22
   223f4:	b80d883a 	mov	r6,r23
   223f8:	002a2f40 	call	2a2f4 <__ssprint_r>
   223fc:	103b4d1e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22400:	d8c02017 	ldw	r3,128(sp)
   22404:	da000404 	addi	r8,sp,16
   22408:	003c2a06 	br	214b4 <_gp+0xfffe40b4>
   2240c:	da004015 	stw	r8,256(sp)
   22410:	da403f15 	stw	r9,252(sp)
   22414:	002a04c0 	call	2a04c <__fpclassifyd>
   22418:	da004017 	ldw	r8,256(sp)
   2241c:	da403f17 	ldw	r9,252(sp)
   22420:	1000a91e 	bne	r2,zero,226c8 <___svfprintf_internal_r+0x18b8>
   22424:	008011c4 	movi	r2,71
   22428:	14011016 	blt	r2,r16,2286c <___svfprintf_internal_r+0x1a5c>
   2242c:	010000f4 	movhi	r4,3
   22430:	210d8a04 	addi	r4,r4,13864
   22434:	d9003115 	stw	r4,196(sp)
   22438:	00c000c4 	movi	r3,3
   2243c:	00bfdfc4 	movi	r2,-129
   22440:	d8c02a15 	stw	r3,168(sp)
   22444:	e0b8703a 	and	fp,fp,r2
   22448:	dcc02783 	ldbu	r19,158(sp)
   2244c:	dc802d15 	stw	r18,180(sp)
   22450:	1823883a 	mov	r17,r3
   22454:	d8003215 	stw	zero,200(sp)
   22458:	d8003415 	stw	zero,208(sp)
   2245c:	003baf06 	br	2131c <_gp+0xfffe3f1c>
   22460:	e0c0100c 	andi	r3,fp,64
   22464:	18012a26 	beq	r3,zero,22910 <___svfprintf_internal_r+0x1b00>
   22468:	d9002d17 	ldw	r4,180(sp)
   2246c:	1480000b 	ldhu	r18,0(r2)
   22470:	002b883a 	mov	r21,zero
   22474:	21000104 	addi	r4,r4,4
   22478:	d9002d15 	stw	r4,180(sp)
   2247c:	003d3206 	br	21948 <_gp+0xfffe4548>
   22480:	e080100c 	andi	r2,fp,64
   22484:	10011326 	beq	r2,zero,228d4 <___svfprintf_internal_r+0x1ac4>
   22488:	d8c02d17 	ldw	r3,180(sp)
   2248c:	002b883a 	mov	r21,zero
   22490:	0005883a 	mov	r2,zero
   22494:	1c80000b 	ldhu	r18,0(r3)
   22498:	18c00104 	addi	r3,r3,4
   2249c:	d8c02d15 	stw	r3,180(sp)
   224a0:	9007883a 	mov	r3,r18
   224a4:	003cbf06 	br	217a4 <_gp+0xfffe43a4>
   224a8:	e080040c 	andi	r2,fp,16
   224ac:	10011e26 	beq	r2,zero,22928 <___svfprintf_internal_r+0x1b18>
   224b0:	d9402d17 	ldw	r5,180(sp)
   224b4:	d8c03017 	ldw	r3,192(sp)
   224b8:	28800017 	ldw	r2,0(r5)
   224bc:	29400104 	addi	r5,r5,4
   224c0:	d9402d15 	stw	r5,180(sp)
   224c4:	10c00015 	stw	r3,0(r2)
   224c8:	003a7d06 	br	20ec0 <_gp+0xfffe3ac0>
   224cc:	e4000007 	ldb	r16,0(fp)
   224d0:	e005883a 	mov	r2,fp
   224d4:	003aa506 	br	20f6c <_gp+0xfffe3b6c>
   224d8:	e080100c 	andi	r2,fp,64
   224dc:	10010526 	beq	r2,zero,228f4 <___svfprintf_internal_r+0x1ae4>
   224e0:	1c80000f 	ldh	r18,0(r3)
   224e4:	d8802d17 	ldw	r2,180(sp)
   224e8:	902bd7fa 	srai	r21,r18,31
   224ec:	10800104 	addi	r2,r2,4
   224f0:	d8802d15 	stw	r2,180(sp)
   224f4:	a805883a 	mov	r2,r21
   224f8:	003b5c06 	br	2126c <_gp+0xfffe3e6c>
   224fc:	e080100c 	andi	r2,fp,64
   22500:	1000ec26 	beq	r2,zero,228b4 <___svfprintf_internal_r+0x1aa4>
   22504:	d8802d17 	ldw	r2,180(sp)
   22508:	002b883a 	mov	r21,zero
   2250c:	1480000b 	ldhu	r18,0(r2)
   22510:	10800104 	addi	r2,r2,4
   22514:	d8802d15 	stw	r2,180(sp)
   22518:	9007883a 	mov	r3,r18
   2251c:	00800044 	movi	r2,1
   22520:	003ca006 	br	217a4 <_gp+0xfffe43a4>
   22524:	00800084 	movi	r2,2
   22528:	003c9e06 	br	217a4 <_gp+0xfffe43a4>
   2252c:	010000f4 	movhi	r4,3
   22530:	210d9884 	addi	r4,r4,13922
   22534:	d9002b15 	stw	r4,172(sp)
   22538:	d9002b17 	ldw	r4,172(sp)
   2253c:	1c47883a 	add	r3,r3,r17
   22540:	10800044 	addi	r2,r2,1
   22544:	41000015 	stw	r4,0(r8)
   22548:	44400115 	stw	r17,4(r8)
   2254c:	d8c02015 	stw	r3,128(sp)
   22550:	d8801f15 	stw	r2,124(sp)
   22554:	010001c4 	movi	r4,7
   22558:	20bf3916 	blt	r4,r2,22240 <_gp+0xfffe4e40>
   2255c:	42000204 	addi	r8,r8,8
   22560:	003f3e06 	br	2225c <_gp+0xfffe4e5c>
   22564:	010000f4 	movhi	r4,3
   22568:	210d9884 	addi	r4,r4,13922
   2256c:	d9002b15 	stw	r4,172(sp)
   22570:	003bf806 	br	21554 <_gp+0xfffe4154>
   22574:	d9002f17 	ldw	r4,188(sp)
   22578:	b00b883a 	mov	r5,r22
   2257c:	b80d883a 	mov	r6,r23
   22580:	002a2f40 	call	2a2f4 <__ssprint_r>
   22584:	103aeb1e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22588:	d8c02017 	ldw	r3,128(sp)
   2258c:	da000404 	addi	r8,sp,16
   22590:	003dc806 	br	21cb4 <_gp+0xfffe48b4>
   22594:	d8801f17 	ldw	r2,124(sp)
   22598:	014000f4 	movhi	r5,3
   2259c:	01000044 	movi	r4,1
   225a0:	18c00044 	addi	r3,r3,1
   225a4:	10800044 	addi	r2,r2,1
   225a8:	294d9804 	addi	r5,r5,13920
   225ac:	41000115 	stw	r4,4(r8)
   225b0:	41400015 	stw	r5,0(r8)
   225b4:	d8c02015 	stw	r3,128(sp)
   225b8:	d8801f15 	stw	r2,124(sp)
   225bc:	010001c4 	movi	r4,7
   225c0:	2080ae16 	blt	r4,r2,2287c <___svfprintf_internal_r+0x1a6c>
   225c4:	42000204 	addi	r8,r8,8
   225c8:	8000041e 	bne	r16,zero,225dc <___svfprintf_internal_r+0x17cc>
   225cc:	d8803317 	ldw	r2,204(sp)
   225d0:	1000021e 	bne	r2,zero,225dc <___svfprintf_internal_r+0x17cc>
   225d4:	e080004c 	andi	r2,fp,1
   225d8:	103bf526 	beq	r2,zero,215b0 <_gp+0xfffe41b0>
   225dc:	d9003917 	ldw	r4,228(sp)
   225e0:	d8801f17 	ldw	r2,124(sp)
   225e4:	d9403517 	ldw	r5,212(sp)
   225e8:	1907883a 	add	r3,r3,r4
   225ec:	10800044 	addi	r2,r2,1
   225f0:	41000115 	stw	r4,4(r8)
   225f4:	41400015 	stw	r5,0(r8)
   225f8:	d8c02015 	stw	r3,128(sp)
   225fc:	d8801f15 	stw	r2,124(sp)
   22600:	010001c4 	movi	r4,7
   22604:	2081ac16 	blt	r4,r2,22cb8 <___svfprintf_internal_r+0x1ea8>
   22608:	42000204 	addi	r8,r8,8
   2260c:	0421c83a 	sub	r16,zero,r16
   22610:	0400d60e 	bge	zero,r16,2296c <___svfprintf_internal_r+0x1b5c>
   22614:	04400404 	movi	r17,16
   22618:	8c01190e 	bge	r17,r16,22a80 <___svfprintf_internal_r+0x1c70>
   2261c:	014000f4 	movhi	r5,3
   22620:	294d9884 	addi	r5,r5,13922
   22624:	d9402b15 	stw	r5,172(sp)
   22628:	04c001c4 	movi	r19,7
   2262c:	dc802f17 	ldw	r18,188(sp)
   22630:	00000306 	br	22640 <___svfprintf_internal_r+0x1830>
   22634:	42000204 	addi	r8,r8,8
   22638:	843ffc04 	addi	r16,r16,-16
   2263c:	8c01130e 	bge	r17,r16,22a8c <___svfprintf_internal_r+0x1c7c>
   22640:	18c00404 	addi	r3,r3,16
   22644:	10800044 	addi	r2,r2,1
   22648:	45000015 	stw	r20,0(r8)
   2264c:	44400115 	stw	r17,4(r8)
   22650:	d8c02015 	stw	r3,128(sp)
   22654:	d8801f15 	stw	r2,124(sp)
   22658:	98bff60e 	bge	r19,r2,22634 <_gp+0xfffe5234>
   2265c:	9009883a 	mov	r4,r18
   22660:	b00b883a 	mov	r5,r22
   22664:	b80d883a 	mov	r6,r23
   22668:	002a2f40 	call	2a2f4 <__ssprint_r>
   2266c:	103ab11e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22670:	d8c02017 	ldw	r3,128(sp)
   22674:	d8801f17 	ldw	r2,124(sp)
   22678:	da000404 	addi	r8,sp,16
   2267c:	003fee06 	br	22638 <_gp+0xfffe5238>
   22680:	d8802e17 	ldw	r2,184(sp)
   22684:	d8c02d15 	stw	r3,180(sp)
   22688:	0085c83a 	sub	r2,zero,r2
   2268c:	d8802e15 	stw	r2,184(sp)
   22690:	e005883a 	mov	r2,fp
   22694:	003aba06 	br	21180 <_gp+0xfffe3d80>
   22698:	e0800044 	addi	r2,fp,1
   2269c:	9cc00814 	ori	r19,r19,32
   226a0:	e4000047 	ldb	r16,1(fp)
   226a4:	003a3106 	br	20f6c <_gp+0xfffe3b6c>
   226a8:	d9002f17 	ldw	r4,188(sp)
   226ac:	b00b883a 	mov	r5,r22
   226b0:	b80d883a 	mov	r6,r23
   226b4:	002a2f40 	call	2a2f4 <__ssprint_r>
   226b8:	103a9e1e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   226bc:	d8c02017 	ldw	r3,128(sp)
   226c0:	da000404 	addi	r8,sp,16
   226c4:	003d8d06 	br	21cfc <_gp+0xfffe48fc>
   226c8:	04fff7c4 	movi	r19,-33
   226cc:	00bfffc4 	movi	r2,-1
   226d0:	84e6703a 	and	r19,r16,r19
   226d4:	48807226 	beq	r9,r2,228a0 <___svfprintf_internal_r+0x1a90>
   226d8:	008011c4 	movi	r2,71
   226dc:	98818026 	beq	r19,r2,22ce0 <___svfprintf_internal_r+0x1ed0>
   226e0:	d9003817 	ldw	r4,224(sp)
   226e4:	e0c04014 	ori	r3,fp,256
   226e8:	d8c02d15 	stw	r3,180(sp)
   226ec:	20017f16 	blt	r4,zero,22cec <___svfprintf_internal_r+0x1edc>
   226f0:	dc403817 	ldw	r17,224(sp)
   226f4:	d8002a05 	stb	zero,168(sp)
   226f8:	00801984 	movi	r2,102
   226fc:	8080ad26 	beq	r16,r2,229b4 <___svfprintf_internal_r+0x1ba4>
   22700:	00801184 	movi	r2,70
   22704:	8080ab26 	beq	r16,r2,229b4 <___svfprintf_internal_r+0x1ba4>
   22708:	00801144 	movi	r2,69
   2270c:	98818426 	beq	r19,r2,22d20 <___svfprintf_internal_r+0x1f10>
   22710:	482b883a 	mov	r21,r9
   22714:	d8802604 	addi	r2,sp,152
   22718:	d8800115 	stw	r2,4(sp)
   2271c:	d9002f17 	ldw	r4,188(sp)
   22720:	d8802504 	addi	r2,sp,148
   22724:	d9403717 	ldw	r5,220(sp)
   22728:	d8800215 	stw	r2,8(sp)
   2272c:	d8802104 	addi	r2,sp,132
   22730:	dd400015 	stw	r21,0(sp)
   22734:	d8800315 	stw	r2,12(sp)
   22738:	880d883a 	mov	r6,r17
   2273c:	01c00084 	movi	r7,2
   22740:	da004015 	stw	r8,256(sp)
   22744:	da403f15 	stw	r9,252(sp)
   22748:	00254280 	call	25428 <_dtoa_r>
   2274c:	d8803115 	stw	r2,196(sp)
   22750:	008019c4 	movi	r2,103
   22754:	da004017 	ldw	r8,256(sp)
   22758:	da403f17 	ldw	r9,252(sp)
   2275c:	80800226 	beq	r16,r2,22768 <___svfprintf_internal_r+0x1958>
   22760:	008011c4 	movi	r2,71
   22764:	8080a51e 	bne	r16,r2,229fc <___svfprintf_internal_r+0x1bec>
   22768:	e080004c 	andi	r2,fp,1
   2276c:	10017226 	beq	r2,zero,22d38 <___svfprintf_internal_r+0x1f28>
   22770:	d8c03117 	ldw	r3,196(sp)
   22774:	1d55883a 	add	r10,r3,r21
   22778:	d9003717 	ldw	r4,220(sp)
   2277c:	880b883a 	mov	r5,r17
   22780:	000d883a 	mov	r6,zero
   22784:	000f883a 	mov	r7,zero
   22788:	da004015 	stw	r8,256(sp)
   2278c:	da403f15 	stw	r9,252(sp)
   22790:	da803e15 	stw	r10,248(sp)
   22794:	002f5000 	call	2f500 <__eqdf2>
   22798:	da004017 	ldw	r8,256(sp)
   2279c:	da403f17 	ldw	r9,252(sp)
   227a0:	da803e17 	ldw	r10,248(sp)
   227a4:	1000fd26 	beq	r2,zero,22b9c <___svfprintf_internal_r+0x1d8c>
   227a8:	d8802117 	ldw	r2,132(sp)
   227ac:	1280062e 	bgeu	r2,r10,227c8 <___svfprintf_internal_r+0x19b8>
   227b0:	01000c04 	movi	r4,48
   227b4:	10c00044 	addi	r3,r2,1
   227b8:	d8c02115 	stw	r3,132(sp)
   227bc:	11000005 	stb	r4,0(r2)
   227c0:	d8802117 	ldw	r2,132(sp)
   227c4:	12bffb36 	bltu	r2,r10,227b4 <_gp+0xfffe53b4>
   227c8:	d8c03117 	ldw	r3,196(sp)
   227cc:	10c5c83a 	sub	r2,r2,r3
   227d0:	d8803315 	stw	r2,204(sp)
   227d4:	008011c4 	movi	r2,71
   227d8:	9880e226 	beq	r19,r2,22b64 <___svfprintf_internal_r+0x1d54>
   227dc:	00801944 	movi	r2,101
   227e0:	1401a30e 	bge	r2,r16,22e70 <___svfprintf_internal_r+0x2060>
   227e4:	d8c02617 	ldw	r3,152(sp)
   227e8:	00801984 	movi	r2,102
   227ec:	d8c03415 	stw	r3,208(sp)
   227f0:	80815326 	beq	r16,r2,22d40 <___svfprintf_internal_r+0x1f30>
   227f4:	d8c03417 	ldw	r3,208(sp)
   227f8:	d9003317 	ldw	r4,204(sp)
   227fc:	19013f16 	blt	r3,r4,22cfc <___svfprintf_internal_r+0x1eec>
   22800:	e080004c 	andi	r2,fp,1
   22804:	10014826 	beq	r2,zero,22d28 <___svfprintf_internal_r+0x1f18>
   22808:	d8c03417 	ldw	r3,208(sp)
   2280c:	1c400044 	addi	r17,r3,1
   22810:	8839883a 	mov	fp,r17
   22814:	88014016 	blt	r17,zero,22d18 <___svfprintf_internal_r+0x1f08>
   22818:	dd402a07 	ldb	r21,168(sp)
   2281c:	a800c61e 	bne	r21,zero,22b38 <___svfprintf_internal_r+0x1d28>
   22820:	df002a15 	stw	fp,168(sp)
   22824:	dcc02783 	ldbu	r19,158(sp)
   22828:	df002d17 	ldw	fp,180(sp)
   2282c:	d8003215 	stw	zero,200(sp)
   22830:	dc802d15 	stw	r18,180(sp)
   22834:	003ab906 	br	2131c <_gp+0xfffe3f1c>
   22838:	010000f4 	movhi	r4,3
   2283c:	210d8804 	addi	r4,r4,13856
   22840:	d9003115 	stw	r4,196(sp)
   22844:	003bbe06 	br	21740 <_gp+0xfffe4340>
   22848:	d9002f17 	ldw	r4,188(sp)
   2284c:	04001004 	movi	r16,64
   22850:	800b883a 	mov	r5,r16
   22854:	0027e1c0 	call	27e1c <_malloc_r>
   22858:	b0800015 	stw	r2,0(r22)
   2285c:	b0800415 	stw	r2,16(r22)
   22860:	10017c26 	beq	r2,zero,22e54 <___svfprintf_internal_r+0x2044>
   22864:	b4000515 	stw	r16,20(r22)
   22868:	00398306 	br	20e78 <_gp+0xfffe3a78>
   2286c:	014000f4 	movhi	r5,3
   22870:	294d8b04 	addi	r5,r5,13868
   22874:	d9403115 	stw	r5,196(sp)
   22878:	003eef06 	br	22438 <_gp+0xfffe5038>
   2287c:	d9002f17 	ldw	r4,188(sp)
   22880:	b00b883a 	mov	r5,r22
   22884:	b80d883a 	mov	r6,r23
   22888:	002a2f40 	call	2a2f4 <__ssprint_r>
   2288c:	103a291e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22890:	dc002617 	ldw	r16,152(sp)
   22894:	d8c02017 	ldw	r3,128(sp)
   22898:	da000404 	addi	r8,sp,16
   2289c:	003f4a06 	br	225c8 <_gp+0xfffe51c8>
   228a0:	02400184 	movi	r9,6
   228a4:	003f8e06 	br	226e0 <_gp+0xfffe52e0>
   228a8:	d8c03117 	ldw	r3,196(sp)
   228ac:	b8e3c83a 	sub	r17,r23,r3
   228b0:	003a9506 	br	21308 <_gp+0xfffe3f08>
   228b4:	d8c02d17 	ldw	r3,180(sp)
   228b8:	002b883a 	mov	r21,zero
   228bc:	00800044 	movi	r2,1
   228c0:	1c800017 	ldw	r18,0(r3)
   228c4:	18c00104 	addi	r3,r3,4
   228c8:	d8c02d15 	stw	r3,180(sp)
   228cc:	9007883a 	mov	r3,r18
   228d0:	003bb406 	br	217a4 <_gp+0xfffe43a4>
   228d4:	d9002d17 	ldw	r4,180(sp)
   228d8:	002b883a 	mov	r21,zero
   228dc:	0005883a 	mov	r2,zero
   228e0:	24800017 	ldw	r18,0(r4)
   228e4:	21000104 	addi	r4,r4,4
   228e8:	d9002d15 	stw	r4,180(sp)
   228ec:	9007883a 	mov	r3,r18
   228f0:	003bac06 	br	217a4 <_gp+0xfffe43a4>
   228f4:	1c800017 	ldw	r18,0(r3)
   228f8:	d8c02d17 	ldw	r3,180(sp)
   228fc:	902bd7fa 	srai	r21,r18,31
   22900:	18c00104 	addi	r3,r3,4
   22904:	d8c02d15 	stw	r3,180(sp)
   22908:	a805883a 	mov	r2,r21
   2290c:	003a5706 	br	2126c <_gp+0xfffe3e6c>
   22910:	d9402d17 	ldw	r5,180(sp)
   22914:	14800017 	ldw	r18,0(r2)
   22918:	002b883a 	mov	r21,zero
   2291c:	29400104 	addi	r5,r5,4
   22920:	d9402d15 	stw	r5,180(sp)
   22924:	003c0806 	br	21948 <_gp+0xfffe4548>
   22928:	e080100c 	andi	r2,fp,64
   2292c:	10009426 	beq	r2,zero,22b80 <___svfprintf_internal_r+0x1d70>
   22930:	d9002d17 	ldw	r4,180(sp)
   22934:	d9403017 	ldw	r5,192(sp)
   22938:	20800017 	ldw	r2,0(r4)
   2293c:	21000104 	addi	r4,r4,4
   22940:	d9002d15 	stw	r4,180(sp)
   22944:	1140000d 	sth	r5,0(r2)
   22948:	00395d06 	br	20ec0 <_gp+0xfffe3ac0>
   2294c:	d9002f17 	ldw	r4,188(sp)
   22950:	b00b883a 	mov	r5,r22
   22954:	b80d883a 	mov	r6,r23
   22958:	002a2f40 	call	2a2f4 <__ssprint_r>
   2295c:	1039f51e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22960:	d8c02017 	ldw	r3,128(sp)
   22964:	d8801f17 	ldw	r2,124(sp)
   22968:	da000404 	addi	r8,sp,16
   2296c:	d9403317 	ldw	r5,204(sp)
   22970:	d9003117 	ldw	r4,196(sp)
   22974:	10800044 	addi	r2,r2,1
   22978:	28c7883a 	add	r3,r5,r3
   2297c:	41000015 	stw	r4,0(r8)
   22980:	41400115 	stw	r5,4(r8)
   22984:	d8c02015 	stw	r3,128(sp)
   22988:	d8801f15 	stw	r2,124(sp)
   2298c:	010001c4 	movi	r4,7
   22990:	20bb060e 	bge	r4,r2,215ac <_gp+0xfffe41ac>
   22994:	003d8306 	br	21fa4 <_gp+0xfffe4ba4>
   22998:	da004015 	stw	r8,256(sp)
   2299c:	0020d780 	call	20d78 <strlen>
   229a0:	1023883a 	mov	r17,r2
   229a4:	da004017 	ldw	r8,256(sp)
   229a8:	883c290e 	bge	r17,zero,21a50 <_gp+0xfffe4650>
   229ac:	0005883a 	mov	r2,zero
   229b0:	003c2706 	br	21a50 <_gp+0xfffe4650>
   229b4:	d8802604 	addi	r2,sp,152
   229b8:	d8800115 	stw	r2,4(sp)
   229bc:	d9002f17 	ldw	r4,188(sp)
   229c0:	d8802504 	addi	r2,sp,148
   229c4:	d9403717 	ldw	r5,220(sp)
   229c8:	d8800215 	stw	r2,8(sp)
   229cc:	d8802104 	addi	r2,sp,132
   229d0:	da400015 	stw	r9,0(sp)
   229d4:	d8800315 	stw	r2,12(sp)
   229d8:	880d883a 	mov	r6,r17
   229dc:	01c000c4 	movi	r7,3
   229e0:	da004015 	stw	r8,256(sp)
   229e4:	da403f15 	stw	r9,252(sp)
   229e8:	00254280 	call	25428 <_dtoa_r>
   229ec:	da403f17 	ldw	r9,252(sp)
   229f0:	da004017 	ldw	r8,256(sp)
   229f4:	d8803115 	stw	r2,196(sp)
   229f8:	482b883a 	mov	r21,r9
   229fc:	d8c03117 	ldw	r3,196(sp)
   22a00:	00801184 	movi	r2,70
   22a04:	1d55883a 	add	r10,r3,r21
   22a08:	98bf5b1e 	bne	r19,r2,22778 <_gp+0xfffe5378>
   22a0c:	19000007 	ldb	r4,0(r3)
   22a10:	00800c04 	movi	r2,48
   22a14:	2080d826 	beq	r4,r2,22d78 <___svfprintf_internal_r+0x1f68>
   22a18:	d8c02617 	ldw	r3,152(sp)
   22a1c:	50d5883a 	add	r10,r10,r3
   22a20:	003f5506 	br	22778 <_gp+0xfffe5378>
   22a24:	010000f4 	movhi	r4,3
   22a28:	210d9c84 	addi	r4,r4,13938
   22a2c:	d9003615 	stw	r4,216(sp)
   22a30:	003a7706 	br	21410 <_gp+0xfffe4010>
   22a34:	0023883a 	mov	r17,zero
   22a38:	003da306 	br	220c8 <_gp+0xfffe4cc8>
   22a3c:	d9002f17 	ldw	r4,188(sp)
   22a40:	b00b883a 	mov	r5,r22
   22a44:	b80d883a 	mov	r6,r23
   22a48:	002a2f40 	call	2a2f4 <__ssprint_r>
   22a4c:	1039b91e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22a50:	d8c02017 	ldw	r3,128(sp)
   22a54:	da000404 	addi	r8,sp,16
   22a58:	003d9a06 	br	220c4 <_gp+0xfffe4cc4>
   22a5c:	d9002f17 	ldw	r4,188(sp)
   22a60:	b00b883a 	mov	r5,r22
   22a64:	b80d883a 	mov	r6,r23
   22a68:	002a2f40 	call	2a2f4 <__ssprint_r>
   22a6c:	1039b11e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22a70:	d8802617 	ldw	r2,152(sp)
   22a74:	d8c02017 	ldw	r3,128(sp)
   22a78:	da000404 	addi	r8,sp,16
   22a7c:	003e0c06 	br	222b0 <_gp+0xfffe4eb0>
   22a80:	010000f4 	movhi	r4,3
   22a84:	210d9884 	addi	r4,r4,13922
   22a88:	d9002b15 	stw	r4,172(sp)
   22a8c:	d9002b17 	ldw	r4,172(sp)
   22a90:	1c07883a 	add	r3,r3,r16
   22a94:	10800044 	addi	r2,r2,1
   22a98:	41000015 	stw	r4,0(r8)
   22a9c:	44000115 	stw	r16,4(r8)
   22aa0:	d8c02015 	stw	r3,128(sp)
   22aa4:	d8801f15 	stw	r2,124(sp)
   22aa8:	010001c4 	movi	r4,7
   22aac:	20bfa716 	blt	r4,r2,2294c <_gp+0xfffe554c>
   22ab0:	42000204 	addi	r8,r8,8
   22ab4:	003fad06 	br	2296c <_gp+0xfffe556c>
   22ab8:	d9002f17 	ldw	r4,188(sp)
   22abc:	b00b883a 	mov	r5,r22
   22ac0:	b80d883a 	mov	r6,r23
   22ac4:	002a2f40 	call	2a2f4 <__ssprint_r>
   22ac8:	10399a1e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22acc:	d8802617 	ldw	r2,152(sp)
   22ad0:	d9403317 	ldw	r5,204(sp)
   22ad4:	d8c02017 	ldw	r3,128(sp)
   22ad8:	da000404 	addi	r8,sp,16
   22adc:	2885c83a 	sub	r2,r5,r2
   22ae0:	003e0406 	br	222f4 <_gp+0xfffe4ef4>
   22ae4:	00800184 	movi	r2,6
   22ae8:	1240012e 	bgeu	r2,r9,22af0 <___svfprintf_internal_r+0x1ce0>
   22aec:	1013883a 	mov	r9,r2
   22af0:	4823883a 	mov	r17,r9
   22af4:	4805883a 	mov	r2,r9
   22af8:	4800b616 	blt	r9,zero,22dd4 <___svfprintf_internal_r+0x1fc4>
   22afc:	014000f4 	movhi	r5,3
   22b00:	294d9604 	addi	r5,r5,13912
   22b04:	d8802a15 	stw	r2,168(sp)
   22b08:	dc802d15 	stw	r18,180(sp)
   22b0c:	d8003215 	stw	zero,200(sp)
   22b10:	d8003415 	stw	zero,208(sp)
   22b14:	d9403115 	stw	r5,196(sp)
   22b18:	0005883a 	mov	r2,zero
   22b1c:	003a0606 	br	21338 <_gp+0xfffe3f38>
   22b20:	0021883a 	mov	r16,zero
   22b24:	003df406 	br	222f8 <_gp+0xfffe4ef8>
   22b28:	014000f4 	movhi	r5,3
   22b2c:	294d9c84 	addi	r5,r5,13938
   22b30:	d9403615 	stw	r5,216(sp)
   22b34:	003ac306 	br	21644 <_gp+0xfffe4244>
   22b38:	00800b44 	movi	r2,45
   22b3c:	d8802785 	stb	r2,158(sp)
   22b40:	df002a15 	stw	fp,168(sp)
   22b44:	d8003215 	stw	zero,200(sp)
   22b48:	df002d17 	ldw	fp,180(sp)
   22b4c:	00800b44 	movi	r2,45
   22b50:	dc802d15 	stw	r18,180(sp)
   22b54:	0039f506 	br	2132c <_gp+0xfffe3f2c>
   22b58:	04c00b44 	movi	r19,45
   22b5c:	dcc02785 	stb	r19,158(sp)
   22b60:	003af206 	br	2172c <_gp+0xfffe432c>
   22b64:	d8c02617 	ldw	r3,152(sp)
   22b68:	00bfff44 	movi	r2,-3
   22b6c:	18801816 	blt	r3,r2,22bd0 <___svfprintf_internal_r+0x1dc0>
   22b70:	48c01716 	blt	r9,r3,22bd0 <___svfprintf_internal_r+0x1dc0>
   22b74:	d8c03415 	stw	r3,208(sp)
   22b78:	040019c4 	movi	r16,103
   22b7c:	003f1d06 	br	227f4 <_gp+0xfffe53f4>
   22b80:	d8c02d17 	ldw	r3,180(sp)
   22b84:	d9003017 	ldw	r4,192(sp)
   22b88:	18800017 	ldw	r2,0(r3)
   22b8c:	18c00104 	addi	r3,r3,4
   22b90:	d8c02d15 	stw	r3,180(sp)
   22b94:	11000015 	stw	r4,0(r2)
   22b98:	0038c906 	br	20ec0 <_gp+0xfffe3ac0>
   22b9c:	5005883a 	mov	r2,r10
   22ba0:	003f0906 	br	227c8 <_gp+0xfffe53c8>
   22ba4:	010000f4 	movhi	r4,3
   22ba8:	210d9884 	addi	r4,r4,13922
   22bac:	d9002b15 	stw	r4,172(sp)
   22bb0:	003c9a06 	br	21e1c <_gp+0xfffe4a1c>
   22bb4:	da402a15 	stw	r9,168(sp)
   22bb8:	dcc02783 	ldbu	r19,158(sp)
   22bbc:	4823883a 	mov	r17,r9
   22bc0:	dc802d15 	stw	r18,180(sp)
   22bc4:	d8003215 	stw	zero,200(sp)
   22bc8:	d8003415 	stw	zero,208(sp)
   22bcc:	0039d306 	br	2131c <_gp+0xfffe3f1c>
   22bd0:	843fff84 	addi	r16,r16,-2
   22bd4:	1d7fffc4 	addi	r21,r3,-1
   22bd8:	dd402615 	stw	r21,152(sp)
   22bdc:	dc0022c5 	stb	r16,139(sp)
   22be0:	a8008f16 	blt	r21,zero,22e20 <___svfprintf_internal_r+0x2010>
   22be4:	00800ac4 	movi	r2,43
   22be8:	d8802305 	stb	r2,140(sp)
   22bec:	00800244 	movi	r2,9
   22bf0:	1540710e 	bge	r2,r21,22db8 <___svfprintf_internal_r+0x1fa8>
   22bf4:	dcc022c4 	addi	r19,sp,139
   22bf8:	dc002b15 	stw	r16,172(sp)
   22bfc:	4023883a 	mov	r17,r8
   22c00:	9821883a 	mov	r16,r19
   22c04:	a809883a 	mov	r4,r21
   22c08:	01400284 	movi	r5,10
   22c0c:	002e2500 	call	2e250 <__modsi3>
   22c10:	10800c04 	addi	r2,r2,48
   22c14:	843fffc4 	addi	r16,r16,-1
   22c18:	a809883a 	mov	r4,r21
   22c1c:	01400284 	movi	r5,10
   22c20:	80800005 	stb	r2,0(r16)
   22c24:	002e1fc0 	call	2e1fc <__divsi3>
   22c28:	01000244 	movi	r4,9
   22c2c:	102b883a 	mov	r21,r2
   22c30:	20bff416 	blt	r4,r2,22c04 <_gp+0xfffe5804>
   22c34:	8811883a 	mov	r8,r17
   22c38:	10800c04 	addi	r2,r2,48
   22c3c:	8023883a 	mov	r17,r16
   22c40:	897fffc4 	addi	r5,r17,-1
   22c44:	88bfffc5 	stb	r2,-1(r17)
   22c48:	dc002b17 	ldw	r16,172(sp)
   22c4c:	2cc08a2e 	bgeu	r5,r19,22e78 <___svfprintf_internal_r+0x2068>
   22c50:	d9802384 	addi	r6,sp,142
   22c54:	344dc83a 	sub	r6,r6,r17
   22c58:	d9002344 	addi	r4,sp,141
   22c5c:	998d883a 	add	r6,r19,r6
   22c60:	00000106 	br	22c68 <___svfprintf_internal_r+0x1e58>
   22c64:	28800003 	ldbu	r2,0(r5)
   22c68:	20800005 	stb	r2,0(r4)
   22c6c:	21000044 	addi	r4,r4,1
   22c70:	29400044 	addi	r5,r5,1
   22c74:	21bffb1e 	bne	r4,r6,22c64 <_gp+0xfffe5864>
   22c78:	d8802304 	addi	r2,sp,140
   22c7c:	1445c83a 	sub	r2,r2,r17
   22c80:	d9402344 	addi	r5,sp,141
   22c84:	2885883a 	add	r2,r5,r2
   22c88:	14e7c83a 	sub	r19,r2,r19
   22c8c:	d8803317 	ldw	r2,204(sp)
   22c90:	d8c03317 	ldw	r3,204(sp)
   22c94:	dcc03a15 	stw	r19,232(sp)
   22c98:	14e3883a 	add	r17,r2,r19
   22c9c:	00800044 	movi	r2,1
   22ca0:	10c0690e 	bge	r2,r3,22e48 <___svfprintf_internal_r+0x2038>
   22ca4:	8c400044 	addi	r17,r17,1
   22ca8:	8839883a 	mov	fp,r17
   22cac:	88006416 	blt	r17,zero,22e40 <___svfprintf_internal_r+0x2030>
   22cb0:	d8003415 	stw	zero,208(sp)
   22cb4:	003ed806 	br	22818 <_gp+0xfffe5418>
   22cb8:	d9002f17 	ldw	r4,188(sp)
   22cbc:	b00b883a 	mov	r5,r22
   22cc0:	b80d883a 	mov	r6,r23
   22cc4:	002a2f40 	call	2a2f4 <__ssprint_r>
   22cc8:	10391a1e 	bne	r2,zero,21134 <_gp+0xfffe3d34>
   22ccc:	dc002617 	ldw	r16,152(sp)
   22cd0:	d8c02017 	ldw	r3,128(sp)
   22cd4:	d8801f17 	ldw	r2,124(sp)
   22cd8:	da000404 	addi	r8,sp,16
   22cdc:	003e4b06 	br	2260c <_gp+0xfffe520c>
   22ce0:	483e7f1e 	bne	r9,zero,226e0 <_gp+0xfffe52e0>
   22ce4:	8813883a 	mov	r9,r17
   22ce8:	003e7d06 	br	226e0 <_gp+0xfffe52e0>
   22cec:	00c00b44 	movi	r3,45
   22cf0:	2460003c 	xorhi	r17,r4,32768
   22cf4:	d8c02a05 	stb	r3,168(sp)
   22cf8:	003e7f06 	br	226f8 <_gp+0xfffe52f8>
   22cfc:	d8c03417 	ldw	r3,208(sp)
   22d00:	00c03e0e 	bge	zero,r3,22dfc <___svfprintf_internal_r+0x1fec>
   22d04:	04400044 	movi	r17,1
   22d08:	d9003317 	ldw	r4,204(sp)
   22d0c:	8923883a 	add	r17,r17,r4
   22d10:	8839883a 	mov	fp,r17
   22d14:	883ec00e 	bge	r17,zero,22818 <_gp+0xfffe5418>
   22d18:	0039883a 	mov	fp,zero
   22d1c:	003ebe06 	br	22818 <_gp+0xfffe5418>
   22d20:	4d400044 	addi	r21,r9,1
   22d24:	003e7b06 	br	22714 <_gp+0xfffe5314>
   22d28:	1839883a 	mov	fp,r3
   22d2c:	18004e16 	blt	r3,zero,22e68 <___svfprintf_internal_r+0x2058>
   22d30:	dc403417 	ldw	r17,208(sp)
   22d34:	003eb806 	br	22818 <_gp+0xfffe5418>
   22d38:	d8802117 	ldw	r2,132(sp)
   22d3c:	003ea206 	br	227c8 <_gp+0xfffe53c8>
   22d40:	00c0310e 	bge	zero,r3,22e08 <___svfprintf_internal_r+0x1ff8>
   22d44:	4800021e 	bne	r9,zero,22d50 <___svfprintf_internal_r+0x1f40>
   22d48:	e080004c 	andi	r2,fp,1
   22d4c:	103ff626 	beq	r2,zero,22d28 <_gp+0xfffe5928>
   22d50:	d8c03417 	ldw	r3,208(sp)
   22d54:	4a400044 	addi	r9,r9,1
   22d58:	1a63883a 	add	r17,r3,r9
   22d5c:	8839883a 	mov	fp,r17
   22d60:	883ead0e 	bge	r17,zero,22818 <_gp+0xfffe5418>
   22d64:	003fec06 	br	22d18 <_gp+0xfffe5918>
   22d68:	010000f4 	movhi	r4,3
   22d6c:	210d9884 	addi	r4,r4,13922
   22d70:	d9002b15 	stw	r4,172(sp)
   22d74:	003d2006 	br	221f8 <_gp+0xfffe4df8>
   22d78:	d9003717 	ldw	r4,220(sp)
   22d7c:	880b883a 	mov	r5,r17
   22d80:	000d883a 	mov	r6,zero
   22d84:	000f883a 	mov	r7,zero
   22d88:	da004015 	stw	r8,256(sp)
   22d8c:	da403f15 	stw	r9,252(sp)
   22d90:	da803e15 	stw	r10,248(sp)
   22d94:	002f5000 	call	2f500 <__eqdf2>
   22d98:	da004017 	ldw	r8,256(sp)
   22d9c:	da403f17 	ldw	r9,252(sp)
   22da0:	da803e17 	ldw	r10,248(sp)
   22da4:	103f1c26 	beq	r2,zero,22a18 <_gp+0xfffe5618>
   22da8:	00800044 	movi	r2,1
   22dac:	1547c83a 	sub	r3,r2,r21
   22db0:	d8c02615 	stw	r3,152(sp)
   22db4:	003f1906 	br	22a1c <_gp+0xfffe561c>
   22db8:	00800c04 	movi	r2,48
   22dbc:	a8c00c04 	addi	r3,r21,48
   22dc0:	d8802345 	stb	r2,141(sp)
   22dc4:	d8c02385 	stb	r3,142(sp)
   22dc8:	d88023c4 	addi	r2,sp,143
   22dcc:	dcc022c4 	addi	r19,sp,139
   22dd0:	003fad06 	br	22c88 <_gp+0xfffe5888>
   22dd4:	0005883a 	mov	r2,zero
   22dd8:	003f4806 	br	22afc <_gp+0xfffe56fc>
   22ddc:	d9402d17 	ldw	r5,180(sp)
   22de0:	2a400017 	ldw	r9,0(r5)
   22de4:	28c00104 	addi	r3,r5,4
   22de8:	d8c02d15 	stw	r3,180(sp)
   22dec:	483e2c0e 	bge	r9,zero,226a0 <_gp+0xfffe52a0>
   22df0:	027fffc4 	movi	r9,-1
   22df4:	e4000047 	ldb	r16,1(fp)
   22df8:	00385c06 	br	20f6c <_gp+0xfffe3b6c>
   22dfc:	04400084 	movi	r17,2
   22e00:	88e3c83a 	sub	r17,r17,r3
   22e04:	003fc006 	br	22d08 <_gp+0xfffe5908>
   22e08:	4800091e 	bne	r9,zero,22e30 <___svfprintf_internal_r+0x2020>
   22e0c:	e080004c 	andi	r2,fp,1
   22e10:	1000071e 	bne	r2,zero,22e30 <___svfprintf_internal_r+0x2020>
   22e14:	07000044 	movi	fp,1
   22e18:	e023883a 	mov	r17,fp
   22e1c:	003e7e06 	br	22818 <_gp+0xfffe5418>
   22e20:	00800b44 	movi	r2,45
   22e24:	056bc83a 	sub	r21,zero,r21
   22e28:	d8802305 	stb	r2,140(sp)
   22e2c:	003f6f06 	br	22bec <_gp+0xfffe57ec>
   22e30:	4c400084 	addi	r17,r9,2
   22e34:	8839883a 	mov	fp,r17
   22e38:	883e770e 	bge	r17,zero,22818 <_gp+0xfffe5418>
   22e3c:	003fb606 	br	22d18 <_gp+0xfffe5918>
   22e40:	0039883a 	mov	fp,zero
   22e44:	003f9a06 	br	22cb0 <_gp+0xfffe58b0>
   22e48:	e084703a 	and	r2,fp,r2
   22e4c:	103f9626 	beq	r2,zero,22ca8 <_gp+0xfffe58a8>
   22e50:	003f9406 	br	22ca4 <_gp+0xfffe58a4>
   22e54:	d8c02f17 	ldw	r3,188(sp)
   22e58:	00800304 	movi	r2,12
   22e5c:	18800015 	stw	r2,0(r3)
   22e60:	00bfffc4 	movi	r2,-1
   22e64:	0038b706 	br	21144 <_gp+0xfffe3d44>
   22e68:	0039883a 	mov	fp,zero
   22e6c:	003fb006 	br	22d30 <_gp+0xfffe5930>
   22e70:	d8c02617 	ldw	r3,152(sp)
   22e74:	003f5706 	br	22bd4 <_gp+0xfffe57d4>
   22e78:	d8802344 	addi	r2,sp,141
   22e7c:	003f8206 	br	22c88 <_gp+0xfffe5888>

00022e80 <___vfprintf_internal_r>:
   22e80:	defeb604 	addi	sp,sp,-1320
   22e84:	dfc14915 	stw	ra,1316(sp)
   22e88:	ddc14715 	stw	r23,1308(sp)
   22e8c:	dd814615 	stw	r22,1304(sp)
   22e90:	202f883a 	mov	r23,r4
   22e94:	282d883a 	mov	r22,r5
   22e98:	d9812a15 	stw	r6,1192(sp)
   22e9c:	d9c12d15 	stw	r7,1204(sp)
   22ea0:	df014815 	stw	fp,1312(sp)
   22ea4:	dd414515 	stw	r21,1300(sp)
   22ea8:	dd014415 	stw	r20,1296(sp)
   22eac:	dcc14315 	stw	r19,1292(sp)
   22eb0:	dc814215 	stw	r18,1288(sp)
   22eb4:	dc414115 	stw	r17,1284(sp)
   22eb8:	dc014015 	stw	r16,1280(sp)
   22ebc:	0027c300 	call	27c30 <_localeconv_r>
   22ec0:	10800017 	ldw	r2,0(r2)
   22ec4:	1009883a 	mov	r4,r2
   22ec8:	d8813515 	stw	r2,1236(sp)
   22ecc:	0020d780 	call	20d78 <strlen>
   22ed0:	d8813815 	stw	r2,1248(sp)
   22ed4:	b8000226 	beq	r23,zero,22ee0 <___vfprintf_internal_r+0x60>
   22ed8:	b8800e17 	ldw	r2,56(r23)
   22edc:	10010526 	beq	r2,zero,232f4 <___vfprintf_internal_r+0x474>
   22ee0:	b0c0030b 	ldhu	r3,12(r22)
   22ee4:	1908000c 	andi	r4,r3,8192
   22ee8:	1805883a 	mov	r2,r3
   22eec:	2000071e 	bne	r4,zero,22f0c <___vfprintf_internal_r+0x8c>
   22ef0:	b1001917 	ldw	r4,100(r22)
   22ef4:	18880014 	ori	r2,r3,8192
   22ef8:	00f7ffc4 	movi	r3,-8193
   22efc:	20c8703a 	and	r4,r4,r3
   22f00:	b080030d 	sth	r2,12(r22)
   22f04:	1007883a 	mov	r3,r2
   22f08:	b1001915 	stw	r4,100(r22)
   22f0c:	1100020c 	andi	r4,r2,8
   22f10:	2000a826 	beq	r4,zero,231b4 <___vfprintf_internal_r+0x334>
   22f14:	b1000417 	ldw	r4,16(r22)
   22f18:	2000a626 	beq	r4,zero,231b4 <___vfprintf_internal_r+0x334>
   22f1c:	1080068c 	andi	r2,r2,26
   22f20:	01000284 	movi	r4,10
   22f24:	1100ac26 	beq	r2,r4,231d8 <___vfprintf_internal_r+0x358>
   22f28:	d8c10e04 	addi	r3,sp,1080
   22f2c:	d9010dc4 	addi	r4,sp,1079
   22f30:	d9400404 	addi	r5,sp,16
   22f34:	050000f4 	movhi	r20,3
   22f38:	1905c83a 	sub	r2,r3,r4
   22f3c:	a50da084 	addi	r20,r20,13954
   22f40:	d8c12815 	stw	r3,1184(sp)
   22f44:	d9012915 	stw	r4,1188(sp)
   22f48:	d9411e15 	stw	r5,1144(sp)
   22f4c:	d8012015 	stw	zero,1152(sp)
   22f50:	d8011f15 	stw	zero,1148(sp)
   22f54:	d8013315 	stw	zero,1228(sp)
   22f58:	d8013715 	stw	zero,1244(sp)
   22f5c:	d8013915 	stw	zero,1252(sp)
   22f60:	d8013b15 	stw	zero,1260(sp)
   22f64:	d8013a15 	stw	zero,1256(sp)
   22f68:	d8012f15 	stw	zero,1212(sp)
   22f6c:	2811883a 	mov	r8,r5
   22f70:	d8813c15 	stw	r2,1264(sp)
   22f74:	d8c12a17 	ldw	r3,1192(sp)
   22f78:	18800007 	ldb	r2,0(r3)
   22f7c:	10021326 	beq	r2,zero,237cc <___vfprintf_internal_r+0x94c>
   22f80:	00c00944 	movi	r3,37
   22f84:	dc012a17 	ldw	r16,1192(sp)
   22f88:	10c0021e 	bne	r2,r3,22f94 <___vfprintf_internal_r+0x114>
   22f8c:	00001606 	br	22fe8 <___vfprintf_internal_r+0x168>
   22f90:	10c08526 	beq	r2,r3,231a8 <___vfprintf_internal_r+0x328>
   22f94:	84000044 	addi	r16,r16,1
   22f98:	80800007 	ldb	r2,0(r16)
   22f9c:	103ffc1e 	bne	r2,zero,22f90 <_gp+0xfffe5b90>
   22fa0:	d9012a17 	ldw	r4,1192(sp)
   22fa4:	8123c83a 	sub	r17,r16,r4
   22fa8:	88000f26 	beq	r17,zero,22fe8 <___vfprintf_internal_r+0x168>
   22fac:	d8812a17 	ldw	r2,1192(sp)
   22fb0:	d8c12017 	ldw	r3,1152(sp)
   22fb4:	44400115 	stw	r17,4(r8)
   22fb8:	40800015 	stw	r2,0(r8)
   22fbc:	d8811f17 	ldw	r2,1148(sp)
   22fc0:	1c47883a 	add	r3,r3,r17
   22fc4:	d8c12015 	stw	r3,1152(sp)
   22fc8:	10800044 	addi	r2,r2,1
   22fcc:	d8811f15 	stw	r2,1148(sp)
   22fd0:	00c001c4 	movi	r3,7
   22fd4:	1880b516 	blt	r3,r2,232ac <___vfprintf_internal_r+0x42c>
   22fd8:	42000204 	addi	r8,r8,8
   22fdc:	d8c12f17 	ldw	r3,1212(sp)
   22fe0:	1c47883a 	add	r3,r3,r17
   22fe4:	d8c12f15 	stw	r3,1212(sp)
   22fe8:	80800007 	ldb	r2,0(r16)
   22fec:	1000b626 	beq	r2,zero,232c8 <___vfprintf_internal_r+0x448>
   22ff0:	80800044 	addi	r2,r16,1
   22ff4:	84000047 	ldb	r16,1(r16)
   22ff8:	0027883a 	mov	r19,zero
   22ffc:	0039883a 	mov	fp,zero
   23000:	dcc12b05 	stb	r19,1196(sp)
   23004:	d8012785 	stb	zero,1182(sp)
   23008:	027fffc4 	movi	r9,-1
   2300c:	d8012e15 	stw	zero,1208(sp)
   23010:	04401604 	movi	r17,88
   23014:	04800244 	movi	r18,9
   23018:	da012a15 	stw	r8,1192(sp)
   2301c:	e027883a 	mov	r19,fp
   23020:	17000044 	addi	fp,r2,1
   23024:	80bff804 	addi	r2,r16,-32
   23028:	88831236 	bltu	r17,r2,23c74 <___vfprintf_internal_r+0xdf4>
   2302c:	100490ba 	slli	r2,r2,2
   23030:	010000b4 	movhi	r4,2
   23034:	210c1104 	addi	r4,r4,12356
   23038:	1105883a 	add	r2,r2,r4
   2303c:	10800017 	ldw	r2,0(r2)
   23040:	1000683a 	jmp	r2
   23044:	00023b90 	cmplti	zero,zero,2286
   23048:	00023c74 	movhi	zero,2289
   2304c:	00023c74 	movhi	zero,2289
   23050:	00023bac 	andhi	zero,zero,2286
   23054:	00023c74 	movhi	zero,2289
   23058:	00023c74 	movhi	zero,2289
   2305c:	00023c74 	movhi	zero,2289
   23060:	00023c74 	movhi	zero,2289
   23064:	00023c74 	movhi	zero,2289
   23068:	00023c74 	movhi	zero,2289
   2306c:	00023bbc 	xorhi	zero,zero,2286
   23070:	00023be4 	muli	zero,zero,2287
   23074:	00023c74 	movhi	zero,2289
   23078:	00023300 	call	2330 <__reset-0x1dcd0>
   2307c:	00023310 	cmplti	zero,zero,2252
   23080:	00023c74 	movhi	zero,2289
   23084:	00023360 	cmpeqi	zero,zero,2253
   23088:	00023370 	cmpltui	zero,zero,2253
   2308c:	00023370 	cmpltui	zero,zero,2253
   23090:	00023370 	cmpltui	zero,zero,2253
   23094:	00023370 	cmpltui	zero,zero,2253
   23098:	00023370 	cmpltui	zero,zero,2253
   2309c:	00023370 	cmpltui	zero,zero,2253
   230a0:	00023370 	cmpltui	zero,zero,2253
   230a4:	00023370 	cmpltui	zero,zero,2253
   230a8:	00023370 	cmpltui	zero,zero,2253
   230ac:	00023c74 	movhi	zero,2289
   230b0:	00023c74 	movhi	zero,2289
   230b4:	00023c74 	movhi	zero,2289
   230b8:	00023c74 	movhi	zero,2289
   230bc:	00023c74 	movhi	zero,2289
   230c0:	00023c74 	movhi	zero,2289
   230c4:	00023c74 	movhi	zero,2289
   230c8:	00023c74 	movhi	zero,2289
   230cc:	00023c74 	movhi	zero,2289
   230d0:	00023c74 	movhi	zero,2289
   230d4:	000233b4 	movhi	zero,2254
   230d8:	000237d4 	movui	zero,2271
   230dc:	00023c74 	movhi	zero,2289
   230e0:	000237d4 	movui	zero,2271
   230e4:	00023c74 	movhi	zero,2289
   230e8:	00023c74 	movhi	zero,2289
   230ec:	00023c74 	movhi	zero,2289
   230f0:	00023c74 	movhi	zero,2289
   230f4:	0002387c 	xorhi	zero,zero,2273
   230f8:	00023c74 	movhi	zero,2289
   230fc:	00023c74 	movhi	zero,2289
   23100:	0002388c 	andi	zero,zero,2274
   23104:	00023c74 	movhi	zero,2289
   23108:	00023c74 	movhi	zero,2289
   2310c:	00023c74 	movhi	zero,2289
   23110:	00023c74 	movhi	zero,2289
   23114:	00023c74 	movhi	zero,2289
   23118:	000238d0 	cmplti	zero,zero,2275
   2311c:	00023c74 	movhi	zero,2289
   23120:	00023c74 	movhi	zero,2289
   23124:	00023908 	cmpgei	zero,zero,2276
   23128:	00023c74 	movhi	zero,2289
   2312c:	00023c74 	movhi	zero,2289
   23130:	00023c74 	movhi	zero,2289
   23134:	00023c74 	movhi	zero,2289
   23138:	00023c74 	movhi	zero,2289
   2313c:	00023c74 	movhi	zero,2289
   23140:	00023c74 	movhi	zero,2289
   23144:	00023c74 	movhi	zero,2289
   23148:	00023c74 	movhi	zero,2289
   2314c:	00023c74 	movhi	zero,2289
   23150:	00023b44 	movi	zero,2285
   23154:	00023af0 	cmpltui	zero,zero,2283
   23158:	000237d4 	movui	zero,2271
   2315c:	000237d4 	movui	zero,2271
   23160:	000237d4 	movui	zero,2271
   23164:	00023b34 	movhi	zero,2284
   23168:	00023af0 	cmpltui	zero,zero,2283
   2316c:	00023c74 	movhi	zero,2289
   23170:	00023c74 	movhi	zero,2289
   23174:	00023a0c 	andi	zero,zero,2280
   23178:	00023c74 	movhi	zero,2289
   2317c:	00023a24 	muli	zero,zero,2280
   23180:	00023a64 	muli	zero,zero,2281
   23184:	00023aa4 	muli	zero,zero,2282
   23188:	00023970 	cmpltui	zero,zero,2277
   2318c:	00023c74 	movhi	zero,2289
   23190:	00023bf8 	rdprs	zero,zero,2287
   23194:	00023c74 	movhi	zero,2289
   23198:	00023980 	call	2398 <__reset-0x1dc68>
   2319c:	00023c74 	movhi	zero,2289
   231a0:	00023c74 	movhi	zero,2289
   231a4:	000239c0 	call	239c <__reset-0x1dc64>
   231a8:	d9412a17 	ldw	r5,1192(sp)
   231ac:	8163c83a 	sub	r17,r16,r5
   231b0:	003f7d06 	br	22fa8 <_gp+0xfffe5ba8>
   231b4:	b809883a 	mov	r4,r23
   231b8:	b00b883a 	mov	r5,r22
   231bc:	00250d00 	call	250d0 <__swsetup_r>
   231c0:	10002d1e 	bne	r2,zero,23278 <___vfprintf_internal_r+0x3f8>
   231c4:	b0c0030b 	ldhu	r3,12(r22)
   231c8:	01000284 	movi	r4,10
   231cc:	1805883a 	mov	r2,r3
   231d0:	1080068c 	andi	r2,r2,26
   231d4:	113f541e 	bne	r2,r4,22f28 <_gp+0xfffe5b28>
   231d8:	b080038b 	ldhu	r2,14(r22)
   231dc:	113fffcc 	andi	r4,r2,65535
   231e0:	2120001c 	xori	r4,r4,32768
   231e4:	21200004 	addi	r4,r4,-32768
   231e8:	203f4f16 	blt	r4,zero,22f28 <_gp+0xfffe5b28>
   231ec:	b2c01917 	ldw	r11,100(r22)
   231f0:	b2800717 	ldw	r10,28(r22)
   231f4:	b2400917 	ldw	r9,36(r22)
   231f8:	d9812a17 	ldw	r6,1192(sp)
   231fc:	d9c12d17 	ldw	r7,1204(sp)
   23200:	02010004 	movi	r8,1024
   23204:	18ffff4c 	andi	r3,r3,65533
   23208:	d881078d 	sth	r2,1054(sp)
   2320c:	b809883a 	mov	r4,r23
   23210:	d8800404 	addi	r2,sp,16
   23214:	d9410404 	addi	r5,sp,1040
   23218:	d8c1070d 	sth	r3,1052(sp)
   2321c:	dac11d15 	stw	r11,1140(sp)
   23220:	da810b15 	stw	r10,1068(sp)
   23224:	da410d15 	stw	r9,1076(sp)
   23228:	d8810415 	stw	r2,1040(sp)
   2322c:	d8810815 	stw	r2,1056(sp)
   23230:	da010615 	stw	r8,1048(sp)
   23234:	da010915 	stw	r8,1060(sp)
   23238:	d8010a15 	stw	zero,1064(sp)
   2323c:	0022e800 	call	22e80 <___vfprintf_internal_r>
   23240:	1021883a 	mov	r16,r2
   23244:	10000416 	blt	r2,zero,23258 <___vfprintf_internal_r+0x3d8>
   23248:	b809883a 	mov	r4,r23
   2324c:	d9410404 	addi	r5,sp,1040
   23250:	0026b500 	call	26b50 <_fflush_r>
   23254:	1007301e 	bne	r2,zero,24f18 <___vfprintf_internal_r+0x2098>
   23258:	d881070b 	ldhu	r2,1052(sp)
   2325c:	1080100c 	andi	r2,r2,64
   23260:	10000326 	beq	r2,zero,23270 <___vfprintf_internal_r+0x3f0>
   23264:	b080030b 	ldhu	r2,12(r22)
   23268:	10801014 	ori	r2,r2,64
   2326c:	b080030d 	sth	r2,12(r22)
   23270:	8005883a 	mov	r2,r16
   23274:	00000106 	br	2327c <___vfprintf_internal_r+0x3fc>
   23278:	00bfffc4 	movi	r2,-1
   2327c:	dfc14917 	ldw	ra,1316(sp)
   23280:	df014817 	ldw	fp,1312(sp)
   23284:	ddc14717 	ldw	r23,1308(sp)
   23288:	dd814617 	ldw	r22,1304(sp)
   2328c:	dd414517 	ldw	r21,1300(sp)
   23290:	dd014417 	ldw	r20,1296(sp)
   23294:	dcc14317 	ldw	r19,1292(sp)
   23298:	dc814217 	ldw	r18,1288(sp)
   2329c:	dc414117 	ldw	r17,1284(sp)
   232a0:	dc014017 	ldw	r16,1280(sp)
   232a4:	dec14a04 	addi	sp,sp,1320
   232a8:	f800283a 	ret
   232ac:	b809883a 	mov	r4,r23
   232b0:	b00b883a 	mov	r5,r22
   232b4:	d9811e04 	addi	r6,sp,1144
   232b8:	002b7880 	call	2b788 <__sprint_r>
   232bc:	1000081e 	bne	r2,zero,232e0 <___vfprintf_internal_r+0x460>
   232c0:	da000404 	addi	r8,sp,16
   232c4:	003f4506 	br	22fdc <_gp+0xfffe5bdc>
   232c8:	d8812017 	ldw	r2,1152(sp)
   232cc:	10000426 	beq	r2,zero,232e0 <___vfprintf_internal_r+0x460>
   232d0:	b809883a 	mov	r4,r23
   232d4:	b00b883a 	mov	r5,r22
   232d8:	d9811e04 	addi	r6,sp,1144
   232dc:	002b7880 	call	2b788 <__sprint_r>
   232e0:	b080030b 	ldhu	r2,12(r22)
   232e4:	1080100c 	andi	r2,r2,64
   232e8:	103fe31e 	bne	r2,zero,23278 <_gp+0xfffe5e78>
   232ec:	d8812f17 	ldw	r2,1212(sp)
   232f0:	003fe206 	br	2327c <_gp+0xfffe5e7c>
   232f4:	b809883a 	mov	r4,r23
   232f8:	002710c0 	call	2710c <__sinit>
   232fc:	003ef806 	br	22ee0 <_gp+0xfffe5ae0>
   23300:	e005883a 	mov	r2,fp
   23304:	9cc00114 	ori	r19,r19,4
   23308:	e4000007 	ldb	r16,0(fp)
   2330c:	003f4406 	br	23020 <_gp+0xfffe5c20>
   23310:	e4000007 	ldb	r16,0(fp)
   23314:	01000a84 	movi	r4,42
   23318:	e0800044 	addi	r2,fp,1
   2331c:	8106f626 	beq	r16,r4,24ef8 <___vfprintf_internal_r+0x2078>
   23320:	857ff404 	addi	r21,r16,-48
   23324:	1039883a 	mov	fp,r2
   23328:	0013883a 	mov	r9,zero
   2332c:	957f3d36 	bltu	r18,r21,23024 <_gp+0xfffe5c24>
   23330:	0009883a 	mov	r4,zero
   23334:	01400284 	movi	r5,10
   23338:	002e2bc0 	call	2e2bc <__mulsi3>
   2333c:	e4000007 	ldb	r16,0(fp)
   23340:	a889883a 	add	r4,r21,r2
   23344:	e7000044 	addi	fp,fp,1
   23348:	857ff404 	addi	r21,r16,-48
   2334c:	957ff92e 	bgeu	r18,r21,23334 <_gp+0xfffe5f34>
   23350:	2013883a 	mov	r9,r4
   23354:	203f330e 	bge	r4,zero,23024 <_gp+0xfffe5c24>
   23358:	027fffc4 	movi	r9,-1
   2335c:	003f3106 	br	23024 <_gp+0xfffe5c24>
   23360:	9cc02014 	ori	r19,r19,128
   23364:	e005883a 	mov	r2,fp
   23368:	e4000007 	ldb	r16,0(fp)
   2336c:	003f2c06 	br	23020 <_gp+0xfffe5c20>
   23370:	857ff404 	addi	r21,r16,-48
   23374:	d8012e15 	stw	zero,1208(sp)
   23378:	e021883a 	mov	r16,fp
   2337c:	0009883a 	mov	r4,zero
   23380:	da412c15 	stw	r9,1200(sp)
   23384:	01400284 	movi	r5,10
   23388:	002e2bc0 	call	2e2bc <__mulsi3>
   2338c:	81400007 	ldb	r5,0(r16)
   23390:	1549883a 	add	r4,r2,r21
   23394:	e7000044 	addi	fp,fp,1
   23398:	2d7ff404 	addi	r21,r5,-48
   2339c:	e021883a 	mov	r16,fp
   233a0:	957ff82e 	bgeu	r18,r21,23384 <_gp+0xfffe5f84>
   233a4:	2821883a 	mov	r16,r5
   233a8:	d9012e15 	stw	r4,1208(sp)
   233ac:	da412c17 	ldw	r9,1200(sp)
   233b0:	003f1c06 	br	23024 <_gp+0xfffe5c24>
   233b4:	da012a17 	ldw	r8,1192(sp)
   233b8:	df012a15 	stw	fp,1192(sp)
   233bc:	9839883a 	mov	fp,r19
   233c0:	dcc12b03 	ldbu	r19,1196(sp)
   233c4:	e7000414 	ori	fp,fp,16
   233c8:	e080080c 	andi	r2,fp,32
   233cc:	dcc12785 	stb	r19,1182(sp)
   233d0:	d8c12d17 	ldw	r3,1204(sp)
   233d4:	1001ce26 	beq	r2,zero,23b10 <___vfprintf_internal_r+0xc90>
   233d8:	d9012d17 	ldw	r4,1204(sp)
   233dc:	18800117 	ldw	r2,4(r3)
   233e0:	1c800017 	ldw	r18,0(r3)
   233e4:	21000204 	addi	r4,r4,8
   233e8:	d9012d15 	stw	r4,1204(sp)
   233ec:	102b883a 	mov	r21,r2
   233f0:	10044916 	blt	r2,zero,24518 <___vfprintf_internal_r+0x1698>
   233f4:	dcc12783 	ldbu	r19,1182(sp)
   233f8:	da413215 	stw	r9,1224(sp)
   233fc:	00800044 	movi	r2,1
   23400:	9546b03a 	or	r3,r18,r21
   23404:	48000216 	blt	r9,zero,23410 <___vfprintf_internal_r+0x590>
   23408:	013fdfc4 	movi	r4,-129
   2340c:	e138703a 	and	fp,fp,r4
   23410:	1802251e 	bne	r3,zero,23ca8 <___vfprintf_internal_r+0xe28>
   23414:	48031726 	beq	r9,zero,24074 <___vfprintf_internal_r+0x11f4>
   23418:	10803fcc 	andi	r2,r2,255
   2341c:	00c00044 	movi	r3,1
   23420:	10c24526 	beq	r2,r3,23d38 <___vfprintf_internal_r+0xeb8>
   23424:	00c00084 	movi	r3,2
   23428:	10c33426 	beq	r2,r3,240fc <___vfprintf_internal_r+0x127c>
   2342c:	d8c10e04 	addi	r3,sp,1080
   23430:	9008d0fa 	srli	r4,r18,3
   23434:	a80a977a 	slli	r5,r21,29
   23438:	a82ad0fa 	srli	r21,r21,3
   2343c:	948001cc 	andi	r18,r18,7
   23440:	90800c04 	addi	r2,r18,48
   23444:	18ffffc4 	addi	r3,r3,-1
   23448:	2924b03a 	or	r18,r5,r4
   2344c:	18800005 	stb	r2,0(r3)
   23450:	9548b03a 	or	r4,r18,r21
   23454:	203ff61e 	bne	r4,zero,23430 <_gp+0xfffe6030>
   23458:	e100004c 	andi	r4,fp,1
   2345c:	d8c13115 	stw	r3,1220(sp)
   23460:	20039a1e 	bne	r4,zero,242cc <___vfprintf_internal_r+0x144c>
   23464:	d8812817 	ldw	r2,1184(sp)
   23468:	10e3c83a 	sub	r17,r2,r3
   2346c:	8805883a 	mov	r2,r17
   23470:	8a40010e 	bge	r17,r9,23478 <___vfprintf_internal_r+0x5f8>
   23474:	4805883a 	mov	r2,r9
   23478:	d8812b15 	stw	r2,1196(sp)
   2347c:	d8013415 	stw	zero,1232(sp)
   23480:	98803fcc 	andi	r2,r19,255
   23484:	1080201c 	xori	r2,r2,128
   23488:	10bfe004 	addi	r2,r2,-128
   2348c:	10000326 	beq	r2,zero,2349c <___vfprintf_internal_r+0x61c>
   23490:	d8c12b17 	ldw	r3,1196(sp)
   23494:	18c00044 	addi	r3,r3,1
   23498:	d8c12b15 	stw	r3,1196(sp)
   2349c:	e0c0008c 	andi	r3,fp,2
   234a0:	d8c12c15 	stw	r3,1200(sp)
   234a4:	18000326 	beq	r3,zero,234b4 <___vfprintf_internal_r+0x634>
   234a8:	d8c12b17 	ldw	r3,1196(sp)
   234ac:	18c00084 	addi	r3,r3,2
   234b0:	d8c12b15 	stw	r3,1196(sp)
   234b4:	e0c0210c 	andi	r3,fp,132
   234b8:	d8c13015 	stw	r3,1216(sp)
   234bc:	1801f81e 	bne	r3,zero,23ca0 <___vfprintf_internal_r+0xe20>
   234c0:	d9012e17 	ldw	r4,1208(sp)
   234c4:	d8c12b17 	ldw	r3,1196(sp)
   234c8:	20ebc83a 	sub	r21,r4,r3
   234cc:	0541f40e 	bge	zero,r21,23ca0 <___vfprintf_internal_r+0xe20>
   234d0:	02400404 	movi	r9,16
   234d4:	d8c12017 	ldw	r3,1152(sp)
   234d8:	d8811f17 	ldw	r2,1148(sp)
   234dc:	4d45750e 	bge	r9,r21,24ab4 <___vfprintf_internal_r+0x1c34>
   234e0:	014000f4 	movhi	r5,3
   234e4:	294da484 	addi	r5,r5,13970
   234e8:	d9413615 	stw	r5,1240(sp)
   234ec:	4827883a 	mov	r19,r9
   234f0:	048001c4 	movi	r18,7
   234f4:	00000306 	br	23504 <___vfprintf_internal_r+0x684>
   234f8:	ad7ffc04 	addi	r21,r21,-16
   234fc:	42000204 	addi	r8,r8,8
   23500:	9d40130e 	bge	r19,r21,23550 <___vfprintf_internal_r+0x6d0>
   23504:	010000f4 	movhi	r4,3
   23508:	18c00404 	addi	r3,r3,16
   2350c:	10800044 	addi	r2,r2,1
   23510:	210da484 	addi	r4,r4,13970
   23514:	41000015 	stw	r4,0(r8)
   23518:	44c00115 	stw	r19,4(r8)
   2351c:	d8c12015 	stw	r3,1152(sp)
   23520:	d8811f15 	stw	r2,1148(sp)
   23524:	90bff40e 	bge	r18,r2,234f8 <_gp+0xfffe60f8>
   23528:	b809883a 	mov	r4,r23
   2352c:	b00b883a 	mov	r5,r22
   23530:	d9811e04 	addi	r6,sp,1144
   23534:	002b7880 	call	2b788 <__sprint_r>
   23538:	103f691e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   2353c:	ad7ffc04 	addi	r21,r21,-16
   23540:	d8c12017 	ldw	r3,1152(sp)
   23544:	d8811f17 	ldw	r2,1148(sp)
   23548:	da000404 	addi	r8,sp,16
   2354c:	9d7fed16 	blt	r19,r21,23504 <_gp+0xfffe6104>
   23550:	d9413617 	ldw	r5,1240(sp)
   23554:	a8c7883a 	add	r3,r21,r3
   23558:	10800044 	addi	r2,r2,1
   2355c:	41400015 	stw	r5,0(r8)
   23560:	45400115 	stw	r21,4(r8)
   23564:	d8c12015 	stw	r3,1152(sp)
   23568:	d8811f15 	stw	r2,1148(sp)
   2356c:	010001c4 	movi	r4,7
   23570:	20832b16 	blt	r4,r2,24220 <___vfprintf_internal_r+0x13a0>
   23574:	d8812787 	ldb	r2,1182(sp)
   23578:	42000204 	addi	r8,r8,8
   2357c:	10000c26 	beq	r2,zero,235b0 <___vfprintf_internal_r+0x730>
   23580:	d8811f17 	ldw	r2,1148(sp)
   23584:	d9012784 	addi	r4,sp,1182
   23588:	18c00044 	addi	r3,r3,1
   2358c:	10800044 	addi	r2,r2,1
   23590:	41000015 	stw	r4,0(r8)
   23594:	01000044 	movi	r4,1
   23598:	41000115 	stw	r4,4(r8)
   2359c:	d8c12015 	stw	r3,1152(sp)
   235a0:	d8811f15 	stw	r2,1148(sp)
   235a4:	010001c4 	movi	r4,7
   235a8:	2082c416 	blt	r4,r2,240bc <___vfprintf_internal_r+0x123c>
   235ac:	42000204 	addi	r8,r8,8
   235b0:	d8812c17 	ldw	r2,1200(sp)
   235b4:	10000c26 	beq	r2,zero,235e8 <___vfprintf_internal_r+0x768>
   235b8:	d8811f17 	ldw	r2,1148(sp)
   235bc:	d9012704 	addi	r4,sp,1180
   235c0:	18c00084 	addi	r3,r3,2
   235c4:	10800044 	addi	r2,r2,1
   235c8:	41000015 	stw	r4,0(r8)
   235cc:	01000084 	movi	r4,2
   235d0:	41000115 	stw	r4,4(r8)
   235d4:	d8c12015 	stw	r3,1152(sp)
   235d8:	d8811f15 	stw	r2,1148(sp)
   235dc:	010001c4 	movi	r4,7
   235e0:	2082be16 	blt	r4,r2,240dc <___vfprintf_internal_r+0x125c>
   235e4:	42000204 	addi	r8,r8,8
   235e8:	d9013017 	ldw	r4,1216(sp)
   235ec:	00802004 	movi	r2,128
   235f0:	20822026 	beq	r4,r2,23e74 <___vfprintf_internal_r+0xff4>
   235f4:	d9413217 	ldw	r5,1224(sp)
   235f8:	2c67c83a 	sub	r19,r5,r17
   235fc:	04c0260e 	bge	zero,r19,23698 <___vfprintf_internal_r+0x818>
   23600:	05400404 	movi	r21,16
   23604:	d8811f17 	ldw	r2,1148(sp)
   23608:	acc4720e 	bge	r21,r19,247d4 <___vfprintf_internal_r+0x1954>
   2360c:	014000f4 	movhi	r5,3
   23610:	294da084 	addi	r5,r5,13954
   23614:	d9412c15 	stw	r5,1200(sp)
   23618:	048001c4 	movi	r18,7
   2361c:	00000306 	br	2362c <___vfprintf_internal_r+0x7ac>
   23620:	9cfffc04 	addi	r19,r19,-16
   23624:	42000204 	addi	r8,r8,8
   23628:	acc0110e 	bge	r21,r19,23670 <___vfprintf_internal_r+0x7f0>
   2362c:	18c00404 	addi	r3,r3,16
   23630:	10800044 	addi	r2,r2,1
   23634:	45000015 	stw	r20,0(r8)
   23638:	45400115 	stw	r21,4(r8)
   2363c:	d8c12015 	stw	r3,1152(sp)
   23640:	d8811f15 	stw	r2,1148(sp)
   23644:	90bff60e 	bge	r18,r2,23620 <_gp+0xfffe6220>
   23648:	b809883a 	mov	r4,r23
   2364c:	b00b883a 	mov	r5,r22
   23650:	d9811e04 	addi	r6,sp,1144
   23654:	002b7880 	call	2b788 <__sprint_r>
   23658:	103f211e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   2365c:	9cfffc04 	addi	r19,r19,-16
   23660:	d8c12017 	ldw	r3,1152(sp)
   23664:	d8811f17 	ldw	r2,1148(sp)
   23668:	da000404 	addi	r8,sp,16
   2366c:	acffef16 	blt	r21,r19,2362c <_gp+0xfffe622c>
   23670:	d9012c17 	ldw	r4,1200(sp)
   23674:	1cc7883a 	add	r3,r3,r19
   23678:	10800044 	addi	r2,r2,1
   2367c:	41000015 	stw	r4,0(r8)
   23680:	44c00115 	stw	r19,4(r8)
   23684:	d8c12015 	stw	r3,1152(sp)
   23688:	d8811f15 	stw	r2,1148(sp)
   2368c:	010001c4 	movi	r4,7
   23690:	20828216 	blt	r4,r2,2409c <___vfprintf_internal_r+0x121c>
   23694:	42000204 	addi	r8,r8,8
   23698:	e080400c 	andi	r2,fp,256
   2369c:	1001ac1e 	bne	r2,zero,23d50 <___vfprintf_internal_r+0xed0>
   236a0:	d8811f17 	ldw	r2,1148(sp)
   236a4:	d9413117 	ldw	r5,1220(sp)
   236a8:	1c47883a 	add	r3,r3,r17
   236ac:	10800044 	addi	r2,r2,1
   236b0:	41400015 	stw	r5,0(r8)
   236b4:	44400115 	stw	r17,4(r8)
   236b8:	d8c12015 	stw	r3,1152(sp)
   236bc:	d8811f15 	stw	r2,1148(sp)
   236c0:	010001c4 	movi	r4,7
   236c4:	20825d16 	blt	r4,r2,2403c <___vfprintf_internal_r+0x11bc>
   236c8:	42000204 	addi	r8,r8,8
   236cc:	e080010c 	andi	r2,fp,4
   236d0:	10003126 	beq	r2,zero,23798 <___vfprintf_internal_r+0x918>
   236d4:	d8812e17 	ldw	r2,1208(sp)
   236d8:	d9012b17 	ldw	r4,1196(sp)
   236dc:	1121c83a 	sub	r16,r2,r4
   236e0:	04002d0e 	bge	zero,r16,23798 <___vfprintf_internal_r+0x918>
   236e4:	04400404 	movi	r17,16
   236e8:	d8811f17 	ldw	r2,1148(sp)
   236ec:	8c05340e 	bge	r17,r16,24bc0 <___vfprintf_internal_r+0x1d40>
   236f0:	010000f4 	movhi	r4,3
   236f4:	210da484 	addi	r4,r4,13970
   236f8:	d9013615 	stw	r4,1240(sp)
   236fc:	048001c4 	movi	r18,7
   23700:	00000306 	br	23710 <___vfprintf_internal_r+0x890>
   23704:	843ffc04 	addi	r16,r16,-16
   23708:	42000204 	addi	r8,r8,8
   2370c:	8c00130e 	bge	r17,r16,2375c <___vfprintf_internal_r+0x8dc>
   23710:	014000f4 	movhi	r5,3
   23714:	18c00404 	addi	r3,r3,16
   23718:	10800044 	addi	r2,r2,1
   2371c:	294da484 	addi	r5,r5,13970
   23720:	41400015 	stw	r5,0(r8)
   23724:	44400115 	stw	r17,4(r8)
   23728:	d8c12015 	stw	r3,1152(sp)
   2372c:	d8811f15 	stw	r2,1148(sp)
   23730:	90bff40e 	bge	r18,r2,23704 <_gp+0xfffe6304>
   23734:	b809883a 	mov	r4,r23
   23738:	b00b883a 	mov	r5,r22
   2373c:	d9811e04 	addi	r6,sp,1144
   23740:	002b7880 	call	2b788 <__sprint_r>
   23744:	103ee61e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   23748:	843ffc04 	addi	r16,r16,-16
   2374c:	d8c12017 	ldw	r3,1152(sp)
   23750:	d8811f17 	ldw	r2,1148(sp)
   23754:	da000404 	addi	r8,sp,16
   23758:	8c3fed16 	blt	r17,r16,23710 <_gp+0xfffe6310>
   2375c:	d9013617 	ldw	r4,1240(sp)
   23760:	1c07883a 	add	r3,r3,r16
   23764:	10800044 	addi	r2,r2,1
   23768:	41000015 	stw	r4,0(r8)
   2376c:	44000115 	stw	r16,4(r8)
   23770:	d8c12015 	stw	r3,1152(sp)
   23774:	d8811f15 	stw	r2,1148(sp)
   23778:	010001c4 	movi	r4,7
   2377c:	2080060e 	bge	r4,r2,23798 <___vfprintf_internal_r+0x918>
   23780:	b809883a 	mov	r4,r23
   23784:	b00b883a 	mov	r5,r22
   23788:	d9811e04 	addi	r6,sp,1144
   2378c:	002b7880 	call	2b788 <__sprint_r>
   23790:	103ed31e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   23794:	d8c12017 	ldw	r3,1152(sp)
   23798:	df012b17 	ldw	fp,1196(sp)
   2379c:	d9412e17 	ldw	r5,1208(sp)
   237a0:	e140010e 	bge	fp,r5,237a8 <___vfprintf_internal_r+0x928>
   237a4:	2839883a 	mov	fp,r5
   237a8:	d8812f17 	ldw	r2,1212(sp)
   237ac:	1705883a 	add	r2,r2,fp
   237b0:	d8812f15 	stw	r2,1212(sp)
   237b4:	1802291e 	bne	r3,zero,2405c <___vfprintf_internal_r+0x11dc>
   237b8:	d8c12a17 	ldw	r3,1192(sp)
   237bc:	d8011f15 	stw	zero,1148(sp)
   237c0:	da000404 	addi	r8,sp,16
   237c4:	18800007 	ldb	r2,0(r3)
   237c8:	103ded1e 	bne	r2,zero,22f80 <_gp+0xfffe5b80>
   237cc:	dc012a17 	ldw	r16,1192(sp)
   237d0:	003e0506 	br	22fe8 <_gp+0xfffe5be8>
   237d4:	d9012d17 	ldw	r4,1204(sp)
   237d8:	d9412d17 	ldw	r5,1204(sp)
   237dc:	da012a17 	ldw	r8,1192(sp)
   237e0:	21000017 	ldw	r4,0(r4)
   237e4:	29400117 	ldw	r5,4(r5)
   237e8:	df012a15 	stw	fp,1192(sp)
   237ec:	9839883a 	mov	fp,r19
   237f0:	dcc12b03 	ldbu	r19,1196(sp)
   237f4:	d9013715 	stw	r4,1244(sp)
   237f8:	d9413915 	stw	r5,1252(sp)
   237fc:	da013f15 	stw	r8,1276(sp)
   23800:	da413e15 	stw	r9,1272(sp)
   23804:	dcc12785 	stb	r19,1182(sp)
   23808:	002a04c0 	call	2a04c <__fpclassifyd>
   2380c:	d8c12d17 	ldw	r3,1204(sp)
   23810:	04400044 	movi	r17,1
   23814:	da013f17 	ldw	r8,1276(sp)
   23818:	1c800204 	addi	r18,r3,8
   2381c:	da413e17 	ldw	r9,1272(sp)
   23820:	d9013717 	ldw	r4,1244(sp)
   23824:	d9413917 	ldw	r5,1252(sp)
   23828:	1443451e 	bne	r2,r17,24540 <___vfprintf_internal_r+0x16c0>
   2382c:	000d883a 	mov	r6,zero
   23830:	000f883a 	mov	r7,zero
   23834:	002f6640 	call	2f664 <__ledf2>
   23838:	da013f17 	ldw	r8,1276(sp)
   2383c:	1004fe16 	blt	r2,zero,24c38 <___vfprintf_internal_r+0x1db8>
   23840:	dcc12783 	ldbu	r19,1182(sp)
   23844:	008011c4 	movi	r2,71
   23848:	14045d0e 	bge	r2,r16,249c0 <___vfprintf_internal_r+0x1b40>
   2384c:	014000f4 	movhi	r5,3
   23850:	294d8904 	addi	r5,r5,13860
   23854:	d9413115 	stw	r5,1220(sp)
   23858:	00c000c4 	movi	r3,3
   2385c:	00bfdfc4 	movi	r2,-129
   23860:	d8c12b15 	stw	r3,1196(sp)
   23864:	e0b8703a 	and	fp,fp,r2
   23868:	dc812d15 	stw	r18,1204(sp)
   2386c:	1823883a 	mov	r17,r3
   23870:	d8013215 	stw	zero,1224(sp)
   23874:	d8013415 	stw	zero,1232(sp)
   23878:	003f0106 	br	23480 <_gp+0xfffe6080>
   2387c:	9cc00214 	ori	r19,r19,8
   23880:	e005883a 	mov	r2,fp
   23884:	e4000007 	ldb	r16,0(fp)
   23888:	003de506 	br	23020 <_gp+0xfffe5c20>
   2388c:	da012a17 	ldw	r8,1192(sp)
   23890:	df012a15 	stw	fp,1192(sp)
   23894:	9f000414 	ori	fp,r19,16
   23898:	e0c0080c 	andi	r3,fp,32
   2389c:	d8812d17 	ldw	r2,1204(sp)
   238a0:	18007626 	beq	r3,zero,23a7c <___vfprintf_internal_r+0xbfc>
   238a4:	d9412d17 	ldw	r5,1204(sp)
   238a8:	14800017 	ldw	r18,0(r2)
   238ac:	15400117 	ldw	r21,4(r2)
   238b0:	29400204 	addi	r5,r5,8
   238b4:	d9412d15 	stw	r5,1204(sp)
   238b8:	0005883a 	mov	r2,zero
   238bc:	9546b03a 	or	r3,r18,r21
   238c0:	d8012785 	stb	zero,1182(sp)
   238c4:	da413215 	stw	r9,1224(sp)
   238c8:	0027883a 	mov	r19,zero
   238cc:	003ecd06 	br	23404 <_gp+0xfffe6004>
   238d0:	da012a17 	ldw	r8,1192(sp)
   238d4:	df012a15 	stw	fp,1192(sp)
   238d8:	9f000414 	ori	fp,r19,16
   238dc:	e0c0080c 	andi	r3,fp,32
   238e0:	d8812d17 	ldw	r2,1204(sp)
   238e4:	18002c26 	beq	r3,zero,23998 <___vfprintf_internal_r+0xb18>
   238e8:	d9012d17 	ldw	r4,1204(sp)
   238ec:	14800017 	ldw	r18,0(r2)
   238f0:	15400117 	ldw	r21,4(r2)
   238f4:	21000204 	addi	r4,r4,8
   238f8:	d9012d15 	stw	r4,1204(sp)
   238fc:	00800044 	movi	r2,1
   23900:	9546b03a 	or	r3,r18,r21
   23904:	003fee06 	br	238c0 <_gp+0xfffe64c0>
   23908:	da012a17 	ldw	r8,1192(sp)
   2390c:	df012a15 	stw	fp,1192(sp)
   23910:	9839883a 	mov	fp,r19
   23914:	dcc12b03 	ldbu	r19,1196(sp)
   23918:	014000f4 	movhi	r5,3
   2391c:	294d8c04 	addi	r5,r5,13872
   23920:	dcc12785 	stb	r19,1182(sp)
   23924:	d9413b15 	stw	r5,1260(sp)
   23928:	e0c0080c 	andi	r3,fp,32
   2392c:	d8812d17 	ldw	r2,1204(sp)
   23930:	18002e26 	beq	r3,zero,239ec <___vfprintf_internal_r+0xb6c>
   23934:	d9412d17 	ldw	r5,1204(sp)
   23938:	14800017 	ldw	r18,0(r2)
   2393c:	15400117 	ldw	r21,4(r2)
   23940:	29400204 	addi	r5,r5,8
   23944:	d9412d15 	stw	r5,1204(sp)
   23948:	e080004c 	andi	r2,fp,1
   2394c:	10025c26 	beq	r2,zero,242c0 <___vfprintf_internal_r+0x1440>
   23950:	9546b03a 	or	r3,r18,r21
   23954:	18038f26 	beq	r3,zero,24794 <___vfprintf_internal_r+0x1914>
   23958:	00800c04 	movi	r2,48
   2395c:	d8812705 	stb	r2,1180(sp)
   23960:	dc012745 	stb	r16,1181(sp)
   23964:	e7000094 	ori	fp,fp,2
   23968:	00800084 	movi	r2,2
   2396c:	003fd406 	br	238c0 <_gp+0xfffe64c0>
   23970:	9cc00814 	ori	r19,r19,32
   23974:	e005883a 	mov	r2,fp
   23978:	e4000007 	ldb	r16,0(fp)
   2397c:	003da806 	br	23020 <_gp+0xfffe5c20>
   23980:	da012a17 	ldw	r8,1192(sp)
   23984:	df012a15 	stw	fp,1192(sp)
   23988:	9839883a 	mov	fp,r19
   2398c:	e0c0080c 	andi	r3,fp,32
   23990:	d8812d17 	ldw	r2,1204(sp)
   23994:	183fd41e 	bne	r3,zero,238e8 <_gp+0xfffe64e8>
   23998:	e0c0040c 	andi	r3,fp,16
   2399c:	18035f26 	beq	r3,zero,2471c <___vfprintf_internal_r+0x189c>
   239a0:	d9412d17 	ldw	r5,1204(sp)
   239a4:	14800017 	ldw	r18,0(r2)
   239a8:	002b883a 	mov	r21,zero
   239ac:	29400104 	addi	r5,r5,4
   239b0:	d9412d15 	stw	r5,1204(sp)
   239b4:	00800044 	movi	r2,1
   239b8:	9007883a 	mov	r3,r18
   239bc:	003fc006 	br	238c0 <_gp+0xfffe64c0>
   239c0:	da012a17 	ldw	r8,1192(sp)
   239c4:	df012a15 	stw	fp,1192(sp)
   239c8:	9839883a 	mov	fp,r19
   239cc:	dcc12b03 	ldbu	r19,1196(sp)
   239d0:	010000f4 	movhi	r4,3
   239d4:	210d9104 	addi	r4,r4,13892
   239d8:	d9013b15 	stw	r4,1260(sp)
   239dc:	dcc12785 	stb	r19,1182(sp)
   239e0:	e0c0080c 	andi	r3,fp,32
   239e4:	d8812d17 	ldw	r2,1204(sp)
   239e8:	183fd21e 	bne	r3,zero,23934 <_gp+0xfffe6534>
   239ec:	e0c0040c 	andi	r3,fp,16
   239f0:	18035426 	beq	r3,zero,24744 <___vfprintf_internal_r+0x18c4>
   239f4:	d8c12d17 	ldw	r3,1204(sp)
   239f8:	14800017 	ldw	r18,0(r2)
   239fc:	002b883a 	mov	r21,zero
   23a00:	18c00104 	addi	r3,r3,4
   23a04:	d8c12d15 	stw	r3,1204(sp)
   23a08:	003fcf06 	br	23948 <_gp+0xfffe6548>
   23a0c:	e4000007 	ldb	r16,0(fp)
   23a10:	00801b04 	movi	r2,108
   23a14:	8083f726 	beq	r16,r2,249f4 <___vfprintf_internal_r+0x1b74>
   23a18:	9cc00414 	ori	r19,r19,16
   23a1c:	e005883a 	mov	r2,fp
   23a20:	003d7f06 	br	23020 <_gp+0xfffe5c20>
   23a24:	da012a17 	ldw	r8,1192(sp)
   23a28:	df012a15 	stw	fp,1192(sp)
   23a2c:	9839883a 	mov	fp,r19
   23a30:	dcc12b03 	ldbu	r19,1196(sp)
   23a34:	e080080c 	andi	r2,fp,32
   23a38:	dcc12785 	stb	r19,1182(sp)
   23a3c:	10032226 	beq	r2,zero,246c8 <___vfprintf_internal_r+0x1848>
   23a40:	d9412d17 	ldw	r5,1204(sp)
   23a44:	d9012f17 	ldw	r4,1212(sp)
   23a48:	28800017 	ldw	r2,0(r5)
   23a4c:	2007d7fa 	srai	r3,r4,31
   23a50:	29400104 	addi	r5,r5,4
   23a54:	d9412d15 	stw	r5,1204(sp)
   23a58:	11000015 	stw	r4,0(r2)
   23a5c:	10c00115 	stw	r3,4(r2)
   23a60:	003d4406 	br	22f74 <_gp+0xfffe5b74>
   23a64:	da012a17 	ldw	r8,1192(sp)
   23a68:	df012a15 	stw	fp,1192(sp)
   23a6c:	9839883a 	mov	fp,r19
   23a70:	e0c0080c 	andi	r3,fp,32
   23a74:	d8812d17 	ldw	r2,1204(sp)
   23a78:	183f8a1e 	bne	r3,zero,238a4 <_gp+0xfffe64a4>
   23a7c:	e0c0040c 	andi	r3,fp,16
   23a80:	18031c26 	beq	r3,zero,246f4 <___vfprintf_internal_r+0x1874>
   23a84:	14800017 	ldw	r18,0(r2)
   23a88:	d8812d17 	ldw	r2,1204(sp)
   23a8c:	002b883a 	mov	r21,zero
   23a90:	9007883a 	mov	r3,r18
   23a94:	10800104 	addi	r2,r2,4
   23a98:	d8812d15 	stw	r2,1204(sp)
   23a9c:	0005883a 	mov	r2,zero
   23aa0:	003f8706 	br	238c0 <_gp+0xfffe64c0>
   23aa4:	d9412d17 	ldw	r5,1204(sp)
   23aa8:	00800c04 	movi	r2,48
   23aac:	d8812705 	stb	r2,1180(sp)
   23ab0:	2c800017 	ldw	r18,0(r5)
   23ab4:	00801e04 	movi	r2,120
   23ab8:	d8812745 	stb	r2,1181(sp)
   23abc:	008000f4 	movhi	r2,3
   23ac0:	108d9104 	addi	r2,r2,13892
   23ac4:	29400104 	addi	r5,r5,4
   23ac8:	da012a17 	ldw	r8,1192(sp)
   23acc:	d8813b15 	stw	r2,1260(sp)
   23ad0:	df012a15 	stw	fp,1192(sp)
   23ad4:	002b883a 	mov	r21,zero
   23ad8:	9f000094 	ori	fp,r19,2
   23adc:	d9412d15 	stw	r5,1204(sp)
   23ae0:	00800084 	movi	r2,2
   23ae4:	04001e04 	movi	r16,120
   23ae8:	9007883a 	mov	r3,r18
   23aec:	003f7406 	br	238c0 <_gp+0xfffe64c0>
   23af0:	da012a17 	ldw	r8,1192(sp)
   23af4:	df012a15 	stw	fp,1192(sp)
   23af8:	9839883a 	mov	fp,r19
   23afc:	dcc12b03 	ldbu	r19,1196(sp)
   23b00:	e080080c 	andi	r2,fp,32
   23b04:	d8c12d17 	ldw	r3,1204(sp)
   23b08:	dcc12785 	stb	r19,1182(sp)
   23b0c:	103e321e 	bne	r2,zero,233d8 <_gp+0xfffe5fd8>
   23b10:	e080040c 	andi	r2,fp,16
   23b14:	10031326 	beq	r2,zero,24764 <___vfprintf_internal_r+0x18e4>
   23b18:	1c800017 	ldw	r18,0(r3)
   23b1c:	d9412d17 	ldw	r5,1204(sp)
   23b20:	902bd7fa 	srai	r21,r18,31
   23b24:	29400104 	addi	r5,r5,4
   23b28:	d9412d15 	stw	r5,1204(sp)
   23b2c:	a805883a 	mov	r2,r21
   23b30:	003e2f06 	br	233f0 <_gp+0xfffe5ff0>
   23b34:	9cc01014 	ori	r19,r19,64
   23b38:	e005883a 	mov	r2,fp
   23b3c:	e4000007 	ldb	r16,0(fp)
   23b40:	003d3706 	br	23020 <_gp+0xfffe5c20>
   23b44:	d8c12d17 	ldw	r3,1204(sp)
   23b48:	d9012d17 	ldw	r4,1204(sp)
   23b4c:	da012a17 	ldw	r8,1192(sp)
   23b50:	18800017 	ldw	r2,0(r3)
   23b54:	21000104 	addi	r4,r4,4
   23b58:	00c00044 	movi	r3,1
   23b5c:	df012a15 	stw	fp,1192(sp)
   23b60:	d8c12b15 	stw	r3,1196(sp)
   23b64:	9839883a 	mov	fp,r19
   23b68:	d8012785 	stb	zero,1182(sp)
   23b6c:	d8810405 	stb	r2,1040(sp)
   23b70:	d9012d15 	stw	r4,1204(sp)
   23b74:	1823883a 	mov	r17,r3
   23b78:	d8c10404 	addi	r3,sp,1040
   23b7c:	d8013215 	stw	zero,1224(sp)
   23b80:	d8013415 	stw	zero,1232(sp)
   23b84:	d8c13115 	stw	r3,1220(sp)
   23b88:	0005883a 	mov	r2,zero
   23b8c:	003e4306 	br	2349c <_gp+0xfffe609c>
   23b90:	d8812b07 	ldb	r2,1196(sp)
   23b94:	1002fc1e 	bne	r2,zero,24788 <___vfprintf_internal_r+0x1908>
   23b98:	00c00804 	movi	r3,32
   23b9c:	d8c12b05 	stb	r3,1196(sp)
   23ba0:	e005883a 	mov	r2,fp
   23ba4:	e4000007 	ldb	r16,0(fp)
   23ba8:	003d1d06 	br	23020 <_gp+0xfffe5c20>
   23bac:	9cc00054 	ori	r19,r19,1
   23bb0:	e005883a 	mov	r2,fp
   23bb4:	e4000007 	ldb	r16,0(fp)
   23bb8:	003d1906 	br	23020 <_gp+0xfffe5c20>
   23bbc:	d9012d17 	ldw	r4,1204(sp)
   23bc0:	d9412d17 	ldw	r5,1204(sp)
   23bc4:	21000017 	ldw	r4,0(r4)
   23bc8:	28c00104 	addi	r3,r5,4
   23bcc:	d9012e15 	stw	r4,1208(sp)
   23bd0:	20038c16 	blt	r4,zero,24a04 <___vfprintf_internal_r+0x1b84>
   23bd4:	d8c12d15 	stw	r3,1204(sp)
   23bd8:	e005883a 	mov	r2,fp
   23bdc:	e4000007 	ldb	r16,0(fp)
   23be0:	003d0f06 	br	23020 <_gp+0xfffe5c20>
   23be4:	00c00ac4 	movi	r3,43
   23be8:	d8c12b05 	stb	r3,1196(sp)
   23bec:	e005883a 	mov	r2,fp
   23bf0:	e4000007 	ldb	r16,0(fp)
   23bf4:	003d0a06 	br	23020 <_gp+0xfffe5c20>
   23bf8:	d8c12d17 	ldw	r3,1204(sp)
   23bfc:	d9012d17 	ldw	r4,1204(sp)
   23c00:	da012a17 	ldw	r8,1192(sp)
   23c04:	18c00017 	ldw	r3,0(r3)
   23c08:	df012a15 	stw	fp,1192(sp)
   23c0c:	d8012785 	stb	zero,1182(sp)
   23c10:	d8c13115 	stw	r3,1220(sp)
   23c14:	9839883a 	mov	fp,r19
   23c18:	24800104 	addi	r18,r4,4
   23c1c:	1803f726 	beq	r3,zero,24bfc <___vfprintf_internal_r+0x1d7c>
   23c20:	d9013117 	ldw	r4,1220(sp)
   23c24:	48038916 	blt	r9,zero,24a4c <___vfprintf_internal_r+0x1bcc>
   23c28:	480d883a 	mov	r6,r9
   23c2c:	000b883a 	mov	r5,zero
   23c30:	da013f15 	stw	r8,1276(sp)
   23c34:	da413e15 	stw	r9,1272(sp)
   23c38:	00285c40 	call	285c4 <memchr>
   23c3c:	da013f17 	ldw	r8,1276(sp)
   23c40:	da413e17 	ldw	r9,1272(sp)
   23c44:	10045926 	beq	r2,zero,24dac <___vfprintf_internal_r+0x1f2c>
   23c48:	d8c13117 	ldw	r3,1220(sp)
   23c4c:	10e3c83a 	sub	r17,r2,r3
   23c50:	4c433516 	blt	r9,r17,24928 <___vfprintf_internal_r+0x1aa8>
   23c54:	8805883a 	mov	r2,r17
   23c58:	88038116 	blt	r17,zero,24a60 <___vfprintf_internal_r+0x1be0>
   23c5c:	dcc12783 	ldbu	r19,1182(sp)
   23c60:	d8812b15 	stw	r2,1196(sp)
   23c64:	dc812d15 	stw	r18,1204(sp)
   23c68:	d8013215 	stw	zero,1224(sp)
   23c6c:	d8013415 	stw	zero,1232(sp)
   23c70:	003e0306 	br	23480 <_gp+0xfffe6080>
   23c74:	da012a17 	ldw	r8,1192(sp)
   23c78:	df012a15 	stw	fp,1192(sp)
   23c7c:	9839883a 	mov	fp,r19
   23c80:	dcc12b03 	ldbu	r19,1196(sp)
   23c84:	dcc12785 	stb	r19,1182(sp)
   23c88:	803d8f26 	beq	r16,zero,232c8 <_gp+0xfffe5ec8>
   23c8c:	00c00044 	movi	r3,1
   23c90:	d8c12b15 	stw	r3,1196(sp)
   23c94:	dc010405 	stb	r16,1040(sp)
   23c98:	d8012785 	stb	zero,1182(sp)
   23c9c:	003fb506 	br	23b74 <_gp+0xfffe6774>
   23ca0:	d8c12017 	ldw	r3,1152(sp)
   23ca4:	003e3506 	br	2357c <_gp+0xfffe617c>
   23ca8:	10803fcc 	andi	r2,r2,255
   23cac:	00c00044 	movi	r3,1
   23cb0:	10fddc1e 	bne	r2,r3,23424 <_gp+0xfffe6024>
   23cb4:	a800021e 	bne	r21,zero,23cc0 <___vfprintf_internal_r+0xe40>
   23cb8:	00800244 	movi	r2,9
   23cbc:	14801e2e 	bgeu	r2,r18,23d38 <___vfprintf_internal_r+0xeb8>
   23cc0:	dc012b15 	stw	r16,1196(sp)
   23cc4:	dc410e04 	addi	r17,sp,1080
   23cc8:	9021883a 	mov	r16,r18
   23ccc:	da012c15 	stw	r8,1200(sp)
   23cd0:	a825883a 	mov	r18,r21
   23cd4:	482b883a 	mov	r21,r9
   23cd8:	8009883a 	mov	r4,r16
   23cdc:	900b883a 	mov	r5,r18
   23ce0:	01800284 	movi	r6,10
   23ce4:	000f883a 	mov	r7,zero
   23ce8:	002db740 	call	2db74 <__umoddi3>
   23cec:	10800c04 	addi	r2,r2,48
   23cf0:	8c7fffc4 	addi	r17,r17,-1
   23cf4:	8009883a 	mov	r4,r16
   23cf8:	900b883a 	mov	r5,r18
   23cfc:	01800284 	movi	r6,10
   23d00:	000f883a 	mov	r7,zero
   23d04:	88800005 	stb	r2,0(r17)
   23d08:	002d5340 	call	2d534 <__udivdi3>
   23d0c:	1021883a 	mov	r16,r2
   23d10:	10c4b03a 	or	r2,r2,r3
   23d14:	1825883a 	mov	r18,r3
   23d18:	103fef1e 	bne	r2,zero,23cd8 <_gp+0xfffe68d8>
   23d1c:	d9012817 	ldw	r4,1184(sp)
   23d20:	dc413115 	stw	r17,1220(sp)
   23d24:	dc012b17 	ldw	r16,1196(sp)
   23d28:	da012c17 	ldw	r8,1200(sp)
   23d2c:	a813883a 	mov	r9,r21
   23d30:	2463c83a 	sub	r17,r4,r17
   23d34:	003dcd06 	br	2346c <_gp+0xfffe606c>
   23d38:	94800c04 	addi	r18,r18,48
   23d3c:	d8c10dc4 	addi	r3,sp,1079
   23d40:	dc810dc5 	stb	r18,1079(sp)
   23d44:	dc413c17 	ldw	r17,1264(sp)
   23d48:	d8c13115 	stw	r3,1220(sp)
   23d4c:	003dc706 	br	2346c <_gp+0xfffe606c>
   23d50:	00801944 	movi	r2,101
   23d54:	1400720e 	bge	r2,r16,23f20 <___vfprintf_internal_r+0x10a0>
   23d58:	d9013717 	ldw	r4,1244(sp)
   23d5c:	d9413917 	ldw	r5,1252(sp)
   23d60:	000d883a 	mov	r6,zero
   23d64:	000f883a 	mov	r7,zero
   23d68:	d8c13d15 	stw	r3,1268(sp)
   23d6c:	da013f15 	stw	r8,1276(sp)
   23d70:	002f5000 	call	2f500 <__eqdf2>
   23d74:	d8c13d17 	ldw	r3,1268(sp)
   23d78:	da013f17 	ldw	r8,1276(sp)
   23d7c:	1000f41e 	bne	r2,zero,24150 <___vfprintf_internal_r+0x12d0>
   23d80:	d8811f17 	ldw	r2,1148(sp)
   23d84:	010000f4 	movhi	r4,3
   23d88:	210d9804 	addi	r4,r4,13920
   23d8c:	18c00044 	addi	r3,r3,1
   23d90:	10800044 	addi	r2,r2,1
   23d94:	41000015 	stw	r4,0(r8)
   23d98:	01000044 	movi	r4,1
   23d9c:	41000115 	stw	r4,4(r8)
   23da0:	d8c12015 	stw	r3,1152(sp)
   23da4:	d8811f15 	stw	r2,1148(sp)
   23da8:	010001c4 	movi	r4,7
   23dac:	20828d16 	blt	r4,r2,247e4 <___vfprintf_internal_r+0x1964>
   23db0:	42000204 	addi	r8,r8,8
   23db4:	d8812617 	ldw	r2,1176(sp)
   23db8:	d9413317 	ldw	r5,1228(sp)
   23dbc:	11400216 	blt	r2,r5,23dc8 <___vfprintf_internal_r+0xf48>
   23dc0:	e080004c 	andi	r2,fp,1
   23dc4:	103e4126 	beq	r2,zero,236cc <_gp+0xfffe62cc>
   23dc8:	d8813817 	ldw	r2,1248(sp)
   23dcc:	d9013517 	ldw	r4,1236(sp)
   23dd0:	d9413817 	ldw	r5,1248(sp)
   23dd4:	1887883a 	add	r3,r3,r2
   23dd8:	d8811f17 	ldw	r2,1148(sp)
   23ddc:	41000015 	stw	r4,0(r8)
   23de0:	41400115 	stw	r5,4(r8)
   23de4:	10800044 	addi	r2,r2,1
   23de8:	d8c12015 	stw	r3,1152(sp)
   23dec:	d8811f15 	stw	r2,1148(sp)
   23df0:	010001c4 	movi	r4,7
   23df4:	20830916 	blt	r4,r2,24a1c <___vfprintf_internal_r+0x1b9c>
   23df8:	42000204 	addi	r8,r8,8
   23dfc:	d8813317 	ldw	r2,1228(sp)
   23e00:	143fffc4 	addi	r16,r2,-1
   23e04:	043e310e 	bge	zero,r16,236cc <_gp+0xfffe62cc>
   23e08:	04400404 	movi	r17,16
   23e0c:	d8811f17 	ldw	r2,1148(sp)
   23e10:	8c007e0e 	bge	r17,r16,2400c <___vfprintf_internal_r+0x118c>
   23e14:	014000f4 	movhi	r5,3
   23e18:	294da084 	addi	r5,r5,13954
   23e1c:	d9412c15 	stw	r5,1200(sp)
   23e20:	04c001c4 	movi	r19,7
   23e24:	00000306 	br	23e34 <___vfprintf_internal_r+0xfb4>
   23e28:	42000204 	addi	r8,r8,8
   23e2c:	843ffc04 	addi	r16,r16,-16
   23e30:	8c00790e 	bge	r17,r16,24018 <___vfprintf_internal_r+0x1198>
   23e34:	18c00404 	addi	r3,r3,16
   23e38:	10800044 	addi	r2,r2,1
   23e3c:	45000015 	stw	r20,0(r8)
   23e40:	44400115 	stw	r17,4(r8)
   23e44:	d8c12015 	stw	r3,1152(sp)
   23e48:	d8811f15 	stw	r2,1148(sp)
   23e4c:	98bff60e 	bge	r19,r2,23e28 <_gp+0xfffe6a28>
   23e50:	b809883a 	mov	r4,r23
   23e54:	b00b883a 	mov	r5,r22
   23e58:	d9811e04 	addi	r6,sp,1144
   23e5c:	002b7880 	call	2b788 <__sprint_r>
   23e60:	103d1f1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   23e64:	d8c12017 	ldw	r3,1152(sp)
   23e68:	d8811f17 	ldw	r2,1148(sp)
   23e6c:	da000404 	addi	r8,sp,16
   23e70:	003fee06 	br	23e2c <_gp+0xfffe6a2c>
   23e74:	d9412e17 	ldw	r5,1208(sp)
   23e78:	d8812b17 	ldw	r2,1196(sp)
   23e7c:	28a7c83a 	sub	r19,r5,r2
   23e80:	04fddc0e 	bge	zero,r19,235f4 <_gp+0xfffe61f4>
   23e84:	05400404 	movi	r21,16
   23e88:	d8811f17 	ldw	r2,1148(sp)
   23e8c:	acc3870e 	bge	r21,r19,24cac <___vfprintf_internal_r+0x1e2c>
   23e90:	014000f4 	movhi	r5,3
   23e94:	294da084 	addi	r5,r5,13954
   23e98:	d9412c15 	stw	r5,1200(sp)
   23e9c:	048001c4 	movi	r18,7
   23ea0:	00000306 	br	23eb0 <___vfprintf_internal_r+0x1030>
   23ea4:	9cfffc04 	addi	r19,r19,-16
   23ea8:	42000204 	addi	r8,r8,8
   23eac:	acc0110e 	bge	r21,r19,23ef4 <___vfprintf_internal_r+0x1074>
   23eb0:	18c00404 	addi	r3,r3,16
   23eb4:	10800044 	addi	r2,r2,1
   23eb8:	45000015 	stw	r20,0(r8)
   23ebc:	45400115 	stw	r21,4(r8)
   23ec0:	d8c12015 	stw	r3,1152(sp)
   23ec4:	d8811f15 	stw	r2,1148(sp)
   23ec8:	90bff60e 	bge	r18,r2,23ea4 <_gp+0xfffe6aa4>
   23ecc:	b809883a 	mov	r4,r23
   23ed0:	b00b883a 	mov	r5,r22
   23ed4:	d9811e04 	addi	r6,sp,1144
   23ed8:	002b7880 	call	2b788 <__sprint_r>
   23edc:	103d001e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   23ee0:	9cfffc04 	addi	r19,r19,-16
   23ee4:	d8c12017 	ldw	r3,1152(sp)
   23ee8:	d8811f17 	ldw	r2,1148(sp)
   23eec:	da000404 	addi	r8,sp,16
   23ef0:	acffef16 	blt	r21,r19,23eb0 <_gp+0xfffe6ab0>
   23ef4:	d9012c17 	ldw	r4,1200(sp)
   23ef8:	1cc7883a 	add	r3,r3,r19
   23efc:	10800044 	addi	r2,r2,1
   23f00:	41000015 	stw	r4,0(r8)
   23f04:	44c00115 	stw	r19,4(r8)
   23f08:	d8c12015 	stw	r3,1152(sp)
   23f0c:	d8811f15 	stw	r2,1148(sp)
   23f10:	010001c4 	movi	r4,7
   23f14:	20817816 	blt	r4,r2,244f8 <___vfprintf_internal_r+0x1678>
   23f18:	42000204 	addi	r8,r8,8
   23f1c:	003db506 	br	235f4 <_gp+0xfffe61f4>
   23f20:	d9413317 	ldw	r5,1228(sp)
   23f24:	00800044 	movi	r2,1
   23f28:	18c00044 	addi	r3,r3,1
   23f2c:	11413e0e 	bge	r2,r5,24428 <___vfprintf_internal_r+0x15a8>
   23f30:	dc011f17 	ldw	r16,1148(sp)
   23f34:	d8813117 	ldw	r2,1220(sp)
   23f38:	d8c12015 	stw	r3,1152(sp)
   23f3c:	84000044 	addi	r16,r16,1
   23f40:	40800015 	stw	r2,0(r8)
   23f44:	00800044 	movi	r2,1
   23f48:	40800115 	stw	r2,4(r8)
   23f4c:	dc011f15 	stw	r16,1148(sp)
   23f50:	008001c4 	movi	r2,7
   23f54:	14015616 	blt	r2,r16,244b0 <___vfprintf_internal_r+0x1630>
   23f58:	42000204 	addi	r8,r8,8
   23f5c:	d9013817 	ldw	r4,1248(sp)
   23f60:	d9413517 	ldw	r5,1236(sp)
   23f64:	84000044 	addi	r16,r16,1
   23f68:	1907883a 	add	r3,r3,r4
   23f6c:	41400015 	stw	r5,0(r8)
   23f70:	41000115 	stw	r4,4(r8)
   23f74:	d8c12015 	stw	r3,1152(sp)
   23f78:	dc011f15 	stw	r16,1148(sp)
   23f7c:	008001c4 	movi	r2,7
   23f80:	14015416 	blt	r2,r16,244d4 <___vfprintf_internal_r+0x1654>
   23f84:	44400204 	addi	r17,r8,8
   23f88:	d9013717 	ldw	r4,1244(sp)
   23f8c:	d9413917 	ldw	r5,1252(sp)
   23f90:	000d883a 	mov	r6,zero
   23f94:	000f883a 	mov	r7,zero
   23f98:	d8c13d15 	stw	r3,1268(sp)
   23f9c:	002f5000 	call	2f500 <__eqdf2>
   23fa0:	d8c13d17 	ldw	r3,1268(sp)
   23fa4:	1000a726 	beq	r2,zero,24244 <___vfprintf_internal_r+0x13c4>
   23fa8:	d9013317 	ldw	r4,1228(sp)
   23fac:	d9413117 	ldw	r5,1220(sp)
   23fb0:	84000044 	addi	r16,r16,1
   23fb4:	20bfffc4 	addi	r2,r4,-1
   23fb8:	1887883a 	add	r3,r3,r2
   23fbc:	29000044 	addi	r4,r5,1
   23fc0:	88800115 	stw	r2,4(r17)
   23fc4:	89000015 	stw	r4,0(r17)
   23fc8:	d8c12015 	stw	r3,1152(sp)
   23fcc:	dc011f15 	stw	r16,1148(sp)
   23fd0:	008001c4 	movi	r2,7
   23fd4:	14012d16 	blt	r2,r16,2448c <___vfprintf_internal_r+0x160c>
   23fd8:	8c400204 	addi	r17,r17,8
   23fdc:	d9413a17 	ldw	r5,1256(sp)
   23fe0:	dcc122c4 	addi	r19,sp,1163
   23fe4:	84000044 	addi	r16,r16,1
   23fe8:	28c7883a 	add	r3,r5,r3
   23fec:	8cc00015 	stw	r19,0(r17)
   23ff0:	89400115 	stw	r5,4(r17)
   23ff4:	d8c12015 	stw	r3,1152(sp)
   23ff8:	dc011f15 	stw	r16,1148(sp)
   23ffc:	008001c4 	movi	r2,7
   24000:	14000e16 	blt	r2,r16,2403c <___vfprintf_internal_r+0x11bc>
   24004:	8a000204 	addi	r8,r17,8
   24008:	003db006 	br	236cc <_gp+0xfffe62cc>
   2400c:	010000f4 	movhi	r4,3
   24010:	210da084 	addi	r4,r4,13954
   24014:	d9012c15 	stw	r4,1200(sp)
   24018:	d9012c17 	ldw	r4,1200(sp)
   2401c:	1c07883a 	add	r3,r3,r16
   24020:	44000115 	stw	r16,4(r8)
   24024:	41000015 	stw	r4,0(r8)
   24028:	10800044 	addi	r2,r2,1
   2402c:	d8c12015 	stw	r3,1152(sp)
   24030:	d8811f15 	stw	r2,1148(sp)
   24034:	010001c4 	movi	r4,7
   24038:	20bda30e 	bge	r4,r2,236c8 <_gp+0xfffe62c8>
   2403c:	b809883a 	mov	r4,r23
   24040:	b00b883a 	mov	r5,r22
   24044:	d9811e04 	addi	r6,sp,1144
   24048:	002b7880 	call	2b788 <__sprint_r>
   2404c:	103ca41e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   24050:	d8c12017 	ldw	r3,1152(sp)
   24054:	da000404 	addi	r8,sp,16
   24058:	003d9c06 	br	236cc <_gp+0xfffe62cc>
   2405c:	b809883a 	mov	r4,r23
   24060:	b00b883a 	mov	r5,r22
   24064:	d9811e04 	addi	r6,sp,1144
   24068:	002b7880 	call	2b788 <__sprint_r>
   2406c:	103dd226 	beq	r2,zero,237b8 <_gp+0xfffe63b8>
   24070:	003c9b06 	br	232e0 <_gp+0xfffe5ee0>
   24074:	10803fcc 	andi	r2,r2,255
   24078:	1000311e 	bne	r2,zero,24140 <___vfprintf_internal_r+0x12c0>
   2407c:	e080004c 	andi	r2,fp,1
   24080:	10002f26 	beq	r2,zero,24140 <___vfprintf_internal_r+0x12c0>
   24084:	00800c04 	movi	r2,48
   24088:	d8c10dc4 	addi	r3,sp,1079
   2408c:	d8810dc5 	stb	r2,1079(sp)
   24090:	dc413c17 	ldw	r17,1264(sp)
   24094:	d8c13115 	stw	r3,1220(sp)
   24098:	003cf406 	br	2346c <_gp+0xfffe606c>
   2409c:	b809883a 	mov	r4,r23
   240a0:	b00b883a 	mov	r5,r22
   240a4:	d9811e04 	addi	r6,sp,1144
   240a8:	002b7880 	call	2b788 <__sprint_r>
   240ac:	103c8c1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   240b0:	d8c12017 	ldw	r3,1152(sp)
   240b4:	da000404 	addi	r8,sp,16
   240b8:	003d7706 	br	23698 <_gp+0xfffe6298>
   240bc:	b809883a 	mov	r4,r23
   240c0:	b00b883a 	mov	r5,r22
   240c4:	d9811e04 	addi	r6,sp,1144
   240c8:	002b7880 	call	2b788 <__sprint_r>
   240cc:	103c841e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   240d0:	d8c12017 	ldw	r3,1152(sp)
   240d4:	da000404 	addi	r8,sp,16
   240d8:	003d3506 	br	235b0 <_gp+0xfffe61b0>
   240dc:	b809883a 	mov	r4,r23
   240e0:	b00b883a 	mov	r5,r22
   240e4:	d9811e04 	addi	r6,sp,1144
   240e8:	002b7880 	call	2b788 <__sprint_r>
   240ec:	103c7c1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   240f0:	d8c12017 	ldw	r3,1152(sp)
   240f4:	da000404 	addi	r8,sp,16
   240f8:	003d3b06 	br	235e8 <_gp+0xfffe61e8>
   240fc:	d9413b17 	ldw	r5,1260(sp)
   24100:	d8c10e04 	addi	r3,sp,1080
   24104:	908003cc 	andi	r2,r18,15
   24108:	a808973a 	slli	r4,r21,28
   2410c:	2885883a 	add	r2,r5,r2
   24110:	9024d13a 	srli	r18,r18,4
   24114:	10800003 	ldbu	r2,0(r2)
   24118:	a82ad13a 	srli	r21,r21,4
   2411c:	18ffffc4 	addi	r3,r3,-1
   24120:	24a4b03a 	or	r18,r4,r18
   24124:	18800005 	stb	r2,0(r3)
   24128:	9544b03a 	or	r2,r18,r21
   2412c:	103ff51e 	bne	r2,zero,24104 <_gp+0xfffe6d04>
   24130:	d9412817 	ldw	r5,1184(sp)
   24134:	d8c13115 	stw	r3,1220(sp)
   24138:	28e3c83a 	sub	r17,r5,r3
   2413c:	003ccb06 	br	2346c <_gp+0xfffe606c>
   24140:	d8c10e04 	addi	r3,sp,1080
   24144:	0023883a 	mov	r17,zero
   24148:	d8c13115 	stw	r3,1220(sp)
   2414c:	003cc706 	br	2346c <_gp+0xfffe606c>
   24150:	dc012617 	ldw	r16,1176(sp)
   24154:	0401ab0e 	bge	zero,r16,24804 <___vfprintf_internal_r+0x1984>
   24158:	d8813317 	ldw	r2,1228(sp)
   2415c:	d9413117 	ldw	r5,1220(sp)
   24160:	d9013417 	ldw	r4,1232(sp)
   24164:	1023883a 	mov	r17,r2
   24168:	28a1883a 	add	r16,r5,r2
   2416c:	2080010e 	bge	r4,r2,24174 <___vfprintf_internal_r+0x12f4>
   24170:	2023883a 	mov	r17,r4
   24174:	04400b0e 	bge	zero,r17,241a4 <___vfprintf_internal_r+0x1324>
   24178:	d8811f17 	ldw	r2,1148(sp)
   2417c:	d9413117 	ldw	r5,1220(sp)
   24180:	1c47883a 	add	r3,r3,r17
   24184:	10800044 	addi	r2,r2,1
   24188:	41400015 	stw	r5,0(r8)
   2418c:	44400115 	stw	r17,4(r8)
   24190:	d8c12015 	stw	r3,1152(sp)
   24194:	d8811f15 	stw	r2,1148(sp)
   24198:	010001c4 	movi	r4,7
   2419c:	20826716 	blt	r4,r2,24b3c <___vfprintf_internal_r+0x1cbc>
   241a0:	42000204 	addi	r8,r8,8
   241a4:	88026316 	blt	r17,zero,24b34 <___vfprintf_internal_r+0x1cb4>
   241a8:	d8813417 	ldw	r2,1232(sp)
   241ac:	1463c83a 	sub	r17,r2,r17
   241b0:	0440590e 	bge	zero,r17,24318 <___vfprintf_internal_r+0x1498>
   241b4:	04c00404 	movi	r19,16
   241b8:	d8811f17 	ldw	r2,1148(sp)
   241bc:	9c41770e 	bge	r19,r17,2479c <___vfprintf_internal_r+0x191c>
   241c0:	014000f4 	movhi	r5,3
   241c4:	294da084 	addi	r5,r5,13954
   241c8:	d9412c15 	stw	r5,1200(sp)
   241cc:	054001c4 	movi	r21,7
   241d0:	00000306 	br	241e0 <___vfprintf_internal_r+0x1360>
   241d4:	42000204 	addi	r8,r8,8
   241d8:	8c7ffc04 	addi	r17,r17,-16
   241dc:	9c41720e 	bge	r19,r17,247a8 <___vfprintf_internal_r+0x1928>
   241e0:	18c00404 	addi	r3,r3,16
   241e4:	10800044 	addi	r2,r2,1
   241e8:	45000015 	stw	r20,0(r8)
   241ec:	44c00115 	stw	r19,4(r8)
   241f0:	d8c12015 	stw	r3,1152(sp)
   241f4:	d8811f15 	stw	r2,1148(sp)
   241f8:	a8bff60e 	bge	r21,r2,241d4 <_gp+0xfffe6dd4>
   241fc:	b809883a 	mov	r4,r23
   24200:	b00b883a 	mov	r5,r22
   24204:	d9811e04 	addi	r6,sp,1144
   24208:	002b7880 	call	2b788 <__sprint_r>
   2420c:	103c341e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   24210:	d8c12017 	ldw	r3,1152(sp)
   24214:	d8811f17 	ldw	r2,1148(sp)
   24218:	da000404 	addi	r8,sp,16
   2421c:	003fee06 	br	241d8 <_gp+0xfffe6dd8>
   24220:	b809883a 	mov	r4,r23
   24224:	b00b883a 	mov	r5,r22
   24228:	d9811e04 	addi	r6,sp,1144
   2422c:	002b7880 	call	2b788 <__sprint_r>
   24230:	103c2b1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   24234:	d8c12017 	ldw	r3,1152(sp)
   24238:	d8812787 	ldb	r2,1182(sp)
   2423c:	da000404 	addi	r8,sp,16
   24240:	003cce06 	br	2357c <_gp+0xfffe617c>
   24244:	d8813317 	ldw	r2,1228(sp)
   24248:	14ffffc4 	addi	r19,r2,-1
   2424c:	04ff630e 	bge	zero,r19,23fdc <_gp+0xfffe6bdc>
   24250:	05400404 	movi	r21,16
   24254:	acc0810e 	bge	r21,r19,2445c <___vfprintf_internal_r+0x15dc>
   24258:	014000f4 	movhi	r5,3
   2425c:	294da084 	addi	r5,r5,13954
   24260:	d9412c15 	stw	r5,1200(sp)
   24264:	01c001c4 	movi	r7,7
   24268:	00000306 	br	24278 <___vfprintf_internal_r+0x13f8>
   2426c:	8c400204 	addi	r17,r17,8
   24270:	9cfffc04 	addi	r19,r19,-16
   24274:	acc07c0e 	bge	r21,r19,24468 <___vfprintf_internal_r+0x15e8>
   24278:	18c00404 	addi	r3,r3,16
   2427c:	84000044 	addi	r16,r16,1
   24280:	8d000015 	stw	r20,0(r17)
   24284:	8d400115 	stw	r21,4(r17)
   24288:	d8c12015 	stw	r3,1152(sp)
   2428c:	dc011f15 	stw	r16,1148(sp)
   24290:	3c3ff60e 	bge	r7,r16,2426c <_gp+0xfffe6e6c>
   24294:	b809883a 	mov	r4,r23
   24298:	b00b883a 	mov	r5,r22
   2429c:	d9811e04 	addi	r6,sp,1144
   242a0:	d9c13d15 	stw	r7,1268(sp)
   242a4:	002b7880 	call	2b788 <__sprint_r>
   242a8:	d9c13d17 	ldw	r7,1268(sp)
   242ac:	103c0c1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   242b0:	d8c12017 	ldw	r3,1152(sp)
   242b4:	dc011f17 	ldw	r16,1148(sp)
   242b8:	dc400404 	addi	r17,sp,16
   242bc:	003fec06 	br	24270 <_gp+0xfffe6e70>
   242c0:	00800084 	movi	r2,2
   242c4:	9546b03a 	or	r3,r18,r21
   242c8:	003d7d06 	br	238c0 <_gp+0xfffe64c0>
   242cc:	10803fcc 	andi	r2,r2,255
   242d0:	1080201c 	xori	r2,r2,128
   242d4:	10bfe004 	addi	r2,r2,-128
   242d8:	01000c04 	movi	r4,48
   242dc:	1101d726 	beq	r2,r4,24a3c <___vfprintf_internal_r+0x1bbc>
   242e0:	d9413117 	ldw	r5,1220(sp)
   242e4:	d8812817 	ldw	r2,1184(sp)
   242e8:	193fffc5 	stb	r4,-1(r3)
   242ec:	297fffc4 	addi	r5,r5,-1
   242f0:	d9413115 	stw	r5,1220(sp)
   242f4:	1163c83a 	sub	r17,r2,r5
   242f8:	003c5c06 	br	2346c <_gp+0xfffe606c>
   242fc:	b809883a 	mov	r4,r23
   24300:	b00b883a 	mov	r5,r22
   24304:	d9811e04 	addi	r6,sp,1144
   24308:	002b7880 	call	2b788 <__sprint_r>
   2430c:	103bf41e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   24310:	d8c12017 	ldw	r3,1152(sp)
   24314:	da000404 	addi	r8,sp,16
   24318:	d9413117 	ldw	r5,1220(sp)
   2431c:	d9013417 	ldw	r4,1232(sp)
   24320:	d8812617 	ldw	r2,1176(sp)
   24324:	2923883a 	add	r17,r5,r4
   24328:	d9413317 	ldw	r5,1228(sp)
   2432c:	11400216 	blt	r2,r5,24338 <___vfprintf_internal_r+0x14b8>
   24330:	e100004c 	andi	r4,fp,1
   24334:	20000d26 	beq	r4,zero,2436c <___vfprintf_internal_r+0x14ec>
   24338:	d9013817 	ldw	r4,1248(sp)
   2433c:	d9413517 	ldw	r5,1236(sp)
   24340:	1907883a 	add	r3,r3,r4
   24344:	d9011f17 	ldw	r4,1148(sp)
   24348:	41400015 	stw	r5,0(r8)
   2434c:	d9413817 	ldw	r5,1248(sp)
   24350:	21000044 	addi	r4,r4,1
   24354:	d8c12015 	stw	r3,1152(sp)
   24358:	41400115 	stw	r5,4(r8)
   2435c:	d9011f15 	stw	r4,1148(sp)
   24360:	014001c4 	movi	r5,7
   24364:	2901fd16 	blt	r5,r4,24b5c <___vfprintf_internal_r+0x1cdc>
   24368:	42000204 	addi	r8,r8,8
   2436c:	d9013317 	ldw	r4,1228(sp)
   24370:	2085c83a 	sub	r2,r4,r2
   24374:	8449c83a 	sub	r4,r16,r17
   24378:	1021883a 	mov	r16,r2
   2437c:	2080010e 	bge	r4,r2,24384 <___vfprintf_internal_r+0x1504>
   24380:	2021883a 	mov	r16,r4
   24384:	04000a0e 	bge	zero,r16,243b0 <___vfprintf_internal_r+0x1530>
   24388:	d9011f17 	ldw	r4,1148(sp)
   2438c:	1c07883a 	add	r3,r3,r16
   24390:	44400015 	stw	r17,0(r8)
   24394:	21000044 	addi	r4,r4,1
   24398:	44000115 	stw	r16,4(r8)
   2439c:	d8c12015 	stw	r3,1152(sp)
   243a0:	d9011f15 	stw	r4,1148(sp)
   243a4:	014001c4 	movi	r5,7
   243a8:	29020916 	blt	r5,r4,24bd0 <___vfprintf_internal_r+0x1d50>
   243ac:	42000204 	addi	r8,r8,8
   243b0:	80020116 	blt	r16,zero,24bb8 <___vfprintf_internal_r+0x1d38>
   243b4:	1421c83a 	sub	r16,r2,r16
   243b8:	043cc40e 	bge	zero,r16,236cc <_gp+0xfffe62cc>
   243bc:	04400404 	movi	r17,16
   243c0:	d8811f17 	ldw	r2,1148(sp)
   243c4:	8c3f110e 	bge	r17,r16,2400c <_gp+0xfffe6c0c>
   243c8:	014000f4 	movhi	r5,3
   243cc:	294da084 	addi	r5,r5,13954
   243d0:	d9412c15 	stw	r5,1200(sp)
   243d4:	04c001c4 	movi	r19,7
   243d8:	00000306 	br	243e8 <___vfprintf_internal_r+0x1568>
   243dc:	42000204 	addi	r8,r8,8
   243e0:	843ffc04 	addi	r16,r16,-16
   243e4:	8c3f0c0e 	bge	r17,r16,24018 <_gp+0xfffe6c18>
   243e8:	18c00404 	addi	r3,r3,16
   243ec:	10800044 	addi	r2,r2,1
   243f0:	45000015 	stw	r20,0(r8)
   243f4:	44400115 	stw	r17,4(r8)
   243f8:	d8c12015 	stw	r3,1152(sp)
   243fc:	d8811f15 	stw	r2,1148(sp)
   24400:	98bff60e 	bge	r19,r2,243dc <_gp+0xfffe6fdc>
   24404:	b809883a 	mov	r4,r23
   24408:	b00b883a 	mov	r5,r22
   2440c:	d9811e04 	addi	r6,sp,1144
   24410:	002b7880 	call	2b788 <__sprint_r>
   24414:	103bb21e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   24418:	d8c12017 	ldw	r3,1152(sp)
   2441c:	d8811f17 	ldw	r2,1148(sp)
   24420:	da000404 	addi	r8,sp,16
   24424:	003fee06 	br	243e0 <_gp+0xfffe6fe0>
   24428:	e088703a 	and	r4,fp,r2
   2442c:	203ec01e 	bne	r4,zero,23f30 <_gp+0xfffe6b30>
   24430:	dc011f17 	ldw	r16,1148(sp)
   24434:	d9013117 	ldw	r4,1220(sp)
   24438:	40800115 	stw	r2,4(r8)
   2443c:	84000044 	addi	r16,r16,1
   24440:	41000015 	stw	r4,0(r8)
   24444:	d8c12015 	stw	r3,1152(sp)
   24448:	dc011f15 	stw	r16,1148(sp)
   2444c:	008001c4 	movi	r2,7
   24450:	14000e16 	blt	r2,r16,2448c <___vfprintf_internal_r+0x160c>
   24454:	44400204 	addi	r17,r8,8
   24458:	003ee006 	br	23fdc <_gp+0xfffe6bdc>
   2445c:	010000f4 	movhi	r4,3
   24460:	210da084 	addi	r4,r4,13954
   24464:	d9012c15 	stw	r4,1200(sp)
   24468:	d8812c17 	ldw	r2,1200(sp)
   2446c:	1cc7883a 	add	r3,r3,r19
   24470:	84000044 	addi	r16,r16,1
   24474:	88800015 	stw	r2,0(r17)
   24478:	8cc00115 	stw	r19,4(r17)
   2447c:	d8c12015 	stw	r3,1152(sp)
   24480:	dc011f15 	stw	r16,1148(sp)
   24484:	008001c4 	movi	r2,7
   24488:	143ed30e 	bge	r2,r16,23fd8 <_gp+0xfffe6bd8>
   2448c:	b809883a 	mov	r4,r23
   24490:	b00b883a 	mov	r5,r22
   24494:	d9811e04 	addi	r6,sp,1144
   24498:	002b7880 	call	2b788 <__sprint_r>
   2449c:	103b901e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   244a0:	d8c12017 	ldw	r3,1152(sp)
   244a4:	dc011f17 	ldw	r16,1148(sp)
   244a8:	dc400404 	addi	r17,sp,16
   244ac:	003ecb06 	br	23fdc <_gp+0xfffe6bdc>
   244b0:	b809883a 	mov	r4,r23
   244b4:	b00b883a 	mov	r5,r22
   244b8:	d9811e04 	addi	r6,sp,1144
   244bc:	002b7880 	call	2b788 <__sprint_r>
   244c0:	103b871e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   244c4:	d8c12017 	ldw	r3,1152(sp)
   244c8:	dc011f17 	ldw	r16,1148(sp)
   244cc:	da000404 	addi	r8,sp,16
   244d0:	003ea206 	br	23f5c <_gp+0xfffe6b5c>
   244d4:	b809883a 	mov	r4,r23
   244d8:	b00b883a 	mov	r5,r22
   244dc:	d9811e04 	addi	r6,sp,1144
   244e0:	002b7880 	call	2b788 <__sprint_r>
   244e4:	103b7e1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   244e8:	d8c12017 	ldw	r3,1152(sp)
   244ec:	dc011f17 	ldw	r16,1148(sp)
   244f0:	dc400404 	addi	r17,sp,16
   244f4:	003ea406 	br	23f88 <_gp+0xfffe6b88>
   244f8:	b809883a 	mov	r4,r23
   244fc:	b00b883a 	mov	r5,r22
   24500:	d9811e04 	addi	r6,sp,1144
   24504:	002b7880 	call	2b788 <__sprint_r>
   24508:	103b751e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   2450c:	d8c12017 	ldw	r3,1152(sp)
   24510:	da000404 	addi	r8,sp,16
   24514:	003c3706 	br	235f4 <_gp+0xfffe61f4>
   24518:	04a5c83a 	sub	r18,zero,r18
   2451c:	9004c03a 	cmpne	r2,r18,zero
   24520:	056bc83a 	sub	r21,zero,r21
   24524:	a8abc83a 	sub	r21,r21,r2
   24528:	04c00b44 	movi	r19,45
   2452c:	dcc12785 	stb	r19,1182(sp)
   24530:	da413215 	stw	r9,1224(sp)
   24534:	00800044 	movi	r2,1
   24538:	9546b03a 	or	r3,r18,r21
   2453c:	003bb106 	br	23404 <_gp+0xfffe6004>
   24540:	da013f15 	stw	r8,1276(sp)
   24544:	da413e15 	stw	r9,1272(sp)
   24548:	002a04c0 	call	2a04c <__fpclassifyd>
   2454c:	da013f17 	ldw	r8,1276(sp)
   24550:	da413e17 	ldw	r9,1272(sp)
   24554:	1000e526 	beq	r2,zero,248ec <___vfprintf_internal_r+0x1a6c>
   24558:	04fff7c4 	movi	r19,-33
   2455c:	00bfffc4 	movi	r2,-1
   24560:	84e6703a 	and	r19,r16,r19
   24564:	48822926 	beq	r9,r2,24e0c <___vfprintf_internal_r+0x1f8c>
   24568:	008011c4 	movi	r2,71
   2456c:	98821626 	beq	r19,r2,24dc8 <___vfprintf_internal_r+0x1f48>
   24570:	d9013917 	ldw	r4,1252(sp)
   24574:	e0c04014 	ori	r3,fp,256
   24578:	d8c12d15 	stw	r3,1204(sp)
   2457c:	20021f16 	blt	r4,zero,24dfc <___vfprintf_internal_r+0x1f7c>
   24580:	dc413917 	ldw	r17,1252(sp)
   24584:	d8012b05 	stb	zero,1196(sp)
   24588:	00801984 	movi	r2,102
   2458c:	80814d26 	beq	r16,r2,24ac4 <___vfprintf_internal_r+0x1c44>
   24590:	00801184 	movi	r2,70
   24594:	80814b26 	beq	r16,r2,24ac4 <___vfprintf_internal_r+0x1c44>
   24598:	00801144 	movi	r2,69
   2459c:	98821d26 	beq	r19,r2,24e14 <___vfprintf_internal_r+0x1f94>
   245a0:	482b883a 	mov	r21,r9
   245a4:	d8812604 	addi	r2,sp,1176
   245a8:	d8800115 	stw	r2,4(sp)
   245ac:	d9413717 	ldw	r5,1244(sp)
   245b0:	d8812504 	addi	r2,sp,1172
   245b4:	d8800215 	stw	r2,8(sp)
   245b8:	d8812104 	addi	r2,sp,1156
   245bc:	dd400015 	stw	r21,0(sp)
   245c0:	d8800315 	stw	r2,12(sp)
   245c4:	b809883a 	mov	r4,r23
   245c8:	880d883a 	mov	r6,r17
   245cc:	01c00084 	movi	r7,2
   245d0:	da013f15 	stw	r8,1276(sp)
   245d4:	da413e15 	stw	r9,1272(sp)
   245d8:	00254280 	call	25428 <_dtoa_r>
   245dc:	d8813115 	stw	r2,1220(sp)
   245e0:	008019c4 	movi	r2,103
   245e4:	da013f17 	ldw	r8,1276(sp)
   245e8:	da413e17 	ldw	r9,1272(sp)
   245ec:	80800226 	beq	r16,r2,245f8 <___vfprintf_internal_r+0x1778>
   245f0:	008011c4 	movi	r2,71
   245f4:	8081451e 	bne	r16,r2,24b0c <___vfprintf_internal_r+0x1c8c>
   245f8:	e080004c 	andi	r2,fp,1
   245fc:	10021e26 	beq	r2,zero,24e78 <___vfprintf_internal_r+0x1ff8>
   24600:	d8c13117 	ldw	r3,1220(sp)
   24604:	1d55883a 	add	r10,r3,r21
   24608:	d9013717 	ldw	r4,1244(sp)
   2460c:	880b883a 	mov	r5,r17
   24610:	000d883a 	mov	r6,zero
   24614:	000f883a 	mov	r7,zero
   24618:	da013f15 	stw	r8,1276(sp)
   2461c:	da413e15 	stw	r9,1272(sp)
   24620:	da813d15 	stw	r10,1268(sp)
   24624:	002f5000 	call	2f500 <__eqdf2>
   24628:	da013f17 	ldw	r8,1276(sp)
   2462c:	da413e17 	ldw	r9,1272(sp)
   24630:	da813d17 	ldw	r10,1268(sp)
   24634:	1001a126 	beq	r2,zero,24cbc <___vfprintf_internal_r+0x1e3c>
   24638:	d8812117 	ldw	r2,1156(sp)
   2463c:	1280062e 	bgeu	r2,r10,24658 <___vfprintf_internal_r+0x17d8>
   24640:	01000c04 	movi	r4,48
   24644:	10c00044 	addi	r3,r2,1
   24648:	d8c12115 	stw	r3,1156(sp)
   2464c:	11000005 	stb	r4,0(r2)
   24650:	d8812117 	ldw	r2,1156(sp)
   24654:	12bffb36 	bltu	r2,r10,24644 <_gp+0xfffe7244>
   24658:	d8c13117 	ldw	r3,1220(sp)
   2465c:	10c5c83a 	sub	r2,r2,r3
   24660:	d8813315 	stw	r2,1228(sp)
   24664:	008011c4 	movi	r2,71
   24668:	98818926 	beq	r19,r2,24c90 <___vfprintf_internal_r+0x1e10>
   2466c:	00801944 	movi	r2,101
   24670:	14023c0e 	bge	r2,r16,24f64 <___vfprintf_internal_r+0x20e4>
   24674:	d8c12617 	ldw	r3,1176(sp)
   24678:	00801984 	movi	r2,102
   2467c:	d8c13415 	stw	r3,1232(sp)
   24680:	8081ef26 	beq	r16,r2,24e40 <___vfprintf_internal_r+0x1fc0>
   24684:	d8c13417 	ldw	r3,1232(sp)
   24688:	d9013317 	ldw	r4,1228(sp)
   2468c:	1901e316 	blt	r3,r4,24e1c <___vfprintf_internal_r+0x1f9c>
   24690:	e080004c 	andi	r2,fp,1
   24694:	1001f426 	beq	r2,zero,24e68 <___vfprintf_internal_r+0x1fe8>
   24698:	d8c13417 	ldw	r3,1232(sp)
   2469c:	1c400044 	addi	r17,r3,1
   246a0:	8839883a 	mov	fp,r17
   246a4:	8801e416 	blt	r17,zero,24e38 <___vfprintf_internal_r+0x1fb8>
   246a8:	dd412b07 	ldb	r21,1196(sp)
   246ac:	a801701e 	bne	r21,zero,24c70 <___vfprintf_internal_r+0x1df0>
   246b0:	df012b15 	stw	fp,1196(sp)
   246b4:	dcc12783 	ldbu	r19,1182(sp)
   246b8:	df012d17 	ldw	fp,1204(sp)
   246bc:	d8013215 	stw	zero,1224(sp)
   246c0:	dc812d15 	stw	r18,1204(sp)
   246c4:	003b6e06 	br	23480 <_gp+0xfffe6080>
   246c8:	e080040c 	andi	r2,fp,16
   246cc:	1000b51e 	bne	r2,zero,249a4 <___vfprintf_internal_r+0x1b24>
   246d0:	e080100c 	andi	r2,fp,64
   246d4:	10015b26 	beq	r2,zero,24c44 <___vfprintf_internal_r+0x1dc4>
   246d8:	d9012d17 	ldw	r4,1204(sp)
   246dc:	d9412f17 	ldw	r5,1212(sp)
   246e0:	20800017 	ldw	r2,0(r4)
   246e4:	21000104 	addi	r4,r4,4
   246e8:	d9012d15 	stw	r4,1204(sp)
   246ec:	1140000d 	sth	r5,0(r2)
   246f0:	003a2006 	br	22f74 <_gp+0xfffe5b74>
   246f4:	e0c0100c 	andi	r3,fp,64
   246f8:	1800a226 	beq	r3,zero,24984 <___vfprintf_internal_r+0x1b04>
   246fc:	d8c12d17 	ldw	r3,1204(sp)
   24700:	1480000b 	ldhu	r18,0(r2)
   24704:	002b883a 	mov	r21,zero
   24708:	18c00104 	addi	r3,r3,4
   2470c:	d8c12d15 	stw	r3,1204(sp)
   24710:	0005883a 	mov	r2,zero
   24714:	9007883a 	mov	r3,r18
   24718:	003c6906 	br	238c0 <_gp+0xfffe64c0>
   2471c:	e0c0100c 	andi	r3,fp,64
   24720:	18009026 	beq	r3,zero,24964 <___vfprintf_internal_r+0x1ae4>
   24724:	1480000b 	ldhu	r18,0(r2)
   24728:	d8812d17 	ldw	r2,1204(sp)
   2472c:	002b883a 	mov	r21,zero
   24730:	9007883a 	mov	r3,r18
   24734:	10800104 	addi	r2,r2,4
   24738:	d8812d15 	stw	r2,1204(sp)
   2473c:	00800044 	movi	r2,1
   24740:	003c5f06 	br	238c0 <_gp+0xfffe64c0>
   24744:	e0c0100c 	andi	r3,fp,64
   24748:	18008026 	beq	r3,zero,2494c <___vfprintf_internal_r+0x1acc>
   2474c:	d9012d17 	ldw	r4,1204(sp)
   24750:	1480000b 	ldhu	r18,0(r2)
   24754:	002b883a 	mov	r21,zero
   24758:	21000104 	addi	r4,r4,4
   2475c:	d9012d15 	stw	r4,1204(sp)
   24760:	003c7906 	br	23948 <_gp+0xfffe6548>
   24764:	e080100c 	andi	r2,fp,64
   24768:	10007126 	beq	r2,zero,24930 <___vfprintf_internal_r+0x1ab0>
   2476c:	1c80000f 	ldh	r18,0(r3)
   24770:	d8812d17 	ldw	r2,1204(sp)
   24774:	902bd7fa 	srai	r21,r18,31
   24778:	10800104 	addi	r2,r2,4
   2477c:	d8812d15 	stw	r2,1204(sp)
   24780:	a805883a 	mov	r2,r21
   24784:	003b1a06 	br	233f0 <_gp+0xfffe5ff0>
   24788:	e4000007 	ldb	r16,0(fp)
   2478c:	e005883a 	mov	r2,fp
   24790:	003a2306 	br	23020 <_gp+0xfffe5c20>
   24794:	00800084 	movi	r2,2
   24798:	003c4906 	br	238c0 <_gp+0xfffe64c0>
   2479c:	010000f4 	movhi	r4,3
   247a0:	210da084 	addi	r4,r4,13954
   247a4:	d9012c15 	stw	r4,1200(sp)
   247a8:	d9012c17 	ldw	r4,1200(sp)
   247ac:	1c47883a 	add	r3,r3,r17
   247b0:	10800044 	addi	r2,r2,1
   247b4:	41000015 	stw	r4,0(r8)
   247b8:	44400115 	stw	r17,4(r8)
   247bc:	d8c12015 	stw	r3,1152(sp)
   247c0:	d8811f15 	stw	r2,1148(sp)
   247c4:	010001c4 	movi	r4,7
   247c8:	20becc16 	blt	r4,r2,242fc <_gp+0xfffe6efc>
   247cc:	42000204 	addi	r8,r8,8
   247d0:	003ed106 	br	24318 <_gp+0xfffe6f18>
   247d4:	010000f4 	movhi	r4,3
   247d8:	210da084 	addi	r4,r4,13954
   247dc:	d9012c15 	stw	r4,1200(sp)
   247e0:	003ba306 	br	23670 <_gp+0xfffe6270>
   247e4:	b809883a 	mov	r4,r23
   247e8:	b00b883a 	mov	r5,r22
   247ec:	d9811e04 	addi	r6,sp,1144
   247f0:	002b7880 	call	2b788 <__sprint_r>
   247f4:	103aba1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   247f8:	d8c12017 	ldw	r3,1152(sp)
   247fc:	da000404 	addi	r8,sp,16
   24800:	003d6c06 	br	23db4 <_gp+0xfffe69b4>
   24804:	d8811f17 	ldw	r2,1148(sp)
   24808:	014000f4 	movhi	r5,3
   2480c:	01000044 	movi	r4,1
   24810:	18c00044 	addi	r3,r3,1
   24814:	10800044 	addi	r2,r2,1
   24818:	294d9804 	addi	r5,r5,13920
   2481c:	41000115 	stw	r4,4(r8)
   24820:	41400015 	stw	r5,0(r8)
   24824:	d8c12015 	stw	r3,1152(sp)
   24828:	d8811f15 	stw	r2,1148(sp)
   2482c:	010001c4 	movi	r4,7
   24830:	20806716 	blt	r4,r2,249d0 <___vfprintf_internal_r+0x1b50>
   24834:	42000204 	addi	r8,r8,8
   24838:	8000041e 	bne	r16,zero,2484c <___vfprintf_internal_r+0x19cc>
   2483c:	d8813317 	ldw	r2,1228(sp)
   24840:	1000021e 	bne	r2,zero,2484c <___vfprintf_internal_r+0x19cc>
   24844:	e080004c 	andi	r2,fp,1
   24848:	103ba026 	beq	r2,zero,236cc <_gp+0xfffe62cc>
   2484c:	d9013817 	ldw	r4,1248(sp)
   24850:	d8811f17 	ldw	r2,1148(sp)
   24854:	d9413517 	ldw	r5,1236(sp)
   24858:	1907883a 	add	r3,r3,r4
   2485c:	10800044 	addi	r2,r2,1
   24860:	41000115 	stw	r4,4(r8)
   24864:	41400015 	stw	r5,0(r8)
   24868:	d8c12015 	stw	r3,1152(sp)
   2486c:	d8811f15 	stw	r2,1148(sp)
   24870:	010001c4 	movi	r4,7
   24874:	20815716 	blt	r4,r2,24dd4 <___vfprintf_internal_r+0x1f54>
   24878:	42000204 	addi	r8,r8,8
   2487c:	0421c83a 	sub	r16,zero,r16
   24880:	0400810e 	bge	zero,r16,24a88 <___vfprintf_internal_r+0x1c08>
   24884:	04400404 	movi	r17,16
   24888:	8c00bd0e 	bge	r17,r16,24b80 <___vfprintf_internal_r+0x1d00>
   2488c:	014000f4 	movhi	r5,3
   24890:	294da084 	addi	r5,r5,13954
   24894:	d9412c15 	stw	r5,1200(sp)
   24898:	04c001c4 	movi	r19,7
   2489c:	00000306 	br	248ac <___vfprintf_internal_r+0x1a2c>
   248a0:	42000204 	addi	r8,r8,8
   248a4:	843ffc04 	addi	r16,r16,-16
   248a8:	8c00b80e 	bge	r17,r16,24b8c <___vfprintf_internal_r+0x1d0c>
   248ac:	18c00404 	addi	r3,r3,16
   248b0:	10800044 	addi	r2,r2,1
   248b4:	45000015 	stw	r20,0(r8)
   248b8:	44400115 	stw	r17,4(r8)
   248bc:	d8c12015 	stw	r3,1152(sp)
   248c0:	d8811f15 	stw	r2,1148(sp)
   248c4:	98bff60e 	bge	r19,r2,248a0 <_gp+0xfffe74a0>
   248c8:	b809883a 	mov	r4,r23
   248cc:	b00b883a 	mov	r5,r22
   248d0:	d9811e04 	addi	r6,sp,1144
   248d4:	002b7880 	call	2b788 <__sprint_r>
   248d8:	103a811e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   248dc:	d8c12017 	ldw	r3,1152(sp)
   248e0:	d8811f17 	ldw	r2,1148(sp)
   248e4:	da000404 	addi	r8,sp,16
   248e8:	003fee06 	br	248a4 <_gp+0xfffe74a4>
   248ec:	008011c4 	movi	r2,71
   248f0:	1400db16 	blt	r2,r16,24c60 <___vfprintf_internal_r+0x1de0>
   248f4:	010000f4 	movhi	r4,3
   248f8:	210d8a04 	addi	r4,r4,13864
   248fc:	d9013115 	stw	r4,1220(sp)
   24900:	00c000c4 	movi	r3,3
   24904:	00bfdfc4 	movi	r2,-129
   24908:	d8c12b15 	stw	r3,1196(sp)
   2490c:	e0b8703a 	and	fp,fp,r2
   24910:	dcc12783 	ldbu	r19,1182(sp)
   24914:	dc812d15 	stw	r18,1204(sp)
   24918:	1823883a 	mov	r17,r3
   2491c:	d8013215 	stw	zero,1224(sp)
   24920:	d8013415 	stw	zero,1232(sp)
   24924:	003ad606 	br	23480 <_gp+0xfffe6080>
   24928:	4823883a 	mov	r17,r9
   2492c:	003cc906 	br	23c54 <_gp+0xfffe6854>
   24930:	1c800017 	ldw	r18,0(r3)
   24934:	d8c12d17 	ldw	r3,1204(sp)
   24938:	902bd7fa 	srai	r21,r18,31
   2493c:	18c00104 	addi	r3,r3,4
   24940:	d8c12d15 	stw	r3,1204(sp)
   24944:	a805883a 	mov	r2,r21
   24948:	003aa906 	br	233f0 <_gp+0xfffe5ff0>
   2494c:	d9412d17 	ldw	r5,1204(sp)
   24950:	14800017 	ldw	r18,0(r2)
   24954:	002b883a 	mov	r21,zero
   24958:	29400104 	addi	r5,r5,4
   2495c:	d9412d15 	stw	r5,1204(sp)
   24960:	003bf906 	br	23948 <_gp+0xfffe6548>
   24964:	d8c12d17 	ldw	r3,1204(sp)
   24968:	14800017 	ldw	r18,0(r2)
   2496c:	002b883a 	mov	r21,zero
   24970:	18c00104 	addi	r3,r3,4
   24974:	d8c12d15 	stw	r3,1204(sp)
   24978:	00800044 	movi	r2,1
   2497c:	9007883a 	mov	r3,r18
   24980:	003bcf06 	br	238c0 <_gp+0xfffe64c0>
   24984:	d9012d17 	ldw	r4,1204(sp)
   24988:	14800017 	ldw	r18,0(r2)
   2498c:	002b883a 	mov	r21,zero
   24990:	21000104 	addi	r4,r4,4
   24994:	d9012d15 	stw	r4,1204(sp)
   24998:	0005883a 	mov	r2,zero
   2499c:	9007883a 	mov	r3,r18
   249a0:	003bc706 	br	238c0 <_gp+0xfffe64c0>
   249a4:	d9412d17 	ldw	r5,1204(sp)
   249a8:	d8c12f17 	ldw	r3,1212(sp)
   249ac:	28800017 	ldw	r2,0(r5)
   249b0:	29400104 	addi	r5,r5,4
   249b4:	d9412d15 	stw	r5,1204(sp)
   249b8:	10c00015 	stw	r3,0(r2)
   249bc:	00396d06 	br	22f74 <_gp+0xfffe5b74>
   249c0:	010000f4 	movhi	r4,3
   249c4:	210d8804 	addi	r4,r4,13856
   249c8:	d9013115 	stw	r4,1220(sp)
   249cc:	003ba206 	br	23858 <_gp+0xfffe6458>
   249d0:	b809883a 	mov	r4,r23
   249d4:	b00b883a 	mov	r5,r22
   249d8:	d9811e04 	addi	r6,sp,1144
   249dc:	002b7880 	call	2b788 <__sprint_r>
   249e0:	103a3f1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   249e4:	dc012617 	ldw	r16,1176(sp)
   249e8:	d8c12017 	ldw	r3,1152(sp)
   249ec:	da000404 	addi	r8,sp,16
   249f0:	003f9106 	br	24838 <_gp+0xfffe7438>
   249f4:	e0800044 	addi	r2,fp,1
   249f8:	9cc00814 	ori	r19,r19,32
   249fc:	e4000047 	ldb	r16,1(fp)
   24a00:	00398706 	br	23020 <_gp+0xfffe5c20>
   24a04:	d8812e17 	ldw	r2,1208(sp)
   24a08:	d8c12d15 	stw	r3,1204(sp)
   24a0c:	0085c83a 	sub	r2,zero,r2
   24a10:	d8812e15 	stw	r2,1208(sp)
   24a14:	e005883a 	mov	r2,fp
   24a18:	003a3a06 	br	23304 <_gp+0xfffe5f04>
   24a1c:	b809883a 	mov	r4,r23
   24a20:	b00b883a 	mov	r5,r22
   24a24:	d9811e04 	addi	r6,sp,1144
   24a28:	002b7880 	call	2b788 <__sprint_r>
   24a2c:	103a2c1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   24a30:	d8c12017 	ldw	r3,1152(sp)
   24a34:	da000404 	addi	r8,sp,16
   24a38:	003cf006 	br	23dfc <_gp+0xfffe69fc>
   24a3c:	d8c12817 	ldw	r3,1184(sp)
   24a40:	d9013117 	ldw	r4,1220(sp)
   24a44:	1923c83a 	sub	r17,r3,r4
   24a48:	003a8806 	br	2346c <_gp+0xfffe606c>
   24a4c:	da013f15 	stw	r8,1276(sp)
   24a50:	0020d780 	call	20d78 <strlen>
   24a54:	1023883a 	mov	r17,r2
   24a58:	da013f17 	ldw	r8,1276(sp)
   24a5c:	883c7f0e 	bge	r17,zero,23c5c <_gp+0xfffe685c>
   24a60:	0005883a 	mov	r2,zero
   24a64:	003c7d06 	br	23c5c <_gp+0xfffe685c>
   24a68:	b809883a 	mov	r4,r23
   24a6c:	b00b883a 	mov	r5,r22
   24a70:	d9811e04 	addi	r6,sp,1144
   24a74:	002b7880 	call	2b788 <__sprint_r>
   24a78:	103a191e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   24a7c:	d8c12017 	ldw	r3,1152(sp)
   24a80:	d8811f17 	ldw	r2,1148(sp)
   24a84:	da000404 	addi	r8,sp,16
   24a88:	d9413317 	ldw	r5,1228(sp)
   24a8c:	d9013117 	ldw	r4,1220(sp)
   24a90:	10800044 	addi	r2,r2,1
   24a94:	28c7883a 	add	r3,r5,r3
   24a98:	41000015 	stw	r4,0(r8)
   24a9c:	41400115 	stw	r5,4(r8)
   24aa0:	d8c12015 	stw	r3,1152(sp)
   24aa4:	d8811f15 	stw	r2,1148(sp)
   24aa8:	010001c4 	movi	r4,7
   24aac:	20bb060e 	bge	r4,r2,236c8 <_gp+0xfffe62c8>
   24ab0:	003d6206 	br	2403c <_gp+0xfffe6c3c>
   24ab4:	010000f4 	movhi	r4,3
   24ab8:	210da484 	addi	r4,r4,13970
   24abc:	d9013615 	stw	r4,1240(sp)
   24ac0:	003aa306 	br	23550 <_gp+0xfffe6150>
   24ac4:	d8812604 	addi	r2,sp,1176
   24ac8:	d8800115 	stw	r2,4(sp)
   24acc:	d9413717 	ldw	r5,1244(sp)
   24ad0:	d8812504 	addi	r2,sp,1172
   24ad4:	d8800215 	stw	r2,8(sp)
   24ad8:	d8812104 	addi	r2,sp,1156
   24adc:	da400015 	stw	r9,0(sp)
   24ae0:	d8800315 	stw	r2,12(sp)
   24ae4:	b809883a 	mov	r4,r23
   24ae8:	880d883a 	mov	r6,r17
   24aec:	01c000c4 	movi	r7,3
   24af0:	da013f15 	stw	r8,1276(sp)
   24af4:	da413e15 	stw	r9,1272(sp)
   24af8:	00254280 	call	25428 <_dtoa_r>
   24afc:	da413e17 	ldw	r9,1272(sp)
   24b00:	da013f17 	ldw	r8,1276(sp)
   24b04:	d8813115 	stw	r2,1220(sp)
   24b08:	482b883a 	mov	r21,r9
   24b0c:	d8c13117 	ldw	r3,1220(sp)
   24b10:	00801184 	movi	r2,70
   24b14:	1d55883a 	add	r10,r3,r21
   24b18:	98bebb1e 	bne	r19,r2,24608 <_gp+0xfffe7208>
   24b1c:	19000007 	ldb	r4,0(r3)
   24b20:	00800c04 	movi	r2,48
   24b24:	2080dd26 	beq	r4,r2,24e9c <___vfprintf_internal_r+0x201c>
   24b28:	d8c12617 	ldw	r3,1176(sp)
   24b2c:	50d5883a 	add	r10,r10,r3
   24b30:	003eb506 	br	24608 <_gp+0xfffe7208>
   24b34:	0023883a 	mov	r17,zero
   24b38:	003d9b06 	br	241a8 <_gp+0xfffe6da8>
   24b3c:	b809883a 	mov	r4,r23
   24b40:	b00b883a 	mov	r5,r22
   24b44:	d9811e04 	addi	r6,sp,1144
   24b48:	002b7880 	call	2b788 <__sprint_r>
   24b4c:	1039e41e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   24b50:	d8c12017 	ldw	r3,1152(sp)
   24b54:	da000404 	addi	r8,sp,16
   24b58:	003d9206 	br	241a4 <_gp+0xfffe6da4>
   24b5c:	b809883a 	mov	r4,r23
   24b60:	b00b883a 	mov	r5,r22
   24b64:	d9811e04 	addi	r6,sp,1144
   24b68:	002b7880 	call	2b788 <__sprint_r>
   24b6c:	1039dc1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   24b70:	d8812617 	ldw	r2,1176(sp)
   24b74:	d8c12017 	ldw	r3,1152(sp)
   24b78:	da000404 	addi	r8,sp,16
   24b7c:	003dfb06 	br	2436c <_gp+0xfffe6f6c>
   24b80:	010000f4 	movhi	r4,3
   24b84:	210da084 	addi	r4,r4,13954
   24b88:	d9012c15 	stw	r4,1200(sp)
   24b8c:	d9012c17 	ldw	r4,1200(sp)
   24b90:	1c07883a 	add	r3,r3,r16
   24b94:	10800044 	addi	r2,r2,1
   24b98:	41000015 	stw	r4,0(r8)
   24b9c:	44000115 	stw	r16,4(r8)
   24ba0:	d8c12015 	stw	r3,1152(sp)
   24ba4:	d8811f15 	stw	r2,1148(sp)
   24ba8:	010001c4 	movi	r4,7
   24bac:	20bfae16 	blt	r4,r2,24a68 <_gp+0xfffe7668>
   24bb0:	42000204 	addi	r8,r8,8
   24bb4:	003fb406 	br	24a88 <_gp+0xfffe7688>
   24bb8:	0021883a 	mov	r16,zero
   24bbc:	003dfd06 	br	243b4 <_gp+0xfffe6fb4>
   24bc0:	014000f4 	movhi	r5,3
   24bc4:	294da484 	addi	r5,r5,13970
   24bc8:	d9413615 	stw	r5,1240(sp)
   24bcc:	003ae306 	br	2375c <_gp+0xfffe635c>
   24bd0:	b809883a 	mov	r4,r23
   24bd4:	b00b883a 	mov	r5,r22
   24bd8:	d9811e04 	addi	r6,sp,1144
   24bdc:	002b7880 	call	2b788 <__sprint_r>
   24be0:	1039bf1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   24be4:	d8812617 	ldw	r2,1176(sp)
   24be8:	d9413317 	ldw	r5,1228(sp)
   24bec:	d8c12017 	ldw	r3,1152(sp)
   24bf0:	da000404 	addi	r8,sp,16
   24bf4:	2885c83a 	sub	r2,r5,r2
   24bf8:	003ded06 	br	243b0 <_gp+0xfffe6fb0>
   24bfc:	00800184 	movi	r2,6
   24c00:	1240012e 	bgeu	r2,r9,24c08 <___vfprintf_internal_r+0x1d88>
   24c04:	1013883a 	mov	r9,r2
   24c08:	4823883a 	mov	r17,r9
   24c0c:	4805883a 	mov	r2,r9
   24c10:	4800b216 	blt	r9,zero,24edc <___vfprintf_internal_r+0x205c>
   24c14:	014000f4 	movhi	r5,3
   24c18:	294d9604 	addi	r5,r5,13912
   24c1c:	d8812b15 	stw	r2,1196(sp)
   24c20:	dc812d15 	stw	r18,1204(sp)
   24c24:	d8013215 	stw	zero,1224(sp)
   24c28:	d8013415 	stw	zero,1232(sp)
   24c2c:	d9413115 	stw	r5,1220(sp)
   24c30:	0005883a 	mov	r2,zero
   24c34:	003a1906 	br	2349c <_gp+0xfffe609c>
   24c38:	04c00b44 	movi	r19,45
   24c3c:	dcc12785 	stb	r19,1182(sp)
   24c40:	003b0006 	br	23844 <_gp+0xfffe6444>
   24c44:	d8c12d17 	ldw	r3,1204(sp)
   24c48:	d9012f17 	ldw	r4,1212(sp)
   24c4c:	18800017 	ldw	r2,0(r3)
   24c50:	18c00104 	addi	r3,r3,4
   24c54:	d8c12d15 	stw	r3,1204(sp)
   24c58:	11000015 	stw	r4,0(r2)
   24c5c:	0038c506 	br	22f74 <_gp+0xfffe5b74>
   24c60:	014000f4 	movhi	r5,3
   24c64:	294d8b04 	addi	r5,r5,13868
   24c68:	d9413115 	stw	r5,1220(sp)
   24c6c:	003f2406 	br	24900 <_gp+0xfffe7500>
   24c70:	00800b44 	movi	r2,45
   24c74:	d8812785 	stb	r2,1182(sp)
   24c78:	df012b15 	stw	fp,1196(sp)
   24c7c:	d8013215 	stw	zero,1224(sp)
   24c80:	df012d17 	ldw	fp,1204(sp)
   24c84:	00800b44 	movi	r2,45
   24c88:	dc812d15 	stw	r18,1204(sp)
   24c8c:	003a0006 	br	23490 <_gp+0xfffe6090>
   24c90:	d8c12617 	ldw	r3,1176(sp)
   24c94:	00bfff44 	movi	r2,-3
   24c98:	18800a16 	blt	r3,r2,24cc4 <___vfprintf_internal_r+0x1e44>
   24c9c:	48c00916 	blt	r9,r3,24cc4 <___vfprintf_internal_r+0x1e44>
   24ca0:	d8c13415 	stw	r3,1232(sp)
   24ca4:	040019c4 	movi	r16,103
   24ca8:	003e7606 	br	24684 <_gp+0xfffe7284>
   24cac:	010000f4 	movhi	r4,3
   24cb0:	210da084 	addi	r4,r4,13954
   24cb4:	d9012c15 	stw	r4,1200(sp)
   24cb8:	003c8e06 	br	23ef4 <_gp+0xfffe6af4>
   24cbc:	5005883a 	mov	r2,r10
   24cc0:	003e6506 	br	24658 <_gp+0xfffe7258>
   24cc4:	843fff84 	addi	r16,r16,-2
   24cc8:	1d7fffc4 	addi	r21,r3,-1
   24ccc:	dd412615 	stw	r21,1176(sp)
   24cd0:	dc0122c5 	stb	r16,1163(sp)
   24cd4:	a8009216 	blt	r21,zero,24f20 <___vfprintf_internal_r+0x20a0>
   24cd8:	00800ac4 	movi	r2,43
   24cdc:	d8812305 	stb	r2,1164(sp)
   24ce0:	00800244 	movi	r2,9
   24ce4:	1540660e 	bge	r2,r21,24e80 <___vfprintf_internal_r+0x2000>
   24ce8:	dcc122c4 	addi	r19,sp,1163
   24cec:	dc012c15 	stw	r16,1200(sp)
   24cf0:	4023883a 	mov	r17,r8
   24cf4:	9821883a 	mov	r16,r19
   24cf8:	a809883a 	mov	r4,r21
   24cfc:	01400284 	movi	r5,10
   24d00:	002e2500 	call	2e250 <__modsi3>
   24d04:	10800c04 	addi	r2,r2,48
   24d08:	843fffc4 	addi	r16,r16,-1
   24d0c:	a809883a 	mov	r4,r21
   24d10:	01400284 	movi	r5,10
   24d14:	80800005 	stb	r2,0(r16)
   24d18:	002e1fc0 	call	2e1fc <__divsi3>
   24d1c:	01000244 	movi	r4,9
   24d20:	102b883a 	mov	r21,r2
   24d24:	20bff416 	blt	r4,r2,24cf8 <_gp+0xfffe78f8>
   24d28:	8811883a 	mov	r8,r17
   24d2c:	10800c04 	addi	r2,r2,48
   24d30:	8023883a 	mov	r17,r16
   24d34:	897fffc4 	addi	r5,r17,-1
   24d38:	88bfffc5 	stb	r2,-1(r17)
   24d3c:	dc012c17 	ldw	r16,1200(sp)
   24d40:	2cc08a2e 	bgeu	r5,r19,24f6c <___vfprintf_internal_r+0x20ec>
   24d44:	d9812384 	addi	r6,sp,1166
   24d48:	344dc83a 	sub	r6,r6,r17
   24d4c:	d9012344 	addi	r4,sp,1165
   24d50:	998d883a 	add	r6,r19,r6
   24d54:	00000106 	br	24d5c <___vfprintf_internal_r+0x1edc>
   24d58:	28800003 	ldbu	r2,0(r5)
   24d5c:	20800005 	stb	r2,0(r4)
   24d60:	21000044 	addi	r4,r4,1
   24d64:	29400044 	addi	r5,r5,1
   24d68:	21bffb1e 	bne	r4,r6,24d58 <_gp+0xfffe7958>
   24d6c:	d8812304 	addi	r2,sp,1164
   24d70:	1445c83a 	sub	r2,r2,r17
   24d74:	d9412344 	addi	r5,sp,1165
   24d78:	2885883a 	add	r2,r5,r2
   24d7c:	14e7c83a 	sub	r19,r2,r19
   24d80:	d8813317 	ldw	r2,1228(sp)
   24d84:	d8c13317 	ldw	r3,1228(sp)
   24d88:	dcc13a15 	stw	r19,1256(sp)
   24d8c:	14e3883a 	add	r17,r2,r19
   24d90:	00800044 	movi	r2,1
   24d94:	10c0550e 	bge	r2,r3,24eec <___vfprintf_internal_r+0x206c>
   24d98:	8c400044 	addi	r17,r17,1
   24d9c:	8839883a 	mov	fp,r17
   24da0:	88005016 	blt	r17,zero,24ee4 <___vfprintf_internal_r+0x2064>
   24da4:	d8013415 	stw	zero,1232(sp)
   24da8:	003e3f06 	br	246a8 <_gp+0xfffe72a8>
   24dac:	da412b15 	stw	r9,1196(sp)
   24db0:	dcc12783 	ldbu	r19,1182(sp)
   24db4:	4823883a 	mov	r17,r9
   24db8:	dc812d15 	stw	r18,1204(sp)
   24dbc:	d8013215 	stw	zero,1224(sp)
   24dc0:	d8013415 	stw	zero,1232(sp)
   24dc4:	0039ae06 	br	23480 <_gp+0xfffe6080>
   24dc8:	483de91e 	bne	r9,zero,24570 <_gp+0xfffe7170>
   24dcc:	8813883a 	mov	r9,r17
   24dd0:	003de706 	br	24570 <_gp+0xfffe7170>
   24dd4:	b809883a 	mov	r4,r23
   24dd8:	b00b883a 	mov	r5,r22
   24ddc:	d9811e04 	addi	r6,sp,1144
   24de0:	002b7880 	call	2b788 <__sprint_r>
   24de4:	10393e1e 	bne	r2,zero,232e0 <_gp+0xfffe5ee0>
   24de8:	dc012617 	ldw	r16,1176(sp)
   24dec:	d8c12017 	ldw	r3,1152(sp)
   24df0:	d8811f17 	ldw	r2,1148(sp)
   24df4:	da000404 	addi	r8,sp,16
   24df8:	003ea006 	br	2487c <_gp+0xfffe747c>
   24dfc:	00c00b44 	movi	r3,45
   24e00:	2460003c 	xorhi	r17,r4,32768
   24e04:	d8c12b05 	stb	r3,1196(sp)
   24e08:	003ddf06 	br	24588 <_gp+0xfffe7188>
   24e0c:	02400184 	movi	r9,6
   24e10:	003dd706 	br	24570 <_gp+0xfffe7170>
   24e14:	4d400044 	addi	r21,r9,1
   24e18:	003de206 	br	245a4 <_gp+0xfffe71a4>
   24e1c:	d8c13417 	ldw	r3,1232(sp)
   24e20:	00c0490e 	bge	zero,r3,24f48 <___vfprintf_internal_r+0x20c8>
   24e24:	04400044 	movi	r17,1
   24e28:	d9013317 	ldw	r4,1228(sp)
   24e2c:	8923883a 	add	r17,r17,r4
   24e30:	8839883a 	mov	fp,r17
   24e34:	883e1c0e 	bge	r17,zero,246a8 <_gp+0xfffe72a8>
   24e38:	0039883a 	mov	fp,zero
   24e3c:	003e1a06 	br	246a8 <_gp+0xfffe72a8>
   24e40:	00c03b0e 	bge	zero,r3,24f30 <___vfprintf_internal_r+0x20b0>
   24e44:	4800021e 	bne	r9,zero,24e50 <___vfprintf_internal_r+0x1fd0>
   24e48:	e080004c 	andi	r2,fp,1
   24e4c:	10000626 	beq	r2,zero,24e68 <___vfprintf_internal_r+0x1fe8>
   24e50:	d8c13417 	ldw	r3,1232(sp)
   24e54:	4a400044 	addi	r9,r9,1
   24e58:	1a63883a 	add	r17,r3,r9
   24e5c:	8839883a 	mov	fp,r17
   24e60:	883e110e 	bge	r17,zero,246a8 <_gp+0xfffe72a8>
   24e64:	003ff406 	br	24e38 <_gp+0xfffe7a38>
   24e68:	1839883a 	mov	fp,r3
   24e6c:	18004116 	blt	r3,zero,24f74 <___vfprintf_internal_r+0x20f4>
   24e70:	dc413417 	ldw	r17,1232(sp)
   24e74:	003e0c06 	br	246a8 <_gp+0xfffe72a8>
   24e78:	d8812117 	ldw	r2,1156(sp)
   24e7c:	003df606 	br	24658 <_gp+0xfffe7258>
   24e80:	00800c04 	movi	r2,48
   24e84:	a8c00c04 	addi	r3,r21,48
   24e88:	d8812345 	stb	r2,1165(sp)
   24e8c:	d8c12385 	stb	r3,1166(sp)
   24e90:	d88123c4 	addi	r2,sp,1167
   24e94:	dcc122c4 	addi	r19,sp,1163
   24e98:	003fb806 	br	24d7c <_gp+0xfffe797c>
   24e9c:	d9013717 	ldw	r4,1244(sp)
   24ea0:	880b883a 	mov	r5,r17
   24ea4:	000d883a 	mov	r6,zero
   24ea8:	000f883a 	mov	r7,zero
   24eac:	da013f15 	stw	r8,1276(sp)
   24eb0:	da413e15 	stw	r9,1272(sp)
   24eb4:	da813d15 	stw	r10,1268(sp)
   24eb8:	002f5000 	call	2f500 <__eqdf2>
   24ebc:	da013f17 	ldw	r8,1276(sp)
   24ec0:	da413e17 	ldw	r9,1272(sp)
   24ec4:	da813d17 	ldw	r10,1268(sp)
   24ec8:	103f1726 	beq	r2,zero,24b28 <_gp+0xfffe7728>
   24ecc:	00800044 	movi	r2,1
   24ed0:	1547c83a 	sub	r3,r2,r21
   24ed4:	d8c12615 	stw	r3,1176(sp)
   24ed8:	003f1406 	br	24b2c <_gp+0xfffe772c>
   24edc:	0005883a 	mov	r2,zero
   24ee0:	003f4c06 	br	24c14 <_gp+0xfffe7814>
   24ee4:	0039883a 	mov	fp,zero
   24ee8:	003fae06 	br	24da4 <_gp+0xfffe79a4>
   24eec:	e084703a 	and	r2,fp,r2
   24ef0:	103faa26 	beq	r2,zero,24d9c <_gp+0xfffe799c>
   24ef4:	003fa806 	br	24d98 <_gp+0xfffe7998>
   24ef8:	d9412d17 	ldw	r5,1204(sp)
   24efc:	2a400017 	ldw	r9,0(r5)
   24f00:	28c00104 	addi	r3,r5,4
   24f04:	d8c12d15 	stw	r3,1204(sp)
   24f08:	483ebc0e 	bge	r9,zero,249fc <_gp+0xfffe75fc>
   24f0c:	027fffc4 	movi	r9,-1
   24f10:	e4000047 	ldb	r16,1(fp)
   24f14:	00384206 	br	23020 <_gp+0xfffe5c20>
   24f18:	043fffc4 	movi	r16,-1
   24f1c:	0038ce06 	br	23258 <_gp+0xfffe5e58>
   24f20:	00800b44 	movi	r2,45
   24f24:	056bc83a 	sub	r21,zero,r21
   24f28:	d8812305 	stb	r2,1164(sp)
   24f2c:	003f6c06 	br	24ce0 <_gp+0xfffe78e0>
   24f30:	4800081e 	bne	r9,zero,24f54 <___vfprintf_internal_r+0x20d4>
   24f34:	e080004c 	andi	r2,fp,1
   24f38:	1000061e 	bne	r2,zero,24f54 <___vfprintf_internal_r+0x20d4>
   24f3c:	07000044 	movi	fp,1
   24f40:	e023883a 	mov	r17,fp
   24f44:	003dd806 	br	246a8 <_gp+0xfffe72a8>
   24f48:	04400084 	movi	r17,2
   24f4c:	88e3c83a 	sub	r17,r17,r3
   24f50:	003fb506 	br	24e28 <_gp+0xfffe7a28>
   24f54:	4c400084 	addi	r17,r9,2
   24f58:	8839883a 	mov	fp,r17
   24f5c:	883dd20e 	bge	r17,zero,246a8 <_gp+0xfffe72a8>
   24f60:	003fb506 	br	24e38 <_gp+0xfffe7a38>
   24f64:	d8c12617 	ldw	r3,1176(sp)
   24f68:	003f5706 	br	24cc8 <_gp+0xfffe78c8>
   24f6c:	d8812344 	addi	r2,sp,1165
   24f70:	003f8206 	br	24d7c <_gp+0xfffe797c>
   24f74:	0039883a 	mov	fp,zero
   24f78:	003fbd06 	br	24e70 <_gp+0xfffe7a70>

00024f7c <__vfprintf_internal>:
   24f7c:	2007883a 	mov	r3,r4
   24f80:	010000f4 	movhi	r4,3
   24f84:	21150104 	addi	r4,r4,21508
   24f88:	21000017 	ldw	r4,0(r4)
   24f8c:	2805883a 	mov	r2,r5
   24f90:	300f883a 	mov	r7,r6
   24f94:	180b883a 	mov	r5,r3
   24f98:	100d883a 	mov	r6,r2
   24f9c:	0022e801 	jmpi	22e80 <___vfprintf_internal_r>

00024fa0 <_vsnprintf_r>:
   24fa0:	3005883a 	mov	r2,r6
   24fa4:	30003616 	blt	r6,zero,25080 <_vsnprintf_r+0xe0>
   24fa8:	deffe404 	addi	sp,sp,-112
   24fac:	00c08204 	movi	r3,520
   24fb0:	dc001a15 	stw	r16,104(sp)
   24fb4:	dfc01b15 	stw	ra,108(sp)
   24fb8:	d8c0030d 	sth	r3,12(sp)
   24fbc:	d9400015 	stw	r5,0(sp)
   24fc0:	d9400415 	stw	r5,16(sp)
   24fc4:	380d883a 	mov	r6,r7
   24fc8:	2021883a 	mov	r16,r4
   24fcc:	10001326 	beq	r2,zero,2501c <_vsnprintf_r+0x7c>
   24fd0:	00c000f4 	movhi	r3,3
   24fd4:	18d50104 	addi	r3,r3,21508
   24fd8:	19000017 	ldw	r4,0(r3)
   24fdc:	d9c01c17 	ldw	r7,112(sp)
   24fe0:	10bfffc4 	addi	r2,r2,-1
   24fe4:	d8800215 	stw	r2,8(sp)
   24fe8:	d8800515 	stw	r2,20(sp)
   24fec:	d80b883a 	mov	r5,sp
   24ff0:	00bfffc4 	movi	r2,-1
   24ff4:	d880038d 	sth	r2,14(sp)
   24ff8:	0020e100 	call	20e10 <___svfprintf_internal_r>
   24ffc:	00ffffc4 	movi	r3,-1
   25000:	10c01c16 	blt	r2,r3,25074 <_vsnprintf_r+0xd4>
   25004:	d8c00017 	ldw	r3,0(sp)
   25008:	18000005 	stb	zero,0(r3)
   2500c:	dfc01b17 	ldw	ra,108(sp)
   25010:	dc001a17 	ldw	r16,104(sp)
   25014:	dec01c04 	addi	sp,sp,112
   25018:	f800283a 	ret
   2501c:	008000f4 	movhi	r2,3
   25020:	10950104 	addi	r2,r2,21508
   25024:	11000017 	ldw	r4,0(r2)
   25028:	d9c01c17 	ldw	r7,112(sp)
   2502c:	00bfffc4 	movi	r2,-1
   25030:	d80b883a 	mov	r5,sp
   25034:	d8000215 	stw	zero,8(sp)
   25038:	d8000515 	stw	zero,20(sp)
   2503c:	d880038d 	sth	r2,14(sp)
   25040:	0020e100 	call	20e10 <___svfprintf_internal_r>
   25044:	00ffffc4 	movi	r3,-1
   25048:	10c00416 	blt	r2,r3,2505c <_vsnprintf_r+0xbc>
   2504c:	dfc01b17 	ldw	ra,108(sp)
   25050:	dc001a17 	ldw	r16,104(sp)
   25054:	dec01c04 	addi	sp,sp,112
   25058:	f800283a 	ret
   2505c:	00c022c4 	movi	r3,139
   25060:	80c00015 	stw	r3,0(r16)
   25064:	dfc01b17 	ldw	ra,108(sp)
   25068:	dc001a17 	ldw	r16,104(sp)
   2506c:	dec01c04 	addi	sp,sp,112
   25070:	f800283a 	ret
   25074:	00c022c4 	movi	r3,139
   25078:	80c00015 	stw	r3,0(r16)
   2507c:	003fe106 	br	25004 <_gp+0xfffe7c04>
   25080:	008022c4 	movi	r2,139
   25084:	20800015 	stw	r2,0(r4)
   25088:	00bfffc4 	movi	r2,-1
   2508c:	f800283a 	ret

00025090 <vsnprintf>:
   25090:	008000f4 	movhi	r2,3
   25094:	10950104 	addi	r2,r2,21508
   25098:	2011883a 	mov	r8,r4
   2509c:	11000017 	ldw	r4,0(r2)
   250a0:	defffe04 	addi	sp,sp,-8
   250a4:	2807883a 	mov	r3,r5
   250a8:	3005883a 	mov	r2,r6
   250ac:	d9c00015 	stw	r7,0(sp)
   250b0:	400b883a 	mov	r5,r8
   250b4:	180d883a 	mov	r6,r3
   250b8:	100f883a 	mov	r7,r2
   250bc:	dfc00115 	stw	ra,4(sp)
   250c0:	0024fa00 	call	24fa0 <_vsnprintf_r>
   250c4:	dfc00117 	ldw	ra,4(sp)
   250c8:	dec00204 	addi	sp,sp,8
   250cc:	f800283a 	ret

000250d0 <__swsetup_r>:
   250d0:	008000f4 	movhi	r2,3
   250d4:	defffd04 	addi	sp,sp,-12
   250d8:	10950104 	addi	r2,r2,21508
   250dc:	dc400115 	stw	r17,4(sp)
   250e0:	2023883a 	mov	r17,r4
   250e4:	11000017 	ldw	r4,0(r2)
   250e8:	dc000015 	stw	r16,0(sp)
   250ec:	dfc00215 	stw	ra,8(sp)
   250f0:	2821883a 	mov	r16,r5
   250f4:	20000226 	beq	r4,zero,25100 <__swsetup_r+0x30>
   250f8:	20c00e17 	ldw	r3,56(r4)
   250fc:	18002e26 	beq	r3,zero,251b8 <__swsetup_r+0xe8>
   25100:	8080030b 	ldhu	r2,12(r16)
   25104:	10c0020c 	andi	r3,r2,8
   25108:	100d883a 	mov	r6,r2
   2510c:	18000f26 	beq	r3,zero,2514c <__swsetup_r+0x7c>
   25110:	80c00417 	ldw	r3,16(r16)
   25114:	18001526 	beq	r3,zero,2516c <__swsetup_r+0x9c>
   25118:	1100004c 	andi	r4,r2,1
   2511c:	20001c1e 	bne	r4,zero,25190 <__swsetup_r+0xc0>
   25120:	1080008c 	andi	r2,r2,2
   25124:	1000261e 	bne	r2,zero,251c0 <__swsetup_r+0xf0>
   25128:	80800517 	ldw	r2,20(r16)
   2512c:	80800215 	stw	r2,8(r16)
   25130:	18001c26 	beq	r3,zero,251a4 <__swsetup_r+0xd4>
   25134:	0005883a 	mov	r2,zero
   25138:	dfc00217 	ldw	ra,8(sp)
   2513c:	dc400117 	ldw	r17,4(sp)
   25140:	dc000017 	ldw	r16,0(sp)
   25144:	dec00304 	addi	sp,sp,12
   25148:	f800283a 	ret
   2514c:	3080040c 	andi	r2,r6,16
   25150:	10001726 	beq	r2,zero,251b0 <__swsetup_r+0xe0>
   25154:	3080010c 	andi	r2,r6,4
   25158:	10001b1e 	bne	r2,zero,251c8 <__swsetup_r+0xf8>
   2515c:	80c00417 	ldw	r3,16(r16)
   25160:	30800214 	ori	r2,r6,8
   25164:	8080030d 	sth	r2,12(r16)
   25168:	183feb1e 	bne	r3,zero,25118 <_gp+0xfffe7d18>
   2516c:	1140a00c 	andi	r5,r2,640
   25170:	01008004 	movi	r4,512
   25174:	293fe826 	beq	r5,r4,25118 <_gp+0xfffe7d18>
   25178:	8809883a 	mov	r4,r17
   2517c:	800b883a 	mov	r5,r16
   25180:	0027c640 	call	27c64 <__smakebuf_r>
   25184:	8080030b 	ldhu	r2,12(r16)
   25188:	80c00417 	ldw	r3,16(r16)
   2518c:	003fe206 	br	25118 <_gp+0xfffe7d18>
   25190:	80800517 	ldw	r2,20(r16)
   25194:	80000215 	stw	zero,8(r16)
   25198:	0085c83a 	sub	r2,zero,r2
   2519c:	80800615 	stw	r2,24(r16)
   251a0:	183fe41e 	bne	r3,zero,25134 <_gp+0xfffe7d34>
   251a4:	8080030b 	ldhu	r2,12(r16)
   251a8:	1080200c 	andi	r2,r2,128
   251ac:	103fe226 	beq	r2,zero,25138 <_gp+0xfffe7d38>
   251b0:	00bfffc4 	movi	r2,-1
   251b4:	003fe006 	br	25138 <_gp+0xfffe7d38>
   251b8:	002710c0 	call	2710c <__sinit>
   251bc:	003fd006 	br	25100 <_gp+0xfffe7d00>
   251c0:	0005883a 	mov	r2,zero
   251c4:	003fd906 	br	2512c <_gp+0xfffe7d2c>
   251c8:	81400c17 	ldw	r5,48(r16)
   251cc:	28000626 	beq	r5,zero,251e8 <__swsetup_r+0x118>
   251d0:	80801004 	addi	r2,r16,64
   251d4:	28800326 	beq	r5,r2,251e4 <__swsetup_r+0x114>
   251d8:	8809883a 	mov	r4,r17
   251dc:	00272800 	call	27280 <_free_r>
   251e0:	8180030b 	ldhu	r6,12(r16)
   251e4:	80000c15 	stw	zero,48(r16)
   251e8:	80c00417 	ldw	r3,16(r16)
   251ec:	00bff6c4 	movi	r2,-37
   251f0:	118c703a 	and	r6,r2,r6
   251f4:	80000115 	stw	zero,4(r16)
   251f8:	80c00015 	stw	r3,0(r16)
   251fc:	003fd806 	br	25160 <_gp+0xfffe7d60>

00025200 <quorem>:
   25200:	defff204 	addi	sp,sp,-56
   25204:	ddc00b15 	stw	r23,44(sp)
   25208:	20800417 	ldw	r2,16(r4)
   2520c:	2dc00417 	ldw	r23,16(r5)
   25210:	dfc00d15 	stw	ra,52(sp)
   25214:	df000c15 	stw	fp,48(sp)
   25218:	dd800a15 	stw	r22,40(sp)
   2521c:	dd400915 	stw	r21,36(sp)
   25220:	dd000815 	stw	r20,32(sp)
   25224:	dcc00715 	stw	r19,28(sp)
   25228:	dc800615 	stw	r18,24(sp)
   2522c:	dc400515 	stw	r17,20(sp)
   25230:	dc000415 	stw	r16,16(sp)
   25234:	15c07a16 	blt	r2,r23,25420 <quorem+0x220>
   25238:	bdffffc4 	addi	r23,r23,-1
   2523c:	bde9883a 	add	r20,r23,r23
   25240:	28c00504 	addi	r3,r5,20
   25244:	a529883a 	add	r20,r20,r20
   25248:	1d39883a 	add	fp,r3,r20
   2524c:	24c00504 	addi	r19,r4,20
   25250:	d9400215 	stw	r5,8(sp)
   25254:	9d29883a 	add	r20,r19,r20
   25258:	e1400017 	ldw	r5,0(fp)
   2525c:	d9000015 	stw	r4,0(sp)
   25260:	a1000017 	ldw	r4,0(r20)
   25264:	29400044 	addi	r5,r5,1
   25268:	d8c00115 	stw	r3,4(sp)
   2526c:	dd000315 	stw	r20,12(sp)
   25270:	002e2ac0 	call	2e2ac <__udivsi3>
   25274:	1025883a 	mov	r18,r2
   25278:	10003026 	beq	r2,zero,2533c <quorem+0x13c>
   2527c:	dc400117 	ldw	r17,4(sp)
   25280:	9829883a 	mov	r20,r19
   25284:	002d883a 	mov	r22,zero
   25288:	0021883a 	mov	r16,zero
   2528c:	8d400017 	ldw	r21,0(r17)
   25290:	900b883a 	mov	r5,r18
   25294:	8c400104 	addi	r17,r17,4
   25298:	a93fffcc 	andi	r4,r21,65535
   2529c:	002e2bc0 	call	2e2bc <__mulsi3>
   252a0:	a808d43a 	srli	r4,r21,16
   252a4:	900b883a 	mov	r5,r18
   252a8:	b0ad883a 	add	r22,r22,r2
   252ac:	002e2bc0 	call	2e2bc <__mulsi3>
   252b0:	a1000017 	ldw	r4,0(r20)
   252b4:	b00cd43a 	srli	r6,r22,16
   252b8:	b0ffffcc 	andi	r3,r22,65535
   252bc:	217fffcc 	andi	r5,r4,65535
   252c0:	2c21883a 	add	r16,r5,r16
   252c4:	80c7c83a 	sub	r3,r16,r3
   252c8:	2008d43a 	srli	r4,r4,16
   252cc:	3085883a 	add	r2,r6,r2
   252d0:	1821d43a 	srai	r16,r3,16
   252d4:	117fffcc 	andi	r5,r2,65535
   252d8:	2149c83a 	sub	r4,r4,r5
   252dc:	2421883a 	add	r16,r4,r16
   252e0:	8008943a 	slli	r4,r16,16
   252e4:	18ffffcc 	andi	r3,r3,65535
   252e8:	102cd43a 	srli	r22,r2,16
   252ec:	20c8b03a 	or	r4,r4,r3
   252f0:	a1000015 	stw	r4,0(r20)
   252f4:	8021d43a 	srai	r16,r16,16
   252f8:	a5000104 	addi	r20,r20,4
   252fc:	e47fe32e 	bgeu	fp,r17,2528c <_gp+0xfffe7e8c>
   25300:	d8c00317 	ldw	r3,12(sp)
   25304:	18800017 	ldw	r2,0(r3)
   25308:	10000c1e 	bne	r2,zero,2533c <quorem+0x13c>
   2530c:	18bfff04 	addi	r2,r3,-4
   25310:	9880082e 	bgeu	r19,r2,25334 <quorem+0x134>
   25314:	18ffff17 	ldw	r3,-4(r3)
   25318:	18000326 	beq	r3,zero,25328 <quorem+0x128>
   2531c:	00000506 	br	25334 <quorem+0x134>
   25320:	10c00017 	ldw	r3,0(r2)
   25324:	1800031e 	bne	r3,zero,25334 <quorem+0x134>
   25328:	10bfff04 	addi	r2,r2,-4
   2532c:	bdffffc4 	addi	r23,r23,-1
   25330:	98bffb36 	bltu	r19,r2,25320 <_gp+0xfffe7f20>
   25334:	d8c00017 	ldw	r3,0(sp)
   25338:	1dc00415 	stw	r23,16(r3)
   2533c:	d9000017 	ldw	r4,0(sp)
   25340:	d9400217 	ldw	r5,8(sp)
   25344:	00293e00 	call	293e0 <__mcmp>
   25348:	10002816 	blt	r2,zero,253ec <quorem+0x1ec>
   2534c:	dc400117 	ldw	r17,4(sp)
   25350:	94800044 	addi	r18,r18,1
   25354:	980d883a 	mov	r6,r19
   25358:	0007883a 	mov	r3,zero
   2535c:	31000017 	ldw	r4,0(r6)
   25360:	89400017 	ldw	r5,0(r17)
   25364:	31800104 	addi	r6,r6,4
   25368:	20bfffcc 	andi	r2,r4,65535
   2536c:	10c7883a 	add	r3,r2,r3
   25370:	28bfffcc 	andi	r2,r5,65535
   25374:	1885c83a 	sub	r2,r3,r2
   25378:	280ad43a 	srli	r5,r5,16
   2537c:	2008d43a 	srli	r4,r4,16
   25380:	1007d43a 	srai	r3,r2,16
   25384:	10bfffcc 	andi	r2,r2,65535
   25388:	2149c83a 	sub	r4,r4,r5
   2538c:	20c9883a 	add	r4,r4,r3
   25390:	200a943a 	slli	r5,r4,16
   25394:	8c400104 	addi	r17,r17,4
   25398:	2007d43a 	srai	r3,r4,16
   2539c:	2884b03a 	or	r2,r5,r2
   253a0:	30bfff15 	stw	r2,-4(r6)
   253a4:	e47fed2e 	bgeu	fp,r17,2535c <_gp+0xfffe7f5c>
   253a8:	bdc5883a 	add	r2,r23,r23
   253ac:	1085883a 	add	r2,r2,r2
   253b0:	9887883a 	add	r3,r19,r2
   253b4:	18800017 	ldw	r2,0(r3)
   253b8:	10000c1e 	bne	r2,zero,253ec <quorem+0x1ec>
   253bc:	18bfff04 	addi	r2,r3,-4
   253c0:	9880082e 	bgeu	r19,r2,253e4 <quorem+0x1e4>
   253c4:	18ffff17 	ldw	r3,-4(r3)
   253c8:	18000326 	beq	r3,zero,253d8 <quorem+0x1d8>
   253cc:	00000506 	br	253e4 <quorem+0x1e4>
   253d0:	10c00017 	ldw	r3,0(r2)
   253d4:	1800031e 	bne	r3,zero,253e4 <quorem+0x1e4>
   253d8:	10bfff04 	addi	r2,r2,-4
   253dc:	bdffffc4 	addi	r23,r23,-1
   253e0:	98bffb36 	bltu	r19,r2,253d0 <_gp+0xfffe7fd0>
   253e4:	d8c00017 	ldw	r3,0(sp)
   253e8:	1dc00415 	stw	r23,16(r3)
   253ec:	9005883a 	mov	r2,r18
   253f0:	dfc00d17 	ldw	ra,52(sp)
   253f4:	df000c17 	ldw	fp,48(sp)
   253f8:	ddc00b17 	ldw	r23,44(sp)
   253fc:	dd800a17 	ldw	r22,40(sp)
   25400:	dd400917 	ldw	r21,36(sp)
   25404:	dd000817 	ldw	r20,32(sp)
   25408:	dcc00717 	ldw	r19,28(sp)
   2540c:	dc800617 	ldw	r18,24(sp)
   25410:	dc400517 	ldw	r17,20(sp)
   25414:	dc000417 	ldw	r16,16(sp)
   25418:	dec00e04 	addi	sp,sp,56
   2541c:	f800283a 	ret
   25420:	0005883a 	mov	r2,zero
   25424:	003ff206 	br	253f0 <_gp+0xfffe7ff0>

00025428 <_dtoa_r>:
   25428:	20801017 	ldw	r2,64(r4)
   2542c:	deffde04 	addi	sp,sp,-136
   25430:	dd401d15 	stw	r21,116(sp)
   25434:	dcc01b15 	stw	r19,108(sp)
   25438:	dc801a15 	stw	r18,104(sp)
   2543c:	dc401915 	stw	r17,100(sp)
   25440:	dc001815 	stw	r16,96(sp)
   25444:	dfc02115 	stw	ra,132(sp)
   25448:	df002015 	stw	fp,128(sp)
   2544c:	ddc01f15 	stw	r23,124(sp)
   25450:	dd801e15 	stw	r22,120(sp)
   25454:	dd001c15 	stw	r20,112(sp)
   25458:	d9c00315 	stw	r7,12(sp)
   2545c:	2021883a 	mov	r16,r4
   25460:	302b883a 	mov	r21,r6
   25464:	2825883a 	mov	r18,r5
   25468:	dc402417 	ldw	r17,144(sp)
   2546c:	3027883a 	mov	r19,r6
   25470:	10000826 	beq	r2,zero,25494 <_dtoa_r+0x6c>
   25474:	21801117 	ldw	r6,68(r4)
   25478:	00c00044 	movi	r3,1
   2547c:	100b883a 	mov	r5,r2
   25480:	1986983a 	sll	r3,r3,r6
   25484:	11800115 	stw	r6,4(r2)
   25488:	10c00215 	stw	r3,8(r2)
   2548c:	0028b0c0 	call	28b0c <_Bfree>
   25490:	80001015 	stw	zero,64(r16)
   25494:	a8002d16 	blt	r21,zero,2554c <_dtoa_r+0x124>
   25498:	88000015 	stw	zero,0(r17)
   2549c:	a8dffc2c 	andhi	r3,r21,32752
   254a0:	009ffc34 	movhi	r2,32752
   254a4:	18801b26 	beq	r3,r2,25514 <_dtoa_r+0xec>
   254a8:	9009883a 	mov	r4,r18
   254ac:	980b883a 	mov	r5,r19
   254b0:	000d883a 	mov	r6,zero
   254b4:	000f883a 	mov	r7,zero
   254b8:	002f5000 	call	2f500 <__eqdf2>
   254bc:	10002a1e 	bne	r2,zero,25568 <_dtoa_r+0x140>
   254c0:	d8c02317 	ldw	r3,140(sp)
   254c4:	d9002517 	ldw	r4,148(sp)
   254c8:	00800044 	movi	r2,1
   254cc:	18800015 	stw	r2,0(r3)
   254d0:	2001a226 	beq	r4,zero,25b5c <_dtoa_r+0x734>
   254d4:	008000f4 	movhi	r2,3
   254d8:	108d9844 	addi	r2,r2,13921
   254dc:	20800015 	stw	r2,0(r4)
   254e0:	10bfffc4 	addi	r2,r2,-1
   254e4:	dfc02117 	ldw	ra,132(sp)
   254e8:	df002017 	ldw	fp,128(sp)
   254ec:	ddc01f17 	ldw	r23,124(sp)
   254f0:	dd801e17 	ldw	r22,120(sp)
   254f4:	dd401d17 	ldw	r21,116(sp)
   254f8:	dd001c17 	ldw	r20,112(sp)
   254fc:	dcc01b17 	ldw	r19,108(sp)
   25500:	dc801a17 	ldw	r18,104(sp)
   25504:	dc401917 	ldw	r17,100(sp)
   25508:	dc001817 	ldw	r16,96(sp)
   2550c:	dec02204 	addi	sp,sp,136
   25510:	f800283a 	ret
   25514:	d8c02317 	ldw	r3,140(sp)
   25518:	0089c3c4 	movi	r2,9999
   2551c:	18800015 	stw	r2,0(r3)
   25520:	90017c26 	beq	r18,zero,25b14 <_dtoa_r+0x6ec>
   25524:	008000f4 	movhi	r2,3
   25528:	108dac04 	addi	r2,r2,14000
   2552c:	d9002517 	ldw	r4,148(sp)
   25530:	203fec26 	beq	r4,zero,254e4 <_gp+0xfffe80e4>
   25534:	10c000c7 	ldb	r3,3(r2)
   25538:	18017d1e 	bne	r3,zero,25b30 <_dtoa_r+0x708>
   2553c:	10c000c4 	addi	r3,r2,3
   25540:	d9802517 	ldw	r6,148(sp)
   25544:	30c00015 	stw	r3,0(r6)
   25548:	003fe606 	br	254e4 <_gp+0xfffe80e4>
   2554c:	04e00034 	movhi	r19,32768
   25550:	9cffffc4 	addi	r19,r19,-1
   25554:	00800044 	movi	r2,1
   25558:	ace6703a 	and	r19,r21,r19
   2555c:	88800015 	stw	r2,0(r17)
   25560:	982b883a 	mov	r21,r19
   25564:	003fcd06 	br	2549c <_gp+0xfffe809c>
   25568:	d8800204 	addi	r2,sp,8
   2556c:	a822d53a 	srli	r17,r21,20
   25570:	d8800015 	stw	r2,0(sp)
   25574:	8009883a 	mov	r4,r16
   25578:	900b883a 	mov	r5,r18
   2557c:	980d883a 	mov	r6,r19
   25580:	d9c00104 	addi	r7,sp,4
   25584:	00297540 	call	29754 <__d2b>
   25588:	1039883a 	mov	fp,r2
   2558c:	88016a1e 	bne	r17,zero,25b38 <_dtoa_r+0x710>
   25590:	dd000217 	ldw	r20,8(sp)
   25594:	dc400117 	ldw	r17,4(sp)
   25598:	00befbc4 	movi	r2,-1041
   2559c:	a463883a 	add	r17,r20,r17
   255a0:	8882ea16 	blt	r17,r2,2614c <_dtoa_r+0xd24>
   255a4:	00bf0384 	movi	r2,-1010
   255a8:	1445c83a 	sub	r2,r2,r17
   255ac:	89010484 	addi	r4,r17,1042
   255b0:	a8aa983a 	sll	r21,r21,r2
   255b4:	9108d83a 	srl	r4,r18,r4
   255b8:	a908b03a 	or	r4,r21,r4
   255bc:	00309d80 	call	309d8 <__floatunsidf>
   255c0:	017f8434 	movhi	r5,65040
   255c4:	01800044 	movi	r6,1
   255c8:	1009883a 	mov	r4,r2
   255cc:	194b883a 	add	r5,r3,r5
   255d0:	8c7fffc4 	addi	r17,r17,-1
   255d4:	d9800f15 	stw	r6,60(sp)
   255d8:	000d883a 	mov	r6,zero
   255dc:	01cffe34 	movhi	r7,16376
   255e0:	002ffb00 	call	2ffb0 <__subdf3>
   255e4:	0198dbf4 	movhi	r6,25455
   255e8:	01cff4f4 	movhi	r7,16339
   255ec:	1009883a 	mov	r4,r2
   255f0:	180b883a 	mov	r5,r3
   255f4:	3190d844 	addi	r6,r6,17249
   255f8:	39e1e9c4 	addi	r7,r7,-30809
   255fc:	002f7440 	call	2f744 <__muldf3>
   25600:	01a2d874 	movhi	r6,35681
   25604:	01cff1f4 	movhi	r7,16327
   25608:	180b883a 	mov	r5,r3
   2560c:	31b22cc4 	addi	r6,r6,-14157
   25610:	39e28a04 	addi	r7,r7,-30168
   25614:	1009883a 	mov	r4,r2
   25618:	002e2e40 	call	2e2e4 <__adddf3>
   2561c:	8809883a 	mov	r4,r17
   25620:	102d883a 	mov	r22,r2
   25624:	182b883a 	mov	r21,r3
   25628:	00309080 	call	30908 <__floatsidf>
   2562c:	019427f4 	movhi	r6,20639
   25630:	01cff4f4 	movhi	r7,16339
   25634:	1009883a 	mov	r4,r2
   25638:	180b883a 	mov	r5,r3
   2563c:	319e7ec4 	addi	r6,r6,31227
   25640:	39d104c4 	addi	r7,r7,17427
   25644:	002f7440 	call	2f744 <__muldf3>
   25648:	b009883a 	mov	r4,r22
   2564c:	a80b883a 	mov	r5,r21
   25650:	100d883a 	mov	r6,r2
   25654:	180f883a 	mov	r7,r3
   25658:	002e2e40 	call	2e2e4 <__adddf3>
   2565c:	1009883a 	mov	r4,r2
   25660:	180b883a 	mov	r5,r3
   25664:	102d883a 	mov	r22,r2
   25668:	182b883a 	mov	r21,r3
   2566c:	00308800 	call	30880 <__fixdfsi>
   25670:	b009883a 	mov	r4,r22
   25674:	a80b883a 	mov	r5,r21
   25678:	000d883a 	mov	r6,zero
   2567c:	000f883a 	mov	r7,zero
   25680:	d8800515 	stw	r2,20(sp)
   25684:	002f6640 	call	2f664 <__ledf2>
   25688:	10023116 	blt	r2,zero,25f50 <_dtoa_r+0xb28>
   2568c:	d8c00517 	ldw	r3,20(sp)
   25690:	00800584 	movi	r2,22
   25694:	10c21f36 	bltu	r2,r3,25f14 <_dtoa_r+0xaec>
   25698:	180490fa 	slli	r2,r3,3
   2569c:	00c000f4 	movhi	r3,3
   256a0:	18cdc804 	addi	r3,r3,14112
   256a4:	1885883a 	add	r2,r3,r2
   256a8:	11000017 	ldw	r4,0(r2)
   256ac:	11400117 	ldw	r5,4(r2)
   256b0:	900d883a 	mov	r6,r18
   256b4:	980f883a 	mov	r7,r19
   256b8:	002f5840 	call	2f584 <__gedf2>
   256bc:	0082a70e 	bge	zero,r2,2615c <_dtoa_r+0xd34>
   256c0:	d9000517 	ldw	r4,20(sp)
   256c4:	d8000c15 	stw	zero,48(sp)
   256c8:	213fffc4 	addi	r4,r4,-1
   256cc:	d9000515 	stw	r4,20(sp)
   256d0:	a463c83a 	sub	r17,r20,r17
   256d4:	8dbfffc4 	addi	r22,r17,-1
   256d8:	b0021916 	blt	r22,zero,25f40 <_dtoa_r+0xb18>
   256dc:	d8000815 	stw	zero,32(sp)
   256e0:	d8800517 	ldw	r2,20(sp)
   256e4:	10020e16 	blt	r2,zero,25f20 <_dtoa_r+0xaf8>
   256e8:	b0ad883a 	add	r22,r22,r2
   256ec:	d8800a15 	stw	r2,40(sp)
   256f0:	d8000915 	stw	zero,36(sp)
   256f4:	d8c00317 	ldw	r3,12(sp)
   256f8:	00800244 	movi	r2,9
   256fc:	10c11a36 	bltu	r2,r3,25b68 <_dtoa_r+0x740>
   25700:	00800144 	movi	r2,5
   25704:	10c4fc0e 	bge	r2,r3,26af8 <_dtoa_r+0x16d0>
   25708:	18ffff04 	addi	r3,r3,-4
   2570c:	d8c00315 	stw	r3,12(sp)
   25710:	0029883a 	mov	r20,zero
   25714:	d9800317 	ldw	r6,12(sp)
   25718:	008000c4 	movi	r2,3
   2571c:	3083bd26 	beq	r6,r2,26614 <_dtoa_r+0x11ec>
   25720:	1183670e 	bge	r2,r6,264c0 <_dtoa_r+0x1098>
   25724:	d8c00317 	ldw	r3,12(sp)
   25728:	00800104 	movi	r2,4
   2572c:	1882e726 	beq	r3,r2,262cc <_dtoa_r+0xea4>
   25730:	00800144 	movi	r2,5
   25734:	1884f21e 	bne	r3,r2,26b00 <_dtoa_r+0x16d8>
   25738:	00800044 	movi	r2,1
   2573c:	d8800b15 	stw	r2,44(sp)
   25740:	d8c02217 	ldw	r3,136(sp)
   25744:	d9000517 	ldw	r4,20(sp)
   25748:	1907883a 	add	r3,r3,r4
   2574c:	19800044 	addi	r6,r3,1
   25750:	d8c00d15 	stw	r3,52(sp)
   25754:	d9800615 	stw	r6,24(sp)
   25758:	0183c30e 	bge	zero,r6,26668 <_dtoa_r+0x1240>
   2575c:	d9800617 	ldw	r6,24(sp)
   25760:	3023883a 	mov	r17,r6
   25764:	80001115 	stw	zero,68(r16)
   25768:	008005c4 	movi	r2,23
   2576c:	1184f62e 	bgeu	r2,r6,26b48 <_dtoa_r+0x1720>
   25770:	00c00044 	movi	r3,1
   25774:	00800104 	movi	r2,4
   25778:	1085883a 	add	r2,r2,r2
   2577c:	11000504 	addi	r4,r2,20
   25780:	180b883a 	mov	r5,r3
   25784:	18c00044 	addi	r3,r3,1
   25788:	313ffb2e 	bgeu	r6,r4,25778 <_gp+0xfffe8378>
   2578c:	81401115 	stw	r5,68(r16)
   25790:	8009883a 	mov	r4,r16
   25794:	0028a640 	call	28a64 <_Balloc>
   25798:	d8800715 	stw	r2,28(sp)
   2579c:	80801015 	stw	r2,64(r16)
   257a0:	00800384 	movi	r2,14
   257a4:	1440fd36 	bltu	r2,r17,25b9c <_dtoa_r+0x774>
   257a8:	a000fc26 	beq	r20,zero,25b9c <_dtoa_r+0x774>
   257ac:	d8800517 	ldw	r2,20(sp)
   257b0:	0083b90e 	bge	zero,r2,26698 <_dtoa_r+0x1270>
   257b4:	d8c00517 	ldw	r3,20(sp)
   257b8:	108003cc 	andi	r2,r2,15
   257bc:	100490fa 	slli	r2,r2,3
   257c0:	182fd13a 	srai	r23,r3,4
   257c4:	00c000f4 	movhi	r3,3
   257c8:	18cdc804 	addi	r3,r3,14112
   257cc:	1885883a 	add	r2,r3,r2
   257d0:	b8c0040c 	andi	r3,r23,16
   257d4:	12c00017 	ldw	r11,0(r2)
   257d8:	12800117 	ldw	r10,4(r2)
   257dc:	18039726 	beq	r3,zero,2663c <_dtoa_r+0x1214>
   257e0:	008000f4 	movhi	r2,3
   257e4:	108dbe04 	addi	r2,r2,14072
   257e8:	11800817 	ldw	r6,32(r2)
   257ec:	11c00917 	ldw	r7,36(r2)
   257f0:	9009883a 	mov	r4,r18
   257f4:	980b883a 	mov	r5,r19
   257f8:	da801615 	stw	r10,88(sp)
   257fc:	dac01515 	stw	r11,84(sp)
   25800:	002eb800 	call	2eb80 <__divdf3>
   25804:	da801617 	ldw	r10,88(sp)
   25808:	dac01517 	ldw	r11,84(sp)
   2580c:	bdc003cc 	andi	r23,r23,15
   25810:	044000c4 	movi	r17,3
   25814:	d8800e15 	stw	r2,56(sp)
   25818:	182b883a 	mov	r21,r3
   2581c:	b8001126 	beq	r23,zero,25864 <_dtoa_r+0x43c>
   25820:	050000f4 	movhi	r20,3
   25824:	a50dbe04 	addi	r20,r20,14072
   25828:	5805883a 	mov	r2,r11
   2582c:	5007883a 	mov	r3,r10
   25830:	b980004c 	andi	r6,r23,1
   25834:	1009883a 	mov	r4,r2
   25838:	b82fd07a 	srai	r23,r23,1
   2583c:	180b883a 	mov	r5,r3
   25840:	30000426 	beq	r6,zero,25854 <_dtoa_r+0x42c>
   25844:	a1800017 	ldw	r6,0(r20)
   25848:	a1c00117 	ldw	r7,4(r20)
   2584c:	8c400044 	addi	r17,r17,1
   25850:	002f7440 	call	2f744 <__muldf3>
   25854:	a5000204 	addi	r20,r20,8
   25858:	b83ff51e 	bne	r23,zero,25830 <_gp+0xfffe8430>
   2585c:	1017883a 	mov	r11,r2
   25860:	1815883a 	mov	r10,r3
   25864:	d9000e17 	ldw	r4,56(sp)
   25868:	a80b883a 	mov	r5,r21
   2586c:	580d883a 	mov	r6,r11
   25870:	500f883a 	mov	r7,r10
   25874:	002eb800 	call	2eb80 <__divdf3>
   25878:	1029883a 	mov	r20,r2
   2587c:	182b883a 	mov	r21,r3
   25880:	d9800c17 	ldw	r6,48(sp)
   25884:	30000626 	beq	r6,zero,258a0 <_dtoa_r+0x478>
   25888:	a009883a 	mov	r4,r20
   2588c:	a80b883a 	mov	r5,r21
   25890:	000d883a 	mov	r6,zero
   25894:	01cffc34 	movhi	r7,16368
   25898:	002f6640 	call	2f664 <__ledf2>
   2589c:	10043216 	blt	r2,zero,26968 <_dtoa_r+0x1540>
   258a0:	8809883a 	mov	r4,r17
   258a4:	00309080 	call	30908 <__floatsidf>
   258a8:	1009883a 	mov	r4,r2
   258ac:	180b883a 	mov	r5,r3
   258b0:	a00d883a 	mov	r6,r20
   258b4:	a80f883a 	mov	r7,r21
   258b8:	002f7440 	call	2f744 <__muldf3>
   258bc:	000d883a 	mov	r6,zero
   258c0:	1009883a 	mov	r4,r2
   258c4:	180b883a 	mov	r5,r3
   258c8:	01d00734 	movhi	r7,16412
   258cc:	002e2e40 	call	2e2e4 <__adddf3>
   258d0:	1023883a 	mov	r17,r2
   258d4:	d9800617 	ldw	r6,24(sp)
   258d8:	00bf3034 	movhi	r2,64704
   258dc:	1885883a 	add	r2,r3,r2
   258e0:	d8800e15 	stw	r2,56(sp)
   258e4:	30032e26 	beq	r6,zero,265a0 <_dtoa_r+0x1178>
   258e8:	d8c00517 	ldw	r3,20(sp)
   258ec:	da800617 	ldw	r10,24(sp)
   258f0:	d8c01215 	stw	r3,72(sp)
   258f4:	d9000b17 	ldw	r4,44(sp)
   258f8:	2003b026 	beq	r4,zero,267bc <_dtoa_r+0x1394>
   258fc:	50bfffc4 	addi	r2,r10,-1
   25900:	100490fa 	slli	r2,r2,3
   25904:	00c000f4 	movhi	r3,3
   25908:	18cdc804 	addi	r3,r3,14112
   2590c:	1885883a 	add	r2,r3,r2
   25910:	11800017 	ldw	r6,0(r2)
   25914:	11c00117 	ldw	r7,4(r2)
   25918:	d8800717 	ldw	r2,28(sp)
   2591c:	0009883a 	mov	r4,zero
   25920:	014ff834 	movhi	r5,16352
   25924:	da801615 	stw	r10,88(sp)
   25928:	15c00044 	addi	r23,r2,1
   2592c:	002eb800 	call	2eb80 <__divdf3>
   25930:	d9c00e17 	ldw	r7,56(sp)
   25934:	880d883a 	mov	r6,r17
   25938:	1009883a 	mov	r4,r2
   2593c:	180b883a 	mov	r5,r3
   25940:	002ffb00 	call	2ffb0 <__subdf3>
   25944:	a80b883a 	mov	r5,r21
   25948:	a009883a 	mov	r4,r20
   2594c:	d8c01015 	stw	r3,64(sp)
   25950:	d8800e15 	stw	r2,56(sp)
   25954:	00308800 	call	30880 <__fixdfsi>
   25958:	1009883a 	mov	r4,r2
   2595c:	d8801715 	stw	r2,92(sp)
   25960:	00309080 	call	30908 <__floatsidf>
   25964:	a009883a 	mov	r4,r20
   25968:	a80b883a 	mov	r5,r21
   2596c:	100d883a 	mov	r6,r2
   25970:	180f883a 	mov	r7,r3
   25974:	002ffb00 	call	2ffb0 <__subdf3>
   25978:	da001717 	ldw	r8,92(sp)
   2597c:	1829883a 	mov	r20,r3
   25980:	d8c00717 	ldw	r3,28(sp)
   25984:	d9000e17 	ldw	r4,56(sp)
   25988:	d9401017 	ldw	r5,64(sp)
   2598c:	42000c04 	addi	r8,r8,48
   25990:	1023883a 	mov	r17,r2
   25994:	1a000005 	stb	r8,0(r3)
   25998:	880d883a 	mov	r6,r17
   2599c:	a00f883a 	mov	r7,r20
   259a0:	402b883a 	mov	r21,r8
   259a4:	002f5840 	call	2f584 <__gedf2>
   259a8:	00844516 	blt	zero,r2,26ac0 <_dtoa_r+0x1698>
   259ac:	0009883a 	mov	r4,zero
   259b0:	014ffc34 	movhi	r5,16368
   259b4:	880d883a 	mov	r6,r17
   259b8:	a00f883a 	mov	r7,r20
   259bc:	002ffb00 	call	2ffb0 <__subdf3>
   259c0:	d9000e17 	ldw	r4,56(sp)
   259c4:	d9401017 	ldw	r5,64(sp)
   259c8:	100d883a 	mov	r6,r2
   259cc:	180f883a 	mov	r7,r3
   259d0:	002f5840 	call	2f584 <__gedf2>
   259d4:	da801617 	ldw	r10,88(sp)
   259d8:	00843616 	blt	zero,r2,26ab4 <_dtoa_r+0x168c>
   259dc:	00800044 	movi	r2,1
   259e0:	12806e0e 	bge	r2,r10,25b9c <_dtoa_r+0x774>
   259e4:	d9000717 	ldw	r4,28(sp)
   259e8:	dd801315 	stw	r22,76(sp)
   259ec:	dc001115 	stw	r16,68(sp)
   259f0:	2295883a 	add	r10,r4,r10
   259f4:	dcc01415 	stw	r19,80(sp)
   259f8:	502d883a 	mov	r22,r10
   259fc:	dcc01017 	ldw	r19,64(sp)
   25a00:	b821883a 	mov	r16,r23
   25a04:	dc801015 	stw	r18,64(sp)
   25a08:	dc800e17 	ldw	r18,56(sp)
   25a0c:	00000906 	br	25a34 <_dtoa_r+0x60c>
   25a10:	002ffb00 	call	2ffb0 <__subdf3>
   25a14:	1009883a 	mov	r4,r2
   25a18:	180b883a 	mov	r5,r3
   25a1c:	900d883a 	mov	r6,r18
   25a20:	980f883a 	mov	r7,r19
   25a24:	002f6640 	call	2f664 <__ledf2>
   25a28:	10040e16 	blt	r2,zero,26a64 <_dtoa_r+0x163c>
   25a2c:	b821883a 	mov	r16,r23
   25a30:	bd841026 	beq	r23,r22,26a74 <_dtoa_r+0x164c>
   25a34:	9009883a 	mov	r4,r18
   25a38:	980b883a 	mov	r5,r19
   25a3c:	000d883a 	mov	r6,zero
   25a40:	01d00934 	movhi	r7,16420
   25a44:	002f7440 	call	2f744 <__muldf3>
   25a48:	000d883a 	mov	r6,zero
   25a4c:	01d00934 	movhi	r7,16420
   25a50:	8809883a 	mov	r4,r17
   25a54:	a00b883a 	mov	r5,r20
   25a58:	1025883a 	mov	r18,r2
   25a5c:	1827883a 	mov	r19,r3
   25a60:	002f7440 	call	2f744 <__muldf3>
   25a64:	180b883a 	mov	r5,r3
   25a68:	1009883a 	mov	r4,r2
   25a6c:	1823883a 	mov	r17,r3
   25a70:	1029883a 	mov	r20,r2
   25a74:	00308800 	call	30880 <__fixdfsi>
   25a78:	1009883a 	mov	r4,r2
   25a7c:	102b883a 	mov	r21,r2
   25a80:	00309080 	call	30908 <__floatsidf>
   25a84:	a009883a 	mov	r4,r20
   25a88:	880b883a 	mov	r5,r17
   25a8c:	100d883a 	mov	r6,r2
   25a90:	180f883a 	mov	r7,r3
   25a94:	002ffb00 	call	2ffb0 <__subdf3>
   25a98:	ad400c04 	addi	r21,r21,48
   25a9c:	1009883a 	mov	r4,r2
   25aa0:	180b883a 	mov	r5,r3
   25aa4:	900d883a 	mov	r6,r18
   25aa8:	980f883a 	mov	r7,r19
   25aac:	85400005 	stb	r21,0(r16)
   25ab0:	1023883a 	mov	r17,r2
   25ab4:	1829883a 	mov	r20,r3
   25ab8:	002f6640 	call	2f664 <__ledf2>
   25abc:	bdc00044 	addi	r23,r23,1
   25ac0:	0009883a 	mov	r4,zero
   25ac4:	014ffc34 	movhi	r5,16368
   25ac8:	880d883a 	mov	r6,r17
   25acc:	a00f883a 	mov	r7,r20
   25ad0:	103fcf0e 	bge	r2,zero,25a10 <_gp+0xfffe8610>
   25ad4:	d9801217 	ldw	r6,72(sp)
   25ad8:	dc001117 	ldw	r16,68(sp)
   25adc:	d9800515 	stw	r6,20(sp)
   25ae0:	8009883a 	mov	r4,r16
   25ae4:	e00b883a 	mov	r5,fp
   25ae8:	0028b0c0 	call	28b0c <_Bfree>
   25aec:	d8c00517 	ldw	r3,20(sp)
   25af0:	d9002317 	ldw	r4,140(sp)
   25af4:	d9802517 	ldw	r6,148(sp)
   25af8:	b8000005 	stb	zero,0(r23)
   25afc:	18800044 	addi	r2,r3,1
   25b00:	20800015 	stw	r2,0(r4)
   25b04:	30027226 	beq	r6,zero,264d0 <_dtoa_r+0x10a8>
   25b08:	35c00015 	stw	r23,0(r6)
   25b0c:	d8800717 	ldw	r2,28(sp)
   25b10:	003e7406 	br	254e4 <_gp+0xfffe80e4>
   25b14:	00800434 	movhi	r2,16
   25b18:	10bfffc4 	addi	r2,r2,-1
   25b1c:	a8aa703a 	and	r21,r21,r2
   25b20:	a83e801e 	bne	r21,zero,25524 <_gp+0xfffe8124>
   25b24:	008000f4 	movhi	r2,3
   25b28:	108da904 	addi	r2,r2,13988
   25b2c:	003e7f06 	br	2552c <_gp+0xfffe812c>
   25b30:	10c00204 	addi	r3,r2,8
   25b34:	003e8206 	br	25540 <_gp+0xfffe8140>
   25b38:	01400434 	movhi	r5,16
   25b3c:	297fffc4 	addi	r5,r5,-1
   25b40:	994a703a 	and	r5,r19,r5
   25b44:	9009883a 	mov	r4,r18
   25b48:	8c7f0044 	addi	r17,r17,-1023
   25b4c:	294ffc34 	orhi	r5,r5,16368
   25b50:	dd000217 	ldw	r20,8(sp)
   25b54:	d8000f15 	stw	zero,60(sp)
   25b58:	003e9f06 	br	255d8 <_gp+0xfffe81d8>
   25b5c:	008000f4 	movhi	r2,3
   25b60:	108d9804 	addi	r2,r2,13920
   25b64:	003e5f06 	br	254e4 <_gp+0xfffe80e4>
   25b68:	80001115 	stw	zero,68(r16)
   25b6c:	8009883a 	mov	r4,r16
   25b70:	000b883a 	mov	r5,zero
   25b74:	0028a640 	call	28a64 <_Balloc>
   25b78:	01bfffc4 	movi	r6,-1
   25b7c:	d8800715 	stw	r2,28(sp)
   25b80:	80801015 	stw	r2,64(r16)
   25b84:	00800044 	movi	r2,1
   25b88:	d9800615 	stw	r6,24(sp)
   25b8c:	d8800b15 	stw	r2,44(sp)
   25b90:	d8002215 	stw	zero,136(sp)
   25b94:	d9800d15 	stw	r6,52(sp)
   25b98:	d8000315 	stw	zero,12(sp)
   25b9c:	d8800117 	ldw	r2,4(sp)
   25ba0:	10008e16 	blt	r2,zero,25ddc <_dtoa_r+0x9b4>
   25ba4:	d9000517 	ldw	r4,20(sp)
   25ba8:	00c00384 	movi	r3,14
   25bac:	19008b16 	blt	r3,r4,25ddc <_dtoa_r+0x9b4>
   25bb0:	200490fa 	slli	r2,r4,3
   25bb4:	00c000f4 	movhi	r3,3
   25bb8:	d9802217 	ldw	r6,136(sp)
   25bbc:	18cdc804 	addi	r3,r3,14112
   25bc0:	1885883a 	add	r2,r3,r2
   25bc4:	14400017 	ldw	r17,0(r2)
   25bc8:	15000117 	ldw	r20,4(r2)
   25bcc:	3001c716 	blt	r6,zero,262ec <_dtoa_r+0xec4>
   25bd0:	880d883a 	mov	r6,r17
   25bd4:	a00f883a 	mov	r7,r20
   25bd8:	9009883a 	mov	r4,r18
   25bdc:	980b883a 	mov	r5,r19
   25be0:	002eb800 	call	2eb80 <__divdf3>
   25be4:	180b883a 	mov	r5,r3
   25be8:	1009883a 	mov	r4,r2
   25bec:	00308800 	call	30880 <__fixdfsi>
   25bf0:	1009883a 	mov	r4,r2
   25bf4:	102d883a 	mov	r22,r2
   25bf8:	00309080 	call	30908 <__floatsidf>
   25bfc:	1009883a 	mov	r4,r2
   25c00:	180b883a 	mov	r5,r3
   25c04:	880d883a 	mov	r6,r17
   25c08:	a00f883a 	mov	r7,r20
   25c0c:	002f7440 	call	2f744 <__muldf3>
   25c10:	9009883a 	mov	r4,r18
   25c14:	980b883a 	mov	r5,r19
   25c18:	100d883a 	mov	r6,r2
   25c1c:	180f883a 	mov	r7,r3
   25c20:	002ffb00 	call	2ffb0 <__subdf3>
   25c24:	d9000717 	ldw	r4,28(sp)
   25c28:	d9800617 	ldw	r6,24(sp)
   25c2c:	180b883a 	mov	r5,r3
   25c30:	b0c00c04 	addi	r3,r22,48
   25c34:	20c00005 	stb	r3,0(r4)
   25c38:	25c00044 	addi	r23,r4,1
   25c3c:	01000044 	movi	r4,1
   25c40:	1011883a 	mov	r8,r2
   25c44:	2807883a 	mov	r3,r5
   25c48:	31003d26 	beq	r6,r4,25d40 <_dtoa_r+0x918>
   25c4c:	000d883a 	mov	r6,zero
   25c50:	01d00934 	movhi	r7,16420
   25c54:	1009883a 	mov	r4,r2
   25c58:	002f7440 	call	2f744 <__muldf3>
   25c5c:	1009883a 	mov	r4,r2
   25c60:	180b883a 	mov	r5,r3
   25c64:	000d883a 	mov	r6,zero
   25c68:	000f883a 	mov	r7,zero
   25c6c:	1027883a 	mov	r19,r2
   25c70:	182b883a 	mov	r21,r3
   25c74:	002f5000 	call	2f500 <__eqdf2>
   25c78:	103f9926 	beq	r2,zero,25ae0 <_gp+0xfffe86e0>
   25c7c:	d8c00617 	ldw	r3,24(sp)
   25c80:	d9000717 	ldw	r4,28(sp)
   25c84:	b825883a 	mov	r18,r23
   25c88:	18bfffc4 	addi	r2,r3,-1
   25c8c:	20ad883a 	add	r22,r4,r2
   25c90:	dc000315 	stw	r16,12(sp)
   25c94:	00000a06 	br	25cc0 <_dtoa_r+0x898>
   25c98:	002f7440 	call	2f744 <__muldf3>
   25c9c:	1009883a 	mov	r4,r2
   25ca0:	180b883a 	mov	r5,r3
   25ca4:	000d883a 	mov	r6,zero
   25ca8:	000f883a 	mov	r7,zero
   25cac:	1027883a 	mov	r19,r2
   25cb0:	182b883a 	mov	r21,r3
   25cb4:	b825883a 	mov	r18,r23
   25cb8:	002f5000 	call	2f500 <__eqdf2>
   25cbc:	10022626 	beq	r2,zero,26558 <_dtoa_r+0x1130>
   25cc0:	880d883a 	mov	r6,r17
   25cc4:	a00f883a 	mov	r7,r20
   25cc8:	9809883a 	mov	r4,r19
   25ccc:	a80b883a 	mov	r5,r21
   25cd0:	002eb800 	call	2eb80 <__divdf3>
   25cd4:	180b883a 	mov	r5,r3
   25cd8:	1009883a 	mov	r4,r2
   25cdc:	00308800 	call	30880 <__fixdfsi>
   25ce0:	1009883a 	mov	r4,r2
   25ce4:	1021883a 	mov	r16,r2
   25ce8:	00309080 	call	30908 <__floatsidf>
   25cec:	1009883a 	mov	r4,r2
   25cf0:	180b883a 	mov	r5,r3
   25cf4:	880d883a 	mov	r6,r17
   25cf8:	a00f883a 	mov	r7,r20
   25cfc:	002f7440 	call	2f744 <__muldf3>
   25d00:	9809883a 	mov	r4,r19
   25d04:	a80b883a 	mov	r5,r21
   25d08:	100d883a 	mov	r6,r2
   25d0c:	180f883a 	mov	r7,r3
   25d10:	002ffb00 	call	2ffb0 <__subdf3>
   25d14:	82000c04 	addi	r8,r16,48
   25d18:	92000005 	stb	r8,0(r18)
   25d1c:	1009883a 	mov	r4,r2
   25d20:	180b883a 	mov	r5,r3
   25d24:	000d883a 	mov	r6,zero
   25d28:	01d00934 	movhi	r7,16420
   25d2c:	1011883a 	mov	r8,r2
   25d30:	bdc00044 	addi	r23,r23,1
   25d34:	95bfd81e 	bne	r18,r22,25c98 <_gp+0xfffe8898>
   25d38:	802d883a 	mov	r22,r16
   25d3c:	dc000317 	ldw	r16,12(sp)
   25d40:	4009883a 	mov	r4,r8
   25d44:	180b883a 	mov	r5,r3
   25d48:	400d883a 	mov	r6,r8
   25d4c:	180f883a 	mov	r7,r3
   25d50:	002e2e40 	call	2e2e4 <__adddf3>
   25d54:	8809883a 	mov	r4,r17
   25d58:	a00b883a 	mov	r5,r20
   25d5c:	100d883a 	mov	r6,r2
   25d60:	180f883a 	mov	r7,r3
   25d64:	1027883a 	mov	r19,r2
   25d68:	1825883a 	mov	r18,r3
   25d6c:	002f6640 	call	2f664 <__ledf2>
   25d70:	10000816 	blt	r2,zero,25d94 <_dtoa_r+0x96c>
   25d74:	8809883a 	mov	r4,r17
   25d78:	a00b883a 	mov	r5,r20
   25d7c:	980d883a 	mov	r6,r19
   25d80:	900f883a 	mov	r7,r18
   25d84:	002f5000 	call	2f500 <__eqdf2>
   25d88:	103f551e 	bne	r2,zero,25ae0 <_gp+0xfffe86e0>
   25d8c:	b580004c 	andi	r22,r22,1
   25d90:	b03f5326 	beq	r22,zero,25ae0 <_gp+0xfffe86e0>
   25d94:	bd7fffc3 	ldbu	r21,-1(r23)
   25d98:	b8bfffc4 	addi	r2,r23,-1
   25d9c:	1007883a 	mov	r3,r2
   25da0:	01400e44 	movi	r5,57
   25da4:	d9800717 	ldw	r6,28(sp)
   25da8:	00000506 	br	25dc0 <_dtoa_r+0x998>
   25dac:	18ffffc4 	addi	r3,r3,-1
   25db0:	30825e26 	beq	r6,r2,2672c <_dtoa_r+0x1304>
   25db4:	1d400003 	ldbu	r21,0(r3)
   25db8:	102f883a 	mov	r23,r2
   25dbc:	10bfffc4 	addi	r2,r2,-1
   25dc0:	a9003fcc 	andi	r4,r21,255
   25dc4:	2100201c 	xori	r4,r4,128
   25dc8:	213fe004 	addi	r4,r4,-128
   25dcc:	217ff726 	beq	r4,r5,25dac <_gp+0xfffe89ac>
   25dd0:	aa000044 	addi	r8,r21,1
   25dd4:	12000005 	stb	r8,0(r2)
   25dd8:	003f4106 	br	25ae0 <_gp+0xfffe86e0>
   25ddc:	d8c00b17 	ldw	r3,44(sp)
   25de0:	18006726 	beq	r3,zero,25f80 <_dtoa_r+0xb58>
   25de4:	d9000317 	ldw	r4,12(sp)
   25de8:	00c00044 	movi	r3,1
   25dec:	19016a0e 	bge	r3,r4,26398 <_dtoa_r+0xf70>
   25df0:	d8800617 	ldw	r2,24(sp)
   25df4:	d8c00917 	ldw	r3,36(sp)
   25df8:	157fffc4 	addi	r21,r2,-1
   25dfc:	1d420716 	blt	r3,r21,2661c <_dtoa_r+0x11f4>
   25e00:	1d6bc83a 	sub	r21,r3,r21
   25e04:	d8800617 	ldw	r2,24(sp)
   25e08:	1002c716 	blt	r2,zero,26928 <_dtoa_r+0x1500>
   25e0c:	dd000817 	ldw	r20,32(sp)
   25e10:	d8800617 	ldw	r2,24(sp)
   25e14:	d9800817 	ldw	r6,32(sp)
   25e18:	8009883a 	mov	r4,r16
   25e1c:	01400044 	movi	r5,1
   25e20:	308d883a 	add	r6,r6,r2
   25e24:	d9800815 	stw	r6,32(sp)
   25e28:	b0ad883a 	add	r22,r22,r2
   25e2c:	0028e8c0 	call	28e8c <__i2b>
   25e30:	1023883a 	mov	r17,r2
   25e34:	a0000826 	beq	r20,zero,25e58 <_dtoa_r+0xa30>
   25e38:	0580070e 	bge	zero,r22,25e58 <_dtoa_r+0xa30>
   25e3c:	b005883a 	mov	r2,r22
   25e40:	a5812016 	blt	r20,r22,262c4 <_dtoa_r+0xe9c>
   25e44:	d8c00817 	ldw	r3,32(sp)
   25e48:	a0a9c83a 	sub	r20,r20,r2
   25e4c:	b0adc83a 	sub	r22,r22,r2
   25e50:	1887c83a 	sub	r3,r3,r2
   25e54:	d8c00815 	stw	r3,32(sp)
   25e58:	d9000917 	ldw	r4,36(sp)
   25e5c:	0100140e 	bge	zero,r4,25eb0 <_dtoa_r+0xa88>
   25e60:	d9800b17 	ldw	r6,44(sp)
   25e64:	3001e526 	beq	r6,zero,265fc <_dtoa_r+0x11d4>
   25e68:	05400e0e 	bge	zero,r21,25ea4 <_dtoa_r+0xa7c>
   25e6c:	880b883a 	mov	r5,r17
   25e70:	8009883a 	mov	r4,r16
   25e74:	a80d883a 	mov	r6,r21
   25e78:	00291580 	call	29158 <__pow5mult>
   25e7c:	e00d883a 	mov	r6,fp
   25e80:	8009883a 	mov	r4,r16
   25e84:	100b883a 	mov	r5,r2
   25e88:	1023883a 	mov	r17,r2
   25e8c:	0028ec80 	call	28ec8 <__multiply>
   25e90:	102f883a 	mov	r23,r2
   25e94:	e00b883a 	mov	r5,fp
   25e98:	8009883a 	mov	r4,r16
   25e9c:	0028b0c0 	call	28b0c <_Bfree>
   25ea0:	b839883a 	mov	fp,r23
   25ea4:	d8800917 	ldw	r2,36(sp)
   25ea8:	154dc83a 	sub	r6,r2,r21
   25eac:	3001281e 	bne	r6,zero,26350 <_dtoa_r+0xf28>
   25eb0:	05c00044 	movi	r23,1
   25eb4:	8009883a 	mov	r4,r16
   25eb8:	b80b883a 	mov	r5,r23
   25ebc:	0028e8c0 	call	28e8c <__i2b>
   25ec0:	d8c00a17 	ldw	r3,40(sp)
   25ec4:	102b883a 	mov	r21,r2
   25ec8:	00c0310e 	bge	zero,r3,25f90 <_dtoa_r+0xb68>
   25ecc:	8009883a 	mov	r4,r16
   25ed0:	100b883a 	mov	r5,r2
   25ed4:	180d883a 	mov	r6,r3
   25ed8:	00291580 	call	29158 <__pow5mult>
   25edc:	d9000317 	ldw	r4,12(sp)
   25ee0:	102b883a 	mov	r21,r2
   25ee4:	b9011f0e 	bge	r23,r4,26364 <_dtoa_r+0xf3c>
   25ee8:	0027883a 	mov	r19,zero
   25eec:	a8800417 	ldw	r2,16(r21)
   25ef0:	10800104 	addi	r2,r2,4
   25ef4:	1085883a 	add	r2,r2,r2
   25ef8:	1085883a 	add	r2,r2,r2
   25efc:	a885883a 	add	r2,r21,r2
   25f00:	11000017 	ldw	r4,0(r2)
   25f04:	0028d740 	call	28d74 <__hi0bits>
   25f08:	00c00804 	movi	r3,32
   25f0c:	1885c83a 	sub	r2,r3,r2
   25f10:	00002506 	br	25fa8 <_dtoa_r+0xb80>
   25f14:	01800044 	movi	r6,1
   25f18:	d9800c15 	stw	r6,48(sp)
   25f1c:	003dec06 	br	256d0 <_gp+0xfffe82d0>
   25f20:	d8c00817 	ldw	r3,32(sp)
   25f24:	d9000517 	ldw	r4,20(sp)
   25f28:	d8000a15 	stw	zero,40(sp)
   25f2c:	1907c83a 	sub	r3,r3,r4
   25f30:	010dc83a 	sub	r6,zero,r4
   25f34:	d8c00815 	stw	r3,32(sp)
   25f38:	d9800915 	stw	r6,36(sp)
   25f3c:	003ded06 	br	256f4 <_gp+0xfffe82f4>
   25f40:	05adc83a 	sub	r22,zero,r22
   25f44:	dd800815 	stw	r22,32(sp)
   25f48:	002d883a 	mov	r22,zero
   25f4c:	003de406 	br	256e0 <_gp+0xfffe82e0>
   25f50:	d9000517 	ldw	r4,20(sp)
   25f54:	00309080 	call	30908 <__floatsidf>
   25f58:	1009883a 	mov	r4,r2
   25f5c:	180b883a 	mov	r5,r3
   25f60:	b00d883a 	mov	r6,r22
   25f64:	a80f883a 	mov	r7,r21
   25f68:	002f5000 	call	2f500 <__eqdf2>
   25f6c:	103dc726 	beq	r2,zero,2568c <_gp+0xfffe828c>
   25f70:	d8800517 	ldw	r2,20(sp)
   25f74:	10bfffc4 	addi	r2,r2,-1
   25f78:	d8800515 	stw	r2,20(sp)
   25f7c:	003dc306 	br	2568c <_gp+0xfffe828c>
   25f80:	dd400917 	ldw	r21,36(sp)
   25f84:	dd000817 	ldw	r20,32(sp)
   25f88:	0023883a 	mov	r17,zero
   25f8c:	003fa906 	br	25e34 <_gp+0xfffe8a34>
   25f90:	d9800317 	ldw	r6,12(sp)
   25f94:	b981670e 	bge	r23,r6,26534 <_dtoa_r+0x110c>
   25f98:	0027883a 	mov	r19,zero
   25f9c:	d8c00a17 	ldw	r3,40(sp)
   25fa0:	183fd21e 	bne	r3,zero,25eec <_gp+0xfffe8aec>
   25fa4:	00800044 	movi	r2,1
   25fa8:	1585883a 	add	r2,r2,r22
   25fac:	108007cc 	andi	r2,r2,31
   25fb0:	10005f26 	beq	r2,zero,26130 <_dtoa_r+0xd08>
   25fb4:	00c00804 	movi	r3,32
   25fb8:	1887c83a 	sub	r3,r3,r2
   25fbc:	01000104 	movi	r4,4
   25fc0:	20c2dd0e 	bge	r4,r3,26b38 <_dtoa_r+0x1710>
   25fc4:	d9000817 	ldw	r4,32(sp)
   25fc8:	00c00704 	movi	r3,28
   25fcc:	1885c83a 	sub	r2,r3,r2
   25fd0:	2089883a 	add	r4,r4,r2
   25fd4:	d9000815 	stw	r4,32(sp)
   25fd8:	a0a9883a 	add	r20,r20,r2
   25fdc:	b0ad883a 	add	r22,r22,r2
   25fe0:	d8800817 	ldw	r2,32(sp)
   25fe4:	0080050e 	bge	zero,r2,25ffc <_dtoa_r+0xbd4>
   25fe8:	e00b883a 	mov	r5,fp
   25fec:	8009883a 	mov	r4,r16
   25ff0:	100d883a 	mov	r6,r2
   25ff4:	00292980 	call	29298 <__lshift>
   25ff8:	1039883a 	mov	fp,r2
   25ffc:	0580050e 	bge	zero,r22,26014 <_dtoa_r+0xbec>
   26000:	a80b883a 	mov	r5,r21
   26004:	8009883a 	mov	r4,r16
   26008:	b00d883a 	mov	r6,r22
   2600c:	00292980 	call	29298 <__lshift>
   26010:	102b883a 	mov	r21,r2
   26014:	d8c00c17 	ldw	r3,48(sp)
   26018:	1801161e 	bne	r3,zero,26474 <_dtoa_r+0x104c>
   2601c:	d8c00617 	ldw	r3,24(sp)
   26020:	00c12d0e 	bge	zero,r3,264d8 <_dtoa_r+0x10b0>
   26024:	d8c00b17 	ldw	r3,44(sp)
   26028:	1800571e 	bne	r3,zero,26188 <_dtoa_r+0xd60>
   2602c:	dc800717 	ldw	r18,28(sp)
   26030:	dcc00617 	ldw	r19,24(sp)
   26034:	9029883a 	mov	r20,r18
   26038:	00000206 	br	26044 <_dtoa_r+0xc1c>
   2603c:	0028b340 	call	28b34 <__multadd>
   26040:	1039883a 	mov	fp,r2
   26044:	e009883a 	mov	r4,fp
   26048:	a80b883a 	mov	r5,r21
   2604c:	00252000 	call	25200 <quorem>
   26050:	10800c04 	addi	r2,r2,48
   26054:	90800005 	stb	r2,0(r18)
   26058:	94800044 	addi	r18,r18,1
   2605c:	9507c83a 	sub	r3,r18,r20
   26060:	8009883a 	mov	r4,r16
   26064:	e00b883a 	mov	r5,fp
   26068:	01800284 	movi	r6,10
   2606c:	000f883a 	mov	r7,zero
   26070:	1cfff216 	blt	r3,r19,2603c <_gp+0xfffe8c3c>
   26074:	1011883a 	mov	r8,r2
   26078:	d8800617 	ldw	r2,24(sp)
   2607c:	00822e0e 	bge	zero,r2,26938 <_dtoa_r+0x1510>
   26080:	d9000717 	ldw	r4,28(sp)
   26084:	0025883a 	mov	r18,zero
   26088:	20af883a 	add	r23,r4,r2
   2608c:	e00b883a 	mov	r5,fp
   26090:	01800044 	movi	r6,1
   26094:	8009883a 	mov	r4,r16
   26098:	da001715 	stw	r8,92(sp)
   2609c:	00292980 	call	29298 <__lshift>
   260a0:	1009883a 	mov	r4,r2
   260a4:	a80b883a 	mov	r5,r21
   260a8:	1039883a 	mov	fp,r2
   260ac:	00293e00 	call	293e0 <__mcmp>
   260b0:	da001717 	ldw	r8,92(sp)
   260b4:	00816e0e 	bge	zero,r2,26670 <_dtoa_r+0x1248>
   260b8:	b93fffc3 	ldbu	r4,-1(r23)
   260bc:	b8bfffc4 	addi	r2,r23,-1
   260c0:	1007883a 	mov	r3,r2
   260c4:	01800e44 	movi	r6,57
   260c8:	d9c00717 	ldw	r7,28(sp)
   260cc:	00000506 	br	260e4 <_dtoa_r+0xcbc>
   260d0:	18ffffc4 	addi	r3,r3,-1
   260d4:	38811926 	beq	r7,r2,2653c <_dtoa_r+0x1114>
   260d8:	19000003 	ldbu	r4,0(r3)
   260dc:	102f883a 	mov	r23,r2
   260e0:	10bfffc4 	addi	r2,r2,-1
   260e4:	21403fcc 	andi	r5,r4,255
   260e8:	2940201c 	xori	r5,r5,128
   260ec:	297fe004 	addi	r5,r5,-128
   260f0:	29bff726 	beq	r5,r6,260d0 <_gp+0xfffe8cd0>
   260f4:	21000044 	addi	r4,r4,1
   260f8:	11000005 	stb	r4,0(r2)
   260fc:	8009883a 	mov	r4,r16
   26100:	a80b883a 	mov	r5,r21
   26104:	0028b0c0 	call	28b0c <_Bfree>
   26108:	883e7526 	beq	r17,zero,25ae0 <_gp+0xfffe86e0>
   2610c:	90000426 	beq	r18,zero,26120 <_dtoa_r+0xcf8>
   26110:	94400326 	beq	r18,r17,26120 <_dtoa_r+0xcf8>
   26114:	8009883a 	mov	r4,r16
   26118:	900b883a 	mov	r5,r18
   2611c:	0028b0c0 	call	28b0c <_Bfree>
   26120:	8009883a 	mov	r4,r16
   26124:	880b883a 	mov	r5,r17
   26128:	0028b0c0 	call	28b0c <_Bfree>
   2612c:	003e6c06 	br	25ae0 <_gp+0xfffe86e0>
   26130:	00800704 	movi	r2,28
   26134:	d9800817 	ldw	r6,32(sp)
   26138:	a0a9883a 	add	r20,r20,r2
   2613c:	b0ad883a 	add	r22,r22,r2
   26140:	308d883a 	add	r6,r6,r2
   26144:	d9800815 	stw	r6,32(sp)
   26148:	003fa506 	br	25fe0 <_gp+0xfffe8be0>
   2614c:	013efb84 	movi	r4,-1042
   26150:	246bc83a 	sub	r21,r4,r17
   26154:	9548983a 	sll	r4,r18,r21
   26158:	003d1806 	br	255bc <_gp+0xfffe81bc>
   2615c:	d8000c15 	stw	zero,48(sp)
   26160:	003d5b06 	br	256d0 <_gp+0xfffe82d0>
   26164:	880b883a 	mov	r5,r17
   26168:	8009883a 	mov	r4,r16
   2616c:	01800284 	movi	r6,10
   26170:	000f883a 	mov	r7,zero
   26174:	0028b340 	call	28b34 <__multadd>
   26178:	1023883a 	mov	r17,r2
   2617c:	d8800d17 	ldw	r2,52(sp)
   26180:	0082550e 	bge	zero,r2,26ad8 <_dtoa_r+0x16b0>
   26184:	d8800615 	stw	r2,24(sp)
   26188:	0500050e 	bge	zero,r20,261a0 <_dtoa_r+0xd78>
   2618c:	880b883a 	mov	r5,r17
   26190:	8009883a 	mov	r4,r16
   26194:	a00d883a 	mov	r6,r20
   26198:	00292980 	call	29298 <__lshift>
   2619c:	1023883a 	mov	r17,r2
   261a0:	98016a1e 	bne	r19,zero,2674c <_dtoa_r+0x1324>
   261a4:	8829883a 	mov	r20,r17
   261a8:	d9000617 	ldw	r4,24(sp)
   261ac:	dcc00717 	ldw	r19,28(sp)
   261b0:	9480004c 	andi	r18,r18,1
   261b4:	20bfffc4 	addi	r2,r4,-1
   261b8:	9885883a 	add	r2,r19,r2
   261bc:	d8800415 	stw	r2,16(sp)
   261c0:	dc800615 	stw	r18,24(sp)
   261c4:	e009883a 	mov	r4,fp
   261c8:	a80b883a 	mov	r5,r21
   261cc:	00252000 	call	25200 <quorem>
   261d0:	e009883a 	mov	r4,fp
   261d4:	880b883a 	mov	r5,r17
   261d8:	102f883a 	mov	r23,r2
   261dc:	00293e00 	call	293e0 <__mcmp>
   261e0:	8009883a 	mov	r4,r16
   261e4:	a80b883a 	mov	r5,r21
   261e8:	a00d883a 	mov	r6,r20
   261ec:	102d883a 	mov	r22,r2
   261f0:	00294400 	call	29440 <__mdiff>
   261f4:	1007883a 	mov	r3,r2
   261f8:	10800317 	ldw	r2,12(r2)
   261fc:	bc800c04 	addi	r18,r23,48
   26200:	1000971e 	bne	r2,zero,26460 <_dtoa_r+0x1038>
   26204:	180b883a 	mov	r5,r3
   26208:	e009883a 	mov	r4,fp
   2620c:	d8c01515 	stw	r3,84(sp)
   26210:	00293e00 	call	293e0 <__mcmp>
   26214:	d8c01517 	ldw	r3,84(sp)
   26218:	8009883a 	mov	r4,r16
   2621c:	d8801515 	stw	r2,84(sp)
   26220:	180b883a 	mov	r5,r3
   26224:	0028b0c0 	call	28b0c <_Bfree>
   26228:	d8801517 	ldw	r2,84(sp)
   2622c:	1000041e 	bne	r2,zero,26240 <_dtoa_r+0xe18>
   26230:	d9800317 	ldw	r6,12(sp)
   26234:	3000021e 	bne	r6,zero,26240 <_dtoa_r+0xe18>
   26238:	d8c00617 	ldw	r3,24(sp)
   2623c:	18007626 	beq	r3,zero,26418 <_dtoa_r+0xff0>
   26240:	b0005b16 	blt	r22,zero,263b0 <_dtoa_r+0xf88>
   26244:	b000041e 	bne	r22,zero,26258 <_dtoa_r+0xe30>
   26248:	d9000317 	ldw	r4,12(sp)
   2624c:	2000021e 	bne	r4,zero,26258 <_dtoa_r+0xe30>
   26250:	d8c00617 	ldw	r3,24(sp)
   26254:	18005626 	beq	r3,zero,263b0 <_dtoa_r+0xf88>
   26258:	00814d16 	blt	zero,r2,26790 <_dtoa_r+0x1368>
   2625c:	d8c00417 	ldw	r3,16(sp)
   26260:	9d800044 	addi	r22,r19,1
   26264:	9c800005 	stb	r18,0(r19)
   26268:	b02f883a 	mov	r23,r22
   2626c:	98c14c26 	beq	r19,r3,267a0 <_dtoa_r+0x1378>
   26270:	e00b883a 	mov	r5,fp
   26274:	8009883a 	mov	r4,r16
   26278:	01800284 	movi	r6,10
   2627c:	000f883a 	mov	r7,zero
   26280:	0028b340 	call	28b34 <__multadd>
   26284:	1039883a 	mov	fp,r2
   26288:	8d006d26 	beq	r17,r20,26440 <_dtoa_r+0x1018>
   2628c:	880b883a 	mov	r5,r17
   26290:	01800284 	movi	r6,10
   26294:	000f883a 	mov	r7,zero
   26298:	8009883a 	mov	r4,r16
   2629c:	0028b340 	call	28b34 <__multadd>
   262a0:	a00b883a 	mov	r5,r20
   262a4:	8009883a 	mov	r4,r16
   262a8:	01800284 	movi	r6,10
   262ac:	000f883a 	mov	r7,zero
   262b0:	1023883a 	mov	r17,r2
   262b4:	0028b340 	call	28b34 <__multadd>
   262b8:	1029883a 	mov	r20,r2
   262bc:	b027883a 	mov	r19,r22
   262c0:	003fc006 	br	261c4 <_gp+0xfffe8dc4>
   262c4:	a005883a 	mov	r2,r20
   262c8:	003ede06 	br	25e44 <_gp+0xfffe8a44>
   262cc:	01000044 	movi	r4,1
   262d0:	d9000b15 	stw	r4,44(sp)
   262d4:	d9802217 	ldw	r6,136(sp)
   262d8:	0180dc0e 	bge	zero,r6,2664c <_dtoa_r+0x1224>
   262dc:	3023883a 	mov	r17,r6
   262e0:	d9800d15 	stw	r6,52(sp)
   262e4:	d9800615 	stw	r6,24(sp)
   262e8:	003d1e06 	br	25764 <_gp+0xfffe8364>
   262ec:	d8800617 	ldw	r2,24(sp)
   262f0:	00be3716 	blt	zero,r2,25bd0 <_gp+0xfffe87d0>
   262f4:	1000be1e 	bne	r2,zero,265f0 <_dtoa_r+0x11c8>
   262f8:	8809883a 	mov	r4,r17
   262fc:	a00b883a 	mov	r5,r20
   26300:	000d883a 	mov	r6,zero
   26304:	01d00534 	movhi	r7,16404
   26308:	002f7440 	call	2f744 <__muldf3>
   2630c:	1009883a 	mov	r4,r2
   26310:	180b883a 	mov	r5,r3
   26314:	900d883a 	mov	r6,r18
   26318:	980f883a 	mov	r7,r19
   2631c:	002f5840 	call	2f584 <__gedf2>
   26320:	002b883a 	mov	r21,zero
   26324:	0023883a 	mov	r17,zero
   26328:	10007a16 	blt	r2,zero,26514 <_dtoa_r+0x10ec>
   2632c:	d9002217 	ldw	r4,136(sp)
   26330:	ddc00717 	ldw	r23,28(sp)
   26334:	0108303a 	nor	r4,zero,r4
   26338:	d9000515 	stw	r4,20(sp)
   2633c:	8009883a 	mov	r4,r16
   26340:	a80b883a 	mov	r5,r21
   26344:	0028b0c0 	call	28b0c <_Bfree>
   26348:	883f751e 	bne	r17,zero,26120 <_gp+0xfffe8d20>
   2634c:	003de406 	br	25ae0 <_gp+0xfffe86e0>
   26350:	e00b883a 	mov	r5,fp
   26354:	8009883a 	mov	r4,r16
   26358:	00291580 	call	29158 <__pow5mult>
   2635c:	1039883a 	mov	fp,r2
   26360:	003ed306 	br	25eb0 <_gp+0xfffe8ab0>
   26364:	903ee01e 	bne	r18,zero,25ee8 <_gp+0xfffe8ae8>
   26368:	00800434 	movhi	r2,16
   2636c:	10bfffc4 	addi	r2,r2,-1
   26370:	9884703a 	and	r2,r19,r2
   26374:	103f081e 	bne	r2,zero,25f98 <_gp+0xfffe8b98>
   26378:	9cdffc2c 	andhi	r19,r19,32752
   2637c:	983f0626 	beq	r19,zero,25f98 <_gp+0xfffe8b98>
   26380:	d8800817 	ldw	r2,32(sp)
   26384:	b5800044 	addi	r22,r22,1
   26388:	04c00044 	movi	r19,1
   2638c:	10800044 	addi	r2,r2,1
   26390:	d8800815 	stw	r2,32(sp)
   26394:	003f0106 	br	25f9c <_gp+0xfffe8b9c>
   26398:	d9800f17 	ldw	r6,60(sp)
   2639c:	30016826 	beq	r6,zero,26940 <_dtoa_r+0x1518>
   263a0:	10810cc4 	addi	r2,r2,1075
   263a4:	dd400917 	ldw	r21,36(sp)
   263a8:	dd000817 	ldw	r20,32(sp)
   263ac:	003e9906 	br	25e14 <_gp+0xfffe8a14>
   263b0:	9011883a 	mov	r8,r18
   263b4:	4007883a 	mov	r3,r8
   263b8:	e02d883a 	mov	r22,fp
   263bc:	0080100e 	bge	zero,r2,26400 <_dtoa_r+0xfd8>
   263c0:	01800044 	movi	r6,1
   263c4:	8009883a 	mov	r4,r16
   263c8:	e00b883a 	mov	r5,fp
   263cc:	da001515 	stw	r8,84(sp)
   263d0:	da001715 	stw	r8,92(sp)
   263d4:	00292980 	call	29298 <__lshift>
   263d8:	1009883a 	mov	r4,r2
   263dc:	a80b883a 	mov	r5,r21
   263e0:	102d883a 	mov	r22,r2
   263e4:	00293e00 	call	293e0 <__mcmp>
   263e8:	d8c01517 	ldw	r3,84(sp)
   263ec:	da001717 	ldw	r8,92(sp)
   263f0:	0081a50e 	bge	zero,r2,26a88 <_dtoa_r+0x1660>
   263f4:	00800e44 	movi	r2,57
   263f8:	40817b26 	beq	r8,r2,269e8 <_dtoa_r+0x15c0>
   263fc:	40c00044 	addi	r3,r8,1
   26400:	8825883a 	mov	r18,r17
   26404:	9dc00044 	addi	r23,r19,1
   26408:	98c00005 	stb	r3,0(r19)
   2640c:	a023883a 	mov	r17,r20
   26410:	b039883a 	mov	fp,r22
   26414:	003f3906 	br	260fc <_gp+0xfffe8cfc>
   26418:	00800e44 	movi	r2,57
   2641c:	9011883a 	mov	r8,r18
   26420:	90817226 	beq	r18,r2,269ec <_dtoa_r+0x15c4>
   26424:	0580010e 	bge	zero,r22,2642c <_dtoa_r+0x1004>
   26428:	ba000c44 	addi	r8,r23,49
   2642c:	8825883a 	mov	r18,r17
   26430:	9dc00044 	addi	r23,r19,1
   26434:	9a000005 	stb	r8,0(r19)
   26438:	a023883a 	mov	r17,r20
   2643c:	003f2f06 	br	260fc <_gp+0xfffe8cfc>
   26440:	880b883a 	mov	r5,r17
   26444:	8009883a 	mov	r4,r16
   26448:	01800284 	movi	r6,10
   2644c:	000f883a 	mov	r7,zero
   26450:	0028b340 	call	28b34 <__multadd>
   26454:	1023883a 	mov	r17,r2
   26458:	1029883a 	mov	r20,r2
   2645c:	003f9706 	br	262bc <_gp+0xfffe8ebc>
   26460:	8009883a 	mov	r4,r16
   26464:	180b883a 	mov	r5,r3
   26468:	0028b0c0 	call	28b0c <_Bfree>
   2646c:	00800044 	movi	r2,1
   26470:	003f7306 	br	26240 <_gp+0xfffe8e40>
   26474:	e009883a 	mov	r4,fp
   26478:	a80b883a 	mov	r5,r21
   2647c:	00293e00 	call	293e0 <__mcmp>
   26480:	103ee60e 	bge	r2,zero,2601c <_gp+0xfffe8c1c>
   26484:	8009883a 	mov	r4,r16
   26488:	e00b883a 	mov	r5,fp
   2648c:	01800284 	movi	r6,10
   26490:	000f883a 	mov	r7,zero
   26494:	0028b340 	call	28b34 <__multadd>
   26498:	d9000517 	ldw	r4,20(sp)
   2649c:	d9800b17 	ldw	r6,44(sp)
   264a0:	1039883a 	mov	fp,r2
   264a4:	213fffc4 	addi	r4,r4,-1
   264a8:	d9000515 	stw	r4,20(sp)
   264ac:	303f2d1e 	bne	r6,zero,26164 <_gp+0xfffe8d64>
   264b0:	d9000d17 	ldw	r4,52(sp)
   264b4:	0101780e 	bge	zero,r4,26a98 <_dtoa_r+0x1670>
   264b8:	d9000615 	stw	r4,24(sp)
   264bc:	003edb06 	br	2602c <_gp+0xfffe8c2c>
   264c0:	00800084 	movi	r2,2
   264c4:	30818e1e 	bne	r6,r2,26b00 <_dtoa_r+0x16d8>
   264c8:	d8000b15 	stw	zero,44(sp)
   264cc:	003f8106 	br	262d4 <_gp+0xfffe8ed4>
   264d0:	d8800717 	ldw	r2,28(sp)
   264d4:	003c0306 	br	254e4 <_gp+0xfffe80e4>
   264d8:	d9000317 	ldw	r4,12(sp)
   264dc:	00800084 	movi	r2,2
   264e0:	113ed00e 	bge	r2,r4,26024 <_gp+0xfffe8c24>
   264e4:	d8c00617 	ldw	r3,24(sp)
   264e8:	183f901e 	bne	r3,zero,2632c <_gp+0xfffe8f2c>
   264ec:	a80b883a 	mov	r5,r21
   264f0:	8009883a 	mov	r4,r16
   264f4:	01800144 	movi	r6,5
   264f8:	000f883a 	mov	r7,zero
   264fc:	0028b340 	call	28b34 <__multadd>
   26500:	e009883a 	mov	r4,fp
   26504:	100b883a 	mov	r5,r2
   26508:	102b883a 	mov	r21,r2
   2650c:	00293e00 	call	293e0 <__mcmp>
   26510:	00bf860e 	bge	zero,r2,2632c <_gp+0xfffe8f2c>
   26514:	d9800717 	ldw	r6,28(sp)
   26518:	00800c44 	movi	r2,49
   2651c:	30800005 	stb	r2,0(r6)
   26520:	d8800517 	ldw	r2,20(sp)
   26524:	35c00044 	addi	r23,r6,1
   26528:	10800044 	addi	r2,r2,1
   2652c:	d8800515 	stw	r2,20(sp)
   26530:	003f8206 	br	2633c <_gp+0xfffe8f3c>
   26534:	903e981e 	bne	r18,zero,25f98 <_gp+0xfffe8b98>
   26538:	003f8b06 	br	26368 <_gp+0xfffe8f68>
   2653c:	d9800517 	ldw	r6,20(sp)
   26540:	d8c00717 	ldw	r3,28(sp)
   26544:	00800c44 	movi	r2,49
   26548:	31800044 	addi	r6,r6,1
   2654c:	d9800515 	stw	r6,20(sp)
   26550:	18800005 	stb	r2,0(r3)
   26554:	003ee906 	br	260fc <_gp+0xfffe8cfc>
   26558:	dc000317 	ldw	r16,12(sp)
   2655c:	003d6006 	br	25ae0 <_gp+0xfffe86e0>
   26560:	8809883a 	mov	r4,r17
   26564:	00309080 	call	30908 <__floatsidf>
   26568:	a009883a 	mov	r4,r20
   2656c:	a80b883a 	mov	r5,r21
   26570:	100d883a 	mov	r6,r2
   26574:	180f883a 	mov	r7,r3
   26578:	002f7440 	call	2f744 <__muldf3>
   2657c:	1009883a 	mov	r4,r2
   26580:	180b883a 	mov	r5,r3
   26584:	000d883a 	mov	r6,zero
   26588:	01d00734 	movhi	r7,16412
   2658c:	002e2e40 	call	2e2e4 <__adddf3>
   26590:	1023883a 	mov	r17,r2
   26594:	00bf3034 	movhi	r2,64704
   26598:	1885883a 	add	r2,r3,r2
   2659c:	d8800e15 	stw	r2,56(sp)
   265a0:	a009883a 	mov	r4,r20
   265a4:	a80b883a 	mov	r5,r21
   265a8:	000d883a 	mov	r6,zero
   265ac:	01d00534 	movhi	r7,16404
   265b0:	002ffb00 	call	2ffb0 <__subdf3>
   265b4:	d9c00e17 	ldw	r7,56(sp)
   265b8:	1009883a 	mov	r4,r2
   265bc:	180b883a 	mov	r5,r3
   265c0:	880d883a 	mov	r6,r17
   265c4:	102b883a 	mov	r21,r2
   265c8:	1829883a 	mov	r20,r3
   265cc:	002f5840 	call	2f584 <__gedf2>
   265d0:	00807716 	blt	zero,r2,267b0 <_dtoa_r+0x1388>
   265d4:	d8800e17 	ldw	r2,56(sp)
   265d8:	a809883a 	mov	r4,r21
   265dc:	a00b883a 	mov	r5,r20
   265e0:	11e0003c 	xorhi	r7,r2,32768
   265e4:	880d883a 	mov	r6,r17
   265e8:	002f6640 	call	2f664 <__ledf2>
   265ec:	103d6b0e 	bge	r2,zero,25b9c <_gp+0xfffe879c>
   265f0:	002b883a 	mov	r21,zero
   265f4:	0023883a 	mov	r17,zero
   265f8:	003f4c06 	br	2632c <_gp+0xfffe8f2c>
   265fc:	d9800917 	ldw	r6,36(sp)
   26600:	e00b883a 	mov	r5,fp
   26604:	8009883a 	mov	r4,r16
   26608:	00291580 	call	29158 <__pow5mult>
   2660c:	1039883a 	mov	fp,r2
   26610:	003e2706 	br	25eb0 <_gp+0xfffe8ab0>
   26614:	d8000b15 	stw	zero,44(sp)
   26618:	003c4906 	br	25740 <_gp+0xfffe8340>
   2661c:	d9000917 	ldw	r4,36(sp)
   26620:	d9800a17 	ldw	r6,40(sp)
   26624:	dd400915 	stw	r21,36(sp)
   26628:	a905c83a 	sub	r2,r21,r4
   2662c:	308d883a 	add	r6,r6,r2
   26630:	d9800a15 	stw	r6,40(sp)
   26634:	002b883a 	mov	r21,zero
   26638:	003df206 	br	25e04 <_gp+0xfffe8a04>
   2663c:	dc800e15 	stw	r18,56(sp)
   26640:	982b883a 	mov	r21,r19
   26644:	04400084 	movi	r17,2
   26648:	003c7406 	br	2581c <_gp+0xfffe841c>
   2664c:	04400044 	movi	r17,1
   26650:	dc400d15 	stw	r17,52(sp)
   26654:	dc400615 	stw	r17,24(sp)
   26658:	dc402215 	stw	r17,136(sp)
   2665c:	80001115 	stw	zero,68(r16)
   26660:	000b883a 	mov	r5,zero
   26664:	003c4a06 	br	25790 <_gp+0xfffe8390>
   26668:	3023883a 	mov	r17,r6
   2666c:	003ffb06 	br	2665c <_gp+0xfffe925c>
   26670:	1000021e 	bne	r2,zero,2667c <_dtoa_r+0x1254>
   26674:	4200004c 	andi	r8,r8,1
   26678:	403e8f1e 	bne	r8,zero,260b8 <_gp+0xfffe8cb8>
   2667c:	01000c04 	movi	r4,48
   26680:	00000106 	br	26688 <_dtoa_r+0x1260>
   26684:	102f883a 	mov	r23,r2
   26688:	b8bfffc4 	addi	r2,r23,-1
   2668c:	10c00007 	ldb	r3,0(r2)
   26690:	193ffc26 	beq	r3,r4,26684 <_gp+0xfffe9284>
   26694:	003e9906 	br	260fc <_gp+0xfffe8cfc>
   26698:	d9000517 	ldw	r4,20(sp)
   2669c:	012fc83a 	sub	r23,zero,r4
   266a0:	b800ad26 	beq	r23,zero,26958 <_dtoa_r+0x1530>
   266a4:	b88003cc 	andi	r2,r23,15
   266a8:	100490fa 	slli	r2,r2,3
   266ac:	00c000f4 	movhi	r3,3
   266b0:	18cdc804 	addi	r3,r3,14112
   266b4:	1885883a 	add	r2,r3,r2
   266b8:	11800017 	ldw	r6,0(r2)
   266bc:	11c00117 	ldw	r7,4(r2)
   266c0:	b82fd13a 	srai	r23,r23,4
   266c4:	9009883a 	mov	r4,r18
   266c8:	980b883a 	mov	r5,r19
   266cc:	002f7440 	call	2f744 <__muldf3>
   266d0:	1029883a 	mov	r20,r2
   266d4:	182b883a 	mov	r21,r3
   266d8:	b800f426 	beq	r23,zero,26aac <_dtoa_r+0x1684>
   266dc:	020000f4 	movhi	r8,3
   266e0:	420dbe04 	addi	r8,r8,14072
   266e4:	8029883a 	mov	r20,r16
   266e8:	04400084 	movi	r17,2
   266ec:	4021883a 	mov	r16,r8
   266f0:	b980004c 	andi	r6,r23,1
   266f4:	1009883a 	mov	r4,r2
   266f8:	b82fd07a 	srai	r23,r23,1
   266fc:	180b883a 	mov	r5,r3
   26700:	30000426 	beq	r6,zero,26714 <_dtoa_r+0x12ec>
   26704:	81800017 	ldw	r6,0(r16)
   26708:	81c00117 	ldw	r7,4(r16)
   2670c:	8c400044 	addi	r17,r17,1
   26710:	002f7440 	call	2f744 <__muldf3>
   26714:	84000204 	addi	r16,r16,8
   26718:	b83ff51e 	bne	r23,zero,266f0 <_gp+0xfffe92f0>
   2671c:	a021883a 	mov	r16,r20
   26720:	182b883a 	mov	r21,r3
   26724:	1029883a 	mov	r20,r2
   26728:	003c5506 	br	25880 <_gp+0xfffe8480>
   2672c:	d9800517 	ldw	r6,20(sp)
   26730:	d9000717 	ldw	r4,28(sp)
   26734:	00c00c04 	movi	r3,48
   26738:	31800044 	addi	r6,r6,1
   2673c:	d9800515 	stw	r6,20(sp)
   26740:	20c00005 	stb	r3,0(r4)
   26744:	02000c44 	movi	r8,49
   26748:	003da206 	br	25dd4 <_gp+0xfffe89d4>
   2674c:	89400117 	ldw	r5,4(r17)
   26750:	8009883a 	mov	r4,r16
   26754:	0028a640 	call	28a64 <_Balloc>
   26758:	89800417 	ldw	r6,16(r17)
   2675c:	11000304 	addi	r4,r2,12
   26760:	89400304 	addi	r5,r17,12
   26764:	31800084 	addi	r6,r6,2
   26768:	318d883a 	add	r6,r6,r6
   2676c:	318d883a 	add	r6,r6,r6
   26770:	1027883a 	mov	r19,r2
   26774:	00286ac0 	call	286ac <memcpy>
   26778:	8009883a 	mov	r4,r16
   2677c:	980b883a 	mov	r5,r19
   26780:	01800044 	movi	r6,1
   26784:	00292980 	call	29298 <__lshift>
   26788:	1029883a 	mov	r20,r2
   2678c:	003e8606 	br	261a8 <_gp+0xfffe8da8>
   26790:	00800e44 	movi	r2,57
   26794:	90809526 	beq	r18,r2,269ec <_dtoa_r+0x15c4>
   26798:	92000044 	addi	r8,r18,1
   2679c:	003f2306 	br	2642c <_gp+0xfffe902c>
   267a0:	9011883a 	mov	r8,r18
   267a4:	8825883a 	mov	r18,r17
   267a8:	a023883a 	mov	r17,r20
   267ac:	003e3706 	br	2608c <_gp+0xfffe8c8c>
   267b0:	002b883a 	mov	r21,zero
   267b4:	0023883a 	mov	r17,zero
   267b8:	003f5606 	br	26514 <_gp+0xfffe9114>
   267bc:	51bfffc4 	addi	r6,r10,-1
   267c0:	300490fa 	slli	r2,r6,3
   267c4:	00c000f4 	movhi	r3,3
   267c8:	18cdc804 	addi	r3,r3,14112
   267cc:	1885883a 	add	r2,r3,r2
   267d0:	d9c00e17 	ldw	r7,56(sp)
   267d4:	11000017 	ldw	r4,0(r2)
   267d8:	11400117 	ldw	r5,4(r2)
   267dc:	d8800717 	ldw	r2,28(sp)
   267e0:	d9801015 	stw	r6,64(sp)
   267e4:	880d883a 	mov	r6,r17
   267e8:	da801615 	stw	r10,88(sp)
   267ec:	15c00044 	addi	r23,r2,1
   267f0:	002f7440 	call	2f744 <__muldf3>
   267f4:	a80b883a 	mov	r5,r21
   267f8:	a009883a 	mov	r4,r20
   267fc:	d8c01115 	stw	r3,68(sp)
   26800:	d8800e15 	stw	r2,56(sp)
   26804:	00308800 	call	30880 <__fixdfsi>
   26808:	1009883a 	mov	r4,r2
   2680c:	1023883a 	mov	r17,r2
   26810:	00309080 	call	30908 <__floatsidf>
   26814:	a009883a 	mov	r4,r20
   26818:	a80b883a 	mov	r5,r21
   2681c:	100d883a 	mov	r6,r2
   26820:	180f883a 	mov	r7,r3
   26824:	002ffb00 	call	2ffb0 <__subdf3>
   26828:	1813883a 	mov	r9,r3
   2682c:	d8c00717 	ldw	r3,28(sp)
   26830:	8c400c04 	addi	r17,r17,48
   26834:	1011883a 	mov	r8,r2
   26838:	1c400005 	stb	r17,0(r3)
   2683c:	da801617 	ldw	r10,88(sp)
   26840:	00800044 	movi	r2,1
   26844:	50802326 	beq	r10,r2,268d4 <_dtoa_r+0x14ac>
   26848:	d8800717 	ldw	r2,28(sp)
   2684c:	b82b883a 	mov	r21,r23
   26850:	dc001315 	stw	r16,76(sp)
   26854:	12a9883a 	add	r20,r2,r10
   26858:	4807883a 	mov	r3,r9
   2685c:	4005883a 	mov	r2,r8
   26860:	dc801415 	stw	r18,80(sp)
   26864:	000d883a 	mov	r6,zero
   26868:	01d00934 	movhi	r7,16420
   2686c:	1009883a 	mov	r4,r2
   26870:	180b883a 	mov	r5,r3
   26874:	002f7440 	call	2f744 <__muldf3>
   26878:	180b883a 	mov	r5,r3
   2687c:	1009883a 	mov	r4,r2
   26880:	1821883a 	mov	r16,r3
   26884:	1025883a 	mov	r18,r2
   26888:	00308800 	call	30880 <__fixdfsi>
   2688c:	1009883a 	mov	r4,r2
   26890:	1023883a 	mov	r17,r2
   26894:	00309080 	call	30908 <__floatsidf>
   26898:	9009883a 	mov	r4,r18
   2689c:	800b883a 	mov	r5,r16
   268a0:	100d883a 	mov	r6,r2
   268a4:	180f883a 	mov	r7,r3
   268a8:	8c400c04 	addi	r17,r17,48
   268ac:	002ffb00 	call	2ffb0 <__subdf3>
   268b0:	ad400044 	addi	r21,r21,1
   268b4:	ac7fffc5 	stb	r17,-1(r21)
   268b8:	ad3fea1e 	bne	r21,r20,26864 <_gp+0xfffe9464>
   268bc:	1813883a 	mov	r9,r3
   268c0:	d8c01017 	ldw	r3,64(sp)
   268c4:	dc001317 	ldw	r16,76(sp)
   268c8:	dc801417 	ldw	r18,80(sp)
   268cc:	1011883a 	mov	r8,r2
   268d0:	b8ef883a 	add	r23,r23,r3
   268d4:	d9000e17 	ldw	r4,56(sp)
   268d8:	d9401117 	ldw	r5,68(sp)
   268dc:	000d883a 	mov	r6,zero
   268e0:	01cff834 	movhi	r7,16352
   268e4:	da001715 	stw	r8,92(sp)
   268e8:	da401515 	stw	r9,84(sp)
   268ec:	002e2e40 	call	2e2e4 <__adddf3>
   268f0:	da001717 	ldw	r8,92(sp)
   268f4:	da401517 	ldw	r9,84(sp)
   268f8:	1009883a 	mov	r4,r2
   268fc:	400d883a 	mov	r6,r8
   26900:	480f883a 	mov	r7,r9
   26904:	180b883a 	mov	r5,r3
   26908:	002f6640 	call	2f664 <__ledf2>
   2690c:	da001717 	ldw	r8,92(sp)
   26910:	da401517 	ldw	r9,84(sp)
   26914:	10003b0e 	bge	r2,zero,26a04 <_dtoa_r+0x15dc>
   26918:	d9001217 	ldw	r4,72(sp)
   2691c:	bd7fffc3 	ldbu	r21,-1(r23)
   26920:	d9000515 	stw	r4,20(sp)
   26924:	003d1c06 	br	25d98 <_gp+0xfffe8998>
   26928:	d8c00817 	ldw	r3,32(sp)
   2692c:	18a9c83a 	sub	r20,r3,r2
   26930:	0005883a 	mov	r2,zero
   26934:	003d3706 	br	25e14 <_gp+0xfffe8a14>
   26938:	00800044 	movi	r2,1
   2693c:	003dd006 	br	26080 <_gp+0xfffe8c80>
   26940:	d8c00217 	ldw	r3,8(sp)
   26944:	00800d84 	movi	r2,54
   26948:	dd400917 	ldw	r21,36(sp)
   2694c:	10c5c83a 	sub	r2,r2,r3
   26950:	dd000817 	ldw	r20,32(sp)
   26954:	003d2f06 	br	25e14 <_gp+0xfffe8a14>
   26958:	9029883a 	mov	r20,r18
   2695c:	982b883a 	mov	r21,r19
   26960:	04400084 	movi	r17,2
   26964:	003bc606 	br	25880 <_gp+0xfffe8480>
   26968:	d8800617 	ldw	r2,24(sp)
   2696c:	103efc26 	beq	r2,zero,26560 <_gp+0xfffe9160>
   26970:	d8c00d17 	ldw	r3,52(sp)
   26974:	00fc890e 	bge	zero,r3,25b9c <_gp+0xfffe879c>
   26978:	a80b883a 	mov	r5,r21
   2697c:	a009883a 	mov	r4,r20
   26980:	000d883a 	mov	r6,zero
   26984:	01d00934 	movhi	r7,16420
   26988:	002f7440 	call	2f744 <__muldf3>
   2698c:	89000044 	addi	r4,r17,1
   26990:	1029883a 	mov	r20,r2
   26994:	182b883a 	mov	r21,r3
   26998:	00309080 	call	30908 <__floatsidf>
   2699c:	a009883a 	mov	r4,r20
   269a0:	a80b883a 	mov	r5,r21
   269a4:	100d883a 	mov	r6,r2
   269a8:	180f883a 	mov	r7,r3
   269ac:	002f7440 	call	2f744 <__muldf3>
   269b0:	1009883a 	mov	r4,r2
   269b4:	180b883a 	mov	r5,r3
   269b8:	000d883a 	mov	r6,zero
   269bc:	01d00734 	movhi	r7,16412
   269c0:	002e2e40 	call	2e2e4 <__adddf3>
   269c4:	d9000517 	ldw	r4,20(sp)
   269c8:	1023883a 	mov	r17,r2
   269cc:	00bf3034 	movhi	r2,64704
   269d0:	213fffc4 	addi	r4,r4,-1
   269d4:	1885883a 	add	r2,r3,r2
   269d8:	d9001215 	stw	r4,72(sp)
   269dc:	d8800e15 	stw	r2,56(sp)
   269e0:	da800d17 	ldw	r10,52(sp)
   269e4:	003bc306 	br	258f4 <_gp+0xfffe84f4>
   269e8:	b039883a 	mov	fp,r22
   269ec:	01000e44 	movi	r4,57
   269f0:	8825883a 	mov	r18,r17
   269f4:	9dc00044 	addi	r23,r19,1
   269f8:	99000005 	stb	r4,0(r19)
   269fc:	a023883a 	mov	r17,r20
   26a00:	003dae06 	br	260bc <_gp+0xfffe8cbc>
   26a04:	d9800e17 	ldw	r6,56(sp)
   26a08:	d9c01117 	ldw	r7,68(sp)
   26a0c:	0009883a 	mov	r4,zero
   26a10:	014ff834 	movhi	r5,16352
   26a14:	da001715 	stw	r8,92(sp)
   26a18:	da401515 	stw	r9,84(sp)
   26a1c:	002ffb00 	call	2ffb0 <__subdf3>
   26a20:	da001717 	ldw	r8,92(sp)
   26a24:	da401517 	ldw	r9,84(sp)
   26a28:	1009883a 	mov	r4,r2
   26a2c:	180b883a 	mov	r5,r3
   26a30:	400d883a 	mov	r6,r8
   26a34:	480f883a 	mov	r7,r9
   26a38:	002f5840 	call	2f584 <__gedf2>
   26a3c:	00bc570e 	bge	zero,r2,25b9c <_gp+0xfffe879c>
   26a40:	01000c04 	movi	r4,48
   26a44:	00000106 	br	26a4c <_dtoa_r+0x1624>
   26a48:	102f883a 	mov	r23,r2
   26a4c:	b8bfffc4 	addi	r2,r23,-1
   26a50:	10c00007 	ldb	r3,0(r2)
   26a54:	193ffc26 	beq	r3,r4,26a48 <_gp+0xfffe9648>
   26a58:	d9801217 	ldw	r6,72(sp)
   26a5c:	d9800515 	stw	r6,20(sp)
   26a60:	003c1f06 	br	25ae0 <_gp+0xfffe86e0>
   26a64:	d8801217 	ldw	r2,72(sp)
   26a68:	dc001117 	ldw	r16,68(sp)
   26a6c:	d8800515 	stw	r2,20(sp)
   26a70:	003cc906 	br	25d98 <_gp+0xfffe8998>
   26a74:	dd801317 	ldw	r22,76(sp)
   26a78:	dc001117 	ldw	r16,68(sp)
   26a7c:	dcc01417 	ldw	r19,80(sp)
   26a80:	dc801017 	ldw	r18,64(sp)
   26a84:	003c4506 	br	25b9c <_gp+0xfffe879c>
   26a88:	103e5d1e 	bne	r2,zero,26400 <_gp+0xfffe9000>
   26a8c:	4080004c 	andi	r2,r8,1
   26a90:	103e5b26 	beq	r2,zero,26400 <_gp+0xfffe9000>
   26a94:	003e5706 	br	263f4 <_gp+0xfffe8ff4>
   26a98:	d8c00317 	ldw	r3,12(sp)
   26a9c:	00800084 	movi	r2,2
   26aa0:	10c00a16 	blt	r2,r3,26acc <_dtoa_r+0x16a4>
   26aa4:	d9000d17 	ldw	r4,52(sp)
   26aa8:	003e8306 	br	264b8 <_gp+0xfffe90b8>
   26aac:	04400084 	movi	r17,2
   26ab0:	003b7306 	br	25880 <_gp+0xfffe8480>
   26ab4:	d9801217 	ldw	r6,72(sp)
   26ab8:	d9800515 	stw	r6,20(sp)
   26abc:	003cb606 	br	25d98 <_gp+0xfffe8998>
   26ac0:	d9001217 	ldw	r4,72(sp)
   26ac4:	d9000515 	stw	r4,20(sp)
   26ac8:	003c0506 	br	25ae0 <_gp+0xfffe86e0>
   26acc:	d9800d17 	ldw	r6,52(sp)
   26ad0:	d9800615 	stw	r6,24(sp)
   26ad4:	003e8306 	br	264e4 <_gp+0xfffe90e4>
   26ad8:	d9800317 	ldw	r6,12(sp)
   26adc:	00800084 	movi	r2,2
   26ae0:	11800216 	blt	r2,r6,26aec <_dtoa_r+0x16c4>
   26ae4:	d8800d17 	ldw	r2,52(sp)
   26ae8:	003da606 	br	26184 <_gp+0xfffe8d84>
   26aec:	d8800d17 	ldw	r2,52(sp)
   26af0:	d8800615 	stw	r2,24(sp)
   26af4:	003e7b06 	br	264e4 <_gp+0xfffe90e4>
   26af8:	05000044 	movi	r20,1
   26afc:	003b0506 	br	25714 <_gp+0xfffe8314>
   26b00:	8009883a 	mov	r4,r16
   26b04:	80001115 	stw	zero,68(r16)
   26b08:	000b883a 	mov	r5,zero
   26b0c:	0028a640 	call	28a64 <_Balloc>
   26b10:	d8800715 	stw	r2,28(sp)
   26b14:	d8c00717 	ldw	r3,28(sp)
   26b18:	00bfffc4 	movi	r2,-1
   26b1c:	01000044 	movi	r4,1
   26b20:	d8800615 	stw	r2,24(sp)
   26b24:	80c01015 	stw	r3,64(r16)
   26b28:	d9000b15 	stw	r4,44(sp)
   26b2c:	d8002215 	stw	zero,136(sp)
   26b30:	d8800d15 	stw	r2,52(sp)
   26b34:	003c1906 	br	25b9c <_gp+0xfffe879c>
   26b38:	193d2926 	beq	r3,r4,25fe0 <_gp+0xfffe8be0>
   26b3c:	00c00f04 	movi	r3,60
   26b40:	1885c83a 	sub	r2,r3,r2
   26b44:	003d7b06 	br	26134 <_gp+0xfffe8d34>
   26b48:	000b883a 	mov	r5,zero
   26b4c:	003b1006 	br	25790 <_gp+0xfffe8390>

00026b50 <_fflush_r>:
   26b50:	defffb04 	addi	sp,sp,-20
   26b54:	dcc00315 	stw	r19,12(sp)
   26b58:	dc000015 	stw	r16,0(sp)
   26b5c:	dfc00415 	stw	ra,16(sp)
   26b60:	dc800215 	stw	r18,8(sp)
   26b64:	dc400115 	stw	r17,4(sp)
   26b68:	2027883a 	mov	r19,r4
   26b6c:	2821883a 	mov	r16,r5
   26b70:	20000226 	beq	r4,zero,26b7c <_fflush_r+0x2c>
   26b74:	20800e17 	ldw	r2,56(r4)
   26b78:	10005326 	beq	r2,zero,26cc8 <_fflush_r+0x178>
   26b7c:	8080030b 	ldhu	r2,12(r16)
   26b80:	10ffffcc 	andi	r3,r2,65535
   26b84:	18e0001c 	xori	r3,r3,32768
   26b88:	18e00004 	addi	r3,r3,-32768
   26b8c:	18002c26 	beq	r3,zero,26c40 <_fflush_r+0xf0>
   26b90:	10c0020c 	andi	r3,r2,8
   26b94:	1800321e 	bne	r3,zero,26c60 <_fflush_r+0x110>
   26b98:	80c00117 	ldw	r3,4(r16)
   26b9c:	10820014 	ori	r2,r2,2048
   26ba0:	8080030d 	sth	r2,12(r16)
   26ba4:	00c0570e 	bge	zero,r3,26d04 <_fflush_r+0x1b4>
   26ba8:	82000a17 	ldw	r8,40(r16)
   26bac:	40002426 	beq	r8,zero,26c40 <_fflush_r+0xf0>
   26bb0:	9c400017 	ldw	r17,0(r19)
   26bb4:	10c4000c 	andi	r3,r2,4096
   26bb8:	98000015 	stw	zero,0(r19)
   26bbc:	18004626 	beq	r3,zero,26cd8 <_fflush_r+0x188>
   26bc0:	81801417 	ldw	r6,80(r16)
   26bc4:	10c0010c 	andi	r3,r2,4
   26bc8:	18000626 	beq	r3,zero,26be4 <_fflush_r+0x94>
   26bcc:	80c00117 	ldw	r3,4(r16)
   26bd0:	80800c17 	ldw	r2,48(r16)
   26bd4:	30cdc83a 	sub	r6,r6,r3
   26bd8:	10000226 	beq	r2,zero,26be4 <_fflush_r+0x94>
   26bdc:	80800f17 	ldw	r2,60(r16)
   26be0:	308dc83a 	sub	r6,r6,r2
   26be4:	81400717 	ldw	r5,28(r16)
   26be8:	9809883a 	mov	r4,r19
   26bec:	000f883a 	mov	r7,zero
   26bf0:	403ee83a 	callr	r8
   26bf4:	00ffffc4 	movi	r3,-1
   26bf8:	10c04526 	beq	r2,r3,26d10 <_fflush_r+0x1c0>
   26bfc:	80c0030b 	ldhu	r3,12(r16)
   26c00:	81000417 	ldw	r4,16(r16)
   26c04:	80000115 	stw	zero,4(r16)
   26c08:	197dffcc 	andi	r5,r3,63487
   26c0c:	8140030d 	sth	r5,12(r16)
   26c10:	81000015 	stw	r4,0(r16)
   26c14:	18c4000c 	andi	r3,r3,4096
   26c18:	18000126 	beq	r3,zero,26c20 <_fflush_r+0xd0>
   26c1c:	80801415 	stw	r2,80(r16)
   26c20:	81400c17 	ldw	r5,48(r16)
   26c24:	9c400015 	stw	r17,0(r19)
   26c28:	28000526 	beq	r5,zero,26c40 <_fflush_r+0xf0>
   26c2c:	80801004 	addi	r2,r16,64
   26c30:	28800226 	beq	r5,r2,26c3c <_fflush_r+0xec>
   26c34:	9809883a 	mov	r4,r19
   26c38:	00272800 	call	27280 <_free_r>
   26c3c:	80000c15 	stw	zero,48(r16)
   26c40:	0005883a 	mov	r2,zero
   26c44:	dfc00417 	ldw	ra,16(sp)
   26c48:	dcc00317 	ldw	r19,12(sp)
   26c4c:	dc800217 	ldw	r18,8(sp)
   26c50:	dc400117 	ldw	r17,4(sp)
   26c54:	dc000017 	ldw	r16,0(sp)
   26c58:	dec00504 	addi	sp,sp,20
   26c5c:	f800283a 	ret
   26c60:	84800417 	ldw	r18,16(r16)
   26c64:	903ff626 	beq	r18,zero,26c40 <_gp+0xfffe9840>
   26c68:	84400017 	ldw	r17,0(r16)
   26c6c:	108000cc 	andi	r2,r2,3
   26c70:	84800015 	stw	r18,0(r16)
   26c74:	8ca3c83a 	sub	r17,r17,r18
   26c78:	10001526 	beq	r2,zero,26cd0 <_fflush_r+0x180>
   26c7c:	0005883a 	mov	r2,zero
   26c80:	80800215 	stw	r2,8(r16)
   26c84:	04400316 	blt	zero,r17,26c94 <_fflush_r+0x144>
   26c88:	003fed06 	br	26c40 <_gp+0xfffe9840>
   26c8c:	90a5883a 	add	r18,r18,r2
   26c90:	047feb0e 	bge	zero,r17,26c40 <_gp+0xfffe9840>
   26c94:	80800917 	ldw	r2,36(r16)
   26c98:	81400717 	ldw	r5,28(r16)
   26c9c:	880f883a 	mov	r7,r17
   26ca0:	900d883a 	mov	r6,r18
   26ca4:	9809883a 	mov	r4,r19
   26ca8:	103ee83a 	callr	r2
   26cac:	88a3c83a 	sub	r17,r17,r2
   26cb0:	00bff616 	blt	zero,r2,26c8c <_gp+0xfffe988c>
   26cb4:	80c0030b 	ldhu	r3,12(r16)
   26cb8:	00bfffc4 	movi	r2,-1
   26cbc:	18c01014 	ori	r3,r3,64
   26cc0:	80c0030d 	sth	r3,12(r16)
   26cc4:	003fdf06 	br	26c44 <_gp+0xfffe9844>
   26cc8:	002710c0 	call	2710c <__sinit>
   26ccc:	003fab06 	br	26b7c <_gp+0xfffe977c>
   26cd0:	80800517 	ldw	r2,20(r16)
   26cd4:	003fea06 	br	26c80 <_gp+0xfffe9880>
   26cd8:	81400717 	ldw	r5,28(r16)
   26cdc:	000d883a 	mov	r6,zero
   26ce0:	9809883a 	mov	r4,r19
   26ce4:	01c00044 	movi	r7,1
   26ce8:	403ee83a 	callr	r8
   26cec:	100d883a 	mov	r6,r2
   26cf0:	00bfffc4 	movi	r2,-1
   26cf4:	30801326 	beq	r6,r2,26d44 <_fflush_r+0x1f4>
   26cf8:	8080030b 	ldhu	r2,12(r16)
   26cfc:	82000a17 	ldw	r8,40(r16)
   26d00:	003fb006 	br	26bc4 <_gp+0xfffe97c4>
   26d04:	80c00f17 	ldw	r3,60(r16)
   26d08:	00ffa716 	blt	zero,r3,26ba8 <_gp+0xfffe97a8>
   26d0c:	003fcc06 	br	26c40 <_gp+0xfffe9840>
   26d10:	98c00017 	ldw	r3,0(r19)
   26d14:	183fb926 	beq	r3,zero,26bfc <_gp+0xfffe97fc>
   26d18:	01000744 	movi	r4,29
   26d1c:	19000226 	beq	r3,r4,26d28 <_fflush_r+0x1d8>
   26d20:	01000584 	movi	r4,22
   26d24:	1900101e 	bne	r3,r4,26d68 <_fflush_r+0x218>
   26d28:	8080030b 	ldhu	r2,12(r16)
   26d2c:	80c00417 	ldw	r3,16(r16)
   26d30:	80000115 	stw	zero,4(r16)
   26d34:	10bdffcc 	andi	r2,r2,63487
   26d38:	8080030d 	sth	r2,12(r16)
   26d3c:	80c00015 	stw	r3,0(r16)
   26d40:	003fb706 	br	26c20 <_gp+0xfffe9820>
   26d44:	98800017 	ldw	r2,0(r19)
   26d48:	103feb26 	beq	r2,zero,26cf8 <_gp+0xfffe98f8>
   26d4c:	00c00744 	movi	r3,29
   26d50:	10c00226 	beq	r2,r3,26d5c <_fflush_r+0x20c>
   26d54:	00c00584 	movi	r3,22
   26d58:	10ffd61e 	bne	r2,r3,26cb4 <_gp+0xfffe98b4>
   26d5c:	9c400015 	stw	r17,0(r19)
   26d60:	0005883a 	mov	r2,zero
   26d64:	003fb706 	br	26c44 <_gp+0xfffe9844>
   26d68:	80c0030b 	ldhu	r3,12(r16)
   26d6c:	18c01014 	ori	r3,r3,64
   26d70:	80c0030d 	sth	r3,12(r16)
   26d74:	003fb306 	br	26c44 <_gp+0xfffe9844>

00026d78 <fflush>:
   26d78:	20000526 	beq	r4,zero,26d90 <fflush+0x18>
   26d7c:	008000f4 	movhi	r2,3
   26d80:	10950104 	addi	r2,r2,21508
   26d84:	200b883a 	mov	r5,r4
   26d88:	11000017 	ldw	r4,0(r2)
   26d8c:	0026b501 	jmpi	26b50 <_fflush_r>
   26d90:	008000f4 	movhi	r2,3
   26d94:	10950004 	addi	r2,r2,21504
   26d98:	11000017 	ldw	r4,0(r2)
   26d9c:	014000b4 	movhi	r5,2
   26da0:	295ad404 	addi	r5,r5,27472
   26da4:	0027acc1 	jmpi	27acc <_fwalk_reent>

00026da8 <__fp_lock>:
   26da8:	0005883a 	mov	r2,zero
   26dac:	f800283a 	ret

00026db0 <__fp_unlock>:
   26db0:	0005883a 	mov	r2,zero
   26db4:	f800283a 	ret

00026db8 <_cleanup_r>:
   26db8:	014000f4 	movhi	r5,3
   26dbc:	29739c04 	addi	r5,r5,-12688
   26dc0:	0027a141 	jmpi	27a14 <_fwalk>

00026dc4 <__sinit.part.1>:
   26dc4:	defff604 	addi	sp,sp,-40
   26dc8:	00c000b4 	movhi	r3,2
   26dcc:	dfc00915 	stw	ra,36(sp)
   26dd0:	df000815 	stw	fp,32(sp)
   26dd4:	ddc00715 	stw	r23,28(sp)
   26dd8:	dd800615 	stw	r22,24(sp)
   26ddc:	dd400515 	stw	r21,20(sp)
   26de0:	dd000415 	stw	r20,16(sp)
   26de4:	dcc00315 	stw	r19,12(sp)
   26de8:	dc800215 	stw	r18,8(sp)
   26dec:	dc400115 	stw	r17,4(sp)
   26df0:	dc000015 	stw	r16,0(sp)
   26df4:	18db6e04 	addi	r3,r3,28088
   26df8:	24000117 	ldw	r16,4(r4)
   26dfc:	20c00f15 	stw	r3,60(r4)
   26e00:	07000044 	movi	fp,1
   26e04:	00c000c4 	movi	r3,3
   26e08:	2080bb04 	addi	r2,r4,748
   26e0c:	20c0b915 	stw	r3,740(r4)
   26e10:	27000e15 	stw	fp,56(r4)
   26e14:	2080ba15 	stw	r2,744(r4)
   26e18:	2000b815 	stw	zero,736(r4)
   26e1c:	05c00204 	movi	r23,8
   26e20:	00800104 	movi	r2,4
   26e24:	2025883a 	mov	r18,r4
   26e28:	b80d883a 	mov	r6,r23
   26e2c:	81001704 	addi	r4,r16,92
   26e30:	000b883a 	mov	r5,zero
   26e34:	80000015 	stw	zero,0(r16)
   26e38:	80000115 	stw	zero,4(r16)
   26e3c:	80000215 	stw	zero,8(r16)
   26e40:	8080030d 	sth	r2,12(r16)
   26e44:	80001915 	stw	zero,100(r16)
   26e48:	8000038d 	sth	zero,14(r16)
   26e4c:	80000415 	stw	zero,16(r16)
   26e50:	80000515 	stw	zero,20(r16)
   26e54:	80000615 	stw	zero,24(r16)
   26e58:	00289400 	call	28940 <memset>
   26e5c:	058000f4 	movhi	r22,3
   26e60:	94400217 	ldw	r17,8(r18)
   26e64:	054000f4 	movhi	r21,3
   26e68:	050000f4 	movhi	r20,3
   26e6c:	04c000f4 	movhi	r19,3
   26e70:	b5a84504 	addi	r22,r22,-24300
   26e74:	ad685c04 	addi	r21,r21,-24208
   26e78:	a5287b04 	addi	r20,r20,-24084
   26e7c:	9ce89204 	addi	r19,r19,-23992
   26e80:	85800815 	stw	r22,32(r16)
   26e84:	85400915 	stw	r21,36(r16)
   26e88:	85000a15 	stw	r20,40(r16)
   26e8c:	84c00b15 	stw	r19,44(r16)
   26e90:	84000715 	stw	r16,28(r16)
   26e94:	00800284 	movi	r2,10
   26e98:	89001704 	addi	r4,r17,92
   26e9c:	b80d883a 	mov	r6,r23
   26ea0:	000b883a 	mov	r5,zero
   26ea4:	88000015 	stw	zero,0(r17)
   26ea8:	88000115 	stw	zero,4(r17)
   26eac:	88000215 	stw	zero,8(r17)
   26eb0:	8880030d 	sth	r2,12(r17)
   26eb4:	88001915 	stw	zero,100(r17)
   26eb8:	8f00038d 	sth	fp,14(r17)
   26ebc:	88000415 	stw	zero,16(r17)
   26ec0:	88000515 	stw	zero,20(r17)
   26ec4:	88000615 	stw	zero,24(r17)
   26ec8:	00289400 	call	28940 <memset>
   26ecc:	94000317 	ldw	r16,12(r18)
   26ed0:	00800484 	movi	r2,18
   26ed4:	8c400715 	stw	r17,28(r17)
   26ed8:	8d800815 	stw	r22,32(r17)
   26edc:	8d400915 	stw	r21,36(r17)
   26ee0:	8d000a15 	stw	r20,40(r17)
   26ee4:	8cc00b15 	stw	r19,44(r17)
   26ee8:	8080030d 	sth	r2,12(r16)
   26eec:	00800084 	movi	r2,2
   26ef0:	80000015 	stw	zero,0(r16)
   26ef4:	80000115 	stw	zero,4(r16)
   26ef8:	80000215 	stw	zero,8(r16)
   26efc:	80001915 	stw	zero,100(r16)
   26f00:	8080038d 	sth	r2,14(r16)
   26f04:	80000415 	stw	zero,16(r16)
   26f08:	80000515 	stw	zero,20(r16)
   26f0c:	80000615 	stw	zero,24(r16)
   26f10:	81001704 	addi	r4,r16,92
   26f14:	000b883a 	mov	r5,zero
   26f18:	b80d883a 	mov	r6,r23
   26f1c:	00289400 	call	28940 <memset>
   26f20:	84000715 	stw	r16,28(r16)
   26f24:	85800815 	stw	r22,32(r16)
   26f28:	85400915 	stw	r21,36(r16)
   26f2c:	85000a15 	stw	r20,40(r16)
   26f30:	84c00b15 	stw	r19,44(r16)
   26f34:	dfc00917 	ldw	ra,36(sp)
   26f38:	df000817 	ldw	fp,32(sp)
   26f3c:	ddc00717 	ldw	r23,28(sp)
   26f40:	dd800617 	ldw	r22,24(sp)
   26f44:	dd400517 	ldw	r21,20(sp)
   26f48:	dd000417 	ldw	r20,16(sp)
   26f4c:	dcc00317 	ldw	r19,12(sp)
   26f50:	dc800217 	ldw	r18,8(sp)
   26f54:	dc400117 	ldw	r17,4(sp)
   26f58:	dc000017 	ldw	r16,0(sp)
   26f5c:	dec00a04 	addi	sp,sp,40
   26f60:	f800283a 	ret

00026f64 <__sfmoreglue>:
   26f64:	defffc04 	addi	sp,sp,-16
   26f68:	dc800215 	stw	r18,8(sp)
   26f6c:	2825883a 	mov	r18,r5
   26f70:	dc000015 	stw	r16,0(sp)
   26f74:	01401a04 	movi	r5,104
   26f78:	2021883a 	mov	r16,r4
   26f7c:	9009883a 	mov	r4,r18
   26f80:	dfc00315 	stw	ra,12(sp)
   26f84:	dc400115 	stw	r17,4(sp)
   26f88:	002e2bc0 	call	2e2bc <__mulsi3>
   26f8c:	8009883a 	mov	r4,r16
   26f90:	11400304 	addi	r5,r2,12
   26f94:	1023883a 	mov	r17,r2
   26f98:	0027e1c0 	call	27e1c <_malloc_r>
   26f9c:	1021883a 	mov	r16,r2
   26fa0:	10000726 	beq	r2,zero,26fc0 <__sfmoreglue+0x5c>
   26fa4:	11000304 	addi	r4,r2,12
   26fa8:	10000015 	stw	zero,0(r2)
   26fac:	14800115 	stw	r18,4(r2)
   26fb0:	11000215 	stw	r4,8(r2)
   26fb4:	000b883a 	mov	r5,zero
   26fb8:	880d883a 	mov	r6,r17
   26fbc:	00289400 	call	28940 <memset>
   26fc0:	8005883a 	mov	r2,r16
   26fc4:	dfc00317 	ldw	ra,12(sp)
   26fc8:	dc800217 	ldw	r18,8(sp)
   26fcc:	dc400117 	ldw	r17,4(sp)
   26fd0:	dc000017 	ldw	r16,0(sp)
   26fd4:	dec00404 	addi	sp,sp,16
   26fd8:	f800283a 	ret

00026fdc <__sfp>:
   26fdc:	008000f4 	movhi	r2,3
   26fe0:	defffb04 	addi	sp,sp,-20
   26fe4:	10950004 	addi	r2,r2,21504
   26fe8:	dc800215 	stw	r18,8(sp)
   26fec:	14800017 	ldw	r18,0(r2)
   26ff0:	dcc00315 	stw	r19,12(sp)
   26ff4:	dfc00415 	stw	ra,16(sp)
   26ff8:	90800e17 	ldw	r2,56(r18)
   26ffc:	dc400115 	stw	r17,4(sp)
   27000:	dc000015 	stw	r16,0(sp)
   27004:	2027883a 	mov	r19,r4
   27008:	1000021e 	bne	r2,zero,27014 <__sfp+0x38>
   2700c:	9009883a 	mov	r4,r18
   27010:	0026dc40 	call	26dc4 <__sinit.part.1>
   27014:	9480b804 	addi	r18,r18,736
   27018:	047fffc4 	movi	r17,-1
   2701c:	91400117 	ldw	r5,4(r18)
   27020:	94000217 	ldw	r16,8(r18)
   27024:	297fffc4 	addi	r5,r5,-1
   27028:	28000a16 	blt	r5,zero,27054 <__sfp+0x78>
   2702c:	8080030f 	ldh	r2,12(r16)
   27030:	10000c26 	beq	r2,zero,27064 <__sfp+0x88>
   27034:	80c01d04 	addi	r3,r16,116
   27038:	00000206 	br	27044 <__sfp+0x68>
   2703c:	18bfe60f 	ldh	r2,-104(r3)
   27040:	10000826 	beq	r2,zero,27064 <__sfp+0x88>
   27044:	297fffc4 	addi	r5,r5,-1
   27048:	1c3ffd04 	addi	r16,r3,-12
   2704c:	18c01a04 	addi	r3,r3,104
   27050:	2c7ffa1e 	bne	r5,r17,2703c <_gp+0xfffe9c3c>
   27054:	90800017 	ldw	r2,0(r18)
   27058:	10001d26 	beq	r2,zero,270d0 <__sfp+0xf4>
   2705c:	1025883a 	mov	r18,r2
   27060:	003fee06 	br	2701c <_gp+0xfffe9c1c>
   27064:	00bfffc4 	movi	r2,-1
   27068:	8080038d 	sth	r2,14(r16)
   2706c:	00800044 	movi	r2,1
   27070:	8080030d 	sth	r2,12(r16)
   27074:	80001915 	stw	zero,100(r16)
   27078:	80000015 	stw	zero,0(r16)
   2707c:	80000215 	stw	zero,8(r16)
   27080:	80000115 	stw	zero,4(r16)
   27084:	80000415 	stw	zero,16(r16)
   27088:	80000515 	stw	zero,20(r16)
   2708c:	80000615 	stw	zero,24(r16)
   27090:	81001704 	addi	r4,r16,92
   27094:	000b883a 	mov	r5,zero
   27098:	01800204 	movi	r6,8
   2709c:	00289400 	call	28940 <memset>
   270a0:	8005883a 	mov	r2,r16
   270a4:	80000c15 	stw	zero,48(r16)
   270a8:	80000d15 	stw	zero,52(r16)
   270ac:	80001115 	stw	zero,68(r16)
   270b0:	80001215 	stw	zero,72(r16)
   270b4:	dfc00417 	ldw	ra,16(sp)
   270b8:	dcc00317 	ldw	r19,12(sp)
   270bc:	dc800217 	ldw	r18,8(sp)
   270c0:	dc400117 	ldw	r17,4(sp)
   270c4:	dc000017 	ldw	r16,0(sp)
   270c8:	dec00504 	addi	sp,sp,20
   270cc:	f800283a 	ret
   270d0:	9809883a 	mov	r4,r19
   270d4:	01400104 	movi	r5,4
   270d8:	0026f640 	call	26f64 <__sfmoreglue>
   270dc:	90800015 	stw	r2,0(r18)
   270e0:	103fde1e 	bne	r2,zero,2705c <_gp+0xfffe9c5c>
   270e4:	00800304 	movi	r2,12
   270e8:	98800015 	stw	r2,0(r19)
   270ec:	0005883a 	mov	r2,zero
   270f0:	003ff006 	br	270b4 <_gp+0xfffe9cb4>

000270f4 <_cleanup>:
   270f4:	008000f4 	movhi	r2,3
   270f8:	10950004 	addi	r2,r2,21504
   270fc:	11000017 	ldw	r4,0(r2)
   27100:	014000f4 	movhi	r5,3
   27104:	29739c04 	addi	r5,r5,-12688
   27108:	0027a141 	jmpi	27a14 <_fwalk>

0002710c <__sinit>:
   2710c:	20800e17 	ldw	r2,56(r4)
   27110:	10000126 	beq	r2,zero,27118 <__sinit+0xc>
   27114:	f800283a 	ret
   27118:	0026dc41 	jmpi	26dc4 <__sinit.part.1>

0002711c <__sfp_lock_acquire>:
   2711c:	f800283a 	ret

00027120 <__sfp_lock_release>:
   27120:	f800283a 	ret

00027124 <__sinit_lock_acquire>:
   27124:	f800283a 	ret

00027128 <__sinit_lock_release>:
   27128:	f800283a 	ret

0002712c <__fp_lock_all>:
   2712c:	008000f4 	movhi	r2,3
   27130:	10950104 	addi	r2,r2,21508
   27134:	11000017 	ldw	r4,0(r2)
   27138:	014000b4 	movhi	r5,2
   2713c:	295b6a04 	addi	r5,r5,28072
   27140:	0027a141 	jmpi	27a14 <_fwalk>

00027144 <__fp_unlock_all>:
   27144:	008000f4 	movhi	r2,3
   27148:	10950104 	addi	r2,r2,21508
   2714c:	11000017 	ldw	r4,0(r2)
   27150:	014000b4 	movhi	r5,2
   27154:	295b6c04 	addi	r5,r5,28080
   27158:	0027a141 	jmpi	27a14 <_fwalk>

0002715c <_malloc_trim_r>:
   2715c:	defffb04 	addi	sp,sp,-20
   27160:	dcc00315 	stw	r19,12(sp)
   27164:	04c000f4 	movhi	r19,3
   27168:	dc800215 	stw	r18,8(sp)
   2716c:	dc400115 	stw	r17,4(sp)
   27170:	dc000015 	stw	r16,0(sp)
   27174:	dfc00415 	stw	ra,16(sp)
   27178:	2821883a 	mov	r16,r5
   2717c:	9ccf7c04 	addi	r19,r19,15856
   27180:	2025883a 	mov	r18,r4
   27184:	00310c00 	call	310c0 <__malloc_lock>
   27188:	98800217 	ldw	r2,8(r19)
   2718c:	14400117 	ldw	r17,4(r2)
   27190:	00bfff04 	movi	r2,-4
   27194:	88a2703a 	and	r17,r17,r2
   27198:	8c21c83a 	sub	r16,r17,r16
   2719c:	8403fbc4 	addi	r16,r16,4079
   271a0:	8020d33a 	srli	r16,r16,12
   271a4:	0083ffc4 	movi	r2,4095
   271a8:	843fffc4 	addi	r16,r16,-1
   271ac:	8020933a 	slli	r16,r16,12
   271b0:	1400060e 	bge	r2,r16,271cc <_malloc_trim_r+0x70>
   271b4:	9009883a 	mov	r4,r18
   271b8:	000b883a 	mov	r5,zero
   271bc:	002a0c00 	call	2a0c0 <_sbrk_r>
   271c0:	98c00217 	ldw	r3,8(r19)
   271c4:	1c47883a 	add	r3,r3,r17
   271c8:	10c00a26 	beq	r2,r3,271f4 <_malloc_trim_r+0x98>
   271cc:	9009883a 	mov	r4,r18
   271d0:	00310e00 	call	310e0 <__malloc_unlock>
   271d4:	0005883a 	mov	r2,zero
   271d8:	dfc00417 	ldw	ra,16(sp)
   271dc:	dcc00317 	ldw	r19,12(sp)
   271e0:	dc800217 	ldw	r18,8(sp)
   271e4:	dc400117 	ldw	r17,4(sp)
   271e8:	dc000017 	ldw	r16,0(sp)
   271ec:	dec00504 	addi	sp,sp,20
   271f0:	f800283a 	ret
   271f4:	9009883a 	mov	r4,r18
   271f8:	040bc83a 	sub	r5,zero,r16
   271fc:	002a0c00 	call	2a0c0 <_sbrk_r>
   27200:	00ffffc4 	movi	r3,-1
   27204:	10c00d26 	beq	r2,r3,2723c <_malloc_trim_r+0xe0>
   27208:	00c000f4 	movhi	r3,3
   2720c:	18dbd904 	addi	r3,r3,28516
   27210:	18800017 	ldw	r2,0(r3)
   27214:	99000217 	ldw	r4,8(r19)
   27218:	8c23c83a 	sub	r17,r17,r16
   2721c:	8c400054 	ori	r17,r17,1
   27220:	1421c83a 	sub	r16,r2,r16
   27224:	24400115 	stw	r17,4(r4)
   27228:	9009883a 	mov	r4,r18
   2722c:	1c000015 	stw	r16,0(r3)
   27230:	00310e00 	call	310e0 <__malloc_unlock>
   27234:	00800044 	movi	r2,1
   27238:	003fe706 	br	271d8 <_gp+0xfffe9dd8>
   2723c:	9009883a 	mov	r4,r18
   27240:	000b883a 	mov	r5,zero
   27244:	002a0c00 	call	2a0c0 <_sbrk_r>
   27248:	99000217 	ldw	r4,8(r19)
   2724c:	014003c4 	movi	r5,15
   27250:	1107c83a 	sub	r3,r2,r4
   27254:	28ffdd0e 	bge	r5,r3,271cc <_gp+0xfffe9dcc>
   27258:	014000f4 	movhi	r5,3
   2725c:	29550304 	addi	r5,r5,21516
   27260:	29400017 	ldw	r5,0(r5)
   27264:	18c00054 	ori	r3,r3,1
   27268:	20c00115 	stw	r3,4(r4)
   2726c:	00c000f4 	movhi	r3,3
   27270:	1145c83a 	sub	r2,r2,r5
   27274:	18dbd904 	addi	r3,r3,28516
   27278:	18800015 	stw	r2,0(r3)
   2727c:	003fd306 	br	271cc <_gp+0xfffe9dcc>

00027280 <_free_r>:
   27280:	28004c26 	beq	r5,zero,273b4 <_free_r+0x134>
   27284:	defffd04 	addi	sp,sp,-12
   27288:	dc400115 	stw	r17,4(sp)
   2728c:	dc000015 	stw	r16,0(sp)
   27290:	2023883a 	mov	r17,r4
   27294:	2821883a 	mov	r16,r5
   27298:	dfc00215 	stw	ra,8(sp)
   2729c:	00310c00 	call	310c0 <__malloc_lock>
   272a0:	813fff17 	ldw	r4,-4(r16)
   272a4:	00bfff84 	movi	r2,-2
   272a8:	024000f4 	movhi	r9,3
   272ac:	81bffe04 	addi	r6,r16,-8
   272b0:	2084703a 	and	r2,r4,r2
   272b4:	4a4f7c04 	addi	r9,r9,15856
   272b8:	308b883a 	add	r5,r6,r2
   272bc:	2a000117 	ldw	r8,4(r5)
   272c0:	49c00217 	ldw	r7,8(r9)
   272c4:	00ffff04 	movi	r3,-4
   272c8:	40c6703a 	and	r3,r8,r3
   272cc:	39405326 	beq	r7,r5,2741c <_free_r+0x19c>
   272d0:	28c00115 	stw	r3,4(r5)
   272d4:	2100004c 	andi	r4,r4,1
   272d8:	2000091e 	bne	r4,zero,27300 <_free_r+0x80>
   272dc:	81fffe17 	ldw	r7,-8(r16)
   272e0:	4a000204 	addi	r8,r9,8
   272e4:	31cdc83a 	sub	r6,r6,r7
   272e8:	31000217 	ldw	r4,8(r6)
   272ec:	11c5883a 	add	r2,r2,r7
   272f0:	22006126 	beq	r4,r8,27478 <_free_r+0x1f8>
   272f4:	31c00317 	ldw	r7,12(r6)
   272f8:	21c00315 	stw	r7,12(r4)
   272fc:	39000215 	stw	r4,8(r7)
   27300:	28c9883a 	add	r4,r5,r3
   27304:	21c00117 	ldw	r7,4(r4)
   27308:	39c0004c 	andi	r7,r7,1
   2730c:	38000d1e 	bne	r7,zero,27344 <_free_r+0xc4>
   27310:	29000217 	ldw	r4,8(r5)
   27314:	10c5883a 	add	r2,r2,r3
   27318:	00c000f4 	movhi	r3,3
   2731c:	18cf7e04 	addi	r3,r3,15864
   27320:	20c07526 	beq	r4,r3,274f8 <_free_r+0x278>
   27324:	29c00317 	ldw	r7,12(r5)
   27328:	11400054 	ori	r5,r2,1
   2732c:	3087883a 	add	r3,r6,r2
   27330:	21c00315 	stw	r7,12(r4)
   27334:	39000215 	stw	r4,8(r7)
   27338:	31400115 	stw	r5,4(r6)
   2733c:	18800015 	stw	r2,0(r3)
   27340:	00000406 	br	27354 <_free_r+0xd4>
   27344:	10c00054 	ori	r3,r2,1
   27348:	30c00115 	stw	r3,4(r6)
   2734c:	3087883a 	add	r3,r6,r2
   27350:	18800015 	stw	r2,0(r3)
   27354:	00c07fc4 	movi	r3,511
   27358:	18801736 	bltu	r3,r2,273b8 <_free_r+0x138>
   2735c:	1004d0fa 	srli	r2,r2,3
   27360:	01400044 	movi	r5,1
   27364:	49000117 	ldw	r4,4(r9)
   27368:	1087883a 	add	r3,r2,r2
   2736c:	18c7883a 	add	r3,r3,r3
   27370:	1005d0ba 	srai	r2,r2,2
   27374:	18c7883a 	add	r3,r3,r3
   27378:	1a47883a 	add	r3,r3,r9
   2737c:	19c00217 	ldw	r7,8(r3)
   27380:	2884983a 	sll	r2,r5,r2
   27384:	30c00315 	stw	r3,12(r6)
   27388:	31c00215 	stw	r7,8(r6)
   2738c:	1104b03a 	or	r2,r2,r4
   27390:	19800215 	stw	r6,8(r3)
   27394:	48800115 	stw	r2,4(r9)
   27398:	39800315 	stw	r6,12(r7)
   2739c:	8809883a 	mov	r4,r17
   273a0:	dfc00217 	ldw	ra,8(sp)
   273a4:	dc400117 	ldw	r17,4(sp)
   273a8:	dc000017 	ldw	r16,0(sp)
   273ac:	dec00304 	addi	sp,sp,12
   273b0:	00310e01 	jmpi	310e0 <__malloc_unlock>
   273b4:	f800283a 	ret
   273b8:	1006d27a 	srli	r3,r2,9
   273bc:	01000104 	movi	r4,4
   273c0:	20c04036 	bltu	r4,r3,274c4 <_free_r+0x244>
   273c4:	1006d1ba 	srli	r3,r2,6
   273c8:	19400e04 	addi	r5,r3,56
   273cc:	2947883a 	add	r3,r5,r5
   273d0:	18c7883a 	add	r3,r3,r3
   273d4:	18c7883a 	add	r3,r3,r3
   273d8:	1a49883a 	add	r4,r3,r9
   273dc:	20c00217 	ldw	r3,8(r4)
   273e0:	01c000f4 	movhi	r7,3
   273e4:	39cf7c04 	addi	r7,r7,15856
   273e8:	19003b26 	beq	r3,r4,274d8 <_free_r+0x258>
   273ec:	01ffff04 	movi	r7,-4
   273f0:	19400117 	ldw	r5,4(r3)
   273f4:	29ca703a 	and	r5,r5,r7
   273f8:	1140022e 	bgeu	r2,r5,27404 <_free_r+0x184>
   273fc:	18c00217 	ldw	r3,8(r3)
   27400:	20fffb1e 	bne	r4,r3,273f0 <_gp+0xfffe9ff0>
   27404:	18800317 	ldw	r2,12(r3)
   27408:	30800315 	stw	r2,12(r6)
   2740c:	30c00215 	stw	r3,8(r6)
   27410:	11800215 	stw	r6,8(r2)
   27414:	19800315 	stw	r6,12(r3)
   27418:	003fe006 	br	2739c <_gp+0xfffe9f9c>
   2741c:	2100004c 	andi	r4,r4,1
   27420:	1885883a 	add	r2,r3,r2
   27424:	2000071e 	bne	r4,zero,27444 <_free_r+0x1c4>
   27428:	817ffe17 	ldw	r5,-8(r16)
   2742c:	314dc83a 	sub	r6,r6,r5
   27430:	30c00317 	ldw	r3,12(r6)
   27434:	31000217 	ldw	r4,8(r6)
   27438:	1145883a 	add	r2,r2,r5
   2743c:	20c00315 	stw	r3,12(r4)
   27440:	19000215 	stw	r4,8(r3)
   27444:	10c00054 	ori	r3,r2,1
   27448:	30c00115 	stw	r3,4(r6)
   2744c:	00c000f4 	movhi	r3,3
   27450:	18d50404 	addi	r3,r3,21520
   27454:	18c00017 	ldw	r3,0(r3)
   27458:	49800215 	stw	r6,8(r9)
   2745c:	10ffcf36 	bltu	r2,r3,2739c <_gp+0xfffe9f9c>
   27460:	008000f4 	movhi	r2,3
   27464:	109bd004 	addi	r2,r2,28480
   27468:	11400017 	ldw	r5,0(r2)
   2746c:	8809883a 	mov	r4,r17
   27470:	002715c0 	call	2715c <_malloc_trim_r>
   27474:	003fc906 	br	2739c <_gp+0xfffe9f9c>
   27478:	28c9883a 	add	r4,r5,r3
   2747c:	21000117 	ldw	r4,4(r4)
   27480:	2100004c 	andi	r4,r4,1
   27484:	20000a1e 	bne	r4,zero,274b0 <_free_r+0x230>
   27488:	29000317 	ldw	r4,12(r5)
   2748c:	29400217 	ldw	r5,8(r5)
   27490:	10c5883a 	add	r2,r2,r3
   27494:	10c00054 	ori	r3,r2,1
   27498:	29000315 	stw	r4,12(r5)
   2749c:	21400215 	stw	r5,8(r4)
   274a0:	30c00115 	stw	r3,4(r6)
   274a4:	308d883a 	add	r6,r6,r2
   274a8:	30800015 	stw	r2,0(r6)
   274ac:	003fbb06 	br	2739c <_gp+0xfffe9f9c>
   274b0:	10c00054 	ori	r3,r2,1
   274b4:	30c00115 	stw	r3,4(r6)
   274b8:	308d883a 	add	r6,r6,r2
   274bc:	30800015 	stw	r2,0(r6)
   274c0:	003fb606 	br	2739c <_gp+0xfffe9f9c>
   274c4:	01000504 	movi	r4,20
   274c8:	20c01436 	bltu	r4,r3,2751c <_free_r+0x29c>
   274cc:	194016c4 	addi	r5,r3,91
   274d0:	2947883a 	add	r3,r5,r5
   274d4:	003fbe06 	br	273d0 <_gp+0xfffe9fd0>
   274d8:	280bd0ba 	srai	r5,r5,2
   274dc:	00800044 	movi	r2,1
   274e0:	39000117 	ldw	r4,4(r7)
   274e4:	114a983a 	sll	r5,r2,r5
   274e8:	1805883a 	mov	r2,r3
   274ec:	2908b03a 	or	r4,r5,r4
   274f0:	39000115 	stw	r4,4(r7)
   274f4:	003fc406 	br	27408 <_gp+0xfffea008>
   274f8:	49800515 	stw	r6,20(r9)
   274fc:	49800415 	stw	r6,16(r9)
   27500:	10c00054 	ori	r3,r2,1
   27504:	31000315 	stw	r4,12(r6)
   27508:	31000215 	stw	r4,8(r6)
   2750c:	30c00115 	stw	r3,4(r6)
   27510:	308d883a 	add	r6,r6,r2
   27514:	30800015 	stw	r2,0(r6)
   27518:	003fa006 	br	2739c <_gp+0xfffe9f9c>
   2751c:	01001504 	movi	r4,84
   27520:	20c00436 	bltu	r4,r3,27534 <_free_r+0x2b4>
   27524:	1006d33a 	srli	r3,r2,12
   27528:	19401b84 	addi	r5,r3,110
   2752c:	2947883a 	add	r3,r5,r5
   27530:	003fa706 	br	273d0 <_gp+0xfffe9fd0>
   27534:	01005504 	movi	r4,340
   27538:	20c00436 	bltu	r4,r3,2754c <_free_r+0x2cc>
   2753c:	1006d3fa 	srli	r3,r2,15
   27540:	19401dc4 	addi	r5,r3,119
   27544:	2947883a 	add	r3,r5,r5
   27548:	003fa106 	br	273d0 <_gp+0xfffe9fd0>
   2754c:	01015504 	movi	r4,1364
   27550:	20c00436 	bltu	r4,r3,27564 <_free_r+0x2e4>
   27554:	1006d4ba 	srli	r3,r2,18
   27558:	19401f04 	addi	r5,r3,124
   2755c:	2947883a 	add	r3,r5,r5
   27560:	003f9b06 	br	273d0 <_gp+0xfffe9fd0>
   27564:	00c03f04 	movi	r3,252
   27568:	01401f84 	movi	r5,126
   2756c:	003f9806 	br	273d0 <_gp+0xfffe9fd0>

00027570 <__sfvwrite_r>:
   27570:	30800217 	ldw	r2,8(r6)
   27574:	10004526 	beq	r2,zero,2768c <__sfvwrite_r+0x11c>
   27578:	28c0030b 	ldhu	r3,12(r5)
   2757c:	defff404 	addi	sp,sp,-48
   27580:	dd400715 	stw	r21,28(sp)
   27584:	dcc00515 	stw	r19,20(sp)
   27588:	dc000215 	stw	r16,8(sp)
   2758c:	dfc00b15 	stw	ra,44(sp)
   27590:	df000a15 	stw	fp,40(sp)
   27594:	ddc00915 	stw	r23,36(sp)
   27598:	dd800815 	stw	r22,32(sp)
   2759c:	dd000615 	stw	r20,24(sp)
   275a0:	dc800415 	stw	r18,16(sp)
   275a4:	dc400315 	stw	r17,12(sp)
   275a8:	1880020c 	andi	r2,r3,8
   275ac:	2821883a 	mov	r16,r5
   275b0:	202b883a 	mov	r21,r4
   275b4:	3027883a 	mov	r19,r6
   275b8:	10002526 	beq	r2,zero,27650 <__sfvwrite_r+0xe0>
   275bc:	28800417 	ldw	r2,16(r5)
   275c0:	10002326 	beq	r2,zero,27650 <__sfvwrite_r+0xe0>
   275c4:	1880008c 	andi	r2,r3,2
   275c8:	9c400017 	ldw	r17,0(r19)
   275cc:	10003126 	beq	r2,zero,27694 <__sfvwrite_r+0x124>
   275d0:	0029883a 	mov	r20,zero
   275d4:	0025883a 	mov	r18,zero
   275d8:	05810004 	movi	r22,1024
   275dc:	a00d883a 	mov	r6,r20
   275e0:	a809883a 	mov	r4,r21
   275e4:	90002526 	beq	r18,zero,2767c <__sfvwrite_r+0x10c>
   275e8:	900f883a 	mov	r7,r18
   275ec:	81400717 	ldw	r5,28(r16)
   275f0:	b480012e 	bgeu	r22,r18,275f8 <__sfvwrite_r+0x88>
   275f4:	01c10004 	movi	r7,1024
   275f8:	80800917 	ldw	r2,36(r16)
   275fc:	103ee83a 	callr	r2
   27600:	0080510e 	bge	zero,r2,27748 <__sfvwrite_r+0x1d8>
   27604:	98c00217 	ldw	r3,8(r19)
   27608:	a0a9883a 	add	r20,r20,r2
   2760c:	90a5c83a 	sub	r18,r18,r2
   27610:	1885c83a 	sub	r2,r3,r2
   27614:	98800215 	stw	r2,8(r19)
   27618:	103ff01e 	bne	r2,zero,275dc <_gp+0xfffea1dc>
   2761c:	0005883a 	mov	r2,zero
   27620:	dfc00b17 	ldw	ra,44(sp)
   27624:	df000a17 	ldw	fp,40(sp)
   27628:	ddc00917 	ldw	r23,36(sp)
   2762c:	dd800817 	ldw	r22,32(sp)
   27630:	dd400717 	ldw	r21,28(sp)
   27634:	dd000617 	ldw	r20,24(sp)
   27638:	dcc00517 	ldw	r19,20(sp)
   2763c:	dc800417 	ldw	r18,16(sp)
   27640:	dc400317 	ldw	r17,12(sp)
   27644:	dc000217 	ldw	r16,8(sp)
   27648:	dec00c04 	addi	sp,sp,48
   2764c:	f800283a 	ret
   27650:	a809883a 	mov	r4,r21
   27654:	800b883a 	mov	r5,r16
   27658:	00250d00 	call	250d0 <__swsetup_r>
   2765c:	80c0030b 	ldhu	r3,12(r16)
   27660:	103fd826 	beq	r2,zero,275c4 <_gp+0xfffea1c4>
   27664:	18c01014 	ori	r3,r3,64
   27668:	80c0030d 	sth	r3,12(r16)
   2766c:	00c00244 	movi	r3,9
   27670:	00bfffc4 	movi	r2,-1
   27674:	a8c00015 	stw	r3,0(r21)
   27678:	003fe906 	br	27620 <_gp+0xfffea220>
   2767c:	8d000017 	ldw	r20,0(r17)
   27680:	8c800117 	ldw	r18,4(r17)
   27684:	8c400204 	addi	r17,r17,8
   27688:	003fd406 	br	275dc <_gp+0xfffea1dc>
   2768c:	0005883a 	mov	r2,zero
   27690:	f800283a 	ret
   27694:	1880004c 	andi	r2,r3,1
   27698:	1000301e 	bne	r2,zero,2775c <__sfvwrite_r+0x1ec>
   2769c:	002f883a 	mov	r23,zero
   276a0:	0025883a 	mov	r18,zero
   276a4:	90001c26 	beq	r18,zero,27718 <__sfvwrite_r+0x1a8>
   276a8:	1880800c 	andi	r2,r3,512
   276ac:	85000217 	ldw	r20,8(r16)
   276b0:	10006c26 	beq	r2,zero,27864 <__sfvwrite_r+0x2f4>
   276b4:	a02d883a 	mov	r22,r20
   276b8:	95008536 	bltu	r18,r20,278d0 <__sfvwrite_r+0x360>
   276bc:	1881200c 	andi	r2,r3,1152
   276c0:	10009d1e 	bne	r2,zero,27938 <__sfvwrite_r+0x3c8>
   276c4:	81000017 	ldw	r4,0(r16)
   276c8:	a039883a 	mov	fp,r20
   276cc:	9029883a 	mov	r20,r18
   276d0:	b80b883a 	mov	r5,r23
   276d4:	b00d883a 	mov	r6,r22
   276d8:	00287e40 	call	287e4 <memmove>
   276dc:	80c00217 	ldw	r3,8(r16)
   276e0:	81000017 	ldw	r4,0(r16)
   276e4:	9005883a 	mov	r2,r18
   276e8:	1f39c83a 	sub	fp,r3,fp
   276ec:	258f883a 	add	r7,r4,r22
   276f0:	87000215 	stw	fp,8(r16)
   276f4:	81c00015 	stw	r7,0(r16)
   276f8:	98c00217 	ldw	r3,8(r19)
   276fc:	b8af883a 	add	r23,r23,r2
   27700:	90a5c83a 	sub	r18,r18,r2
   27704:	1d05c83a 	sub	r2,r3,r20
   27708:	98800215 	stw	r2,8(r19)
   2770c:	103fc326 	beq	r2,zero,2761c <_gp+0xfffea21c>
   27710:	80c0030b 	ldhu	r3,12(r16)
   27714:	903fe41e 	bne	r18,zero,276a8 <_gp+0xfffea2a8>
   27718:	8dc00017 	ldw	r23,0(r17)
   2771c:	8c800117 	ldw	r18,4(r17)
   27720:	8c400204 	addi	r17,r17,8
   27724:	003fdf06 	br	276a4 <_gp+0xfffea2a4>
   27728:	0029aac0 	call	29aac <_realloc_r>
   2772c:	102d883a 	mov	r22,r2
   27730:	1000a01e 	bne	r2,zero,279b4 <__sfvwrite_r+0x444>
   27734:	81400417 	ldw	r5,16(r16)
   27738:	a809883a 	mov	r4,r21
   2773c:	00272800 	call	27280 <_free_r>
   27740:	00800304 	movi	r2,12
   27744:	a8800015 	stw	r2,0(r21)
   27748:	80c0030b 	ldhu	r3,12(r16)
   2774c:	00bfffc4 	movi	r2,-1
   27750:	18c01014 	ori	r3,r3,64
   27754:	80c0030d 	sth	r3,12(r16)
   27758:	003fb106 	br	27620 <_gp+0xfffea220>
   2775c:	0029883a 	mov	r20,zero
   27760:	0011883a 	mov	r8,zero
   27764:	0039883a 	mov	fp,zero
   27768:	0025883a 	mov	r18,zero
   2776c:	90001f26 	beq	r18,zero,277ec <__sfvwrite_r+0x27c>
   27770:	40006826 	beq	r8,zero,27914 <__sfvwrite_r+0x3a4>
   27774:	a02f883a 	mov	r23,r20
   27778:	9500012e 	bgeu	r18,r20,27780 <__sfvwrite_r+0x210>
   2777c:	902f883a 	mov	r23,r18
   27780:	81000017 	ldw	r4,0(r16)
   27784:	80800417 	ldw	r2,16(r16)
   27788:	b82d883a 	mov	r22,r23
   2778c:	81800217 	ldw	r6,8(r16)
   27790:	81c00517 	ldw	r7,20(r16)
   27794:	1100022e 	bgeu	r2,r4,277a0 <__sfvwrite_r+0x230>
   27798:	31c7883a 	add	r3,r6,r7
   2779c:	1dc01816 	blt	r3,r23,27800 <__sfvwrite_r+0x290>
   277a0:	b9c03f16 	blt	r23,r7,278a0 <__sfvwrite_r+0x330>
   277a4:	80800917 	ldw	r2,36(r16)
   277a8:	81400717 	ldw	r5,28(r16)
   277ac:	a809883a 	mov	r4,r21
   277b0:	da000115 	stw	r8,4(sp)
   277b4:	e00d883a 	mov	r6,fp
   277b8:	103ee83a 	callr	r2
   277bc:	102d883a 	mov	r22,r2
   277c0:	da000117 	ldw	r8,4(sp)
   277c4:	00bfe00e 	bge	zero,r2,27748 <_gp+0xfffea348>
   277c8:	a5a9c83a 	sub	r20,r20,r22
   277cc:	a0001f26 	beq	r20,zero,2784c <__sfvwrite_r+0x2dc>
   277d0:	98800217 	ldw	r2,8(r19)
   277d4:	e5b9883a 	add	fp,fp,r22
   277d8:	95a5c83a 	sub	r18,r18,r22
   277dc:	15adc83a 	sub	r22,r2,r22
   277e0:	9d800215 	stw	r22,8(r19)
   277e4:	b03f8d26 	beq	r22,zero,2761c <_gp+0xfffea21c>
   277e8:	903fe11e 	bne	r18,zero,27770 <_gp+0xfffea370>
   277ec:	8f000017 	ldw	fp,0(r17)
   277f0:	8c800117 	ldw	r18,4(r17)
   277f4:	0011883a 	mov	r8,zero
   277f8:	8c400204 	addi	r17,r17,8
   277fc:	003fdb06 	br	2776c <_gp+0xfffea36c>
   27800:	180d883a 	mov	r6,r3
   27804:	e00b883a 	mov	r5,fp
   27808:	da000115 	stw	r8,4(sp)
   2780c:	d8c00015 	stw	r3,0(sp)
   27810:	00287e40 	call	287e4 <memmove>
   27814:	d8c00017 	ldw	r3,0(sp)
   27818:	80800017 	ldw	r2,0(r16)
   2781c:	a809883a 	mov	r4,r21
   27820:	800b883a 	mov	r5,r16
   27824:	10c5883a 	add	r2,r2,r3
   27828:	80800015 	stw	r2,0(r16)
   2782c:	d8c00015 	stw	r3,0(sp)
   27830:	0026b500 	call	26b50 <_fflush_r>
   27834:	d8c00017 	ldw	r3,0(sp)
   27838:	da000117 	ldw	r8,4(sp)
   2783c:	103fc21e 	bne	r2,zero,27748 <_gp+0xfffea348>
   27840:	182d883a 	mov	r22,r3
   27844:	a5a9c83a 	sub	r20,r20,r22
   27848:	a03fe11e 	bne	r20,zero,277d0 <_gp+0xfffea3d0>
   2784c:	a809883a 	mov	r4,r21
   27850:	800b883a 	mov	r5,r16
   27854:	0026b500 	call	26b50 <_fflush_r>
   27858:	103fbb1e 	bne	r2,zero,27748 <_gp+0xfffea348>
   2785c:	0011883a 	mov	r8,zero
   27860:	003fdb06 	br	277d0 <_gp+0xfffea3d0>
   27864:	81000017 	ldw	r4,0(r16)
   27868:	80800417 	ldw	r2,16(r16)
   2786c:	1100012e 	bgeu	r2,r4,27874 <__sfvwrite_r+0x304>
   27870:	a4805a36 	bltu	r20,r18,279dc <__sfvwrite_r+0x46c>
   27874:	81c00517 	ldw	r7,20(r16)
   27878:	91c01a36 	bltu	r18,r7,278e4 <__sfvwrite_r+0x374>
   2787c:	80800917 	ldw	r2,36(r16)
   27880:	81400717 	ldw	r5,28(r16)
   27884:	a809883a 	mov	r4,r21
   27888:	b80d883a 	mov	r6,r23
   2788c:	103ee83a 	callr	r2
   27890:	1029883a 	mov	r20,r2
   27894:	00bfac0e 	bge	zero,r2,27748 <_gp+0xfffea348>
   27898:	a005883a 	mov	r2,r20
   2789c:	003f9606 	br	276f8 <_gp+0xfffea2f8>
   278a0:	b80d883a 	mov	r6,r23
   278a4:	e00b883a 	mov	r5,fp
   278a8:	da000115 	stw	r8,4(sp)
   278ac:	00287e40 	call	287e4 <memmove>
   278b0:	80800217 	ldw	r2,8(r16)
   278b4:	80c00017 	ldw	r3,0(r16)
   278b8:	da000117 	ldw	r8,4(sp)
   278bc:	15c5c83a 	sub	r2,r2,r23
   278c0:	1def883a 	add	r23,r3,r23
   278c4:	80800215 	stw	r2,8(r16)
   278c8:	85c00015 	stw	r23,0(r16)
   278cc:	003fbe06 	br	277c8 <_gp+0xfffea3c8>
   278d0:	81000017 	ldw	r4,0(r16)
   278d4:	9039883a 	mov	fp,r18
   278d8:	9029883a 	mov	r20,r18
   278dc:	902d883a 	mov	r22,r18
   278e0:	003f7b06 	br	276d0 <_gp+0xfffea2d0>
   278e4:	b80b883a 	mov	r5,r23
   278e8:	900d883a 	mov	r6,r18
   278ec:	00287e40 	call	287e4 <memmove>
   278f0:	80c00217 	ldw	r3,8(r16)
   278f4:	80800017 	ldw	r2,0(r16)
   278f8:	9029883a 	mov	r20,r18
   278fc:	1c87c83a 	sub	r3,r3,r18
   27900:	1485883a 	add	r2,r2,r18
   27904:	80800015 	stw	r2,0(r16)
   27908:	80c00215 	stw	r3,8(r16)
   2790c:	9005883a 	mov	r2,r18
   27910:	003f7906 	br	276f8 <_gp+0xfffea2f8>
   27914:	e009883a 	mov	r4,fp
   27918:	01400284 	movi	r5,10
   2791c:	900d883a 	mov	r6,r18
   27920:	00285c40 	call	285c4 <memchr>
   27924:	10003826 	beq	r2,zero,27a08 <__sfvwrite_r+0x498>
   27928:	10800044 	addi	r2,r2,1
   2792c:	1729c83a 	sub	r20,r2,fp
   27930:	02000044 	movi	r8,1
   27934:	003f8f06 	br	27774 <_gp+0xfffea374>
   27938:	80800517 	ldw	r2,20(r16)
   2793c:	81400417 	ldw	r5,16(r16)
   27940:	87000017 	ldw	fp,0(r16)
   27944:	10a9883a 	add	r20,r2,r2
   27948:	a085883a 	add	r2,r20,r2
   2794c:	1028d7fa 	srli	r20,r2,31
   27950:	e179c83a 	sub	fp,fp,r5
   27954:	e1000044 	addi	r4,fp,1
   27958:	a085883a 	add	r2,r20,r2
   2795c:	1029d07a 	srai	r20,r2,1
   27960:	2485883a 	add	r2,r4,r18
   27964:	a00d883a 	mov	r6,r20
   27968:	a080022e 	bgeu	r20,r2,27974 <__sfvwrite_r+0x404>
   2796c:	1029883a 	mov	r20,r2
   27970:	100d883a 	mov	r6,r2
   27974:	18c1000c 	andi	r3,r3,1024
   27978:	a809883a 	mov	r4,r21
   2797c:	183f6a26 	beq	r3,zero,27728 <_gp+0xfffea328>
   27980:	300b883a 	mov	r5,r6
   27984:	0027e1c0 	call	27e1c <_malloc_r>
   27988:	102d883a 	mov	r22,r2
   2798c:	103f6c26 	beq	r2,zero,27740 <_gp+0xfffea340>
   27990:	81400417 	ldw	r5,16(r16)
   27994:	1009883a 	mov	r4,r2
   27998:	e00d883a 	mov	r6,fp
   2799c:	00286ac0 	call	286ac <memcpy>
   279a0:	8080030b 	ldhu	r2,12(r16)
   279a4:	00fedfc4 	movi	r3,-1153
   279a8:	10c4703a 	and	r2,r2,r3
   279ac:	10802014 	ori	r2,r2,128
   279b0:	8080030d 	sth	r2,12(r16)
   279b4:	b709883a 	add	r4,r22,fp
   279b8:	a707c83a 	sub	r3,r20,fp
   279bc:	85800415 	stw	r22,16(r16)
   279c0:	85000515 	stw	r20,20(r16)
   279c4:	81000015 	stw	r4,0(r16)
   279c8:	9039883a 	mov	fp,r18
   279cc:	80c00215 	stw	r3,8(r16)
   279d0:	9029883a 	mov	r20,r18
   279d4:	902d883a 	mov	r22,r18
   279d8:	003f3d06 	br	276d0 <_gp+0xfffea2d0>
   279dc:	b80b883a 	mov	r5,r23
   279e0:	a00d883a 	mov	r6,r20
   279e4:	00287e40 	call	287e4 <memmove>
   279e8:	80800017 	ldw	r2,0(r16)
   279ec:	a809883a 	mov	r4,r21
   279f0:	800b883a 	mov	r5,r16
   279f4:	1505883a 	add	r2,r2,r20
   279f8:	80800015 	stw	r2,0(r16)
   279fc:	0026b500 	call	26b50 <_fflush_r>
   27a00:	103fa526 	beq	r2,zero,27898 <_gp+0xfffea498>
   27a04:	003f5006 	br	27748 <_gp+0xfffea348>
   27a08:	95000044 	addi	r20,r18,1
   27a0c:	02000044 	movi	r8,1
   27a10:	003f5806 	br	27774 <_gp+0xfffea374>

00027a14 <_fwalk>:
   27a14:	defff804 	addi	sp,sp,-32
   27a18:	dd400515 	stw	r21,20(sp)
   27a1c:	2540b804 	addi	r21,r4,736
   27a20:	dd800615 	stw	r22,24(sp)
   27a24:	dd000415 	stw	r20,16(sp)
   27a28:	dfc00715 	stw	ra,28(sp)
   27a2c:	dcc00315 	stw	r19,12(sp)
   27a30:	dc800215 	stw	r18,8(sp)
   27a34:	dc400115 	stw	r17,4(sp)
   27a38:	dc000015 	stw	r16,0(sp)
   27a3c:	2829883a 	mov	r20,r5
   27a40:	002d883a 	mov	r22,zero
   27a44:	002711c0 	call	2711c <__sfp_lock_acquire>
   27a48:	a8001426 	beq	r21,zero,27a9c <_fwalk+0x88>
   27a4c:	04ffffc4 	movi	r19,-1
   27a50:	ac400117 	ldw	r17,4(r21)
   27a54:	ac800217 	ldw	r18,8(r21)
   27a58:	8c7fffc4 	addi	r17,r17,-1
   27a5c:	88000d16 	blt	r17,zero,27a94 <_fwalk+0x80>
   27a60:	94000304 	addi	r16,r18,12
   27a64:	94800384 	addi	r18,r18,14
   27a68:	80c0000f 	ldh	r3,0(r16)
   27a6c:	8c7fffc4 	addi	r17,r17,-1
   27a70:	813ffd04 	addi	r4,r16,-12
   27a74:	18000426 	beq	r3,zero,27a88 <_fwalk+0x74>
   27a78:	90c0000f 	ldh	r3,0(r18)
   27a7c:	1cc00226 	beq	r3,r19,27a88 <_fwalk+0x74>
   27a80:	a03ee83a 	callr	r20
   27a84:	b0acb03a 	or	r22,r22,r2
   27a88:	84001a04 	addi	r16,r16,104
   27a8c:	94801a04 	addi	r18,r18,104
   27a90:	8cfff51e 	bne	r17,r19,27a68 <_gp+0xfffea668>
   27a94:	ad400017 	ldw	r21,0(r21)
   27a98:	a83fed1e 	bne	r21,zero,27a50 <_gp+0xfffea650>
   27a9c:	00271200 	call	27120 <__sfp_lock_release>
   27aa0:	b005883a 	mov	r2,r22
   27aa4:	dfc00717 	ldw	ra,28(sp)
   27aa8:	dd800617 	ldw	r22,24(sp)
   27aac:	dd400517 	ldw	r21,20(sp)
   27ab0:	dd000417 	ldw	r20,16(sp)
   27ab4:	dcc00317 	ldw	r19,12(sp)
   27ab8:	dc800217 	ldw	r18,8(sp)
   27abc:	dc400117 	ldw	r17,4(sp)
   27ac0:	dc000017 	ldw	r16,0(sp)
   27ac4:	dec00804 	addi	sp,sp,32
   27ac8:	f800283a 	ret

00027acc <_fwalk_reent>:
   27acc:	defff804 	addi	sp,sp,-32
   27ad0:	dd400515 	stw	r21,20(sp)
   27ad4:	2540b804 	addi	r21,r4,736
   27ad8:	dd800615 	stw	r22,24(sp)
   27adc:	dd000415 	stw	r20,16(sp)
   27ae0:	dcc00315 	stw	r19,12(sp)
   27ae4:	dfc00715 	stw	ra,28(sp)
   27ae8:	dc800215 	stw	r18,8(sp)
   27aec:	dc400115 	stw	r17,4(sp)
   27af0:	dc000015 	stw	r16,0(sp)
   27af4:	2027883a 	mov	r19,r4
   27af8:	2829883a 	mov	r20,r5
   27afc:	002d883a 	mov	r22,zero
   27b00:	002711c0 	call	2711c <__sfp_lock_acquire>
   27b04:	a8001326 	beq	r21,zero,27b54 <_fwalk_reent+0x88>
   27b08:	04bfffc4 	movi	r18,-1
   27b0c:	ac400117 	ldw	r17,4(r21)
   27b10:	ac000217 	ldw	r16,8(r21)
   27b14:	8c7fffc4 	addi	r17,r17,-1
   27b18:	88000c16 	blt	r17,zero,27b4c <_fwalk_reent+0x80>
   27b1c:	84000304 	addi	r16,r16,12
   27b20:	80c0000f 	ldh	r3,0(r16)
   27b24:	8c7fffc4 	addi	r17,r17,-1
   27b28:	817ffd04 	addi	r5,r16,-12
   27b2c:	18000526 	beq	r3,zero,27b44 <_fwalk_reent+0x78>
   27b30:	80c0008f 	ldh	r3,2(r16)
   27b34:	9809883a 	mov	r4,r19
   27b38:	1c800226 	beq	r3,r18,27b44 <_fwalk_reent+0x78>
   27b3c:	a03ee83a 	callr	r20
   27b40:	b0acb03a 	or	r22,r22,r2
   27b44:	84001a04 	addi	r16,r16,104
   27b48:	8cbff51e 	bne	r17,r18,27b20 <_gp+0xfffea720>
   27b4c:	ad400017 	ldw	r21,0(r21)
   27b50:	a83fee1e 	bne	r21,zero,27b0c <_gp+0xfffea70c>
   27b54:	00271200 	call	27120 <__sfp_lock_release>
   27b58:	b005883a 	mov	r2,r22
   27b5c:	dfc00717 	ldw	ra,28(sp)
   27b60:	dd800617 	ldw	r22,24(sp)
   27b64:	dd400517 	ldw	r21,20(sp)
   27b68:	dd000417 	ldw	r20,16(sp)
   27b6c:	dcc00317 	ldw	r19,12(sp)
   27b70:	dc800217 	ldw	r18,8(sp)
   27b74:	dc400117 	ldw	r17,4(sp)
   27b78:	dc000017 	ldw	r16,0(sp)
   27b7c:	dec00804 	addi	sp,sp,32
   27b80:	f800283a 	ret

00027b84 <_setlocale_r>:
   27b84:	30001b26 	beq	r6,zero,27bf4 <_setlocale_r+0x70>
   27b88:	014000f4 	movhi	r5,3
   27b8c:	defffe04 	addi	sp,sp,-8
   27b90:	294dae04 	addi	r5,r5,14008
   27b94:	3009883a 	mov	r4,r6
   27b98:	dc000015 	stw	r16,0(sp)
   27b9c:	dfc00115 	stw	ra,4(sp)
   27ba0:	3021883a 	mov	r16,r6
   27ba4:	002a2500 	call	2a250 <strcmp>
   27ba8:	1000061e 	bne	r2,zero,27bc4 <_setlocale_r+0x40>
   27bac:	008000f4 	movhi	r2,3
   27bb0:	108dad04 	addi	r2,r2,14004
   27bb4:	dfc00117 	ldw	ra,4(sp)
   27bb8:	dc000017 	ldw	r16,0(sp)
   27bbc:	dec00204 	addi	sp,sp,8
   27bc0:	f800283a 	ret
   27bc4:	014000f4 	movhi	r5,3
   27bc8:	294dad04 	addi	r5,r5,14004
   27bcc:	8009883a 	mov	r4,r16
   27bd0:	002a2500 	call	2a250 <strcmp>
   27bd4:	103ff526 	beq	r2,zero,27bac <_gp+0xfffea7ac>
   27bd8:	014000f4 	movhi	r5,3
   27bdc:	294d9004 	addi	r5,r5,13888
   27be0:	8009883a 	mov	r4,r16
   27be4:	002a2500 	call	2a250 <strcmp>
   27be8:	103ff026 	beq	r2,zero,27bac <_gp+0xfffea7ac>
   27bec:	0005883a 	mov	r2,zero
   27bf0:	003ff006 	br	27bb4 <_gp+0xfffea7b4>
   27bf4:	008000f4 	movhi	r2,3
   27bf8:	108dad04 	addi	r2,r2,14004
   27bfc:	f800283a 	ret

00027c00 <__locale_charset>:
   27c00:	008000f4 	movhi	r2,3
   27c04:	108f6604 	addi	r2,r2,15768
   27c08:	f800283a 	ret

00027c0c <__locale_mb_cur_max>:
   27c0c:	008000f4 	movhi	r2,3
   27c10:	10950204 	addi	r2,r2,21512
   27c14:	10800017 	ldw	r2,0(r2)
   27c18:	f800283a 	ret

00027c1c <__locale_msgcharset>:
   27c1c:	008000f4 	movhi	r2,3
   27c20:	108f5e04 	addi	r2,r2,15736
   27c24:	f800283a 	ret

00027c28 <__locale_cjk_lang>:
   27c28:	0005883a 	mov	r2,zero
   27c2c:	f800283a 	ret

00027c30 <_localeconv_r>:
   27c30:	008000f4 	movhi	r2,3
   27c34:	108f6e04 	addi	r2,r2,15800
   27c38:	f800283a 	ret

00027c3c <setlocale>:
   27c3c:	00c000f4 	movhi	r3,3
   27c40:	18d50104 	addi	r3,r3,21508
   27c44:	2005883a 	mov	r2,r4
   27c48:	19000017 	ldw	r4,0(r3)
   27c4c:	280d883a 	mov	r6,r5
   27c50:	100b883a 	mov	r5,r2
   27c54:	0027b841 	jmpi	27b84 <_setlocale_r>

00027c58 <localeconv>:
   27c58:	008000f4 	movhi	r2,3
   27c5c:	108f6e04 	addi	r2,r2,15800
   27c60:	f800283a 	ret

00027c64 <__smakebuf_r>:
   27c64:	2880030b 	ldhu	r2,12(r5)
   27c68:	10c0008c 	andi	r3,r2,2
   27c6c:	1800401e 	bne	r3,zero,27d70 <__smakebuf_r+0x10c>
   27c70:	deffec04 	addi	sp,sp,-80
   27c74:	dc000f15 	stw	r16,60(sp)
   27c78:	2821883a 	mov	r16,r5
   27c7c:	2940038f 	ldh	r5,14(r5)
   27c80:	dc401015 	stw	r17,64(sp)
   27c84:	dfc01315 	stw	ra,76(sp)
   27c88:	dcc01215 	stw	r19,72(sp)
   27c8c:	dc801115 	stw	r18,68(sp)
   27c90:	2023883a 	mov	r17,r4
   27c94:	28001b16 	blt	r5,zero,27d04 <__smakebuf_r+0xa0>
   27c98:	d80d883a 	mov	r6,sp
   27c9c:	002d0600 	call	2d060 <_fstat_r>
   27ca0:	10001716 	blt	r2,zero,27d00 <__smakebuf_r+0x9c>
   27ca4:	d8800117 	ldw	r2,4(sp)
   27ca8:	00e00014 	movui	r3,32768
   27cac:	10bc000c 	andi	r2,r2,61440
   27cb0:	10c03726 	beq	r2,r3,27d90 <__smakebuf_r+0x12c>
   27cb4:	80c0030b 	ldhu	r3,12(r16)
   27cb8:	18c20014 	ori	r3,r3,2048
   27cbc:	80c0030d 	sth	r3,12(r16)
   27cc0:	00c80004 	movi	r3,8192
   27cc4:	10c03c1e 	bne	r2,r3,27db8 <__smakebuf_r+0x154>
   27cc8:	8140038f 	ldh	r5,14(r16)
   27ccc:	8809883a 	mov	r4,r17
   27cd0:	002d0b80 	call	2d0b8 <_isatty_r>
   27cd4:	10004e26 	beq	r2,zero,27e10 <__smakebuf_r+0x1ac>
   27cd8:	8080030b 	ldhu	r2,12(r16)
   27cdc:	04c00044 	movi	r19,1
   27ce0:	80c010c4 	addi	r3,r16,67
   27ce4:	14c4b03a 	or	r2,r2,r19
   27ce8:	8080030d 	sth	r2,12(r16)
   27cec:	80c00015 	stw	r3,0(r16)
   27cf0:	80c00415 	stw	r3,16(r16)
   27cf4:	84c00515 	stw	r19,20(r16)
   27cf8:	04810004 	movi	r18,1024
   27cfc:	00000706 	br	27d1c <__smakebuf_r+0xb8>
   27d00:	8080030b 	ldhu	r2,12(r16)
   27d04:	10c0200c 	andi	r3,r2,128
   27d08:	18001f1e 	bne	r3,zero,27d88 <__smakebuf_r+0x124>
   27d0c:	04810004 	movi	r18,1024
   27d10:	10820014 	ori	r2,r2,2048
   27d14:	8080030d 	sth	r2,12(r16)
   27d18:	0027883a 	mov	r19,zero
   27d1c:	8809883a 	mov	r4,r17
   27d20:	900b883a 	mov	r5,r18
   27d24:	0027e1c0 	call	27e1c <_malloc_r>
   27d28:	10002e26 	beq	r2,zero,27de4 <__smakebuf_r+0x180>
   27d2c:	80c0030b 	ldhu	r3,12(r16)
   27d30:	010000b4 	movhi	r4,2
   27d34:	211b6e04 	addi	r4,r4,28088
   27d38:	89000f15 	stw	r4,60(r17)
   27d3c:	18c02014 	ori	r3,r3,128
   27d40:	80c0030d 	sth	r3,12(r16)
   27d44:	80800015 	stw	r2,0(r16)
   27d48:	80800415 	stw	r2,16(r16)
   27d4c:	84800515 	stw	r18,20(r16)
   27d50:	98001c1e 	bne	r19,zero,27dc4 <__smakebuf_r+0x160>
   27d54:	dfc01317 	ldw	ra,76(sp)
   27d58:	dcc01217 	ldw	r19,72(sp)
   27d5c:	dc801117 	ldw	r18,68(sp)
   27d60:	dc401017 	ldw	r17,64(sp)
   27d64:	dc000f17 	ldw	r16,60(sp)
   27d68:	dec01404 	addi	sp,sp,80
   27d6c:	f800283a 	ret
   27d70:	288010c4 	addi	r2,r5,67
   27d74:	28800015 	stw	r2,0(r5)
   27d78:	28800415 	stw	r2,16(r5)
   27d7c:	00800044 	movi	r2,1
   27d80:	28800515 	stw	r2,20(r5)
   27d84:	f800283a 	ret
   27d88:	04801004 	movi	r18,64
   27d8c:	003fe006 	br	27d10 <_gp+0xfffea910>
   27d90:	81000a17 	ldw	r4,40(r16)
   27d94:	00c000f4 	movhi	r3,3
   27d98:	18e87b04 	addi	r3,r3,-24084
   27d9c:	20ffc51e 	bne	r4,r3,27cb4 <_gp+0xfffea8b4>
   27da0:	80c0030b 	ldhu	r3,12(r16)
   27da4:	01010004 	movi	r4,1024
   27da8:	81001315 	stw	r4,76(r16)
   27dac:	1906b03a 	or	r3,r3,r4
   27db0:	80c0030d 	sth	r3,12(r16)
   27db4:	003fc206 	br	27cc0 <_gp+0xfffea8c0>
   27db8:	0027883a 	mov	r19,zero
   27dbc:	04810004 	movi	r18,1024
   27dc0:	003fd606 	br	27d1c <_gp+0xfffea91c>
   27dc4:	8140038f 	ldh	r5,14(r16)
   27dc8:	8809883a 	mov	r4,r17
   27dcc:	002d0b80 	call	2d0b8 <_isatty_r>
   27dd0:	103fe026 	beq	r2,zero,27d54 <_gp+0xfffea954>
   27dd4:	8080030b 	ldhu	r2,12(r16)
   27dd8:	10800054 	ori	r2,r2,1
   27ddc:	8080030d 	sth	r2,12(r16)
   27de0:	003fdc06 	br	27d54 <_gp+0xfffea954>
   27de4:	8080030b 	ldhu	r2,12(r16)
   27de8:	10c0800c 	andi	r3,r2,512
   27dec:	183fd91e 	bne	r3,zero,27d54 <_gp+0xfffea954>
   27df0:	10800094 	ori	r2,r2,2
   27df4:	80c010c4 	addi	r3,r16,67
   27df8:	8080030d 	sth	r2,12(r16)
   27dfc:	00800044 	movi	r2,1
   27e00:	80c00015 	stw	r3,0(r16)
   27e04:	80c00415 	stw	r3,16(r16)
   27e08:	80800515 	stw	r2,20(r16)
   27e0c:	003fd106 	br	27d54 <_gp+0xfffea954>
   27e10:	04c00044 	movi	r19,1
   27e14:	04810004 	movi	r18,1024
   27e18:	003fc006 	br	27d1c <_gp+0xfffea91c>

00027e1c <_malloc_r>:
   27e1c:	defff504 	addi	sp,sp,-44
   27e20:	dc800315 	stw	r18,12(sp)
   27e24:	dfc00a15 	stw	ra,40(sp)
   27e28:	df000915 	stw	fp,36(sp)
   27e2c:	ddc00815 	stw	r23,32(sp)
   27e30:	dd800715 	stw	r22,28(sp)
   27e34:	dd400615 	stw	r21,24(sp)
   27e38:	dd000515 	stw	r20,20(sp)
   27e3c:	dcc00415 	stw	r19,16(sp)
   27e40:	dc400215 	stw	r17,8(sp)
   27e44:	dc000115 	stw	r16,4(sp)
   27e48:	288002c4 	addi	r2,r5,11
   27e4c:	00c00584 	movi	r3,22
   27e50:	2025883a 	mov	r18,r4
   27e54:	18802a2e 	bgeu	r3,r2,27f00 <_malloc_r+0xe4>
   27e58:	047ffe04 	movi	r17,-8
   27e5c:	1462703a 	and	r17,r2,r17
   27e60:	88009e16 	blt	r17,zero,280dc <_malloc_r+0x2c0>
   27e64:	89409d36 	bltu	r17,r5,280dc <_malloc_r+0x2c0>
   27e68:	00310c00 	call	310c0 <__malloc_lock>
   27e6c:	00807dc4 	movi	r2,503
   27e70:	14402736 	bltu	r2,r17,27f10 <_malloc_r+0xf4>
   27e74:	8806d0fa 	srli	r3,r17,3
   27e78:	04c000f4 	movhi	r19,3
   27e7c:	9ccf7c04 	addi	r19,r19,15856
   27e80:	18c5883a 	add	r2,r3,r3
   27e84:	1085883a 	add	r2,r2,r2
   27e88:	1085883a 	add	r2,r2,r2
   27e8c:	9885883a 	add	r2,r19,r2
   27e90:	14000317 	ldw	r16,12(r2)
   27e94:	80814a26 	beq	r16,r2,283c0 <_malloc_r+0x5a4>
   27e98:	80c00117 	ldw	r3,4(r16)
   27e9c:	81000317 	ldw	r4,12(r16)
   27ea0:	00bfff04 	movi	r2,-4
   27ea4:	1884703a 	and	r2,r3,r2
   27ea8:	81400217 	ldw	r5,8(r16)
   27eac:	8085883a 	add	r2,r16,r2
   27eb0:	10c00117 	ldw	r3,4(r2)
   27eb4:	29000315 	stw	r4,12(r5)
   27eb8:	21400215 	stw	r5,8(r4)
   27ebc:	18c00054 	ori	r3,r3,1
   27ec0:	10c00115 	stw	r3,4(r2)
   27ec4:	9009883a 	mov	r4,r18
   27ec8:	00310e00 	call	310e0 <__malloc_unlock>
   27ecc:	80800204 	addi	r2,r16,8
   27ed0:	dfc00a17 	ldw	ra,40(sp)
   27ed4:	df000917 	ldw	fp,36(sp)
   27ed8:	ddc00817 	ldw	r23,32(sp)
   27edc:	dd800717 	ldw	r22,28(sp)
   27ee0:	dd400617 	ldw	r21,24(sp)
   27ee4:	dd000517 	ldw	r20,20(sp)
   27ee8:	dcc00417 	ldw	r19,16(sp)
   27eec:	dc800317 	ldw	r18,12(sp)
   27ef0:	dc400217 	ldw	r17,8(sp)
   27ef4:	dc000117 	ldw	r16,4(sp)
   27ef8:	dec00b04 	addi	sp,sp,44
   27efc:	f800283a 	ret
   27f00:	04400404 	movi	r17,16
   27f04:	89407536 	bltu	r17,r5,280dc <_malloc_r+0x2c0>
   27f08:	00310c00 	call	310c0 <__malloc_lock>
   27f0c:	003fd906 	br	27e74 <_gp+0xfffeaa74>
   27f10:	8806d27a 	srli	r3,r17,9
   27f14:	18007526 	beq	r3,zero,280ec <_malloc_r+0x2d0>
   27f18:	00800104 	movi	r2,4
   27f1c:	10c0ef36 	bltu	r2,r3,282dc <_malloc_r+0x4c0>
   27f20:	8806d1ba 	srli	r3,r17,6
   27f24:	19c00e04 	addi	r7,r3,56
   27f28:	39cb883a 	add	r5,r7,r7
   27f2c:	04c000f4 	movhi	r19,3
   27f30:	294b883a 	add	r5,r5,r5
   27f34:	9ccf7c04 	addi	r19,r19,15856
   27f38:	294b883a 	add	r5,r5,r5
   27f3c:	994b883a 	add	r5,r19,r5
   27f40:	2c000317 	ldw	r16,12(r5)
   27f44:	2c000e26 	beq	r5,r16,27f80 <_malloc_r+0x164>
   27f48:	80800117 	ldw	r2,4(r16)
   27f4c:	01bfff04 	movi	r6,-4
   27f50:	010003c4 	movi	r4,15
   27f54:	1184703a 	and	r2,r2,r6
   27f58:	1447c83a 	sub	r3,r2,r17
   27f5c:	20c00716 	blt	r4,r3,27f7c <_malloc_r+0x160>
   27f60:	1800650e 	bge	r3,zero,280f8 <_malloc_r+0x2dc>
   27f64:	84000317 	ldw	r16,12(r16)
   27f68:	2c000526 	beq	r5,r16,27f80 <_malloc_r+0x164>
   27f6c:	80800117 	ldw	r2,4(r16)
   27f70:	1184703a 	and	r2,r2,r6
   27f74:	1447c83a 	sub	r3,r2,r17
   27f78:	20fff90e 	bge	r4,r3,27f60 <_gp+0xfffeab60>
   27f7c:	39ffffc4 	addi	r7,r7,-1
   27f80:	38c00044 	addi	r3,r7,1
   27f84:	018000f4 	movhi	r6,3
   27f88:	9c000417 	ldw	r16,16(r19)
   27f8c:	318f7c04 	addi	r6,r6,15856
   27f90:	32400204 	addi	r9,r6,8
   27f94:	82410326 	beq	r16,r9,283a4 <_malloc_r+0x588>
   27f98:	81000117 	ldw	r4,4(r16)
   27f9c:	00bfff04 	movi	r2,-4
   27fa0:	208e703a 	and	r7,r4,r2
   27fa4:	3c45c83a 	sub	r2,r7,r17
   27fa8:	010003c4 	movi	r4,15
   27fac:	2080ee16 	blt	r4,r2,28368 <_malloc_r+0x54c>
   27fb0:	32400515 	stw	r9,20(r6)
   27fb4:	32400415 	stw	r9,16(r6)
   27fb8:	1000510e 	bge	r2,zero,28100 <_malloc_r+0x2e4>
   27fbc:	00807fc4 	movi	r2,511
   27fc0:	11c0ce36 	bltu	r2,r7,282fc <_malloc_r+0x4e0>
   27fc4:	3808d0fa 	srli	r4,r7,3
   27fc8:	01c00044 	movi	r7,1
   27fcc:	30800117 	ldw	r2,4(r6)
   27fd0:	210b883a 	add	r5,r4,r4
   27fd4:	294b883a 	add	r5,r5,r5
   27fd8:	2009d0ba 	srai	r4,r4,2
   27fdc:	294b883a 	add	r5,r5,r5
   27fe0:	298b883a 	add	r5,r5,r6
   27fe4:	2a000217 	ldw	r8,8(r5)
   27fe8:	3908983a 	sll	r4,r7,r4
   27fec:	81400315 	stw	r5,12(r16)
   27ff0:	82000215 	stw	r8,8(r16)
   27ff4:	2088b03a 	or	r4,r4,r2
   27ff8:	2c000215 	stw	r16,8(r5)
   27ffc:	31000115 	stw	r4,4(r6)
   28000:	44000315 	stw	r16,12(r8)
   28004:	1805d0ba 	srai	r2,r3,2
   28008:	01400044 	movi	r5,1
   2800c:	288a983a 	sll	r5,r5,r2
   28010:	21404336 	bltu	r4,r5,28120 <_malloc_r+0x304>
   28014:	2144703a 	and	r2,r4,r5
   28018:	10000a1e 	bne	r2,zero,28044 <_malloc_r+0x228>
   2801c:	00bfff04 	movi	r2,-4
   28020:	294b883a 	add	r5,r5,r5
   28024:	1886703a 	and	r3,r3,r2
   28028:	2144703a 	and	r2,r4,r5
   2802c:	18c00104 	addi	r3,r3,4
   28030:	1000041e 	bne	r2,zero,28044 <_malloc_r+0x228>
   28034:	294b883a 	add	r5,r5,r5
   28038:	2144703a 	and	r2,r4,r5
   2803c:	18c00104 	addi	r3,r3,4
   28040:	103ffc26 	beq	r2,zero,28034 <_gp+0xfffeac34>
   28044:	023fff04 	movi	r8,-4
   28048:	01c003c4 	movi	r7,15
   2804c:	18c5883a 	add	r2,r3,r3
   28050:	1085883a 	add	r2,r2,r2
   28054:	1085883a 	add	r2,r2,r2
   28058:	9895883a 	add	r10,r19,r2
   2805c:	52c00304 	addi	r11,r10,12
   28060:	1819883a 	mov	r12,r3
   28064:	5c000017 	ldw	r16,0(r11)
   28068:	59bffd04 	addi	r6,r11,-12
   2806c:	8180041e 	bne	r16,r6,28080 <_malloc_r+0x264>
   28070:	0000ce06 	br	283ac <_malloc_r+0x590>
   28074:	2000d70e 	bge	r4,zero,283d4 <_malloc_r+0x5b8>
   28078:	84000317 	ldw	r16,12(r16)
   2807c:	8180cb26 	beq	r16,r6,283ac <_malloc_r+0x590>
   28080:	80800117 	ldw	r2,4(r16)
   28084:	1204703a 	and	r2,r2,r8
   28088:	1449c83a 	sub	r4,r2,r17
   2808c:	393ff90e 	bge	r7,r4,28074 <_gp+0xfffeac74>
   28090:	80800317 	ldw	r2,12(r16)
   28094:	80c00217 	ldw	r3,8(r16)
   28098:	89400054 	ori	r5,r17,1
   2809c:	81400115 	stw	r5,4(r16)
   280a0:	18800315 	stw	r2,12(r3)
   280a4:	10c00215 	stw	r3,8(r2)
   280a8:	8463883a 	add	r17,r16,r17
   280ac:	9c400515 	stw	r17,20(r19)
   280b0:	9c400415 	stw	r17,16(r19)
   280b4:	20800054 	ori	r2,r4,1
   280b8:	88800115 	stw	r2,4(r17)
   280bc:	8a400315 	stw	r9,12(r17)
   280c0:	8a400215 	stw	r9,8(r17)
   280c4:	8923883a 	add	r17,r17,r4
   280c8:	89000015 	stw	r4,0(r17)
   280cc:	9009883a 	mov	r4,r18
   280d0:	00310e00 	call	310e0 <__malloc_unlock>
   280d4:	80800204 	addi	r2,r16,8
   280d8:	003f7d06 	br	27ed0 <_gp+0xfffeaad0>
   280dc:	00800304 	movi	r2,12
   280e0:	90800015 	stw	r2,0(r18)
   280e4:	0005883a 	mov	r2,zero
   280e8:	003f7906 	br	27ed0 <_gp+0xfffeaad0>
   280ec:	01401f84 	movi	r5,126
   280f0:	01c00fc4 	movi	r7,63
   280f4:	003f8d06 	br	27f2c <_gp+0xfffeab2c>
   280f8:	81000317 	ldw	r4,12(r16)
   280fc:	003f6a06 	br	27ea8 <_gp+0xfffeaaa8>
   28100:	81c5883a 	add	r2,r16,r7
   28104:	10c00117 	ldw	r3,4(r2)
   28108:	9009883a 	mov	r4,r18
   2810c:	18c00054 	ori	r3,r3,1
   28110:	10c00115 	stw	r3,4(r2)
   28114:	00310e00 	call	310e0 <__malloc_unlock>
   28118:	80800204 	addi	r2,r16,8
   2811c:	003f6c06 	br	27ed0 <_gp+0xfffeaad0>
   28120:	9c000217 	ldw	r16,8(r19)
   28124:	00bfff04 	movi	r2,-4
   28128:	85800117 	ldw	r22,4(r16)
   2812c:	b0ac703a 	and	r22,r22,r2
   28130:	b4400336 	bltu	r22,r17,28140 <_malloc_r+0x324>
   28134:	b445c83a 	sub	r2,r22,r17
   28138:	00c003c4 	movi	r3,15
   2813c:	18805d16 	blt	r3,r2,282b4 <_malloc_r+0x498>
   28140:	05c000f4 	movhi	r23,3
   28144:	008000f4 	movhi	r2,3
   28148:	bdd50304 	addi	r23,r23,21516
   2814c:	109bd004 	addi	r2,r2,28480
   28150:	15400017 	ldw	r21,0(r2)
   28154:	b9000017 	ldw	r4,0(r23)
   28158:	00ffffc4 	movi	r3,-1
   2815c:	858d883a 	add	r6,r16,r22
   28160:	8d6b883a 	add	r21,r17,r21
   28164:	20c0e426 	beq	r4,r3,284f8 <_malloc_r+0x6dc>
   28168:	ad4403c4 	addi	r21,r21,4111
   2816c:	00fc0004 	movi	r3,-4096
   28170:	a8ea703a 	and	r21,r21,r3
   28174:	9009883a 	mov	r4,r18
   28178:	a80b883a 	mov	r5,r21
   2817c:	d9800015 	stw	r6,0(sp)
   28180:	002a0c00 	call	2a0c0 <_sbrk_r>
   28184:	00ffffc4 	movi	r3,-1
   28188:	1029883a 	mov	r20,r2
   2818c:	d9800017 	ldw	r6,0(sp)
   28190:	10c0a426 	beq	r2,r3,28424 <_malloc_r+0x608>
   28194:	1180a236 	bltu	r2,r6,28420 <_malloc_r+0x604>
   28198:	070000f4 	movhi	fp,3
   2819c:	e71bd904 	addi	fp,fp,28516
   281a0:	e0c00017 	ldw	r3,0(fp)
   281a4:	a8c7883a 	add	r3,r21,r3
   281a8:	e0c00015 	stw	r3,0(fp)
   281ac:	3500da26 	beq	r6,r20,28518 <_malloc_r+0x6fc>
   281b0:	b9000017 	ldw	r4,0(r23)
   281b4:	00bfffc4 	movi	r2,-1
   281b8:	2080e426 	beq	r4,r2,2854c <_malloc_r+0x730>
   281bc:	a185c83a 	sub	r2,r20,r6
   281c0:	1885883a 	add	r2,r3,r2
   281c4:	e0800015 	stw	r2,0(fp)
   281c8:	a0c001cc 	andi	r3,r20,7
   281cc:	1800b526 	beq	r3,zero,284a4 <_malloc_r+0x688>
   281d0:	a0e9c83a 	sub	r20,r20,r3
   281d4:	00840204 	movi	r2,4104
   281d8:	a5000204 	addi	r20,r20,8
   281dc:	10c7c83a 	sub	r3,r2,r3
   281e0:	a545883a 	add	r2,r20,r21
   281e4:	1083ffcc 	andi	r2,r2,4095
   281e8:	18abc83a 	sub	r21,r3,r2
   281ec:	9009883a 	mov	r4,r18
   281f0:	a80b883a 	mov	r5,r21
   281f4:	002a0c00 	call	2a0c0 <_sbrk_r>
   281f8:	00ffffc4 	movi	r3,-1
   281fc:	10c0d026 	beq	r2,r3,28540 <_malloc_r+0x724>
   28200:	1507c83a 	sub	r3,r2,r20
   28204:	a8c7883a 	add	r3,r21,r3
   28208:	18c00054 	ori	r3,r3,1
   2820c:	e0800017 	ldw	r2,0(fp)
   28210:	9d000215 	stw	r20,8(r19)
   28214:	a0c00115 	stw	r3,4(r20)
   28218:	a887883a 	add	r3,r21,r2
   2821c:	e0c00015 	stw	r3,0(fp)
   28220:	84c00e26 	beq	r16,r19,2825c <_malloc_r+0x440>
   28224:	018003c4 	movi	r6,15
   28228:	3580a02e 	bgeu	r6,r22,284ac <_malloc_r+0x690>
   2822c:	81400117 	ldw	r5,4(r16)
   28230:	013ffe04 	movi	r4,-8
   28234:	b0bffd04 	addi	r2,r22,-12
   28238:	1104703a 	and	r2,r2,r4
   2823c:	2900004c 	andi	r4,r5,1
   28240:	1108b03a 	or	r4,r2,r4
   28244:	81000115 	stw	r4,4(r16)
   28248:	01400144 	movi	r5,5
   2824c:	8089883a 	add	r4,r16,r2
   28250:	21400115 	stw	r5,4(r4)
   28254:	21400215 	stw	r5,8(r4)
   28258:	3080c036 	bltu	r6,r2,2855c <_malloc_r+0x740>
   2825c:	008000f4 	movhi	r2,3
   28260:	109bcf04 	addi	r2,r2,28476
   28264:	11000017 	ldw	r4,0(r2)
   28268:	20c0012e 	bgeu	r4,r3,28270 <_malloc_r+0x454>
   2826c:	10c00015 	stw	r3,0(r2)
   28270:	008000f4 	movhi	r2,3
   28274:	109bce04 	addi	r2,r2,28472
   28278:	11000017 	ldw	r4,0(r2)
   2827c:	9c000217 	ldw	r16,8(r19)
   28280:	20c0012e 	bgeu	r4,r3,28288 <_malloc_r+0x46c>
   28284:	10c00015 	stw	r3,0(r2)
   28288:	80c00117 	ldw	r3,4(r16)
   2828c:	00bfff04 	movi	r2,-4
   28290:	1886703a 	and	r3,r3,r2
   28294:	1c45c83a 	sub	r2,r3,r17
   28298:	1c400236 	bltu	r3,r17,282a4 <_malloc_r+0x488>
   2829c:	00c003c4 	movi	r3,15
   282a0:	18800416 	blt	r3,r2,282b4 <_malloc_r+0x498>
   282a4:	9009883a 	mov	r4,r18
   282a8:	00310e00 	call	310e0 <__malloc_unlock>
   282ac:	0005883a 	mov	r2,zero
   282b0:	003f0706 	br	27ed0 <_gp+0xfffeaad0>
   282b4:	88c00054 	ori	r3,r17,1
   282b8:	80c00115 	stw	r3,4(r16)
   282bc:	8463883a 	add	r17,r16,r17
   282c0:	10800054 	ori	r2,r2,1
   282c4:	9c400215 	stw	r17,8(r19)
   282c8:	88800115 	stw	r2,4(r17)
   282cc:	9009883a 	mov	r4,r18
   282d0:	00310e00 	call	310e0 <__malloc_unlock>
   282d4:	80800204 	addi	r2,r16,8
   282d8:	003efd06 	br	27ed0 <_gp+0xfffeaad0>
   282dc:	00800504 	movi	r2,20
   282e0:	10c0482e 	bgeu	r2,r3,28404 <_malloc_r+0x5e8>
   282e4:	00801504 	movi	r2,84
   282e8:	10c06836 	bltu	r2,r3,2848c <_malloc_r+0x670>
   282ec:	8806d33a 	srli	r3,r17,12
   282f0:	19c01b84 	addi	r7,r3,110
   282f4:	39cb883a 	add	r5,r7,r7
   282f8:	003f0c06 	br	27f2c <_gp+0xfffeab2c>
   282fc:	3804d27a 	srli	r2,r7,9
   28300:	01000104 	movi	r4,4
   28304:	2080422e 	bgeu	r4,r2,28410 <_malloc_r+0x5f4>
   28308:	01000504 	movi	r4,20
   2830c:	20807c36 	bltu	r4,r2,28500 <_malloc_r+0x6e4>
   28310:	110016c4 	addi	r4,r2,91
   28314:	210b883a 	add	r5,r4,r4
   28318:	294b883a 	add	r5,r5,r5
   2831c:	294b883a 	add	r5,r5,r5
   28320:	994b883a 	add	r5,r19,r5
   28324:	28800217 	ldw	r2,8(r5)
   28328:	020000f4 	movhi	r8,3
   2832c:	420f7c04 	addi	r8,r8,15856
   28330:	11406326 	beq	r2,r5,284c0 <_malloc_r+0x6a4>
   28334:	01bfff04 	movi	r6,-4
   28338:	11000117 	ldw	r4,4(r2)
   2833c:	2188703a 	and	r4,r4,r6
   28340:	3900022e 	bgeu	r7,r4,2834c <_malloc_r+0x530>
   28344:	10800217 	ldw	r2,8(r2)
   28348:	28bffb1e 	bne	r5,r2,28338 <_gp+0xfffeaf38>
   2834c:	11800317 	ldw	r6,12(r2)
   28350:	99000117 	ldw	r4,4(r19)
   28354:	81800315 	stw	r6,12(r16)
   28358:	80800215 	stw	r2,8(r16)
   2835c:	34000215 	stw	r16,8(r6)
   28360:	14000315 	stw	r16,12(r2)
   28364:	003f2706 	br	28004 <_gp+0xfffeac04>
   28368:	88c00054 	ori	r3,r17,1
   2836c:	80c00115 	stw	r3,4(r16)
   28370:	8463883a 	add	r17,r16,r17
   28374:	34400515 	stw	r17,20(r6)
   28378:	34400415 	stw	r17,16(r6)
   2837c:	10c00054 	ori	r3,r2,1
   28380:	8a400315 	stw	r9,12(r17)
   28384:	8a400215 	stw	r9,8(r17)
   28388:	88c00115 	stw	r3,4(r17)
   2838c:	88a3883a 	add	r17,r17,r2
   28390:	88800015 	stw	r2,0(r17)
   28394:	9009883a 	mov	r4,r18
   28398:	00310e00 	call	310e0 <__malloc_unlock>
   2839c:	80800204 	addi	r2,r16,8
   283a0:	003ecb06 	br	27ed0 <_gp+0xfffeaad0>
   283a4:	31000117 	ldw	r4,4(r6)
   283a8:	003f1606 	br	28004 <_gp+0xfffeac04>
   283ac:	63000044 	addi	r12,r12,1
   283b0:	608000cc 	andi	r2,r12,3
   283b4:	5ac00204 	addi	r11,r11,8
   283b8:	103f2a1e 	bne	r2,zero,28064 <_gp+0xfffeac64>
   283bc:	00002106 	br	28444 <_malloc_r+0x628>
   283c0:	80800204 	addi	r2,r16,8
   283c4:	84000517 	ldw	r16,20(r16)
   283c8:	143eb31e 	bne	r2,r16,27e98 <_gp+0xfffeaa98>
   283cc:	18c00084 	addi	r3,r3,2
   283d0:	003eec06 	br	27f84 <_gp+0xfffeab84>
   283d4:	8085883a 	add	r2,r16,r2
   283d8:	10c00117 	ldw	r3,4(r2)
   283dc:	81000317 	ldw	r4,12(r16)
   283e0:	81400217 	ldw	r5,8(r16)
   283e4:	18c00054 	ori	r3,r3,1
   283e8:	10c00115 	stw	r3,4(r2)
   283ec:	29000315 	stw	r4,12(r5)
   283f0:	21400215 	stw	r5,8(r4)
   283f4:	9009883a 	mov	r4,r18
   283f8:	00310e00 	call	310e0 <__malloc_unlock>
   283fc:	80800204 	addi	r2,r16,8
   28400:	003eb306 	br	27ed0 <_gp+0xfffeaad0>
   28404:	19c016c4 	addi	r7,r3,91
   28408:	39cb883a 	add	r5,r7,r7
   2840c:	003ec706 	br	27f2c <_gp+0xfffeab2c>
   28410:	3804d1ba 	srli	r2,r7,6
   28414:	11000e04 	addi	r4,r2,56
   28418:	210b883a 	add	r5,r4,r4
   2841c:	003fbe06 	br	28318 <_gp+0xfffeaf18>
   28420:	84ff5d26 	beq	r16,r19,28198 <_gp+0xfffead98>
   28424:	9c000217 	ldw	r16,8(r19)
   28428:	00bfff04 	movi	r2,-4
   2842c:	80c00117 	ldw	r3,4(r16)
   28430:	1886703a 	and	r3,r3,r2
   28434:	003f9706 	br	28294 <_gp+0xfffeae94>
   28438:	52800017 	ldw	r10,0(r10)
   2843c:	18ffffc4 	addi	r3,r3,-1
   28440:	50805c1e 	bne	r10,r2,285b4 <_malloc_r+0x798>
   28444:	190000cc 	andi	r4,r3,3
   28448:	50bffe04 	addi	r2,r10,-8
   2844c:	203ffa1e 	bne	r4,zero,28438 <_gp+0xfffeb038>
   28450:	98800117 	ldw	r2,4(r19)
   28454:	0146303a 	nor	r3,zero,r5
   28458:	1884703a 	and	r2,r3,r2
   2845c:	98800115 	stw	r2,4(r19)
   28460:	294b883a 	add	r5,r5,r5
   28464:	117f2e36 	bltu	r2,r5,28120 <_gp+0xfffead20>
   28468:	283f2d26 	beq	r5,zero,28120 <_gp+0xfffead20>
   2846c:	1146703a 	and	r3,r2,r5
   28470:	1800521e 	bne	r3,zero,285bc <_malloc_r+0x7a0>
   28474:	6007883a 	mov	r3,r12
   28478:	294b883a 	add	r5,r5,r5
   2847c:	1148703a 	and	r4,r2,r5
   28480:	18c00104 	addi	r3,r3,4
   28484:	203ffc26 	beq	r4,zero,28478 <_gp+0xfffeb078>
   28488:	003ef006 	br	2804c <_gp+0xfffeac4c>
   2848c:	00805504 	movi	r2,340
   28490:	10c01336 	bltu	r2,r3,284e0 <_malloc_r+0x6c4>
   28494:	8806d3fa 	srli	r3,r17,15
   28498:	19c01dc4 	addi	r7,r3,119
   2849c:	39cb883a 	add	r5,r7,r7
   284a0:	003ea206 	br	27f2c <_gp+0xfffeab2c>
   284a4:	00c40004 	movi	r3,4096
   284a8:	003f4d06 	br	281e0 <_gp+0xfffeade0>
   284ac:	00800044 	movi	r2,1
   284b0:	a0800115 	stw	r2,4(r20)
   284b4:	a021883a 	mov	r16,r20
   284b8:	0007883a 	mov	r3,zero
   284bc:	003f7506 	br	28294 <_gp+0xfffeae94>
   284c0:	200bd0ba 	srai	r5,r4,2
   284c4:	01800044 	movi	r6,1
   284c8:	41000117 	ldw	r4,4(r8)
   284cc:	314a983a 	sll	r5,r6,r5
   284d0:	100d883a 	mov	r6,r2
   284d4:	2908b03a 	or	r4,r5,r4
   284d8:	41000115 	stw	r4,4(r8)
   284dc:	003f9d06 	br	28354 <_gp+0xfffeaf54>
   284e0:	00815504 	movi	r2,1364
   284e4:	10c01336 	bltu	r2,r3,28534 <_malloc_r+0x718>
   284e8:	8806d4ba 	srli	r3,r17,18
   284ec:	19c01f04 	addi	r7,r3,124
   284f0:	39cb883a 	add	r5,r7,r7
   284f4:	003e8d06 	br	27f2c <_gp+0xfffeab2c>
   284f8:	ad400404 	addi	r21,r21,16
   284fc:	003f1d06 	br	28174 <_gp+0xfffead74>
   28500:	01001504 	movi	r4,84
   28504:	20801c36 	bltu	r4,r2,28578 <_malloc_r+0x75c>
   28508:	3804d33a 	srli	r2,r7,12
   2850c:	11001b84 	addi	r4,r2,110
   28510:	210b883a 	add	r5,r4,r4
   28514:	003f8006 	br	28318 <_gp+0xfffeaf18>
   28518:	3083ffcc 	andi	r2,r6,4095
   2851c:	103f241e 	bne	r2,zero,281b0 <_gp+0xfffeadb0>
   28520:	99000217 	ldw	r4,8(r19)
   28524:	ad85883a 	add	r2,r21,r22
   28528:	10800054 	ori	r2,r2,1
   2852c:	20800115 	stw	r2,4(r4)
   28530:	003f4a06 	br	2825c <_gp+0xfffeae5c>
   28534:	01403f04 	movi	r5,252
   28538:	01c01f84 	movi	r7,126
   2853c:	003e7b06 	br	27f2c <_gp+0xfffeab2c>
   28540:	00c00044 	movi	r3,1
   28544:	002b883a 	mov	r21,zero
   28548:	003f3006 	br	2820c <_gp+0xfffeae0c>
   2854c:	008000f4 	movhi	r2,3
   28550:	10950304 	addi	r2,r2,21516
   28554:	15000015 	stw	r20,0(r2)
   28558:	003f1b06 	br	281c8 <_gp+0xfffeadc8>
   2855c:	9009883a 	mov	r4,r18
   28560:	81400204 	addi	r5,r16,8
   28564:	00272800 	call	27280 <_free_r>
   28568:	008000f4 	movhi	r2,3
   2856c:	109bd904 	addi	r2,r2,28516
   28570:	10c00017 	ldw	r3,0(r2)
   28574:	003f3906 	br	2825c <_gp+0xfffeae5c>
   28578:	01005504 	movi	r4,340
   2857c:	20800436 	bltu	r4,r2,28590 <_malloc_r+0x774>
   28580:	3804d3fa 	srli	r2,r7,15
   28584:	11001dc4 	addi	r4,r2,119
   28588:	210b883a 	add	r5,r4,r4
   2858c:	003f6206 	br	28318 <_gp+0xfffeaf18>
   28590:	01015504 	movi	r4,1364
   28594:	20800436 	bltu	r4,r2,285a8 <_malloc_r+0x78c>
   28598:	3804d4ba 	srli	r2,r7,18
   2859c:	11001f04 	addi	r4,r2,124
   285a0:	210b883a 	add	r5,r4,r4
   285a4:	003f5c06 	br	28318 <_gp+0xfffeaf18>
   285a8:	01403f04 	movi	r5,252
   285ac:	01001f84 	movi	r4,126
   285b0:	003f5906 	br	28318 <_gp+0xfffeaf18>
   285b4:	98800117 	ldw	r2,4(r19)
   285b8:	003fa906 	br	28460 <_gp+0xfffeb060>
   285bc:	6007883a 	mov	r3,r12
   285c0:	003ea206 	br	2804c <_gp+0xfffeac4c>

000285c4 <memchr>:
   285c4:	208000cc 	andi	r2,r4,3
   285c8:	280f883a 	mov	r7,r5
   285cc:	10003526 	beq	r2,zero,286a4 <memchr+0xe0>
   285d0:	30bfffc4 	addi	r2,r6,-1
   285d4:	30001b26 	beq	r6,zero,28644 <memchr+0x80>
   285d8:	21800003 	ldbu	r6,0(r4)
   285dc:	28c03fcc 	andi	r3,r5,255
   285e0:	30c01a26 	beq	r6,r3,2864c <memchr+0x88>
   285e4:	180d883a 	mov	r6,r3
   285e8:	00000406 	br	285fc <memchr+0x38>
   285ec:	10001526 	beq	r2,zero,28644 <memchr+0x80>
   285f0:	20c00003 	ldbu	r3,0(r4)
   285f4:	10bfffc4 	addi	r2,r2,-1
   285f8:	19801426 	beq	r3,r6,2864c <memchr+0x88>
   285fc:	21000044 	addi	r4,r4,1
   28600:	20c000cc 	andi	r3,r4,3
   28604:	183ff91e 	bne	r3,zero,285ec <_gp+0xfffeb1ec>
   28608:	024000c4 	movi	r9,3
   2860c:	48801136 	bltu	r9,r2,28654 <memchr+0x90>
   28610:	10000c26 	beq	r2,zero,28644 <memchr+0x80>
   28614:	20c00003 	ldbu	r3,0(r4)
   28618:	29403fcc 	andi	r5,r5,255
   2861c:	19400b26 	beq	r3,r5,2864c <memchr+0x88>
   28620:	20c00044 	addi	r3,r4,1
   28624:	2085883a 	add	r2,r4,r2
   28628:	39803fcc 	andi	r6,r7,255
   2862c:	00000306 	br	2863c <memchr+0x78>
   28630:	18c00044 	addi	r3,r3,1
   28634:	197fffc3 	ldbu	r5,-1(r3)
   28638:	29800426 	beq	r5,r6,2864c <memchr+0x88>
   2863c:	1809883a 	mov	r4,r3
   28640:	18bffb1e 	bne	r3,r2,28630 <_gp+0xfffeb230>
   28644:	0005883a 	mov	r2,zero
   28648:	f800283a 	ret
   2864c:	2005883a 	mov	r2,r4
   28650:	f800283a 	ret
   28654:	28c03fcc 	andi	r3,r5,255
   28658:	1810923a 	slli	r8,r3,8
   2865c:	02ffbff4 	movhi	r11,65279
   28660:	02a02074 	movhi	r10,32897
   28664:	40c6b03a 	or	r3,r8,r3
   28668:	1810943a 	slli	r8,r3,16
   2866c:	5affbfc4 	addi	r11,r11,-257
   28670:	52a02004 	addi	r10,r10,-32640
   28674:	40d0b03a 	or	r8,r8,r3
   28678:	20c00017 	ldw	r3,0(r4)
   2867c:	40c6f03a 	xor	r3,r8,r3
   28680:	1acd883a 	add	r6,r3,r11
   28684:	00c6303a 	nor	r3,zero,r3
   28688:	30c6703a 	and	r3,r6,r3
   2868c:	1a86703a 	and	r3,r3,r10
   28690:	183fdf1e 	bne	r3,zero,28610 <_gp+0xfffeb210>
   28694:	10bfff04 	addi	r2,r2,-4
   28698:	21000104 	addi	r4,r4,4
   2869c:	48bff636 	bltu	r9,r2,28678 <_gp+0xfffeb278>
   286a0:	003fdb06 	br	28610 <_gp+0xfffeb210>
   286a4:	3005883a 	mov	r2,r6
   286a8:	003fd706 	br	28608 <_gp+0xfffeb208>

000286ac <memcpy>:
   286ac:	deffff04 	addi	sp,sp,-4
   286b0:	dc000015 	stw	r16,0(sp)
   286b4:	00c003c4 	movi	r3,15
   286b8:	2005883a 	mov	r2,r4
   286bc:	1980432e 	bgeu	r3,r6,287cc <memcpy+0x120>
   286c0:	2146b03a 	or	r3,r4,r5
   286c4:	18c000cc 	andi	r3,r3,3
   286c8:	1800421e 	bne	r3,zero,287d4 <memcpy+0x128>
   286cc:	343ffc04 	addi	r16,r6,-16
   286d0:	8020d13a 	srli	r16,r16,4
   286d4:	28c00104 	addi	r3,r5,4
   286d8:	23400104 	addi	r13,r4,4
   286dc:	801e913a 	slli	r15,r16,4
   286e0:	2b000204 	addi	r12,r5,8
   286e4:	22c00204 	addi	r11,r4,8
   286e8:	7bc00504 	addi	r15,r15,20
   286ec:	2a800304 	addi	r10,r5,12
   286f0:	22400304 	addi	r9,r4,12
   286f4:	2bdf883a 	add	r15,r5,r15
   286f8:	2811883a 	mov	r8,r5
   286fc:	200f883a 	mov	r7,r4
   28700:	41000017 	ldw	r4,0(r8)
   28704:	39c00404 	addi	r7,r7,16
   28708:	18c00404 	addi	r3,r3,16
   2870c:	393ffc15 	stw	r4,-16(r7)
   28710:	1bbffc17 	ldw	r14,-16(r3)
   28714:	6b400404 	addi	r13,r13,16
   28718:	5ac00404 	addi	r11,r11,16
   2871c:	6bbffc15 	stw	r14,-16(r13)
   28720:	63800017 	ldw	r14,0(r12)
   28724:	4a400404 	addi	r9,r9,16
   28728:	42000404 	addi	r8,r8,16
   2872c:	5bbffc15 	stw	r14,-16(r11)
   28730:	53800017 	ldw	r14,0(r10)
   28734:	63000404 	addi	r12,r12,16
   28738:	52800404 	addi	r10,r10,16
   2873c:	4bbffc15 	stw	r14,-16(r9)
   28740:	1bffef1e 	bne	r3,r15,28700 <_gp+0xfffeb300>
   28744:	81c00044 	addi	r7,r16,1
   28748:	380e913a 	slli	r7,r7,4
   2874c:	310003cc 	andi	r4,r6,15
   28750:	02c000c4 	movi	r11,3
   28754:	11c7883a 	add	r3,r2,r7
   28758:	29cb883a 	add	r5,r5,r7
   2875c:	59001f2e 	bgeu	r11,r4,287dc <memcpy+0x130>
   28760:	1813883a 	mov	r9,r3
   28764:	2811883a 	mov	r8,r5
   28768:	200f883a 	mov	r7,r4
   2876c:	42800017 	ldw	r10,0(r8)
   28770:	4a400104 	addi	r9,r9,4
   28774:	39ffff04 	addi	r7,r7,-4
   28778:	4abfff15 	stw	r10,-4(r9)
   2877c:	42000104 	addi	r8,r8,4
   28780:	59fffa36 	bltu	r11,r7,2876c <_gp+0xfffeb36c>
   28784:	213fff04 	addi	r4,r4,-4
   28788:	2008d0ba 	srli	r4,r4,2
   2878c:	318000cc 	andi	r6,r6,3
   28790:	21000044 	addi	r4,r4,1
   28794:	2109883a 	add	r4,r4,r4
   28798:	2109883a 	add	r4,r4,r4
   2879c:	1907883a 	add	r3,r3,r4
   287a0:	290b883a 	add	r5,r5,r4
   287a4:	30000626 	beq	r6,zero,287c0 <memcpy+0x114>
   287a8:	198d883a 	add	r6,r3,r6
   287ac:	29c00003 	ldbu	r7,0(r5)
   287b0:	18c00044 	addi	r3,r3,1
   287b4:	29400044 	addi	r5,r5,1
   287b8:	19ffffc5 	stb	r7,-1(r3)
   287bc:	19bffb1e 	bne	r3,r6,287ac <_gp+0xfffeb3ac>
   287c0:	dc000017 	ldw	r16,0(sp)
   287c4:	dec00104 	addi	sp,sp,4
   287c8:	f800283a 	ret
   287cc:	2007883a 	mov	r3,r4
   287d0:	003ff406 	br	287a4 <_gp+0xfffeb3a4>
   287d4:	2007883a 	mov	r3,r4
   287d8:	003ff306 	br	287a8 <_gp+0xfffeb3a8>
   287dc:	200d883a 	mov	r6,r4
   287e0:	003ff006 	br	287a4 <_gp+0xfffeb3a4>

000287e4 <memmove>:
   287e4:	2005883a 	mov	r2,r4
   287e8:	29000b2e 	bgeu	r5,r4,28818 <memmove+0x34>
   287ec:	298f883a 	add	r7,r5,r6
   287f0:	21c0092e 	bgeu	r4,r7,28818 <memmove+0x34>
   287f4:	2187883a 	add	r3,r4,r6
   287f8:	198bc83a 	sub	r5,r3,r6
   287fc:	30004b26 	beq	r6,zero,2892c <memmove+0x148>
   28800:	39ffffc4 	addi	r7,r7,-1
   28804:	39000003 	ldbu	r4,0(r7)
   28808:	18ffffc4 	addi	r3,r3,-1
   2880c:	19000005 	stb	r4,0(r3)
   28810:	197ffb1e 	bne	r3,r5,28800 <_gp+0xfffeb400>
   28814:	f800283a 	ret
   28818:	00c003c4 	movi	r3,15
   2881c:	1980412e 	bgeu	r3,r6,28924 <memmove+0x140>
   28820:	1146b03a 	or	r3,r2,r5
   28824:	18c000cc 	andi	r3,r3,3
   28828:	1800411e 	bne	r3,zero,28930 <memmove+0x14c>
   2882c:	33fffc04 	addi	r15,r6,-16
   28830:	781ed13a 	srli	r15,r15,4
   28834:	28c00104 	addi	r3,r5,4
   28838:	13400104 	addi	r13,r2,4
   2883c:	781c913a 	slli	r14,r15,4
   28840:	2b000204 	addi	r12,r5,8
   28844:	12c00204 	addi	r11,r2,8
   28848:	73800504 	addi	r14,r14,20
   2884c:	2a800304 	addi	r10,r5,12
   28850:	12400304 	addi	r9,r2,12
   28854:	2b9d883a 	add	r14,r5,r14
   28858:	2811883a 	mov	r8,r5
   2885c:	100f883a 	mov	r7,r2
   28860:	41000017 	ldw	r4,0(r8)
   28864:	39c00404 	addi	r7,r7,16
   28868:	18c00404 	addi	r3,r3,16
   2886c:	393ffc15 	stw	r4,-16(r7)
   28870:	193ffc17 	ldw	r4,-16(r3)
   28874:	6b400404 	addi	r13,r13,16
   28878:	5ac00404 	addi	r11,r11,16
   2887c:	693ffc15 	stw	r4,-16(r13)
   28880:	61000017 	ldw	r4,0(r12)
   28884:	4a400404 	addi	r9,r9,16
   28888:	42000404 	addi	r8,r8,16
   2888c:	593ffc15 	stw	r4,-16(r11)
   28890:	51000017 	ldw	r4,0(r10)
   28894:	63000404 	addi	r12,r12,16
   28898:	52800404 	addi	r10,r10,16
   2889c:	493ffc15 	stw	r4,-16(r9)
   288a0:	1bbfef1e 	bne	r3,r14,28860 <_gp+0xfffeb460>
   288a4:	79000044 	addi	r4,r15,1
   288a8:	2008913a 	slli	r4,r4,4
   288ac:	328003cc 	andi	r10,r6,15
   288b0:	02c000c4 	movi	r11,3
   288b4:	1107883a 	add	r3,r2,r4
   288b8:	290b883a 	add	r5,r5,r4
   288bc:	5a801e2e 	bgeu	r11,r10,28938 <memmove+0x154>
   288c0:	1813883a 	mov	r9,r3
   288c4:	2811883a 	mov	r8,r5
   288c8:	500f883a 	mov	r7,r10
   288cc:	41000017 	ldw	r4,0(r8)
   288d0:	4a400104 	addi	r9,r9,4
   288d4:	39ffff04 	addi	r7,r7,-4
   288d8:	493fff15 	stw	r4,-4(r9)
   288dc:	42000104 	addi	r8,r8,4
   288e0:	59fffa36 	bltu	r11,r7,288cc <_gp+0xfffeb4cc>
   288e4:	513fff04 	addi	r4,r10,-4
   288e8:	2008d0ba 	srli	r4,r4,2
   288ec:	318000cc 	andi	r6,r6,3
   288f0:	21000044 	addi	r4,r4,1
   288f4:	2109883a 	add	r4,r4,r4
   288f8:	2109883a 	add	r4,r4,r4
   288fc:	1907883a 	add	r3,r3,r4
   28900:	290b883a 	add	r5,r5,r4
   28904:	30000926 	beq	r6,zero,2892c <memmove+0x148>
   28908:	198d883a 	add	r6,r3,r6
   2890c:	29c00003 	ldbu	r7,0(r5)
   28910:	18c00044 	addi	r3,r3,1
   28914:	29400044 	addi	r5,r5,1
   28918:	19ffffc5 	stb	r7,-1(r3)
   2891c:	19bffb1e 	bne	r3,r6,2890c <_gp+0xfffeb50c>
   28920:	f800283a 	ret
   28924:	1007883a 	mov	r3,r2
   28928:	003ff606 	br	28904 <_gp+0xfffeb504>
   2892c:	f800283a 	ret
   28930:	1007883a 	mov	r3,r2
   28934:	003ff406 	br	28908 <_gp+0xfffeb508>
   28938:	500d883a 	mov	r6,r10
   2893c:	003ff106 	br	28904 <_gp+0xfffeb504>

00028940 <memset>:
   28940:	20c000cc 	andi	r3,r4,3
   28944:	2005883a 	mov	r2,r4
   28948:	18004326 	beq	r3,zero,28a58 <memset+0x118>
   2894c:	31ffffc4 	addi	r7,r6,-1
   28950:	30004026 	beq	r6,zero,28a54 <memset+0x114>
   28954:	2813883a 	mov	r9,r5
   28958:	200d883a 	mov	r6,r4
   2895c:	2007883a 	mov	r3,r4
   28960:	00000406 	br	28974 <memset+0x34>
   28964:	3a3fffc4 	addi	r8,r7,-1
   28968:	31800044 	addi	r6,r6,1
   2896c:	38003926 	beq	r7,zero,28a54 <memset+0x114>
   28970:	400f883a 	mov	r7,r8
   28974:	18c00044 	addi	r3,r3,1
   28978:	32400005 	stb	r9,0(r6)
   2897c:	1a0000cc 	andi	r8,r3,3
   28980:	403ff81e 	bne	r8,zero,28964 <_gp+0xfffeb564>
   28984:	010000c4 	movi	r4,3
   28988:	21c02d2e 	bgeu	r4,r7,28a40 <memset+0x100>
   2898c:	29803fcc 	andi	r6,r5,255
   28990:	3008923a 	slli	r4,r6,8
   28994:	218cb03a 	or	r6,r4,r6
   28998:	3008943a 	slli	r4,r6,16
   2899c:	218cb03a 	or	r6,r4,r6
   289a0:	010003c4 	movi	r4,15
   289a4:	21c0182e 	bgeu	r4,r7,28a08 <memset+0xc8>
   289a8:	3b3ffc04 	addi	r12,r7,-16
   289ac:	6018d13a 	srli	r12,r12,4
   289b0:	1a000104 	addi	r8,r3,4
   289b4:	1ac00204 	addi	r11,r3,8
   289b8:	6008913a 	slli	r4,r12,4
   289bc:	1a800304 	addi	r10,r3,12
   289c0:	1813883a 	mov	r9,r3
   289c4:	21000504 	addi	r4,r4,20
   289c8:	1909883a 	add	r4,r3,r4
   289cc:	49800015 	stw	r6,0(r9)
   289d0:	41800015 	stw	r6,0(r8)
   289d4:	59800015 	stw	r6,0(r11)
   289d8:	51800015 	stw	r6,0(r10)
   289dc:	42000404 	addi	r8,r8,16
   289e0:	4a400404 	addi	r9,r9,16
   289e4:	5ac00404 	addi	r11,r11,16
   289e8:	52800404 	addi	r10,r10,16
   289ec:	413ff71e 	bne	r8,r4,289cc <_gp+0xfffeb5cc>
   289f0:	63000044 	addi	r12,r12,1
   289f4:	6018913a 	slli	r12,r12,4
   289f8:	39c003cc 	andi	r7,r7,15
   289fc:	010000c4 	movi	r4,3
   28a00:	1b07883a 	add	r3,r3,r12
   28a04:	21c00e2e 	bgeu	r4,r7,28a40 <memset+0x100>
   28a08:	1813883a 	mov	r9,r3
   28a0c:	3811883a 	mov	r8,r7
   28a10:	010000c4 	movi	r4,3
   28a14:	49800015 	stw	r6,0(r9)
   28a18:	423fff04 	addi	r8,r8,-4
   28a1c:	4a400104 	addi	r9,r9,4
   28a20:	223ffc36 	bltu	r4,r8,28a14 <_gp+0xfffeb614>
   28a24:	393fff04 	addi	r4,r7,-4
   28a28:	2008d0ba 	srli	r4,r4,2
   28a2c:	39c000cc 	andi	r7,r7,3
   28a30:	21000044 	addi	r4,r4,1
   28a34:	2109883a 	add	r4,r4,r4
   28a38:	2109883a 	add	r4,r4,r4
   28a3c:	1907883a 	add	r3,r3,r4
   28a40:	38000426 	beq	r7,zero,28a54 <memset+0x114>
   28a44:	19cf883a 	add	r7,r3,r7
   28a48:	19400005 	stb	r5,0(r3)
   28a4c:	18c00044 	addi	r3,r3,1
   28a50:	19fffd1e 	bne	r3,r7,28a48 <_gp+0xfffeb648>
   28a54:	f800283a 	ret
   28a58:	2007883a 	mov	r3,r4
   28a5c:	300f883a 	mov	r7,r6
   28a60:	003fc806 	br	28984 <_gp+0xfffeb584>

00028a64 <_Balloc>:
   28a64:	20801317 	ldw	r2,76(r4)
   28a68:	defffc04 	addi	sp,sp,-16
   28a6c:	dc400115 	stw	r17,4(sp)
   28a70:	dc000015 	stw	r16,0(sp)
   28a74:	dfc00315 	stw	ra,12(sp)
   28a78:	dc800215 	stw	r18,8(sp)
   28a7c:	2023883a 	mov	r17,r4
   28a80:	2821883a 	mov	r16,r5
   28a84:	10000f26 	beq	r2,zero,28ac4 <_Balloc+0x60>
   28a88:	8407883a 	add	r3,r16,r16
   28a8c:	18c7883a 	add	r3,r3,r3
   28a90:	10c7883a 	add	r3,r2,r3
   28a94:	18800017 	ldw	r2,0(r3)
   28a98:	10001126 	beq	r2,zero,28ae0 <_Balloc+0x7c>
   28a9c:	11000017 	ldw	r4,0(r2)
   28aa0:	19000015 	stw	r4,0(r3)
   28aa4:	10000415 	stw	zero,16(r2)
   28aa8:	10000315 	stw	zero,12(r2)
   28aac:	dfc00317 	ldw	ra,12(sp)
   28ab0:	dc800217 	ldw	r18,8(sp)
   28ab4:	dc400117 	ldw	r17,4(sp)
   28ab8:	dc000017 	ldw	r16,0(sp)
   28abc:	dec00404 	addi	sp,sp,16
   28ac0:	f800283a 	ret
   28ac4:	01400104 	movi	r5,4
   28ac8:	01800844 	movi	r6,33
   28acc:	002cc980 	call	2cc98 <_calloc_r>
   28ad0:	88801315 	stw	r2,76(r17)
   28ad4:	103fec1e 	bne	r2,zero,28a88 <_gp+0xfffeb688>
   28ad8:	0005883a 	mov	r2,zero
   28adc:	003ff306 	br	28aac <_gp+0xfffeb6ac>
   28ae0:	01400044 	movi	r5,1
   28ae4:	2c24983a 	sll	r18,r5,r16
   28ae8:	8809883a 	mov	r4,r17
   28aec:	91800144 	addi	r6,r18,5
   28af0:	318d883a 	add	r6,r6,r6
   28af4:	318d883a 	add	r6,r6,r6
   28af8:	002cc980 	call	2cc98 <_calloc_r>
   28afc:	103ff626 	beq	r2,zero,28ad8 <_gp+0xfffeb6d8>
   28b00:	14000115 	stw	r16,4(r2)
   28b04:	14800215 	stw	r18,8(r2)
   28b08:	003fe606 	br	28aa4 <_gp+0xfffeb6a4>

00028b0c <_Bfree>:
   28b0c:	28000826 	beq	r5,zero,28b30 <_Bfree+0x24>
   28b10:	28c00117 	ldw	r3,4(r5)
   28b14:	20801317 	ldw	r2,76(r4)
   28b18:	18c7883a 	add	r3,r3,r3
   28b1c:	18c7883a 	add	r3,r3,r3
   28b20:	10c5883a 	add	r2,r2,r3
   28b24:	10c00017 	ldw	r3,0(r2)
   28b28:	28c00015 	stw	r3,0(r5)
   28b2c:	11400015 	stw	r5,0(r2)
   28b30:	f800283a 	ret

00028b34 <__multadd>:
   28b34:	defff704 	addi	sp,sp,-36
   28b38:	dc800215 	stw	r18,8(sp)
   28b3c:	2c800417 	ldw	r18,16(r5)
   28b40:	ddc00715 	stw	r23,28(sp)
   28b44:	dd800615 	stw	r22,24(sp)
   28b48:	dd000415 	stw	r20,16(sp)
   28b4c:	dcc00315 	stw	r19,12(sp)
   28b50:	dc400115 	stw	r17,4(sp)
   28b54:	dc000015 	stw	r16,0(sp)
   28b58:	dfc00815 	stw	ra,32(sp)
   28b5c:	dd400515 	stw	r21,20(sp)
   28b60:	2827883a 	mov	r19,r5
   28b64:	2029883a 	mov	r20,r4
   28b68:	3023883a 	mov	r17,r6
   28b6c:	3821883a 	mov	r16,r7
   28b70:	2d800504 	addi	r22,r5,20
   28b74:	002f883a 	mov	r23,zero
   28b78:	b5400017 	ldw	r21,0(r22)
   28b7c:	880b883a 	mov	r5,r17
   28b80:	bdc00044 	addi	r23,r23,1
   28b84:	a93fffcc 	andi	r4,r21,65535
   28b88:	002e2bc0 	call	2e2bc <__mulsi3>
   28b8c:	1421883a 	add	r16,r2,r16
   28b90:	a808d43a 	srli	r4,r21,16
   28b94:	802ad43a 	srli	r21,r16,16
   28b98:	880b883a 	mov	r5,r17
   28b9c:	002e2bc0 	call	2e2bc <__mulsi3>
   28ba0:	a88f883a 	add	r7,r21,r2
   28ba4:	3804943a 	slli	r2,r7,16
   28ba8:	80ffffcc 	andi	r3,r16,65535
   28bac:	b5800104 	addi	r22,r22,4
   28bb0:	10c7883a 	add	r3,r2,r3
   28bb4:	b0ffff15 	stw	r3,-4(r22)
   28bb8:	3820d43a 	srli	r16,r7,16
   28bbc:	bcbfee16 	blt	r23,r18,28b78 <_gp+0xfffeb778>
   28bc0:	80000926 	beq	r16,zero,28be8 <__multadd+0xb4>
   28bc4:	98800217 	ldw	r2,8(r19)
   28bc8:	9080130e 	bge	r18,r2,28c18 <__multadd+0xe4>
   28bcc:	90800144 	addi	r2,r18,5
   28bd0:	1085883a 	add	r2,r2,r2
   28bd4:	1085883a 	add	r2,r2,r2
   28bd8:	9885883a 	add	r2,r19,r2
   28bdc:	14000015 	stw	r16,0(r2)
   28be0:	94800044 	addi	r18,r18,1
   28be4:	9c800415 	stw	r18,16(r19)
   28be8:	9805883a 	mov	r2,r19
   28bec:	dfc00817 	ldw	ra,32(sp)
   28bf0:	ddc00717 	ldw	r23,28(sp)
   28bf4:	dd800617 	ldw	r22,24(sp)
   28bf8:	dd400517 	ldw	r21,20(sp)
   28bfc:	dd000417 	ldw	r20,16(sp)
   28c00:	dcc00317 	ldw	r19,12(sp)
   28c04:	dc800217 	ldw	r18,8(sp)
   28c08:	dc400117 	ldw	r17,4(sp)
   28c0c:	dc000017 	ldw	r16,0(sp)
   28c10:	dec00904 	addi	sp,sp,36
   28c14:	f800283a 	ret
   28c18:	99400117 	ldw	r5,4(r19)
   28c1c:	a009883a 	mov	r4,r20
   28c20:	29400044 	addi	r5,r5,1
   28c24:	0028a640 	call	28a64 <_Balloc>
   28c28:	99800417 	ldw	r6,16(r19)
   28c2c:	99400304 	addi	r5,r19,12
   28c30:	11000304 	addi	r4,r2,12
   28c34:	31800084 	addi	r6,r6,2
   28c38:	318d883a 	add	r6,r6,r6
   28c3c:	318d883a 	add	r6,r6,r6
   28c40:	1023883a 	mov	r17,r2
   28c44:	00286ac0 	call	286ac <memcpy>
   28c48:	99000117 	ldw	r4,4(r19)
   28c4c:	a0c01317 	ldw	r3,76(r20)
   28c50:	2109883a 	add	r4,r4,r4
   28c54:	2109883a 	add	r4,r4,r4
   28c58:	1907883a 	add	r3,r3,r4
   28c5c:	18800017 	ldw	r2,0(r3)
   28c60:	98800015 	stw	r2,0(r19)
   28c64:	1cc00015 	stw	r19,0(r3)
   28c68:	8827883a 	mov	r19,r17
   28c6c:	003fd706 	br	28bcc <_gp+0xfffeb7cc>

00028c70 <__s2b>:
   28c70:	defff904 	addi	sp,sp,-28
   28c74:	dc400115 	stw	r17,4(sp)
   28c78:	dc000015 	stw	r16,0(sp)
   28c7c:	2023883a 	mov	r17,r4
   28c80:	2821883a 	mov	r16,r5
   28c84:	39000204 	addi	r4,r7,8
   28c88:	01400244 	movi	r5,9
   28c8c:	dcc00315 	stw	r19,12(sp)
   28c90:	dc800215 	stw	r18,8(sp)
   28c94:	dfc00615 	stw	ra,24(sp)
   28c98:	dd400515 	stw	r21,20(sp)
   28c9c:	dd000415 	stw	r20,16(sp)
   28ca0:	3825883a 	mov	r18,r7
   28ca4:	3027883a 	mov	r19,r6
   28ca8:	002e1fc0 	call	2e1fc <__divsi3>
   28cac:	00c00044 	movi	r3,1
   28cb0:	000b883a 	mov	r5,zero
   28cb4:	1880030e 	bge	r3,r2,28cc4 <__s2b+0x54>
   28cb8:	18c7883a 	add	r3,r3,r3
   28cbc:	29400044 	addi	r5,r5,1
   28cc0:	18bffd16 	blt	r3,r2,28cb8 <_gp+0xfffeb8b8>
   28cc4:	8809883a 	mov	r4,r17
   28cc8:	0028a640 	call	28a64 <_Balloc>
   28ccc:	d8c00717 	ldw	r3,28(sp)
   28cd0:	10c00515 	stw	r3,20(r2)
   28cd4:	00c00044 	movi	r3,1
   28cd8:	10c00415 	stw	r3,16(r2)
   28cdc:	00c00244 	movi	r3,9
   28ce0:	1cc0210e 	bge	r3,r19,28d68 <__s2b+0xf8>
   28ce4:	80eb883a 	add	r21,r16,r3
   28ce8:	a829883a 	mov	r20,r21
   28cec:	84e1883a 	add	r16,r16,r19
   28cf0:	a1c00007 	ldb	r7,0(r20)
   28cf4:	8809883a 	mov	r4,r17
   28cf8:	a5000044 	addi	r20,r20,1
   28cfc:	100b883a 	mov	r5,r2
   28d00:	01800284 	movi	r6,10
   28d04:	39fff404 	addi	r7,r7,-48
   28d08:	0028b340 	call	28b34 <__multadd>
   28d0c:	a43ff81e 	bne	r20,r16,28cf0 <_gp+0xfffeb8f0>
   28d10:	ace1883a 	add	r16,r21,r19
   28d14:	843ffe04 	addi	r16,r16,-8
   28d18:	9c800a0e 	bge	r19,r18,28d44 <__s2b+0xd4>
   28d1c:	94e5c83a 	sub	r18,r18,r19
   28d20:	84a5883a 	add	r18,r16,r18
   28d24:	81c00007 	ldb	r7,0(r16)
   28d28:	8809883a 	mov	r4,r17
   28d2c:	84000044 	addi	r16,r16,1
   28d30:	100b883a 	mov	r5,r2
   28d34:	01800284 	movi	r6,10
   28d38:	39fff404 	addi	r7,r7,-48
   28d3c:	0028b340 	call	28b34 <__multadd>
   28d40:	84bff81e 	bne	r16,r18,28d24 <_gp+0xfffeb924>
   28d44:	dfc00617 	ldw	ra,24(sp)
   28d48:	dd400517 	ldw	r21,20(sp)
   28d4c:	dd000417 	ldw	r20,16(sp)
   28d50:	dcc00317 	ldw	r19,12(sp)
   28d54:	dc800217 	ldw	r18,8(sp)
   28d58:	dc400117 	ldw	r17,4(sp)
   28d5c:	dc000017 	ldw	r16,0(sp)
   28d60:	dec00704 	addi	sp,sp,28
   28d64:	f800283a 	ret
   28d68:	84000284 	addi	r16,r16,10
   28d6c:	1827883a 	mov	r19,r3
   28d70:	003fe906 	br	28d18 <_gp+0xfffeb918>

00028d74 <__hi0bits>:
   28d74:	20bfffec 	andhi	r2,r4,65535
   28d78:	1000141e 	bne	r2,zero,28dcc <__hi0bits+0x58>
   28d7c:	2008943a 	slli	r4,r4,16
   28d80:	00800404 	movi	r2,16
   28d84:	20ffc02c 	andhi	r3,r4,65280
   28d88:	1800021e 	bne	r3,zero,28d94 <__hi0bits+0x20>
   28d8c:	2008923a 	slli	r4,r4,8
   28d90:	10800204 	addi	r2,r2,8
   28d94:	20fc002c 	andhi	r3,r4,61440
   28d98:	1800021e 	bne	r3,zero,28da4 <__hi0bits+0x30>
   28d9c:	2008913a 	slli	r4,r4,4
   28da0:	10800104 	addi	r2,r2,4
   28da4:	20f0002c 	andhi	r3,r4,49152
   28da8:	1800031e 	bne	r3,zero,28db8 <__hi0bits+0x44>
   28dac:	2109883a 	add	r4,r4,r4
   28db0:	10800084 	addi	r2,r2,2
   28db4:	2109883a 	add	r4,r4,r4
   28db8:	20000316 	blt	r4,zero,28dc8 <__hi0bits+0x54>
   28dbc:	2110002c 	andhi	r4,r4,16384
   28dc0:	2000041e 	bne	r4,zero,28dd4 <__hi0bits+0x60>
   28dc4:	00800804 	movi	r2,32
   28dc8:	f800283a 	ret
   28dcc:	0005883a 	mov	r2,zero
   28dd0:	003fec06 	br	28d84 <_gp+0xfffeb984>
   28dd4:	10800044 	addi	r2,r2,1
   28dd8:	f800283a 	ret

00028ddc <__lo0bits>:
   28ddc:	20c00017 	ldw	r3,0(r4)
   28de0:	188001cc 	andi	r2,r3,7
   28de4:	10000826 	beq	r2,zero,28e08 <__lo0bits+0x2c>
   28de8:	1880004c 	andi	r2,r3,1
   28dec:	1000211e 	bne	r2,zero,28e74 <__lo0bits+0x98>
   28df0:	1880008c 	andi	r2,r3,2
   28df4:	1000211e 	bne	r2,zero,28e7c <__lo0bits+0xa0>
   28df8:	1806d0ba 	srli	r3,r3,2
   28dfc:	00800084 	movi	r2,2
   28e00:	20c00015 	stw	r3,0(r4)
   28e04:	f800283a 	ret
   28e08:	18bfffcc 	andi	r2,r3,65535
   28e0c:	10001326 	beq	r2,zero,28e5c <__lo0bits+0x80>
   28e10:	0005883a 	mov	r2,zero
   28e14:	19403fcc 	andi	r5,r3,255
   28e18:	2800021e 	bne	r5,zero,28e24 <__lo0bits+0x48>
   28e1c:	1806d23a 	srli	r3,r3,8
   28e20:	10800204 	addi	r2,r2,8
   28e24:	194003cc 	andi	r5,r3,15
   28e28:	2800021e 	bne	r5,zero,28e34 <__lo0bits+0x58>
   28e2c:	1806d13a 	srli	r3,r3,4
   28e30:	10800104 	addi	r2,r2,4
   28e34:	194000cc 	andi	r5,r3,3
   28e38:	2800021e 	bne	r5,zero,28e44 <__lo0bits+0x68>
   28e3c:	1806d0ba 	srli	r3,r3,2
   28e40:	10800084 	addi	r2,r2,2
   28e44:	1940004c 	andi	r5,r3,1
   28e48:	2800081e 	bne	r5,zero,28e6c <__lo0bits+0x90>
   28e4c:	1806d07a 	srli	r3,r3,1
   28e50:	1800051e 	bne	r3,zero,28e68 <__lo0bits+0x8c>
   28e54:	00800804 	movi	r2,32
   28e58:	f800283a 	ret
   28e5c:	1806d43a 	srli	r3,r3,16
   28e60:	00800404 	movi	r2,16
   28e64:	003feb06 	br	28e14 <_gp+0xfffeba14>
   28e68:	10800044 	addi	r2,r2,1
   28e6c:	20c00015 	stw	r3,0(r4)
   28e70:	f800283a 	ret
   28e74:	0005883a 	mov	r2,zero
   28e78:	f800283a 	ret
   28e7c:	1806d07a 	srli	r3,r3,1
   28e80:	00800044 	movi	r2,1
   28e84:	20c00015 	stw	r3,0(r4)
   28e88:	f800283a 	ret

00028e8c <__i2b>:
   28e8c:	defffd04 	addi	sp,sp,-12
   28e90:	dc000015 	stw	r16,0(sp)
   28e94:	04000044 	movi	r16,1
   28e98:	dc400115 	stw	r17,4(sp)
   28e9c:	2823883a 	mov	r17,r5
   28ea0:	800b883a 	mov	r5,r16
   28ea4:	dfc00215 	stw	ra,8(sp)
   28ea8:	0028a640 	call	28a64 <_Balloc>
   28eac:	14400515 	stw	r17,20(r2)
   28eb0:	14000415 	stw	r16,16(r2)
   28eb4:	dfc00217 	ldw	ra,8(sp)
   28eb8:	dc400117 	ldw	r17,4(sp)
   28ebc:	dc000017 	ldw	r16,0(sp)
   28ec0:	dec00304 	addi	sp,sp,12
   28ec4:	f800283a 	ret

00028ec8 <__multiply>:
   28ec8:	deffef04 	addi	sp,sp,-68
   28ecc:	dc400815 	stw	r17,32(sp)
   28ed0:	dc000715 	stw	r16,28(sp)
   28ed4:	2c400417 	ldw	r17,16(r5)
   28ed8:	34000417 	ldw	r16,16(r6)
   28edc:	dd800d15 	stw	r22,52(sp)
   28ee0:	dc800915 	stw	r18,36(sp)
   28ee4:	dfc01015 	stw	ra,64(sp)
   28ee8:	df000f15 	stw	fp,60(sp)
   28eec:	ddc00e15 	stw	r23,56(sp)
   28ef0:	dd400c15 	stw	r21,48(sp)
   28ef4:	dd000b15 	stw	r20,44(sp)
   28ef8:	dcc00a15 	stw	r19,40(sp)
   28efc:	2825883a 	mov	r18,r5
   28f00:	302d883a 	mov	r22,r6
   28f04:	8c009116 	blt	r17,r16,2914c <__multiply+0x284>
   28f08:	8005883a 	mov	r2,r16
   28f0c:	8821883a 	mov	r16,r17
   28f10:	1023883a 	mov	r17,r2
   28f14:	90800217 	ldw	r2,8(r18)
   28f18:	8447883a 	add	r3,r16,r17
   28f1c:	d8c00215 	stw	r3,8(sp)
   28f20:	91400117 	ldw	r5,4(r18)
   28f24:	10c0010e 	bge	r2,r3,28f2c <__multiply+0x64>
   28f28:	29400044 	addi	r5,r5,1
   28f2c:	0028a640 	call	28a64 <_Balloc>
   28f30:	d8c00217 	ldw	r3,8(sp)
   28f34:	d8800615 	stw	r2,24(sp)
   28f38:	18eb883a 	add	r21,r3,r3
   28f3c:	ad6b883a 	add	r21,r21,r21
   28f40:	10c00504 	addi	r3,r2,20
   28f44:	1d6b883a 	add	r21,r3,r21
   28f48:	d8c00115 	stw	r3,4(sp)
   28f4c:	dd400315 	stw	r21,12(sp)
   28f50:	1805883a 	mov	r2,r3
   28f54:	1d40042e 	bgeu	r3,r21,28f68 <__multiply+0xa0>
   28f58:	d8c00317 	ldw	r3,12(sp)
   28f5c:	10000015 	stw	zero,0(r2)
   28f60:	10800104 	addi	r2,r2,4
   28f64:	10fffc36 	bltu	r2,r3,28f58 <_gp+0xfffebb58>
   28f68:	8c63883a 	add	r17,r17,r17
   28f6c:	b5800504 	addi	r22,r22,20
   28f70:	8c63883a 	add	r17,r17,r17
   28f74:	94800504 	addi	r18,r18,20
   28f78:	8421883a 	add	r16,r16,r16
   28f7c:	b463883a 	add	r17,r22,r17
   28f80:	8421883a 	add	r16,r16,r16
   28f84:	dd800015 	stw	r22,0(sp)
   28f88:	dc800415 	stw	r18,16(sp)
   28f8c:	dc400515 	stw	r17,20(sp)
   28f90:	9429883a 	add	r20,r18,r16
   28f94:	b4404f2e 	bgeu	r22,r17,290d4 <__multiply+0x20c>
   28f98:	d8c00017 	ldw	r3,0(sp)
   28f9c:	1c800017 	ldw	r18,0(r3)
   28fa0:	943fffcc 	andi	r16,r18,65535
   28fa4:	80001e26 	beq	r16,zero,29020 <__multiply+0x158>
   28fa8:	dd800117 	ldw	r22,4(sp)
   28fac:	dd400417 	ldw	r21,16(sp)
   28fb0:	0025883a 	mov	r18,zero
   28fb4:	adc00017 	ldw	r23,0(r21)
   28fb8:	b4c00017 	ldw	r19,0(r22)
   28fbc:	800b883a 	mov	r5,r16
   28fc0:	b93fffcc 	andi	r4,r23,65535
   28fc4:	002e2bc0 	call	2e2bc <__mulsi3>
   28fc8:	9c7fffcc 	andi	r17,r19,65535
   28fcc:	8885883a 	add	r2,r17,r2
   28fd0:	b808d43a 	srli	r4,r23,16
   28fd4:	14a3883a 	add	r17,r2,r18
   28fd8:	9826d43a 	srli	r19,r19,16
   28fdc:	8824d43a 	srli	r18,r17,16
   28fe0:	800b883a 	mov	r5,r16
   28fe4:	002e2bc0 	call	2e2bc <__mulsi3>
   28fe8:	9885883a 	add	r2,r19,r2
   28fec:	14a7883a 	add	r19,r2,r18
   28ff0:	88ffffcc 	andi	r3,r17,65535
   28ff4:	9822943a 	slli	r17,r19,16
   28ff8:	ad400104 	addi	r21,r21,4
   28ffc:	b005883a 	mov	r2,r22
   29000:	88c6b03a 	or	r3,r17,r3
   29004:	b0c00015 	stw	r3,0(r22)
   29008:	9824d43a 	srli	r18,r19,16
   2900c:	b5800104 	addi	r22,r22,4
   29010:	ad3fe836 	bltu	r21,r20,28fb4 <_gp+0xfffebbb4>
   29014:	d8c00017 	ldw	r3,0(sp)
   29018:	14800115 	stw	r18,4(r2)
   2901c:	1c800017 	ldw	r18,0(r3)
   29020:	9024d43a 	srli	r18,r18,16
   29024:	90002226 	beq	r18,zero,290b0 <__multiply+0x1e8>
   29028:	d8c00117 	ldw	r3,4(sp)
   2902c:	dd800417 	ldw	r22,16(sp)
   29030:	002f883a 	mov	r23,zero
   29034:	1f000017 	ldw	fp,0(r3)
   29038:	1823883a 	mov	r17,r3
   2903c:	182b883a 	mov	r21,r3
   29040:	e021883a 	mov	r16,fp
   29044:	00000106 	br	2904c <__multiply+0x184>
   29048:	982b883a 	mov	r21,r19
   2904c:	b100000b 	ldhu	r4,0(r22)
   29050:	8020d43a 	srli	r16,r16,16
   29054:	900b883a 	mov	r5,r18
   29058:	002e2bc0 	call	2e2bc <__mulsi3>
   2905c:	1405883a 	add	r2,r2,r16
   29060:	15ef883a 	add	r23,r2,r23
   29064:	b804943a 	slli	r2,r23,16
   29068:	e0ffffcc 	andi	r3,fp,65535
   2906c:	8c400104 	addi	r17,r17,4
   29070:	10c6b03a 	or	r3,r2,r3
   29074:	88ffff15 	stw	r3,-4(r17)
   29078:	b5800104 	addi	r22,r22,4
   2907c:	b13fff17 	ldw	r4,-4(r22)
   29080:	acc00104 	addi	r19,r21,4
   29084:	900b883a 	mov	r5,r18
   29088:	2008d43a 	srli	r4,r4,16
   2908c:	9c000017 	ldw	r16,0(r19)
   29090:	002e2bc0 	call	2e2bc <__mulsi3>
   29094:	b806d43a 	srli	r3,r23,16
   29098:	813fffcc 	andi	r4,r16,65535
   2909c:	1105883a 	add	r2,r2,r4
   290a0:	10f9883a 	add	fp,r2,r3
   290a4:	e02ed43a 	srli	r23,fp,16
   290a8:	b53fe736 	bltu	r22,r20,29048 <_gp+0xfffebc48>
   290ac:	af000115 	stw	fp,4(r21)
   290b0:	d8c00017 	ldw	r3,0(sp)
   290b4:	d9000517 	ldw	r4,20(sp)
   290b8:	18c00104 	addi	r3,r3,4
   290bc:	d8c00015 	stw	r3,0(sp)
   290c0:	d8c00117 	ldw	r3,4(sp)
   290c4:	18c00104 	addi	r3,r3,4
   290c8:	d8c00115 	stw	r3,4(sp)
   290cc:	d8c00017 	ldw	r3,0(sp)
   290d0:	193fb136 	bltu	r3,r4,28f98 <_gp+0xfffebb98>
   290d4:	d8c00217 	ldw	r3,8(sp)
   290d8:	00c00c0e 	bge	zero,r3,2910c <__multiply+0x244>
   290dc:	d8c00317 	ldw	r3,12(sp)
   290e0:	18bfff17 	ldw	r2,-4(r3)
   290e4:	1d7fff04 	addi	r21,r3,-4
   290e8:	10000326 	beq	r2,zero,290f8 <__multiply+0x230>
   290ec:	00000706 	br	2910c <__multiply+0x244>
   290f0:	a8800017 	ldw	r2,0(r21)
   290f4:	1000051e 	bne	r2,zero,2910c <__multiply+0x244>
   290f8:	d8c00217 	ldw	r3,8(sp)
   290fc:	ad7fff04 	addi	r21,r21,-4
   29100:	18ffffc4 	addi	r3,r3,-1
   29104:	d8c00215 	stw	r3,8(sp)
   29108:	183ff91e 	bne	r3,zero,290f0 <_gp+0xfffebcf0>
   2910c:	d8c00617 	ldw	r3,24(sp)
   29110:	d9000217 	ldw	r4,8(sp)
   29114:	1805883a 	mov	r2,r3
   29118:	19000415 	stw	r4,16(r3)
   2911c:	dfc01017 	ldw	ra,64(sp)
   29120:	df000f17 	ldw	fp,60(sp)
   29124:	ddc00e17 	ldw	r23,56(sp)
   29128:	dd800d17 	ldw	r22,52(sp)
   2912c:	dd400c17 	ldw	r21,48(sp)
   29130:	dd000b17 	ldw	r20,44(sp)
   29134:	dcc00a17 	ldw	r19,40(sp)
   29138:	dc800917 	ldw	r18,36(sp)
   2913c:	dc400817 	ldw	r17,32(sp)
   29140:	dc000717 	ldw	r16,28(sp)
   29144:	dec01104 	addi	sp,sp,68
   29148:	f800283a 	ret
   2914c:	3025883a 	mov	r18,r6
   29150:	282d883a 	mov	r22,r5
   29154:	003f6f06 	br	28f14 <_gp+0xfffebb14>

00029158 <__pow5mult>:
   29158:	defffa04 	addi	sp,sp,-24
   2915c:	dcc00315 	stw	r19,12(sp)
   29160:	dc800215 	stw	r18,8(sp)
   29164:	dc000015 	stw	r16,0(sp)
   29168:	dfc00515 	stw	ra,20(sp)
   2916c:	dd000415 	stw	r20,16(sp)
   29170:	dc400115 	stw	r17,4(sp)
   29174:	308000cc 	andi	r2,r6,3
   29178:	3021883a 	mov	r16,r6
   2917c:	2027883a 	mov	r19,r4
   29180:	2825883a 	mov	r18,r5
   29184:	10002e1e 	bne	r2,zero,29240 <__pow5mult+0xe8>
   29188:	8021d0ba 	srai	r16,r16,2
   2918c:	80001a26 	beq	r16,zero,291f8 <__pow5mult+0xa0>
   29190:	9c401217 	ldw	r17,72(r19)
   29194:	8800061e 	bne	r17,zero,291b0 <__pow5mult+0x58>
   29198:	00003406 	br	2926c <__pow5mult+0x114>
   2919c:	8021d07a 	srai	r16,r16,1
   291a0:	80001526 	beq	r16,zero,291f8 <__pow5mult+0xa0>
   291a4:	88800017 	ldw	r2,0(r17)
   291a8:	10001c26 	beq	r2,zero,2921c <__pow5mult+0xc4>
   291ac:	1023883a 	mov	r17,r2
   291b0:	80c0004c 	andi	r3,r16,1
   291b4:	183ff926 	beq	r3,zero,2919c <_gp+0xfffebd9c>
   291b8:	900b883a 	mov	r5,r18
   291bc:	880d883a 	mov	r6,r17
   291c0:	9809883a 	mov	r4,r19
   291c4:	0028ec80 	call	28ec8 <__multiply>
   291c8:	90001b26 	beq	r18,zero,29238 <__pow5mult+0xe0>
   291cc:	91c00117 	ldw	r7,4(r18)
   291d0:	98c01317 	ldw	r3,76(r19)
   291d4:	8021d07a 	srai	r16,r16,1
   291d8:	39cf883a 	add	r7,r7,r7
   291dc:	39cf883a 	add	r7,r7,r7
   291e0:	19c7883a 	add	r3,r3,r7
   291e4:	19000017 	ldw	r4,0(r3)
   291e8:	91000015 	stw	r4,0(r18)
   291ec:	1c800015 	stw	r18,0(r3)
   291f0:	1025883a 	mov	r18,r2
   291f4:	803feb1e 	bne	r16,zero,291a4 <_gp+0xfffebda4>
   291f8:	9005883a 	mov	r2,r18
   291fc:	dfc00517 	ldw	ra,20(sp)
   29200:	dd000417 	ldw	r20,16(sp)
   29204:	dcc00317 	ldw	r19,12(sp)
   29208:	dc800217 	ldw	r18,8(sp)
   2920c:	dc400117 	ldw	r17,4(sp)
   29210:	dc000017 	ldw	r16,0(sp)
   29214:	dec00604 	addi	sp,sp,24
   29218:	f800283a 	ret
   2921c:	9809883a 	mov	r4,r19
   29220:	880b883a 	mov	r5,r17
   29224:	880d883a 	mov	r6,r17
   29228:	0028ec80 	call	28ec8 <__multiply>
   2922c:	88800015 	stw	r2,0(r17)
   29230:	10000015 	stw	zero,0(r2)
   29234:	003fdd06 	br	291ac <_gp+0xfffebdac>
   29238:	1025883a 	mov	r18,r2
   2923c:	003fd706 	br	2919c <_gp+0xfffebd9c>
   29240:	10bfffc4 	addi	r2,r2,-1
   29244:	1085883a 	add	r2,r2,r2
   29248:	00c000f4 	movhi	r3,3
   2924c:	18cdb104 	addi	r3,r3,14020
   29250:	1085883a 	add	r2,r2,r2
   29254:	1885883a 	add	r2,r3,r2
   29258:	11800017 	ldw	r6,0(r2)
   2925c:	000f883a 	mov	r7,zero
   29260:	0028b340 	call	28b34 <__multadd>
   29264:	1025883a 	mov	r18,r2
   29268:	003fc706 	br	29188 <_gp+0xfffebd88>
   2926c:	05000044 	movi	r20,1
   29270:	9809883a 	mov	r4,r19
   29274:	a00b883a 	mov	r5,r20
   29278:	0028a640 	call	28a64 <_Balloc>
   2927c:	1023883a 	mov	r17,r2
   29280:	00809c44 	movi	r2,625
   29284:	88800515 	stw	r2,20(r17)
   29288:	8d000415 	stw	r20,16(r17)
   2928c:	9c401215 	stw	r17,72(r19)
   29290:	88000015 	stw	zero,0(r17)
   29294:	003fc606 	br	291b0 <_gp+0xfffebdb0>

00029298 <__lshift>:
   29298:	defff904 	addi	sp,sp,-28
   2929c:	dd000415 	stw	r20,16(sp)
   292a0:	dcc00315 	stw	r19,12(sp)
   292a4:	3029d17a 	srai	r20,r6,5
   292a8:	2cc00417 	ldw	r19,16(r5)
   292ac:	28800217 	ldw	r2,8(r5)
   292b0:	dd400515 	stw	r21,20(sp)
   292b4:	a4e7883a 	add	r19,r20,r19
   292b8:	dc800215 	stw	r18,8(sp)
   292bc:	dc400115 	stw	r17,4(sp)
   292c0:	dc000015 	stw	r16,0(sp)
   292c4:	dfc00615 	stw	ra,24(sp)
   292c8:	9c000044 	addi	r16,r19,1
   292cc:	2823883a 	mov	r17,r5
   292d0:	302b883a 	mov	r21,r6
   292d4:	2025883a 	mov	r18,r4
   292d8:	29400117 	ldw	r5,4(r5)
   292dc:	1400030e 	bge	r2,r16,292ec <__lshift+0x54>
   292e0:	1085883a 	add	r2,r2,r2
   292e4:	29400044 	addi	r5,r5,1
   292e8:	143ffd16 	blt	r2,r16,292e0 <_gp+0xfffebee0>
   292ec:	9009883a 	mov	r4,r18
   292f0:	0028a640 	call	28a64 <_Balloc>
   292f4:	11c00504 	addi	r7,r2,20
   292f8:	0500090e 	bge	zero,r20,29320 <__lshift+0x88>
   292fc:	3811883a 	mov	r8,r7
   29300:	0007883a 	mov	r3,zero
   29304:	40000015 	stw	zero,0(r8)
   29308:	18c00044 	addi	r3,r3,1
   2930c:	42000104 	addi	r8,r8,4
   29310:	1d3ffc1e 	bne	r3,r20,29304 <_gp+0xfffebf04>
   29314:	18c7883a 	add	r3,r3,r3
   29318:	18c7883a 	add	r3,r3,r3
   2931c:	38cf883a 	add	r7,r7,r3
   29320:	89000417 	ldw	r4,16(r17)
   29324:	88c00504 	addi	r3,r17,20
   29328:	a98007cc 	andi	r6,r21,31
   2932c:	2109883a 	add	r4,r4,r4
   29330:	2109883a 	add	r4,r4,r4
   29334:	1909883a 	add	r4,r3,r4
   29338:	30002326 	beq	r6,zero,293c8 <__lshift+0x130>
   2933c:	01400804 	movi	r5,32
   29340:	298bc83a 	sub	r5,r5,r6
   29344:	0013883a 	mov	r9,zero
   29348:	1a000017 	ldw	r8,0(r3)
   2934c:	3815883a 	mov	r10,r7
   29350:	39c00104 	addi	r7,r7,4
   29354:	4190983a 	sll	r8,r8,r6
   29358:	18c00104 	addi	r3,r3,4
   2935c:	4a10b03a 	or	r8,r9,r8
   29360:	3a3fff15 	stw	r8,-4(r7)
   29364:	1a3fff17 	ldw	r8,-4(r3)
   29368:	4152d83a 	srl	r9,r8,r5
   2936c:	193ff636 	bltu	r3,r4,29348 <_gp+0xfffebf48>
   29370:	52400115 	stw	r9,4(r10)
   29374:	48000126 	beq	r9,zero,2937c <__lshift+0xe4>
   29378:	9c000084 	addi	r16,r19,2
   2937c:	89000117 	ldw	r4,4(r17)
   29380:	90c01317 	ldw	r3,76(r18)
   29384:	843fffc4 	addi	r16,r16,-1
   29388:	2109883a 	add	r4,r4,r4
   2938c:	2109883a 	add	r4,r4,r4
   29390:	1907883a 	add	r3,r3,r4
   29394:	19000017 	ldw	r4,0(r3)
   29398:	14000415 	stw	r16,16(r2)
   2939c:	89000015 	stw	r4,0(r17)
   293a0:	1c400015 	stw	r17,0(r3)
   293a4:	dfc00617 	ldw	ra,24(sp)
   293a8:	dd400517 	ldw	r21,20(sp)
   293ac:	dd000417 	ldw	r20,16(sp)
   293b0:	dcc00317 	ldw	r19,12(sp)
   293b4:	dc800217 	ldw	r18,8(sp)
   293b8:	dc400117 	ldw	r17,4(sp)
   293bc:	dc000017 	ldw	r16,0(sp)
   293c0:	dec00704 	addi	sp,sp,28
   293c4:	f800283a 	ret
   293c8:	19400017 	ldw	r5,0(r3)
   293cc:	39c00104 	addi	r7,r7,4
   293d0:	18c00104 	addi	r3,r3,4
   293d4:	397fff15 	stw	r5,-4(r7)
   293d8:	193ffb36 	bltu	r3,r4,293c8 <_gp+0xfffebfc8>
   293dc:	003fe706 	br	2937c <_gp+0xfffebf7c>

000293e0 <__mcmp>:
   293e0:	20800417 	ldw	r2,16(r4)
   293e4:	28c00417 	ldw	r3,16(r5)
   293e8:	10c5c83a 	sub	r2,r2,r3
   293ec:	1000111e 	bne	r2,zero,29434 <__mcmp+0x54>
   293f0:	18c7883a 	add	r3,r3,r3
   293f4:	18c7883a 	add	r3,r3,r3
   293f8:	21000504 	addi	r4,r4,20
   293fc:	29400504 	addi	r5,r5,20
   29400:	20c5883a 	add	r2,r4,r3
   29404:	28cb883a 	add	r5,r5,r3
   29408:	00000106 	br	29410 <__mcmp+0x30>
   2940c:	20800a2e 	bgeu	r4,r2,29438 <__mcmp+0x58>
   29410:	10bfff04 	addi	r2,r2,-4
   29414:	297fff04 	addi	r5,r5,-4
   29418:	11800017 	ldw	r6,0(r2)
   2941c:	28c00017 	ldw	r3,0(r5)
   29420:	30fffa26 	beq	r6,r3,2940c <_gp+0xfffec00c>
   29424:	30c00236 	bltu	r6,r3,29430 <__mcmp+0x50>
   29428:	00800044 	movi	r2,1
   2942c:	f800283a 	ret
   29430:	00bfffc4 	movi	r2,-1
   29434:	f800283a 	ret
   29438:	0005883a 	mov	r2,zero
   2943c:	f800283a 	ret

00029440 <__mdiff>:
   29440:	defffb04 	addi	sp,sp,-20
   29444:	dc000015 	stw	r16,0(sp)
   29448:	2821883a 	mov	r16,r5
   2944c:	dcc00315 	stw	r19,12(sp)
   29450:	300b883a 	mov	r5,r6
   29454:	2027883a 	mov	r19,r4
   29458:	8009883a 	mov	r4,r16
   2945c:	dc800215 	stw	r18,8(sp)
   29460:	dfc00415 	stw	ra,16(sp)
   29464:	dc400115 	stw	r17,4(sp)
   29468:	3025883a 	mov	r18,r6
   2946c:	00293e00 	call	293e0 <__mcmp>
   29470:	10005226 	beq	r2,zero,295bc <__mdiff+0x17c>
   29474:	10004c16 	blt	r2,zero,295a8 <__mdiff+0x168>
   29478:	0023883a 	mov	r17,zero
   2947c:	81400117 	ldw	r5,4(r16)
   29480:	9809883a 	mov	r4,r19
   29484:	0028a640 	call	28a64 <_Balloc>
   29488:	83400417 	ldw	r13,16(r16)
   2948c:	93800417 	ldw	r14,16(r18)
   29490:	81000504 	addi	r4,r16,20
   29494:	6b59883a 	add	r12,r13,r13
   29498:	739d883a 	add	r14,r14,r14
   2949c:	6319883a 	add	r12,r12,r12
   294a0:	91800504 	addi	r6,r18,20
   294a4:	739d883a 	add	r14,r14,r14
   294a8:	14400315 	stw	r17,12(r2)
   294ac:	2319883a 	add	r12,r4,r12
   294b0:	339d883a 	add	r14,r6,r14
   294b4:	12400504 	addi	r9,r2,20
   294b8:	0007883a 	mov	r3,zero
   294bc:	22000017 	ldw	r8,0(r4)
   294c0:	32800017 	ldw	r10,0(r6)
   294c4:	4ac00104 	addi	r11,r9,4
   294c8:	41ffffcc 	andi	r7,r8,65535
   294cc:	38c7883a 	add	r3,r7,r3
   294d0:	51ffffcc 	andi	r7,r10,65535
   294d4:	19cfc83a 	sub	r7,r3,r7
   294d8:	4010d43a 	srli	r8,r8,16
   294dc:	5014d43a 	srli	r10,r10,16
   294e0:	3807d43a 	srai	r3,r7,16
   294e4:	39ffffcc 	andi	r7,r7,65535
   294e8:	4291c83a 	sub	r8,r8,r10
   294ec:	40c7883a 	add	r3,r8,r3
   294f0:	1810943a 	slli	r8,r3,16
   294f4:	31800104 	addi	r6,r6,4
   294f8:	21000104 	addi	r4,r4,4
   294fc:	41ceb03a 	or	r7,r8,r7
   29500:	49c00015 	stw	r7,0(r9)
   29504:	1807d43a 	srai	r3,r3,16
   29508:	580b883a 	mov	r5,r11
   2950c:	5813883a 	mov	r9,r11
   29510:	33bfea36 	bltu	r6,r14,294bc <_gp+0xfffec0bc>
   29514:	2011883a 	mov	r8,r4
   29518:	2300152e 	bgeu	r4,r12,29570 <__mdiff+0x130>
   2951c:	21400017 	ldw	r5,0(r4)
   29520:	4a400104 	addi	r9,r9,4
   29524:	21000104 	addi	r4,r4,4
   29528:	29ffffcc 	andi	r7,r5,65535
   2952c:	38c7883a 	add	r3,r7,r3
   29530:	280ad43a 	srli	r5,r5,16
   29534:	180dd43a 	srai	r6,r3,16
   29538:	19ffffcc 	andi	r7,r3,65535
   2953c:	3147883a 	add	r3,r6,r5
   29540:	180a943a 	slli	r5,r3,16
   29544:	1807d43a 	srai	r3,r3,16
   29548:	29ceb03a 	or	r7,r5,r7
   2954c:	49ffff15 	stw	r7,-4(r9)
   29550:	233ff236 	bltu	r4,r12,2951c <_gp+0xfffec11c>
   29554:	0206303a 	nor	r3,zero,r8
   29558:	1b07883a 	add	r3,r3,r12
   2955c:	1806d0ba 	srli	r3,r3,2
   29560:	18c00044 	addi	r3,r3,1
   29564:	18c7883a 	add	r3,r3,r3
   29568:	18c7883a 	add	r3,r3,r3
   2956c:	58cb883a 	add	r5,r11,r3
   29570:	28ffff04 	addi	r3,r5,-4
   29574:	3800041e 	bne	r7,zero,29588 <__mdiff+0x148>
   29578:	18ffff04 	addi	r3,r3,-4
   2957c:	19000017 	ldw	r4,0(r3)
   29580:	6b7fffc4 	addi	r13,r13,-1
   29584:	203ffc26 	beq	r4,zero,29578 <_gp+0xfffec178>
   29588:	13400415 	stw	r13,16(r2)
   2958c:	dfc00417 	ldw	ra,16(sp)
   29590:	dcc00317 	ldw	r19,12(sp)
   29594:	dc800217 	ldw	r18,8(sp)
   29598:	dc400117 	ldw	r17,4(sp)
   2959c:	dc000017 	ldw	r16,0(sp)
   295a0:	dec00504 	addi	sp,sp,20
   295a4:	f800283a 	ret
   295a8:	8005883a 	mov	r2,r16
   295ac:	04400044 	movi	r17,1
   295b0:	9021883a 	mov	r16,r18
   295b4:	1025883a 	mov	r18,r2
   295b8:	003fb006 	br	2947c <_gp+0xfffec07c>
   295bc:	9809883a 	mov	r4,r19
   295c0:	000b883a 	mov	r5,zero
   295c4:	0028a640 	call	28a64 <_Balloc>
   295c8:	00c00044 	movi	r3,1
   295cc:	10c00415 	stw	r3,16(r2)
   295d0:	10000515 	stw	zero,20(r2)
   295d4:	003fed06 	br	2958c <_gp+0xfffec18c>

000295d8 <__ulp>:
   295d8:	295ffc2c 	andhi	r5,r5,32752
   295dc:	00bf3034 	movhi	r2,64704
   295e0:	2887883a 	add	r3,r5,r2
   295e4:	00c0020e 	bge	zero,r3,295f0 <__ulp+0x18>
   295e8:	0005883a 	mov	r2,zero
   295ec:	f800283a 	ret
   295f0:	00c7c83a 	sub	r3,zero,r3
   295f4:	180bd53a 	srai	r5,r3,20
   295f8:	008004c4 	movi	r2,19
   295fc:	11400a0e 	bge	r2,r5,29628 <__ulp+0x50>
   29600:	00800c84 	movi	r2,50
   29604:	0007883a 	mov	r3,zero
   29608:	11400516 	blt	r2,r5,29620 <__ulp+0x48>
   2960c:	00800cc4 	movi	r2,51
   29610:	114bc83a 	sub	r5,r2,r5
   29614:	00800044 	movi	r2,1
   29618:	1144983a 	sll	r2,r2,r5
   2961c:	f800283a 	ret
   29620:	00800044 	movi	r2,1
   29624:	f800283a 	ret
   29628:	00800234 	movhi	r2,8
   2962c:	1147d83a 	sra	r3,r2,r5
   29630:	0005883a 	mov	r2,zero
   29634:	f800283a 	ret

00029638 <__b2d>:
   29638:	defffa04 	addi	sp,sp,-24
   2963c:	dc000015 	stw	r16,0(sp)
   29640:	24000417 	ldw	r16,16(r4)
   29644:	dc400115 	stw	r17,4(sp)
   29648:	24400504 	addi	r17,r4,20
   2964c:	8421883a 	add	r16,r16,r16
   29650:	8421883a 	add	r16,r16,r16
   29654:	8c21883a 	add	r16,r17,r16
   29658:	dc800215 	stw	r18,8(sp)
   2965c:	84bfff17 	ldw	r18,-4(r16)
   29660:	dd000415 	stw	r20,16(sp)
   29664:	dcc00315 	stw	r19,12(sp)
   29668:	9009883a 	mov	r4,r18
   2966c:	2829883a 	mov	r20,r5
   29670:	dfc00515 	stw	ra,20(sp)
   29674:	0028d740 	call	28d74 <__hi0bits>
   29678:	00c00804 	movi	r3,32
   2967c:	1887c83a 	sub	r3,r3,r2
   29680:	a0c00015 	stw	r3,0(r20)
   29684:	00c00284 	movi	r3,10
   29688:	84ffff04 	addi	r19,r16,-4
   2968c:	18801216 	blt	r3,r2,296d8 <__b2d+0xa0>
   29690:	014002c4 	movi	r5,11
   29694:	2889c83a 	sub	r4,r5,r2
   29698:	9106d83a 	srl	r3,r18,r4
   2969c:	18cffc34 	orhi	r3,r3,16368
   296a0:	8cc0282e 	bgeu	r17,r19,29744 <__b2d+0x10c>
   296a4:	817ffe17 	ldw	r5,-8(r16)
   296a8:	290ad83a 	srl	r5,r5,r4
   296ac:	10800544 	addi	r2,r2,21
   296b0:	9084983a 	sll	r2,r18,r2
   296b4:	2884b03a 	or	r2,r5,r2
   296b8:	dfc00517 	ldw	ra,20(sp)
   296bc:	dd000417 	ldw	r20,16(sp)
   296c0:	dcc00317 	ldw	r19,12(sp)
   296c4:	dc800217 	ldw	r18,8(sp)
   296c8:	dc400117 	ldw	r17,4(sp)
   296cc:	dc000017 	ldw	r16,0(sp)
   296d0:	dec00604 	addi	sp,sp,24
   296d4:	f800283a 	ret
   296d8:	113ffd44 	addi	r4,r2,-11
   296dc:	8cc00f2e 	bgeu	r17,r19,2971c <__b2d+0xe4>
   296e0:	81bffe04 	addi	r6,r16,-8
   296e4:	817ffe17 	ldw	r5,-8(r16)
   296e8:	20001326 	beq	r4,zero,29738 <__b2d+0x100>
   296ec:	00c00ac4 	movi	r3,43
   296f0:	1885c83a 	sub	r2,r3,r2
   296f4:	2886d83a 	srl	r3,r5,r2
   296f8:	9124983a 	sll	r18,r18,r4
   296fc:	90e4b03a 	or	r18,r18,r3
   29700:	90cffc34 	orhi	r3,r18,16368
   29704:	8980112e 	bgeu	r17,r6,2974c <__b2d+0x114>
   29708:	81bffd17 	ldw	r6,-12(r16)
   2970c:	308cd83a 	srl	r6,r6,r2
   29710:	2904983a 	sll	r2,r5,r4
   29714:	1184b03a 	or	r2,r2,r6
   29718:	003fe706 	br	296b8 <_gp+0xfffec2b8>
   2971c:	20000526 	beq	r4,zero,29734 <__b2d+0xfc>
   29720:	9124983a 	sll	r18,r18,r4
   29724:	000d883a 	mov	r6,zero
   29728:	000b883a 	mov	r5,zero
   2972c:	90cffc34 	orhi	r3,r18,16368
   29730:	003ff706 	br	29710 <_gp+0xfffec310>
   29734:	000b883a 	mov	r5,zero
   29738:	90cffc34 	orhi	r3,r18,16368
   2973c:	2805883a 	mov	r2,r5
   29740:	003fdd06 	br	296b8 <_gp+0xfffec2b8>
   29744:	000b883a 	mov	r5,zero
   29748:	003fd806 	br	296ac <_gp+0xfffec2ac>
   2974c:	000d883a 	mov	r6,zero
   29750:	003fef06 	br	29710 <_gp+0xfffec310>

00029754 <__d2b>:
   29754:	defff704 	addi	sp,sp,-36
   29758:	dc000215 	stw	r16,8(sp)
   2975c:	3021883a 	mov	r16,r6
   29760:	dc400315 	stw	r17,12(sp)
   29764:	8022907a 	slli	r17,r16,1
   29768:	dd400715 	stw	r21,28(sp)
   2976c:	282b883a 	mov	r21,r5
   29770:	01400044 	movi	r5,1
   29774:	dd000615 	stw	r20,24(sp)
   29778:	dcc00515 	stw	r19,20(sp)
   2977c:	dc800415 	stw	r18,16(sp)
   29780:	dfc00815 	stw	ra,32(sp)
   29784:	3829883a 	mov	r20,r7
   29788:	dc800917 	ldw	r18,36(sp)
   2978c:	8822d57a 	srli	r17,r17,21
   29790:	0028a640 	call	28a64 <_Balloc>
   29794:	1027883a 	mov	r19,r2
   29798:	00800434 	movhi	r2,16
   2979c:	10bfffc4 	addi	r2,r2,-1
   297a0:	808c703a 	and	r6,r16,r2
   297a4:	88000126 	beq	r17,zero,297ac <__d2b+0x58>
   297a8:	31800434 	orhi	r6,r6,16
   297ac:	d9800015 	stw	r6,0(sp)
   297b0:	a8001f26 	beq	r21,zero,29830 <__d2b+0xdc>
   297b4:	d9000104 	addi	r4,sp,4
   297b8:	dd400115 	stw	r21,4(sp)
   297bc:	0028ddc0 	call	28ddc <__lo0bits>
   297c0:	d8c00017 	ldw	r3,0(sp)
   297c4:	1000291e 	bne	r2,zero,2986c <__d2b+0x118>
   297c8:	d9000117 	ldw	r4,4(sp)
   297cc:	99000515 	stw	r4,20(r19)
   297d0:	1820c03a 	cmpne	r16,r3,zero
   297d4:	84000044 	addi	r16,r16,1
   297d8:	98c00615 	stw	r3,24(r19)
   297dc:	9c000415 	stw	r16,16(r19)
   297e0:	88001b1e 	bne	r17,zero,29850 <__d2b+0xfc>
   297e4:	800690ba 	slli	r3,r16,2
   297e8:	10bef384 	addi	r2,r2,-1074
   297ec:	a0800015 	stw	r2,0(r20)
   297f0:	98c5883a 	add	r2,r19,r3
   297f4:	11000417 	ldw	r4,16(r2)
   297f8:	8020917a 	slli	r16,r16,5
   297fc:	0028d740 	call	28d74 <__hi0bits>
   29800:	8085c83a 	sub	r2,r16,r2
   29804:	90800015 	stw	r2,0(r18)
   29808:	9805883a 	mov	r2,r19
   2980c:	dfc00817 	ldw	ra,32(sp)
   29810:	dd400717 	ldw	r21,28(sp)
   29814:	dd000617 	ldw	r20,24(sp)
   29818:	dcc00517 	ldw	r19,20(sp)
   2981c:	dc800417 	ldw	r18,16(sp)
   29820:	dc400317 	ldw	r17,12(sp)
   29824:	dc000217 	ldw	r16,8(sp)
   29828:	dec00904 	addi	sp,sp,36
   2982c:	f800283a 	ret
   29830:	d809883a 	mov	r4,sp
   29834:	0028ddc0 	call	28ddc <__lo0bits>
   29838:	d8c00017 	ldw	r3,0(sp)
   2983c:	04000044 	movi	r16,1
   29840:	9c000415 	stw	r16,16(r19)
   29844:	98c00515 	stw	r3,20(r19)
   29848:	10800804 	addi	r2,r2,32
   2984c:	883fe526 	beq	r17,zero,297e4 <_gp+0xfffec3e4>
   29850:	8c7ef344 	addi	r17,r17,-1075
   29854:	88a3883a 	add	r17,r17,r2
   29858:	00c00d44 	movi	r3,53
   2985c:	a4400015 	stw	r17,0(r20)
   29860:	1885c83a 	sub	r2,r3,r2
   29864:	90800015 	stw	r2,0(r18)
   29868:	003fe706 	br	29808 <_gp+0xfffec408>
   2986c:	01000804 	movi	r4,32
   29870:	2089c83a 	sub	r4,r4,r2
   29874:	1908983a 	sll	r4,r3,r4
   29878:	d9400117 	ldw	r5,4(sp)
   2987c:	1886d83a 	srl	r3,r3,r2
   29880:	2148b03a 	or	r4,r4,r5
   29884:	99000515 	stw	r4,20(r19)
   29888:	d8c00015 	stw	r3,0(sp)
   2988c:	003fd006 	br	297d0 <_gp+0xfffec3d0>

00029890 <__ratio>:
   29890:	defff904 	addi	sp,sp,-28
   29894:	dc400315 	stw	r17,12(sp)
   29898:	2823883a 	mov	r17,r5
   2989c:	d9400104 	addi	r5,sp,4
   298a0:	dfc00615 	stw	ra,24(sp)
   298a4:	dcc00515 	stw	r19,20(sp)
   298a8:	dc800415 	stw	r18,16(sp)
   298ac:	2027883a 	mov	r19,r4
   298b0:	dc000215 	stw	r16,8(sp)
   298b4:	00296380 	call	29638 <__b2d>
   298b8:	8809883a 	mov	r4,r17
   298bc:	d80b883a 	mov	r5,sp
   298c0:	1025883a 	mov	r18,r2
   298c4:	1821883a 	mov	r16,r3
   298c8:	00296380 	call	29638 <__b2d>
   298cc:	8a400417 	ldw	r9,16(r17)
   298d0:	9a000417 	ldw	r8,16(r19)
   298d4:	100d883a 	mov	r6,r2
   298d8:	d8800017 	ldw	r2,0(sp)
   298dc:	4251c83a 	sub	r8,r8,r9
   298e0:	4012917a 	slli	r9,r8,5
   298e4:	da000117 	ldw	r8,4(sp)
   298e8:	4091c83a 	sub	r8,r8,r2
   298ec:	4251883a 	add	r8,r8,r9
   298f0:	02000d0e 	bge	zero,r8,29928 <__ratio+0x98>
   298f4:	4010953a 	slli	r8,r8,20
   298f8:	4421883a 	add	r16,r8,r16
   298fc:	9009883a 	mov	r4,r18
   29900:	800b883a 	mov	r5,r16
   29904:	180f883a 	mov	r7,r3
   29908:	002eb800 	call	2eb80 <__divdf3>
   2990c:	dfc00617 	ldw	ra,24(sp)
   29910:	dcc00517 	ldw	r19,20(sp)
   29914:	dc800417 	ldw	r18,16(sp)
   29918:	dc400317 	ldw	r17,12(sp)
   2991c:	dc000217 	ldw	r16,8(sp)
   29920:	dec00704 	addi	sp,sp,28
   29924:	f800283a 	ret
   29928:	4010953a 	slli	r8,r8,20
   2992c:	1a07c83a 	sub	r3,r3,r8
   29930:	003ff206 	br	298fc <_gp+0xfffec4fc>

00029934 <_mprec_log10>:
   29934:	defffe04 	addi	sp,sp,-8
   29938:	dc000015 	stw	r16,0(sp)
   2993c:	dfc00115 	stw	ra,4(sp)
   29940:	008005c4 	movi	r2,23
   29944:	2021883a 	mov	r16,r4
   29948:	11000d0e 	bge	r2,r4,29980 <_mprec_log10+0x4c>
   2994c:	0005883a 	mov	r2,zero
   29950:	00cffc34 	movhi	r3,16368
   29954:	843fffc4 	addi	r16,r16,-1
   29958:	1009883a 	mov	r4,r2
   2995c:	180b883a 	mov	r5,r3
   29960:	000d883a 	mov	r6,zero
   29964:	01d00934 	movhi	r7,16420
   29968:	002f7440 	call	2f744 <__muldf3>
   2996c:	803ff91e 	bne	r16,zero,29954 <_gp+0xfffec554>
   29970:	dfc00117 	ldw	ra,4(sp)
   29974:	dc000017 	ldw	r16,0(sp)
   29978:	dec00204 	addi	sp,sp,8
   2997c:	f800283a 	ret
   29980:	202090fa 	slli	r16,r4,3
   29984:	008000f4 	movhi	r2,3
   29988:	108dc804 	addi	r2,r2,14112
   2998c:	1421883a 	add	r16,r2,r16
   29990:	80800017 	ldw	r2,0(r16)
   29994:	80c00117 	ldw	r3,4(r16)
   29998:	dfc00117 	ldw	ra,4(sp)
   2999c:	dc000017 	ldw	r16,0(sp)
   299a0:	dec00204 	addi	sp,sp,8
   299a4:	f800283a 	ret

000299a8 <__copybits>:
   299a8:	297fffc4 	addi	r5,r5,-1
   299ac:	280fd17a 	srai	r7,r5,5
   299b0:	30c00417 	ldw	r3,16(r6)
   299b4:	30800504 	addi	r2,r6,20
   299b8:	39c00044 	addi	r7,r7,1
   299bc:	18c7883a 	add	r3,r3,r3
   299c0:	39cf883a 	add	r7,r7,r7
   299c4:	18c7883a 	add	r3,r3,r3
   299c8:	39cf883a 	add	r7,r7,r7
   299cc:	10c7883a 	add	r3,r2,r3
   299d0:	21cf883a 	add	r7,r4,r7
   299d4:	10c00d2e 	bgeu	r2,r3,29a0c <__copybits+0x64>
   299d8:	200b883a 	mov	r5,r4
   299dc:	12000017 	ldw	r8,0(r2)
   299e0:	29400104 	addi	r5,r5,4
   299e4:	10800104 	addi	r2,r2,4
   299e8:	2a3fff15 	stw	r8,-4(r5)
   299ec:	10fffb36 	bltu	r2,r3,299dc <_gp+0xfffec5dc>
   299f0:	1985c83a 	sub	r2,r3,r6
   299f4:	10bffac4 	addi	r2,r2,-21
   299f8:	1004d0ba 	srli	r2,r2,2
   299fc:	10800044 	addi	r2,r2,1
   29a00:	1085883a 	add	r2,r2,r2
   29a04:	1085883a 	add	r2,r2,r2
   29a08:	2089883a 	add	r4,r4,r2
   29a0c:	21c0032e 	bgeu	r4,r7,29a1c <__copybits+0x74>
   29a10:	20000015 	stw	zero,0(r4)
   29a14:	21000104 	addi	r4,r4,4
   29a18:	21fffd36 	bltu	r4,r7,29a10 <_gp+0xfffec610>
   29a1c:	f800283a 	ret

00029a20 <__any_on>:
   29a20:	20c00417 	ldw	r3,16(r4)
   29a24:	2805d17a 	srai	r2,r5,5
   29a28:	21000504 	addi	r4,r4,20
   29a2c:	18800d0e 	bge	r3,r2,29a64 <__any_on+0x44>
   29a30:	18c7883a 	add	r3,r3,r3
   29a34:	18c7883a 	add	r3,r3,r3
   29a38:	20c7883a 	add	r3,r4,r3
   29a3c:	20c0192e 	bgeu	r4,r3,29aa4 <__any_on+0x84>
   29a40:	18bfff17 	ldw	r2,-4(r3)
   29a44:	18ffff04 	addi	r3,r3,-4
   29a48:	1000041e 	bne	r2,zero,29a5c <__any_on+0x3c>
   29a4c:	20c0142e 	bgeu	r4,r3,29aa0 <__any_on+0x80>
   29a50:	18ffff04 	addi	r3,r3,-4
   29a54:	19400017 	ldw	r5,0(r3)
   29a58:	283ffc26 	beq	r5,zero,29a4c <_gp+0xfffec64c>
   29a5c:	00800044 	movi	r2,1
   29a60:	f800283a 	ret
   29a64:	10c00a0e 	bge	r2,r3,29a90 <__any_on+0x70>
   29a68:	1085883a 	add	r2,r2,r2
   29a6c:	1085883a 	add	r2,r2,r2
   29a70:	294007cc 	andi	r5,r5,31
   29a74:	2087883a 	add	r3,r4,r2
   29a78:	283ff026 	beq	r5,zero,29a3c <_gp+0xfffec63c>
   29a7c:	19800017 	ldw	r6,0(r3)
   29a80:	3144d83a 	srl	r2,r6,r5
   29a84:	114a983a 	sll	r5,r2,r5
   29a88:	29bff41e 	bne	r5,r6,29a5c <_gp+0xfffec65c>
   29a8c:	003feb06 	br	29a3c <_gp+0xfffec63c>
   29a90:	1085883a 	add	r2,r2,r2
   29a94:	1085883a 	add	r2,r2,r2
   29a98:	2087883a 	add	r3,r4,r2
   29a9c:	003fe706 	br	29a3c <_gp+0xfffec63c>
   29aa0:	f800283a 	ret
   29aa4:	0005883a 	mov	r2,zero
   29aa8:	f800283a 	ret

00029aac <_realloc_r>:
   29aac:	defff604 	addi	sp,sp,-40
   29ab0:	dcc00315 	stw	r19,12(sp)
   29ab4:	dc400115 	stw	r17,4(sp)
   29ab8:	dfc00915 	stw	ra,36(sp)
   29abc:	df000815 	stw	fp,32(sp)
   29ac0:	ddc00715 	stw	r23,28(sp)
   29ac4:	dd800615 	stw	r22,24(sp)
   29ac8:	dd400515 	stw	r21,20(sp)
   29acc:	dd000415 	stw	r20,16(sp)
   29ad0:	dc800215 	stw	r18,8(sp)
   29ad4:	dc000015 	stw	r16,0(sp)
   29ad8:	2827883a 	mov	r19,r5
   29adc:	3023883a 	mov	r17,r6
   29ae0:	2800bf26 	beq	r5,zero,29de0 <_realloc_r+0x334>
   29ae4:	2025883a 	mov	r18,r4
   29ae8:	00310c00 	call	310c0 <__malloc_lock>
   29aec:	98ffff17 	ldw	r3,-4(r19)
   29af0:	01bfff04 	movi	r6,-4
   29af4:	890002c4 	addi	r4,r17,11
   29af8:	01c00584 	movi	r7,22
   29afc:	9d7ffe04 	addi	r21,r19,-8
   29b00:	19a0703a 	and	r16,r3,r6
   29b04:	39003f2e 	bgeu	r7,r4,29c04 <_realloc_r+0x158>
   29b08:	053ffe04 	movi	r20,-8
   29b0c:	2528703a 	and	r20,r4,r20
   29b10:	a00f883a 	mov	r7,r20
   29b14:	a0008216 	blt	r20,zero,29d20 <_realloc_r+0x274>
   29b18:	a4408136 	bltu	r20,r17,29d20 <_realloc_r+0x274>
   29b1c:	81c03c0e 	bge	r16,r7,29c10 <_realloc_r+0x164>
   29b20:	070000f4 	movhi	fp,3
   29b24:	e70f7c04 	addi	fp,fp,15856
   29b28:	e1000217 	ldw	r4,8(fp)
   29b2c:	ac05883a 	add	r2,r21,r16
   29b30:	2080bf26 	beq	r4,r2,29e30 <_realloc_r+0x384>
   29b34:	11000117 	ldw	r4,4(r2)
   29b38:	023fff84 	movi	r8,-2
   29b3c:	2210703a 	and	r8,r4,r8
   29b40:	1211883a 	add	r8,r2,r8
   29b44:	41400117 	ldw	r5,4(r8)
   29b48:	2940004c 	andi	r5,r5,1
   29b4c:	28004a1e 	bne	r5,zero,29c78 <_realloc_r+0x1cc>
   29b50:	017fff04 	movi	r5,-4
   29b54:	2148703a 	and	r4,r4,r5
   29b58:	2409883a 	add	r4,r4,r16
   29b5c:	21c0ad0e 	bge	r4,r7,29e14 <_realloc_r+0x368>
   29b60:	18c0004c 	andi	r3,r3,1
   29b64:	18007f1e 	bne	r3,zero,29d64 <_realloc_r+0x2b8>
   29b68:	9dfffe17 	ldw	r23,-8(r19)
   29b6c:	adefc83a 	sub	r23,r21,r23
   29b70:	bd800117 	ldw	r22,4(r23)
   29b74:	b14a703a 	and	r5,r22,r5
   29b78:	216d883a 	add	r22,r4,r5
   29b7c:	b1c04516 	blt	r22,r7,29c94 <_realloc_r+0x1e8>
   29b80:	10c00317 	ldw	r3,12(r2)
   29b84:	10800217 	ldw	r2,8(r2)
   29b88:	81bfff04 	addi	r6,r16,-4
   29b8c:	bc400204 	addi	r17,r23,8
   29b90:	10c00315 	stw	r3,12(r2)
   29b94:	18800215 	stw	r2,8(r3)
   29b98:	b9400217 	ldw	r5,8(r23)
   29b9c:	b8c00317 	ldw	r3,12(r23)
   29ba0:	00800904 	movi	r2,36
   29ba4:	28c00315 	stw	r3,12(r5)
   29ba8:	19400215 	stw	r5,8(r3)
   29bac:	1180ef36 	bltu	r2,r6,29f6c <_realloc_r+0x4c0>
   29bb0:	008004c4 	movi	r2,19
   29bb4:	1180da2e 	bgeu	r2,r6,29f20 <_realloc_r+0x474>
   29bb8:	98800017 	ldw	r2,0(r19)
   29bbc:	b8800215 	stw	r2,8(r23)
   29bc0:	98800117 	ldw	r2,4(r19)
   29bc4:	b8800315 	stw	r2,12(r23)
   29bc8:	008006c4 	movi	r2,27
   29bcc:	1180fc2e 	bgeu	r2,r6,29fc0 <_realloc_r+0x514>
   29bd0:	98800217 	ldw	r2,8(r19)
   29bd4:	b8800415 	stw	r2,16(r23)
   29bd8:	98800317 	ldw	r2,12(r19)
   29bdc:	b8800515 	stw	r2,20(r23)
   29be0:	00800904 	movi	r2,36
   29be4:	3080421e 	bne	r6,r2,29cf0 <_realloc_r+0x244>
   29be8:	98800417 	ldw	r2,16(r19)
   29bec:	9cc00604 	addi	r19,r19,24
   29bf0:	b8c00804 	addi	r3,r23,32
   29bf4:	b8800615 	stw	r2,24(r23)
   29bf8:	98bfff17 	ldw	r2,-4(r19)
   29bfc:	b8800715 	stw	r2,28(r23)
   29c00:	00003d06 	br	29cf8 <_realloc_r+0x24c>
   29c04:	01c00404 	movi	r7,16
   29c08:	3829883a 	mov	r20,r7
   29c0c:	003fc206 	br	29b18 <_gp+0xfffec718>
   29c10:	9823883a 	mov	r17,r19
   29c14:	850fc83a 	sub	r7,r16,r20
   29c18:	008003c4 	movi	r2,15
   29c1c:	18c0004c 	andi	r3,r3,1
   29c20:	11c04336 	bltu	r2,r7,29d30 <_realloc_r+0x284>
   29c24:	1c06b03a 	or	r3,r3,r16
   29c28:	a8c00115 	stw	r3,4(r21)
   29c2c:	ac21883a 	add	r16,r21,r16
   29c30:	80c00117 	ldw	r3,4(r16)
   29c34:	18c00054 	ori	r3,r3,1
   29c38:	80c00115 	stw	r3,4(r16)
   29c3c:	9009883a 	mov	r4,r18
   29c40:	00310e00 	call	310e0 <__malloc_unlock>
   29c44:	8805883a 	mov	r2,r17
   29c48:	dfc00917 	ldw	ra,36(sp)
   29c4c:	df000817 	ldw	fp,32(sp)
   29c50:	ddc00717 	ldw	r23,28(sp)
   29c54:	dd800617 	ldw	r22,24(sp)
   29c58:	dd400517 	ldw	r21,20(sp)
   29c5c:	dd000417 	ldw	r20,16(sp)
   29c60:	dcc00317 	ldw	r19,12(sp)
   29c64:	dc800217 	ldw	r18,8(sp)
   29c68:	dc400117 	ldw	r17,4(sp)
   29c6c:	dc000017 	ldw	r16,0(sp)
   29c70:	dec00a04 	addi	sp,sp,40
   29c74:	f800283a 	ret
   29c78:	18c0004c 	andi	r3,r3,1
   29c7c:	1800391e 	bne	r3,zero,29d64 <_realloc_r+0x2b8>
   29c80:	9dfffe17 	ldw	r23,-8(r19)
   29c84:	00bfff04 	movi	r2,-4
   29c88:	adefc83a 	sub	r23,r21,r23
   29c8c:	b9400117 	ldw	r5,4(r23)
   29c90:	288a703a 	and	r5,r5,r2
   29c94:	2c2d883a 	add	r22,r5,r16
   29c98:	b1c03216 	blt	r22,r7,29d64 <_realloc_r+0x2b8>
   29c9c:	b8800317 	ldw	r2,12(r23)
   29ca0:	b8c00217 	ldw	r3,8(r23)
   29ca4:	81bfff04 	addi	r6,r16,-4
   29ca8:	01000904 	movi	r4,36
   29cac:	18800315 	stw	r2,12(r3)
   29cb0:	10c00215 	stw	r3,8(r2)
   29cb4:	bc400204 	addi	r17,r23,8
   29cb8:	2180ac36 	bltu	r4,r6,29f6c <_realloc_r+0x4c0>
   29cbc:	008004c4 	movi	r2,19
   29cc0:	1180972e 	bgeu	r2,r6,29f20 <_realloc_r+0x474>
   29cc4:	98800017 	ldw	r2,0(r19)
   29cc8:	b8800215 	stw	r2,8(r23)
   29ccc:	98800117 	ldw	r2,4(r19)
   29cd0:	b8800315 	stw	r2,12(r23)
   29cd4:	008006c4 	movi	r2,27
   29cd8:	1180b92e 	bgeu	r2,r6,29fc0 <_realloc_r+0x514>
   29cdc:	98800217 	ldw	r2,8(r19)
   29ce0:	b8800415 	stw	r2,16(r23)
   29ce4:	98800317 	ldw	r2,12(r19)
   29ce8:	b8800515 	stw	r2,20(r23)
   29cec:	313fbe26 	beq	r6,r4,29be8 <_gp+0xfffec7e8>
   29cf0:	b8c00604 	addi	r3,r23,24
   29cf4:	9cc00404 	addi	r19,r19,16
   29cf8:	98800017 	ldw	r2,0(r19)
   29cfc:	b021883a 	mov	r16,r22
   29d00:	b82b883a 	mov	r21,r23
   29d04:	18800015 	stw	r2,0(r3)
   29d08:	98800117 	ldw	r2,4(r19)
   29d0c:	18800115 	stw	r2,4(r3)
   29d10:	98800217 	ldw	r2,8(r19)
   29d14:	18800215 	stw	r2,8(r3)
   29d18:	b8c00117 	ldw	r3,4(r23)
   29d1c:	003fbd06 	br	29c14 <_gp+0xfffec814>
   29d20:	00800304 	movi	r2,12
   29d24:	90800015 	stw	r2,0(r18)
   29d28:	0005883a 	mov	r2,zero
   29d2c:	003fc606 	br	29c48 <_gp+0xfffec848>
   29d30:	1d06b03a 	or	r3,r3,r20
   29d34:	ad0b883a 	add	r5,r21,r20
   29d38:	a8c00115 	stw	r3,4(r21)
   29d3c:	38800054 	ori	r2,r7,1
   29d40:	28800115 	stw	r2,4(r5)
   29d44:	29cf883a 	add	r7,r5,r7
   29d48:	38800117 	ldw	r2,4(r7)
   29d4c:	9009883a 	mov	r4,r18
   29d50:	29400204 	addi	r5,r5,8
   29d54:	10800054 	ori	r2,r2,1
   29d58:	38800115 	stw	r2,4(r7)
   29d5c:	00272800 	call	27280 <_free_r>
   29d60:	003fb606 	br	29c3c <_gp+0xfffec83c>
   29d64:	880b883a 	mov	r5,r17
   29d68:	9009883a 	mov	r4,r18
   29d6c:	0027e1c0 	call	27e1c <_malloc_r>
   29d70:	1023883a 	mov	r17,r2
   29d74:	1000aa26 	beq	r2,zero,2a020 <_realloc_r+0x574>
   29d78:	98ffff17 	ldw	r3,-4(r19)
   29d7c:	113ffe04 	addi	r4,r2,-8
   29d80:	00bfff84 	movi	r2,-2
   29d84:	1884703a 	and	r2,r3,r2
   29d88:	a885883a 	add	r2,r21,r2
   29d8c:	20808626 	beq	r4,r2,29fa8 <_realloc_r+0x4fc>
   29d90:	81bfff04 	addi	r6,r16,-4
   29d94:	00800904 	movi	r2,36
   29d98:	11807036 	bltu	r2,r6,29f5c <_realloc_r+0x4b0>
   29d9c:	00c004c4 	movi	r3,19
   29da0:	19805636 	bltu	r3,r6,29efc <_realloc_r+0x450>
   29da4:	8805883a 	mov	r2,r17
   29da8:	9807883a 	mov	r3,r19
   29dac:	19000017 	ldw	r4,0(r3)
   29db0:	11000015 	stw	r4,0(r2)
   29db4:	19000117 	ldw	r4,4(r3)
   29db8:	11000115 	stw	r4,4(r2)
   29dbc:	18c00217 	ldw	r3,8(r3)
   29dc0:	10c00215 	stw	r3,8(r2)
   29dc4:	980b883a 	mov	r5,r19
   29dc8:	9009883a 	mov	r4,r18
   29dcc:	00272800 	call	27280 <_free_r>
   29dd0:	9009883a 	mov	r4,r18
   29dd4:	00310e00 	call	310e0 <__malloc_unlock>
   29dd8:	8805883a 	mov	r2,r17
   29ddc:	003f9a06 	br	29c48 <_gp+0xfffec848>
   29de0:	300b883a 	mov	r5,r6
   29de4:	dfc00917 	ldw	ra,36(sp)
   29de8:	df000817 	ldw	fp,32(sp)
   29dec:	ddc00717 	ldw	r23,28(sp)
   29df0:	dd800617 	ldw	r22,24(sp)
   29df4:	dd400517 	ldw	r21,20(sp)
   29df8:	dd000417 	ldw	r20,16(sp)
   29dfc:	dcc00317 	ldw	r19,12(sp)
   29e00:	dc800217 	ldw	r18,8(sp)
   29e04:	dc400117 	ldw	r17,4(sp)
   29e08:	dc000017 	ldw	r16,0(sp)
   29e0c:	dec00a04 	addi	sp,sp,40
   29e10:	0027e1c1 	jmpi	27e1c <_malloc_r>
   29e14:	11400317 	ldw	r5,12(r2)
   29e18:	10800217 	ldw	r2,8(r2)
   29e1c:	9823883a 	mov	r17,r19
   29e20:	2021883a 	mov	r16,r4
   29e24:	11400315 	stw	r5,12(r2)
   29e28:	28800215 	stw	r2,8(r5)
   29e2c:	003f7906 	br	29c14 <_gp+0xfffec814>
   29e30:	21000117 	ldw	r4,4(r4)
   29e34:	00bfff04 	movi	r2,-4
   29e38:	a1800404 	addi	r6,r20,16
   29e3c:	2088703a 	and	r4,r4,r2
   29e40:	2409883a 	add	r4,r4,r16
   29e44:	2180380e 	bge	r4,r6,29f28 <_realloc_r+0x47c>
   29e48:	18c0004c 	andi	r3,r3,1
   29e4c:	183fc51e 	bne	r3,zero,29d64 <_gp+0xfffec964>
   29e50:	9dfffe17 	ldw	r23,-8(r19)
   29e54:	adefc83a 	sub	r23,r21,r23
   29e58:	b9400117 	ldw	r5,4(r23)
   29e5c:	288a703a 	and	r5,r5,r2
   29e60:	216d883a 	add	r22,r4,r5
   29e64:	b1bf8b16 	blt	r22,r6,29c94 <_gp+0xfffec894>
   29e68:	b8800317 	ldw	r2,12(r23)
   29e6c:	b8c00217 	ldw	r3,8(r23)
   29e70:	81bfff04 	addi	r6,r16,-4
   29e74:	01000904 	movi	r4,36
   29e78:	18800315 	stw	r2,12(r3)
   29e7c:	10c00215 	stw	r3,8(r2)
   29e80:	bc400204 	addi	r17,r23,8
   29e84:	21805a36 	bltu	r4,r6,29ff0 <_realloc_r+0x544>
   29e88:	008004c4 	movi	r2,19
   29e8c:	1180562e 	bgeu	r2,r6,29fe8 <_realloc_r+0x53c>
   29e90:	98800017 	ldw	r2,0(r19)
   29e94:	b8800215 	stw	r2,8(r23)
   29e98:	98800117 	ldw	r2,4(r19)
   29e9c:	b8800315 	stw	r2,12(r23)
   29ea0:	008006c4 	movi	r2,27
   29ea4:	11805636 	bltu	r2,r6,2a000 <_realloc_r+0x554>
   29ea8:	b8800404 	addi	r2,r23,16
   29eac:	9cc00204 	addi	r19,r19,8
   29eb0:	98c00017 	ldw	r3,0(r19)
   29eb4:	10c00015 	stw	r3,0(r2)
   29eb8:	98c00117 	ldw	r3,4(r19)
   29ebc:	10c00115 	stw	r3,4(r2)
   29ec0:	98c00217 	ldw	r3,8(r19)
   29ec4:	10c00215 	stw	r3,8(r2)
   29ec8:	bd07883a 	add	r3,r23,r20
   29ecc:	b505c83a 	sub	r2,r22,r20
   29ed0:	e0c00215 	stw	r3,8(fp)
   29ed4:	10800054 	ori	r2,r2,1
   29ed8:	18800115 	stw	r2,4(r3)
   29edc:	b8800117 	ldw	r2,4(r23)
   29ee0:	9009883a 	mov	r4,r18
   29ee4:	1080004c 	andi	r2,r2,1
   29ee8:	a0a8b03a 	or	r20,r20,r2
   29eec:	bd000115 	stw	r20,4(r23)
   29ef0:	00310e00 	call	310e0 <__malloc_unlock>
   29ef4:	8805883a 	mov	r2,r17
   29ef8:	003f5306 	br	29c48 <_gp+0xfffec848>
   29efc:	98c00017 	ldw	r3,0(r19)
   29f00:	88c00015 	stw	r3,0(r17)
   29f04:	98c00117 	ldw	r3,4(r19)
   29f08:	88c00115 	stw	r3,4(r17)
   29f0c:	00c006c4 	movi	r3,27
   29f10:	19801d36 	bltu	r3,r6,29f88 <_realloc_r+0x4dc>
   29f14:	88800204 	addi	r2,r17,8
   29f18:	98c00204 	addi	r3,r19,8
   29f1c:	003fa306 	br	29dac <_gp+0xfffec9ac>
   29f20:	8807883a 	mov	r3,r17
   29f24:	003f7406 	br	29cf8 <_gp+0xfffec8f8>
   29f28:	ad2b883a 	add	r21,r21,r20
   29f2c:	2505c83a 	sub	r2,r4,r20
   29f30:	e5400215 	stw	r21,8(fp)
   29f34:	10800054 	ori	r2,r2,1
   29f38:	a8800115 	stw	r2,4(r21)
   29f3c:	98bfff17 	ldw	r2,-4(r19)
   29f40:	9009883a 	mov	r4,r18
   29f44:	1080004c 	andi	r2,r2,1
   29f48:	a0a8b03a 	or	r20,r20,r2
   29f4c:	9d3fff15 	stw	r20,-4(r19)
   29f50:	00310e00 	call	310e0 <__malloc_unlock>
   29f54:	9805883a 	mov	r2,r19
   29f58:	003f3b06 	br	29c48 <_gp+0xfffec848>
   29f5c:	8809883a 	mov	r4,r17
   29f60:	980b883a 	mov	r5,r19
   29f64:	00287e40 	call	287e4 <memmove>
   29f68:	003f9606 	br	29dc4 <_gp+0xfffec9c4>
   29f6c:	8809883a 	mov	r4,r17
   29f70:	980b883a 	mov	r5,r19
   29f74:	00287e40 	call	287e4 <memmove>
   29f78:	b8c00117 	ldw	r3,4(r23)
   29f7c:	b021883a 	mov	r16,r22
   29f80:	b82b883a 	mov	r21,r23
   29f84:	003f2306 	br	29c14 <_gp+0xfffec814>
   29f88:	98c00217 	ldw	r3,8(r19)
   29f8c:	88c00215 	stw	r3,8(r17)
   29f90:	98c00317 	ldw	r3,12(r19)
   29f94:	88c00315 	stw	r3,12(r17)
   29f98:	30800c26 	beq	r6,r2,29fcc <_realloc_r+0x520>
   29f9c:	88800404 	addi	r2,r17,16
   29fa0:	98c00404 	addi	r3,r19,16
   29fa4:	003f8106 	br	29dac <_gp+0xfffec9ac>
   29fa8:	893fff17 	ldw	r4,-4(r17)
   29fac:	00bfff04 	movi	r2,-4
   29fb0:	9823883a 	mov	r17,r19
   29fb4:	2084703a 	and	r2,r4,r2
   29fb8:	80a1883a 	add	r16,r16,r2
   29fbc:	003f1506 	br	29c14 <_gp+0xfffec814>
   29fc0:	b8c00404 	addi	r3,r23,16
   29fc4:	9cc00204 	addi	r19,r19,8
   29fc8:	003f4b06 	br	29cf8 <_gp+0xfffec8f8>
   29fcc:	99000417 	ldw	r4,16(r19)
   29fd0:	88800604 	addi	r2,r17,24
   29fd4:	98c00604 	addi	r3,r19,24
   29fd8:	89000415 	stw	r4,16(r17)
   29fdc:	99000517 	ldw	r4,20(r19)
   29fe0:	89000515 	stw	r4,20(r17)
   29fe4:	003f7106 	br	29dac <_gp+0xfffec9ac>
   29fe8:	8805883a 	mov	r2,r17
   29fec:	003fb006 	br	29eb0 <_gp+0xfffecab0>
   29ff0:	8809883a 	mov	r4,r17
   29ff4:	980b883a 	mov	r5,r19
   29ff8:	00287e40 	call	287e4 <memmove>
   29ffc:	003fb206 	br	29ec8 <_gp+0xfffecac8>
   2a000:	98800217 	ldw	r2,8(r19)
   2a004:	b8800415 	stw	r2,16(r23)
   2a008:	98800317 	ldw	r2,12(r19)
   2a00c:	b8800515 	stw	r2,20(r23)
   2a010:	31000726 	beq	r6,r4,2a030 <_realloc_r+0x584>
   2a014:	b8800604 	addi	r2,r23,24
   2a018:	9cc00404 	addi	r19,r19,16
   2a01c:	003fa406 	br	29eb0 <_gp+0xfffecab0>
   2a020:	9009883a 	mov	r4,r18
   2a024:	00310e00 	call	310e0 <__malloc_unlock>
   2a028:	0005883a 	mov	r2,zero
   2a02c:	003f0606 	br	29c48 <_gp+0xfffec848>
   2a030:	98c00417 	ldw	r3,16(r19)
   2a034:	9cc00604 	addi	r19,r19,24
   2a038:	b8800804 	addi	r2,r23,32
   2a03c:	b8c00615 	stw	r3,24(r23)
   2a040:	98ffff17 	ldw	r3,-4(r19)
   2a044:	b8c00715 	stw	r3,28(r23)
   2a048:	003f9906 	br	29eb0 <_gp+0xfffecab0>

0002a04c <__fpclassifyd>:
   2a04c:	00a00034 	movhi	r2,32768
   2a050:	10bfffc4 	addi	r2,r2,-1
   2a054:	2884703a 	and	r2,r5,r2
   2a058:	10000726 	beq	r2,zero,2a078 <__fpclassifyd+0x2c>
   2a05c:	00fffc34 	movhi	r3,65520
   2a060:	019ff834 	movhi	r6,32736
   2a064:	28c7883a 	add	r3,r5,r3
   2a068:	31bfffc4 	addi	r6,r6,-1
   2a06c:	30c00536 	bltu	r6,r3,2a084 <__fpclassifyd+0x38>
   2a070:	00800104 	movi	r2,4
   2a074:	f800283a 	ret
   2a078:	2000021e 	bne	r4,zero,2a084 <__fpclassifyd+0x38>
   2a07c:	00800084 	movi	r2,2
   2a080:	f800283a 	ret
   2a084:	00dffc34 	movhi	r3,32752
   2a088:	019ff834 	movhi	r6,32736
   2a08c:	28cb883a 	add	r5,r5,r3
   2a090:	31bfffc4 	addi	r6,r6,-1
   2a094:	317ff62e 	bgeu	r6,r5,2a070 <_gp+0xfffecc70>
   2a098:	01400434 	movhi	r5,16
   2a09c:	297fffc4 	addi	r5,r5,-1
   2a0a0:	28800236 	bltu	r5,r2,2a0ac <__fpclassifyd+0x60>
   2a0a4:	008000c4 	movi	r2,3
   2a0a8:	f800283a 	ret
   2a0ac:	10c00226 	beq	r2,r3,2a0b8 <__fpclassifyd+0x6c>
   2a0b0:	0005883a 	mov	r2,zero
   2a0b4:	f800283a 	ret
   2a0b8:	2005003a 	cmpeq	r2,r4,zero
   2a0bc:	f800283a 	ret

0002a0c0 <_sbrk_r>:
   2a0c0:	defffd04 	addi	sp,sp,-12
   2a0c4:	dc000015 	stw	r16,0(sp)
   2a0c8:	040000f4 	movhi	r16,3
   2a0cc:	dc400115 	stw	r17,4(sp)
   2a0d0:	841bd104 	addi	r16,r16,28484
   2a0d4:	2023883a 	mov	r17,r4
   2a0d8:	2809883a 	mov	r4,r5
   2a0dc:	dfc00215 	stw	ra,8(sp)
   2a0e0:	80000015 	stw	zero,0(r16)
   2a0e4:	00312d40 	call	312d4 <sbrk>
   2a0e8:	00ffffc4 	movi	r3,-1
   2a0ec:	10c00526 	beq	r2,r3,2a104 <_sbrk_r+0x44>
   2a0f0:	dfc00217 	ldw	ra,8(sp)
   2a0f4:	dc400117 	ldw	r17,4(sp)
   2a0f8:	dc000017 	ldw	r16,0(sp)
   2a0fc:	dec00304 	addi	sp,sp,12
   2a100:	f800283a 	ret
   2a104:	80c00017 	ldw	r3,0(r16)
   2a108:	183ff926 	beq	r3,zero,2a0f0 <_gp+0xfffeccf0>
   2a10c:	88c00015 	stw	r3,0(r17)
   2a110:	003ff706 	br	2a0f0 <_gp+0xfffeccf0>

0002a114 <__sread>:
   2a114:	defffe04 	addi	sp,sp,-8
   2a118:	dc000015 	stw	r16,0(sp)
   2a11c:	2821883a 	mov	r16,r5
   2a120:	2940038f 	ldh	r5,14(r5)
   2a124:	dfc00115 	stw	ra,4(sp)
   2a128:	002d1680 	call	2d168 <_read_r>
   2a12c:	10000716 	blt	r2,zero,2a14c <__sread+0x38>
   2a130:	80c01417 	ldw	r3,80(r16)
   2a134:	1887883a 	add	r3,r3,r2
   2a138:	80c01415 	stw	r3,80(r16)
   2a13c:	dfc00117 	ldw	ra,4(sp)
   2a140:	dc000017 	ldw	r16,0(sp)
   2a144:	dec00204 	addi	sp,sp,8
   2a148:	f800283a 	ret
   2a14c:	80c0030b 	ldhu	r3,12(r16)
   2a150:	18fbffcc 	andi	r3,r3,61439
   2a154:	80c0030d 	sth	r3,12(r16)
   2a158:	dfc00117 	ldw	ra,4(sp)
   2a15c:	dc000017 	ldw	r16,0(sp)
   2a160:	dec00204 	addi	sp,sp,8
   2a164:	f800283a 	ret

0002a168 <__seofread>:
   2a168:	0005883a 	mov	r2,zero
   2a16c:	f800283a 	ret

0002a170 <__swrite>:
   2a170:	2880030b 	ldhu	r2,12(r5)
   2a174:	defffb04 	addi	sp,sp,-20
   2a178:	dcc00315 	stw	r19,12(sp)
   2a17c:	dc800215 	stw	r18,8(sp)
   2a180:	dc400115 	stw	r17,4(sp)
   2a184:	dc000015 	stw	r16,0(sp)
   2a188:	dfc00415 	stw	ra,16(sp)
   2a18c:	10c0400c 	andi	r3,r2,256
   2a190:	2821883a 	mov	r16,r5
   2a194:	2027883a 	mov	r19,r4
   2a198:	3025883a 	mov	r18,r6
   2a19c:	3823883a 	mov	r17,r7
   2a1a0:	18000526 	beq	r3,zero,2a1b8 <__swrite+0x48>
   2a1a4:	2940038f 	ldh	r5,14(r5)
   2a1a8:	000d883a 	mov	r6,zero
   2a1ac:	01c00084 	movi	r7,2
   2a1b0:	002d10c0 	call	2d10c <_lseek_r>
   2a1b4:	8080030b 	ldhu	r2,12(r16)
   2a1b8:	8140038f 	ldh	r5,14(r16)
   2a1bc:	10bbffcc 	andi	r2,r2,61439
   2a1c0:	9809883a 	mov	r4,r19
   2a1c4:	900d883a 	mov	r6,r18
   2a1c8:	880f883a 	mov	r7,r17
   2a1cc:	8080030d 	sth	r2,12(r16)
   2a1d0:	dfc00417 	ldw	ra,16(sp)
   2a1d4:	dcc00317 	ldw	r19,12(sp)
   2a1d8:	dc800217 	ldw	r18,8(sp)
   2a1dc:	dc400117 	ldw	r17,4(sp)
   2a1e0:	dc000017 	ldw	r16,0(sp)
   2a1e4:	dec00504 	addi	sp,sp,20
   2a1e8:	002cbe81 	jmpi	2cbe8 <_write_r>

0002a1ec <__sseek>:
   2a1ec:	defffe04 	addi	sp,sp,-8
   2a1f0:	dc000015 	stw	r16,0(sp)
   2a1f4:	2821883a 	mov	r16,r5
   2a1f8:	2940038f 	ldh	r5,14(r5)
   2a1fc:	dfc00115 	stw	ra,4(sp)
   2a200:	002d10c0 	call	2d10c <_lseek_r>
   2a204:	00ffffc4 	movi	r3,-1
   2a208:	10c00826 	beq	r2,r3,2a22c <__sseek+0x40>
   2a20c:	80c0030b 	ldhu	r3,12(r16)
   2a210:	80801415 	stw	r2,80(r16)
   2a214:	18c40014 	ori	r3,r3,4096
   2a218:	80c0030d 	sth	r3,12(r16)
   2a21c:	dfc00117 	ldw	ra,4(sp)
   2a220:	dc000017 	ldw	r16,0(sp)
   2a224:	dec00204 	addi	sp,sp,8
   2a228:	f800283a 	ret
   2a22c:	80c0030b 	ldhu	r3,12(r16)
   2a230:	18fbffcc 	andi	r3,r3,61439
   2a234:	80c0030d 	sth	r3,12(r16)
   2a238:	dfc00117 	ldw	ra,4(sp)
   2a23c:	dc000017 	ldw	r16,0(sp)
   2a240:	dec00204 	addi	sp,sp,8
   2a244:	f800283a 	ret

0002a248 <__sclose>:
   2a248:	2940038f 	ldh	r5,14(r5)
   2a24c:	002cc441 	jmpi	2cc44 <_close_r>

0002a250 <strcmp>:
   2a250:	2144b03a 	or	r2,r4,r5
   2a254:	108000cc 	andi	r2,r2,3
   2a258:	1000171e 	bne	r2,zero,2a2b8 <strcmp+0x68>
   2a25c:	20800017 	ldw	r2,0(r4)
   2a260:	28c00017 	ldw	r3,0(r5)
   2a264:	10c0141e 	bne	r2,r3,2a2b8 <strcmp+0x68>
   2a268:	027fbff4 	movhi	r9,65279
   2a26c:	4a7fbfc4 	addi	r9,r9,-257
   2a270:	0086303a 	nor	r3,zero,r2
   2a274:	02202074 	movhi	r8,32897
   2a278:	1245883a 	add	r2,r2,r9
   2a27c:	42202004 	addi	r8,r8,-32640
   2a280:	10c4703a 	and	r2,r2,r3
   2a284:	1204703a 	and	r2,r2,r8
   2a288:	10000226 	beq	r2,zero,2a294 <strcmp+0x44>
   2a28c:	00001706 	br	2a2ec <strcmp+0x9c>
   2a290:	1000161e 	bne	r2,zero,2a2ec <strcmp+0x9c>
   2a294:	21000104 	addi	r4,r4,4
   2a298:	20c00017 	ldw	r3,0(r4)
   2a29c:	29400104 	addi	r5,r5,4
   2a2a0:	29800017 	ldw	r6,0(r5)
   2a2a4:	1a4f883a 	add	r7,r3,r9
   2a2a8:	00c4303a 	nor	r2,zero,r3
   2a2ac:	3884703a 	and	r2,r7,r2
   2a2b0:	1204703a 	and	r2,r2,r8
   2a2b4:	19bff626 	beq	r3,r6,2a290 <_gp+0xfffece90>
   2a2b8:	20800007 	ldb	r2,0(r4)
   2a2bc:	1000051e 	bne	r2,zero,2a2d4 <strcmp+0x84>
   2a2c0:	00000606 	br	2a2dc <strcmp+0x8c>
   2a2c4:	21000044 	addi	r4,r4,1
   2a2c8:	20800007 	ldb	r2,0(r4)
   2a2cc:	29400044 	addi	r5,r5,1
   2a2d0:	10000226 	beq	r2,zero,2a2dc <strcmp+0x8c>
   2a2d4:	28c00007 	ldb	r3,0(r5)
   2a2d8:	10fffa26 	beq	r2,r3,2a2c4 <_gp+0xfffecec4>
   2a2dc:	20800003 	ldbu	r2,0(r4)
   2a2e0:	28c00003 	ldbu	r3,0(r5)
   2a2e4:	10c5c83a 	sub	r2,r2,r3
   2a2e8:	f800283a 	ret
   2a2ec:	0005883a 	mov	r2,zero
   2a2f0:	f800283a 	ret

0002a2f4 <__ssprint_r>:
   2a2f4:	30800217 	ldw	r2,8(r6)
   2a2f8:	defff604 	addi	sp,sp,-40
   2a2fc:	ddc00715 	stw	r23,28(sp)
   2a300:	dcc00315 	stw	r19,12(sp)
   2a304:	dfc00915 	stw	ra,36(sp)
   2a308:	df000815 	stw	fp,32(sp)
   2a30c:	dd800615 	stw	r22,24(sp)
   2a310:	dd400515 	stw	r21,20(sp)
   2a314:	dd000415 	stw	r20,16(sp)
   2a318:	dc800215 	stw	r18,8(sp)
   2a31c:	dc400115 	stw	r17,4(sp)
   2a320:	dc000015 	stw	r16,0(sp)
   2a324:	3027883a 	mov	r19,r6
   2a328:	35c00017 	ldw	r23,0(r6)
   2a32c:	10005526 	beq	r2,zero,2a484 <__ssprint_r+0x190>
   2a330:	2029883a 	mov	r20,r4
   2a334:	29000017 	ldw	r4,0(r5)
   2a338:	2821883a 	mov	r16,r5
   2a33c:	0039883a 	mov	fp,zero
   2a340:	0023883a 	mov	r17,zero
   2a344:	88003926 	beq	r17,zero,2a42c <__ssprint_r+0x138>
   2a348:	84800217 	ldw	r18,8(r16)
   2a34c:	902d883a 	mov	r22,r18
   2a350:	8c803a36 	bltu	r17,r18,2a43c <__ssprint_r+0x148>
   2a354:	80c0030b 	ldhu	r3,12(r16)
   2a358:	1881200c 	andi	r2,r3,1152
   2a35c:	10002626 	beq	r2,zero,2a3f8 <__ssprint_r+0x104>
   2a360:	80800517 	ldw	r2,20(r16)
   2a364:	81400417 	ldw	r5,16(r16)
   2a368:	89c00044 	addi	r7,r17,1
   2a36c:	108d883a 	add	r6,r2,r2
   2a370:	3085883a 	add	r2,r6,r2
   2a374:	100cd7fa 	srli	r6,r2,31
   2a378:	216dc83a 	sub	r22,r4,r5
   2a37c:	3d89883a 	add	r4,r7,r22
   2a380:	3085883a 	add	r2,r6,r2
   2a384:	1025d07a 	srai	r18,r2,1
   2a388:	900d883a 	mov	r6,r18
   2a38c:	9100022e 	bgeu	r18,r4,2a398 <__ssprint_r+0xa4>
   2a390:	2025883a 	mov	r18,r4
   2a394:	200d883a 	mov	r6,r4
   2a398:	18c1000c 	andi	r3,r3,1024
   2a39c:	a009883a 	mov	r4,r20
   2a3a0:	18002926 	beq	r3,zero,2a448 <__ssprint_r+0x154>
   2a3a4:	300b883a 	mov	r5,r6
   2a3a8:	0027e1c0 	call	27e1c <_malloc_r>
   2a3ac:	102b883a 	mov	r21,r2
   2a3b0:	10002b26 	beq	r2,zero,2a460 <__ssprint_r+0x16c>
   2a3b4:	81400417 	ldw	r5,16(r16)
   2a3b8:	1009883a 	mov	r4,r2
   2a3bc:	b00d883a 	mov	r6,r22
   2a3c0:	00286ac0 	call	286ac <memcpy>
   2a3c4:	8080030b 	ldhu	r2,12(r16)
   2a3c8:	00fedfc4 	movi	r3,-1153
   2a3cc:	10c4703a 	and	r2,r2,r3
   2a3d0:	10802014 	ori	r2,r2,128
   2a3d4:	8080030d 	sth	r2,12(r16)
   2a3d8:	ad89883a 	add	r4,r21,r22
   2a3dc:	95adc83a 	sub	r22,r18,r22
   2a3e0:	84800515 	stw	r18,20(r16)
   2a3e4:	85800215 	stw	r22,8(r16)
   2a3e8:	85400415 	stw	r21,16(r16)
   2a3ec:	81000015 	stw	r4,0(r16)
   2a3f0:	8825883a 	mov	r18,r17
   2a3f4:	882d883a 	mov	r22,r17
   2a3f8:	e00b883a 	mov	r5,fp
   2a3fc:	b00d883a 	mov	r6,r22
   2a400:	00287e40 	call	287e4 <memmove>
   2a404:	80c00217 	ldw	r3,8(r16)
   2a408:	81000017 	ldw	r4,0(r16)
   2a40c:	98800217 	ldw	r2,8(r19)
   2a410:	1ca5c83a 	sub	r18,r3,r18
   2a414:	2589883a 	add	r4,r4,r22
   2a418:	84800215 	stw	r18,8(r16)
   2a41c:	81000015 	stw	r4,0(r16)
   2a420:	1463c83a 	sub	r17,r2,r17
   2a424:	9c400215 	stw	r17,8(r19)
   2a428:	88001626 	beq	r17,zero,2a484 <__ssprint_r+0x190>
   2a42c:	bf000017 	ldw	fp,0(r23)
   2a430:	bc400117 	ldw	r17,4(r23)
   2a434:	bdc00204 	addi	r23,r23,8
   2a438:	003fc206 	br	2a344 <_gp+0xfffecf44>
   2a43c:	8825883a 	mov	r18,r17
   2a440:	882d883a 	mov	r22,r17
   2a444:	003fec06 	br	2a3f8 <_gp+0xfffecff8>
   2a448:	0029aac0 	call	29aac <_realloc_r>
   2a44c:	102b883a 	mov	r21,r2
   2a450:	103fe11e 	bne	r2,zero,2a3d8 <_gp+0xfffecfd8>
   2a454:	81400417 	ldw	r5,16(r16)
   2a458:	a009883a 	mov	r4,r20
   2a45c:	00272800 	call	27280 <_free_r>
   2a460:	80c0030b 	ldhu	r3,12(r16)
   2a464:	00800304 	movi	r2,12
   2a468:	a0800015 	stw	r2,0(r20)
   2a46c:	18c01014 	ori	r3,r3,64
   2a470:	80c0030d 	sth	r3,12(r16)
   2a474:	00bfffc4 	movi	r2,-1
   2a478:	98000215 	stw	zero,8(r19)
   2a47c:	98000115 	stw	zero,4(r19)
   2a480:	00000206 	br	2a48c <__ssprint_r+0x198>
   2a484:	98000115 	stw	zero,4(r19)
   2a488:	0005883a 	mov	r2,zero
   2a48c:	dfc00917 	ldw	ra,36(sp)
   2a490:	df000817 	ldw	fp,32(sp)
   2a494:	ddc00717 	ldw	r23,28(sp)
   2a498:	dd800617 	ldw	r22,24(sp)
   2a49c:	dd400517 	ldw	r21,20(sp)
   2a4a0:	dd000417 	ldw	r20,16(sp)
   2a4a4:	dcc00317 	ldw	r19,12(sp)
   2a4a8:	dc800217 	ldw	r18,8(sp)
   2a4ac:	dc400117 	ldw	r17,4(sp)
   2a4b0:	dc000017 	ldw	r16,0(sp)
   2a4b4:	dec00a04 	addi	sp,sp,40
   2a4b8:	f800283a 	ret

0002a4bc <___svfiprintf_internal_r>:
   2a4bc:	2880030b 	ldhu	r2,12(r5)
   2a4c0:	deffc804 	addi	sp,sp,-224
   2a4c4:	dd403315 	stw	r21,204(sp)
   2a4c8:	dfc03715 	stw	ra,220(sp)
   2a4cc:	df003615 	stw	fp,216(sp)
   2a4d0:	ddc03515 	stw	r23,212(sp)
   2a4d4:	dd803415 	stw	r22,208(sp)
   2a4d8:	dd003215 	stw	r20,200(sp)
   2a4dc:	dcc03115 	stw	r19,196(sp)
   2a4e0:	dc803015 	stw	r18,192(sp)
   2a4e4:	dc402f15 	stw	r17,188(sp)
   2a4e8:	dc002e15 	stw	r16,184(sp)
   2a4ec:	d9402215 	stw	r5,136(sp)
   2a4f0:	d9002915 	stw	r4,164(sp)
   2a4f4:	1080200c 	andi	r2,r2,128
   2a4f8:	d9c02415 	stw	r7,144(sp)
   2a4fc:	302b883a 	mov	r21,r6
   2a500:	10000226 	beq	r2,zero,2a50c <___svfiprintf_internal_r+0x50>
   2a504:	28800417 	ldw	r2,16(r5)
   2a508:	10042526 	beq	r2,zero,2b5a0 <___svfiprintf_internal_r+0x10e4>
   2a50c:	d8801a04 	addi	r2,sp,104
   2a510:	d8c019c4 	addi	r3,sp,103
   2a514:	dc402917 	ldw	r17,164(sp)
   2a518:	04c000f4 	movhi	r19,3
   2a51c:	10c9c83a 	sub	r4,r2,r3
   2a520:	9ccdfa04 	addi	r19,r19,14312
   2a524:	d8801e15 	stw	r2,120(sp)
   2a528:	d8c01f15 	stw	r3,124(sp)
   2a52c:	dec01a15 	stw	sp,104(sp)
   2a530:	d8001c15 	stw	zero,112(sp)
   2a534:	d8001b15 	stw	zero,108(sp)
   2a538:	d8002a15 	stw	zero,168(sp)
   2a53c:	d8002615 	stw	zero,152(sp)
   2a540:	d811883a 	mov	r8,sp
   2a544:	d9002c15 	stw	r4,176(sp)
   2a548:	a8800007 	ldb	r2,0(r21)
   2a54c:	1002af26 	beq	r2,zero,2b00c <___svfiprintf_internal_r+0xb50>
   2a550:	01000944 	movi	r4,37
   2a554:	1102ad26 	beq	r2,r4,2b00c <___svfiprintf_internal_r+0xb50>
   2a558:	a805883a 	mov	r2,r21
   2a55c:	00000106 	br	2a564 <___svfiprintf_internal_r+0xa8>
   2a560:	19000326 	beq	r3,r4,2a570 <___svfiprintf_internal_r+0xb4>
   2a564:	10800044 	addi	r2,r2,1
   2a568:	10c00007 	ldb	r3,0(r2)
   2a56c:	183ffc1e 	bne	r3,zero,2a560 <_gp+0xfffed160>
   2a570:	1561c83a 	sub	r16,r2,r21
   2a574:	1025883a 	mov	r18,r2
   2a578:	80000e26 	beq	r16,zero,2a5b4 <___svfiprintf_internal_r+0xf8>
   2a57c:	d8c01c17 	ldw	r3,112(sp)
   2a580:	d8801b17 	ldw	r2,108(sp)
   2a584:	45400015 	stw	r21,0(r8)
   2a588:	1c07883a 	add	r3,r3,r16
   2a58c:	10800044 	addi	r2,r2,1
   2a590:	d8c01c15 	stw	r3,112(sp)
   2a594:	44000115 	stw	r16,4(r8)
   2a598:	d8801b15 	stw	r2,108(sp)
   2a59c:	00c001c4 	movi	r3,7
   2a5a0:	18832616 	blt	r3,r2,2b23c <___svfiprintf_internal_r+0xd80>
   2a5a4:	42000204 	addi	r8,r8,8
   2a5a8:	d9402617 	ldw	r5,152(sp)
   2a5ac:	2c0b883a 	add	r5,r5,r16
   2a5b0:	d9402615 	stw	r5,152(sp)
   2a5b4:	90800007 	ldb	r2,0(r18)
   2a5b8:	1002b226 	beq	r2,zero,2b084 <___svfiprintf_internal_r+0xbc8>
   2a5bc:	00bfffc4 	movi	r2,-1
   2a5c0:	95400044 	addi	r21,r18,1
   2a5c4:	91800047 	ldb	r6,1(r18)
   2a5c8:	d8001d85 	stb	zero,118(sp)
   2a5cc:	002d883a 	mov	r22,zero
   2a5d0:	d8802015 	stw	r2,128(sp)
   2a5d4:	d8002315 	stw	zero,140(sp)
   2a5d8:	0021883a 	mov	r16,zero
   2a5dc:	04801604 	movi	r18,88
   2a5e0:	05000244 	movi	r20,9
   2a5e4:	402f883a 	mov	r23,r8
   2a5e8:	ad400044 	addi	r21,r21,1
   2a5ec:	30bff804 	addi	r2,r6,-32
   2a5f0:	9081ae36 	bltu	r18,r2,2acac <___svfiprintf_internal_r+0x7f0>
   2a5f4:	100490ba 	slli	r2,r2,2
   2a5f8:	00c000f4 	movhi	r3,3
   2a5fc:	18e98304 	addi	r3,r3,-23028
   2a600:	10c5883a 	add	r2,r2,r3
   2a604:	10800017 	ldw	r2,0(r2)
   2a608:	1000683a 	jmp	r2
   2a60c:	0002a7bc 	xorhi	zero,zero,2718
   2a610:	0002acac 	andhi	zero,zero,2738
   2a614:	0002acac 	andhi	zero,zero,2738
   2a618:	0002a7b0 	cmpltui	zero,zero,2718
   2a61c:	0002acac 	andhi	zero,zero,2738
   2a620:	0002acac 	andhi	zero,zero,2738
   2a624:	0002acac 	andhi	zero,zero,2738
   2a628:	0002acac 	andhi	zero,zero,2738
   2a62c:	0002acac 	andhi	zero,zero,2738
   2a630:	0002acac 	andhi	zero,zero,2738
   2a634:	0002a770 	cmpltui	zero,zero,2717
   2a638:	0002a7a4 	muli	zero,zero,2718
   2a63c:	0002acac 	andhi	zero,zero,2738
   2a640:	0002a798 	cmpnei	zero,zero,2718
   2a644:	0002ace0 	cmpeqi	zero,zero,2739
   2a648:	0002acac 	andhi	zero,zero,2738
   2a64c:	0002acd4 	movui	zero,2739
   2a650:	0002ac68 	cmpgeui	zero,zero,2737
   2a654:	0002ac68 	cmpgeui	zero,zero,2737
   2a658:	0002ac68 	cmpgeui	zero,zero,2737
   2a65c:	0002ac68 	cmpgeui	zero,zero,2737
   2a660:	0002ac68 	cmpgeui	zero,zero,2737
   2a664:	0002ac68 	cmpgeui	zero,zero,2737
   2a668:	0002ac68 	cmpgeui	zero,zero,2737
   2a66c:	0002ac68 	cmpgeui	zero,zero,2737
   2a670:	0002ac68 	cmpgeui	zero,zero,2737
   2a674:	0002acac 	andhi	zero,zero,2738
   2a678:	0002acac 	andhi	zero,zero,2738
   2a67c:	0002acac 	andhi	zero,zero,2738
   2a680:	0002acac 	andhi	zero,zero,2738
   2a684:	0002acac 	andhi	zero,zero,2738
   2a688:	0002acac 	andhi	zero,zero,2738
   2a68c:	0002acac 	andhi	zero,zero,2738
   2a690:	0002acac 	andhi	zero,zero,2738
   2a694:	0002acac 	andhi	zero,zero,2738
   2a698:	0002acac 	andhi	zero,zero,2738
   2a69c:	0002abfc 	xorhi	zero,zero,2735
   2a6a0:	0002acac 	andhi	zero,zero,2738
   2a6a4:	0002acac 	andhi	zero,zero,2738
   2a6a8:	0002acac 	andhi	zero,zero,2738
   2a6ac:	0002acac 	andhi	zero,zero,2738
   2a6b0:	0002acac 	andhi	zero,zero,2738
   2a6b4:	0002acac 	andhi	zero,zero,2738
   2a6b8:	0002acac 	andhi	zero,zero,2738
   2a6bc:	0002acac 	andhi	zero,zero,2738
   2a6c0:	0002acac 	andhi	zero,zero,2738
   2a6c4:	0002acac 	andhi	zero,zero,2738
   2a6c8:	0002ad6c 	andhi	zero,zero,2741
   2a6cc:	0002acac 	andhi	zero,zero,2738
   2a6d0:	0002acac 	andhi	zero,zero,2738
   2a6d4:	0002acac 	andhi	zero,zero,2738
   2a6d8:	0002acac 	andhi	zero,zero,2738
   2a6dc:	0002acac 	andhi	zero,zero,2738
   2a6e0:	0002ad28 	cmpgeui	zero,zero,2740
   2a6e4:	0002acac 	andhi	zero,zero,2738
   2a6e8:	0002acac 	andhi	zero,zero,2738
   2a6ec:	0002abb4 	movhi	zero,2734
   2a6f0:	0002acac 	andhi	zero,zero,2738
   2a6f4:	0002acac 	andhi	zero,zero,2738
   2a6f8:	0002acac 	andhi	zero,zero,2738
   2a6fc:	0002acac 	andhi	zero,zero,2738
   2a700:	0002acac 	andhi	zero,zero,2738
   2a704:	0002acac 	andhi	zero,zero,2738
   2a708:	0002acac 	andhi	zero,zero,2738
   2a70c:	0002acac 	andhi	zero,zero,2738
   2a710:	0002acac 	andhi	zero,zero,2738
   2a714:	0002acac 	andhi	zero,zero,2738
   2a718:	0002aa7c 	xorhi	zero,zero,2729
   2a71c:	0002aa20 	cmpeqi	zero,zero,2728
   2a720:	0002acac 	andhi	zero,zero,2738
   2a724:	0002acac 	andhi	zero,zero,2738
   2a728:	0002acac 	andhi	zero,zero,2738
   2a72c:	0002aa14 	movui	zero,2728
   2a730:	0002aa20 	cmpeqi	zero,zero,2728
   2a734:	0002acac 	andhi	zero,zero,2738
   2a738:	0002acac 	andhi	zero,zero,2738
   2a73c:	0002aa64 	muli	zero,zero,2729
   2a740:	0002acac 	andhi	zero,zero,2738
   2a744:	0002a9e0 	cmpeqi	zero,zero,2727
   2a748:	0002a9b0 	cmpltui	zero,zero,2726
   2a74c:	0002a968 	cmpgeui	zero,zero,2725
   2a750:	0002a95c 	xori	zero,zero,2725
   2a754:	0002acac 	andhi	zero,zero,2738
   2a758:	0002a8f4 	movhi	zero,2723
   2a75c:	0002acac 	andhi	zero,zero,2738
   2a760:	0002a824 	muli	zero,zero,2720
   2a764:	0002acac 	andhi	zero,zero,2738
   2a768:	0002acac 	andhi	zero,zero,2738
   2a76c:	0002a7d8 	cmpnei	zero,zero,2719
   2a770:	d9402417 	ldw	r5,144(sp)
   2a774:	d8c02417 	ldw	r3,144(sp)
   2a778:	29400017 	ldw	r5,0(r5)
   2a77c:	18800104 	addi	r2,r3,4
   2a780:	d9402315 	stw	r5,140(sp)
   2a784:	2802f70e 	bge	r5,zero,2b364 <___svfiprintf_internal_r+0xea8>
   2a788:	d9002317 	ldw	r4,140(sp)
   2a78c:	d8802415 	stw	r2,144(sp)
   2a790:	0109c83a 	sub	r4,zero,r4
   2a794:	d9002315 	stw	r4,140(sp)
   2a798:	84000114 	ori	r16,r16,4
   2a79c:	a9800007 	ldb	r6,0(r21)
   2a7a0:	003f9106 	br	2a5e8 <_gp+0xfffed1e8>
   2a7a4:	05800ac4 	movi	r22,43
   2a7a8:	a9800007 	ldb	r6,0(r21)
   2a7ac:	003f8e06 	br	2a5e8 <_gp+0xfffed1e8>
   2a7b0:	84000054 	ori	r16,r16,1
   2a7b4:	a9800007 	ldb	r6,0(r21)
   2a7b8:	003f8b06 	br	2a5e8 <_gp+0xfffed1e8>
   2a7bc:	b0803fcc 	andi	r2,r22,255
   2a7c0:	1080201c 	xori	r2,r2,128
   2a7c4:	10bfe004 	addi	r2,r2,-128
   2a7c8:	1003221e 	bne	r2,zero,2b454 <___svfiprintf_internal_r+0xf98>
   2a7cc:	05800804 	movi	r22,32
   2a7d0:	a9800007 	ldb	r6,0(r21)
   2a7d4:	003f8406 	br	2a5e8 <_gp+0xfffed1e8>
   2a7d8:	014000f4 	movhi	r5,3
   2a7dc:	294d9104 	addi	r5,r5,13892
   2a7e0:	d9402a15 	stw	r5,168(sp)
   2a7e4:	dd801d85 	stb	r22,118(sp)
   2a7e8:	80c0080c 	andi	r3,r16,32
   2a7ec:	b811883a 	mov	r8,r23
   2a7f0:	d8802417 	ldw	r2,144(sp)
   2a7f4:	1800f726 	beq	r3,zero,2abd4 <___svfiprintf_internal_r+0x718>
   2a7f8:	d8c02417 	ldw	r3,144(sp)
   2a7fc:	14800017 	ldw	r18,0(r2)
   2a800:	15800117 	ldw	r22,4(r2)
   2a804:	18c00204 	addi	r3,r3,8
   2a808:	d8c02415 	stw	r3,144(sp)
   2a80c:	8080004c 	andi	r2,r16,1
   2a810:	1002bd26 	beq	r2,zero,2b308 <___svfiprintf_internal_r+0xe4c>
   2a814:	9586b03a 	or	r3,r18,r22
   2a818:	1803081e 	bne	r3,zero,2b43c <___svfiprintf_internal_r+0xf80>
   2a81c:	00800084 	movi	r2,2
   2a820:	00000b06 	br	2a850 <___svfiprintf_internal_r+0x394>
   2a824:	80c0080c 	andi	r3,r16,32
   2a828:	b811883a 	mov	r8,r23
   2a82c:	d8802417 	ldw	r2,144(sp)
   2a830:	18014226 	beq	r3,zero,2ad3c <___svfiprintf_internal_r+0x880>
   2a834:	d9402417 	ldw	r5,144(sp)
   2a838:	14800017 	ldw	r18,0(r2)
   2a83c:	15800117 	ldw	r22,4(r2)
   2a840:	29400204 	addi	r5,r5,8
   2a844:	d9402415 	stw	r5,144(sp)
   2a848:	00800044 	movi	r2,1
   2a84c:	9586b03a 	or	r3,r18,r22
   2a850:	dd002017 	ldw	r20,128(sp)
   2a854:	d8001d85 	stb	zero,118(sp)
   2a858:	002f883a 	mov	r23,zero
   2a85c:	d9002017 	ldw	r4,128(sp)
   2a860:	20000216 	blt	r4,zero,2a86c <___svfiprintf_internal_r+0x3b0>
   2a864:	013fdfc4 	movi	r4,-129
   2a868:	8120703a 	and	r16,r16,r4
   2a86c:	1801e91e 	bne	r3,zero,2b014 <___svfiprintf_internal_r+0xb58>
   2a870:	d9402017 	ldw	r5,128(sp)
   2a874:	28025f26 	beq	r5,zero,2b1f4 <___svfiprintf_internal_r+0xd38>
   2a878:	10803fcc 	andi	r2,r2,255
   2a87c:	00c00044 	movi	r3,1
   2a880:	10c2b226 	beq	r2,r3,2b34c <___svfiprintf_internal_r+0xe90>
   2a884:	00c00084 	movi	r3,2
   2a888:	10c27c26 	beq	r2,r3,2b27c <___svfiprintf_internal_r+0xdc0>
   2a88c:	d8c01a04 	addi	r3,sp,104
   2a890:	9008d0fa 	srli	r4,r18,3
   2a894:	b00a977a 	slli	r5,r22,29
   2a898:	b02cd0fa 	srli	r22,r22,3
   2a89c:	948001cc 	andi	r18,r18,7
   2a8a0:	90800c04 	addi	r2,r18,48
   2a8a4:	18ffffc4 	addi	r3,r3,-1
   2a8a8:	2924b03a 	or	r18,r5,r4
   2a8ac:	18800005 	stb	r2,0(r3)
   2a8b0:	9588b03a 	or	r4,r18,r22
   2a8b4:	203ff61e 	bne	r4,zero,2a890 <_gp+0xfffed490>
   2a8b8:	8100004c 	andi	r4,r16,1
   2a8bc:	d8c02715 	stw	r3,156(sp)
   2a8c0:	20029d26 	beq	r4,zero,2b338 <___svfiprintf_internal_r+0xe7c>
   2a8c4:	10803fcc 	andi	r2,r2,255
   2a8c8:	1080201c 	xori	r2,r2,128
   2a8cc:	10bfe004 	addi	r2,r2,-128
   2a8d0:	01000c04 	movi	r4,48
   2a8d4:	11031826 	beq	r2,r4,2b538 <___svfiprintf_internal_r+0x107c>
   2a8d8:	d9402717 	ldw	r5,156(sp)
   2a8dc:	d8801e17 	ldw	r2,120(sp)
   2a8e0:	193fffc5 	stb	r4,-1(r3)
   2a8e4:	297fffc4 	addi	r5,r5,-1
   2a8e8:	d9402715 	stw	r5,156(sp)
   2a8ec:	1169c83a 	sub	r20,r2,r5
   2a8f0:	00024606 	br	2b20c <___svfiprintf_internal_r+0xd50>
   2a8f4:	d9402417 	ldw	r5,144(sp)
   2a8f8:	d8802417 	ldw	r2,144(sp)
   2a8fc:	d8001d85 	stb	zero,118(sp)
   2a900:	29400017 	ldw	r5,0(r5)
   2a904:	b811883a 	mov	r8,r23
   2a908:	15800104 	addi	r22,r2,4
   2a90c:	d9402715 	stw	r5,156(sp)
   2a910:	28031826 	beq	r5,zero,2b574 <___svfiprintf_internal_r+0x10b8>
   2a914:	d9002017 	ldw	r4,128(sp)
   2a918:	20030b16 	blt	r4,zero,2b548 <___svfiprintf_internal_r+0x108c>
   2a91c:	d9002717 	ldw	r4,156(sp)
   2a920:	d9802017 	ldw	r6,128(sp)
   2a924:	000b883a 	mov	r5,zero
   2a928:	ddc02d15 	stw	r23,180(sp)
   2a92c:	00285c40 	call	285c4 <memchr>
   2a930:	da002d17 	ldw	r8,180(sp)
   2a934:	10033926 	beq	r2,zero,2b61c <___svfiprintf_internal_r+0x1160>
   2a938:	d8c02717 	ldw	r3,156(sp)
   2a93c:	d9002017 	ldw	r4,128(sp)
   2a940:	10e9c83a 	sub	r20,r2,r3
   2a944:	2500010e 	bge	r4,r20,2a94c <___svfiprintf_internal_r+0x490>
   2a948:	2029883a 	mov	r20,r4
   2a94c:	ddc01d83 	ldbu	r23,118(sp)
   2a950:	dd802415 	stw	r22,144(sp)
   2a954:	d8002015 	stw	zero,128(sp)
   2a958:	00022c06 	br	2b20c <___svfiprintf_internal_r+0xd50>
   2a95c:	84000814 	ori	r16,r16,32
   2a960:	a9800007 	ldb	r6,0(r21)
   2a964:	003f2006 	br	2a5e8 <_gp+0xfffed1e8>
   2a968:	d8802417 	ldw	r2,144(sp)
   2a96c:	d8c02417 	ldw	r3,144(sp)
   2a970:	010000f4 	movhi	r4,3
   2a974:	14800017 	ldw	r18,0(r2)
   2a978:	00800c04 	movi	r2,48
   2a97c:	18c00104 	addi	r3,r3,4
   2a980:	d8801d05 	stb	r2,116(sp)
   2a984:	210d9104 	addi	r4,r4,13892
   2a988:	00801e04 	movi	r2,120
   2a98c:	d8801d45 	stb	r2,117(sp)
   2a990:	d8c02415 	stw	r3,144(sp)
   2a994:	b811883a 	mov	r8,r23
   2a998:	002d883a 	mov	r22,zero
   2a99c:	84000094 	ori	r16,r16,2
   2a9a0:	d9002a15 	stw	r4,168(sp)
   2a9a4:	00800084 	movi	r2,2
   2a9a8:	9007883a 	mov	r3,r18
   2a9ac:	003fa806 	br	2a850 <_gp+0xfffed450>
   2a9b0:	80c0080c 	andi	r3,r16,32
   2a9b4:	b811883a 	mov	r8,r23
   2a9b8:	d8802417 	ldw	r2,144(sp)
   2a9bc:	1800f026 	beq	r3,zero,2ad80 <___svfiprintf_internal_r+0x8c4>
   2a9c0:	14800017 	ldw	r18,0(r2)
   2a9c4:	15800117 	ldw	r22,4(r2)
   2a9c8:	d8802417 	ldw	r2,144(sp)
   2a9cc:	9586b03a 	or	r3,r18,r22
   2a9d0:	10800204 	addi	r2,r2,8
   2a9d4:	d8802415 	stw	r2,144(sp)
   2a9d8:	0005883a 	mov	r2,zero
   2a9dc:	003f9c06 	br	2a850 <_gp+0xfffed450>
   2a9e0:	dd801d85 	stb	r22,118(sp)
   2a9e4:	8080080c 	andi	r2,r16,32
   2a9e8:	b811883a 	mov	r8,r23
   2a9ec:	10028a1e 	bne	r2,zero,2b418 <___svfiprintf_internal_r+0xf5c>
   2a9f0:	8080040c 	andi	r2,r16,16
   2a9f4:	1002c726 	beq	r2,zero,2b514 <___svfiprintf_internal_r+0x1058>
   2a9f8:	d8c02417 	ldw	r3,144(sp)
   2a9fc:	d9002617 	ldw	r4,152(sp)
   2aa00:	18800017 	ldw	r2,0(r3)
   2aa04:	18c00104 	addi	r3,r3,4
   2aa08:	d8c02415 	stw	r3,144(sp)
   2aa0c:	11000015 	stw	r4,0(r2)
   2aa10:	003ecd06 	br	2a548 <_gp+0xfffed148>
   2aa14:	84001014 	ori	r16,r16,64
   2aa18:	a9800007 	ldb	r6,0(r21)
   2aa1c:	003ef206 	br	2a5e8 <_gp+0xfffed1e8>
   2aa20:	dd801d85 	stb	r22,118(sp)
   2aa24:	8080080c 	andi	r2,r16,32
   2aa28:	b811883a 	mov	r8,r23
   2aa2c:	d8c02417 	ldw	r3,144(sp)
   2aa30:	10007826 	beq	r2,zero,2ac14 <___svfiprintf_internal_r+0x758>
   2aa34:	d9002417 	ldw	r4,144(sp)
   2aa38:	18800117 	ldw	r2,4(r3)
   2aa3c:	1c800017 	ldw	r18,0(r3)
   2aa40:	21000204 	addi	r4,r4,8
   2aa44:	d9002415 	stw	r4,144(sp)
   2aa48:	102d883a 	mov	r22,r2
   2aa4c:	10007c16 	blt	r2,zero,2ac40 <___svfiprintf_internal_r+0x784>
   2aa50:	ddc01d83 	ldbu	r23,118(sp)
   2aa54:	dd002017 	ldw	r20,128(sp)
   2aa58:	00800044 	movi	r2,1
   2aa5c:	9586b03a 	or	r3,r18,r22
   2aa60:	003f7e06 	br	2a85c <_gp+0xfffed45c>
   2aa64:	a9800007 	ldb	r6,0(r21)
   2aa68:	01001b04 	movi	r4,108
   2aa6c:	a805883a 	mov	r2,r21
   2aa70:	31027a26 	beq	r6,r4,2b45c <___svfiprintf_internal_r+0xfa0>
   2aa74:	84000414 	ori	r16,r16,16
   2aa78:	003edb06 	br	2a5e8 <_gp+0xfffed1e8>
   2aa7c:	d9402417 	ldw	r5,144(sp)
   2aa80:	04800044 	movi	r18,1
   2aa84:	d8c01004 	addi	r3,sp,64
   2aa88:	28800017 	ldw	r2,0(r5)
   2aa8c:	29400104 	addi	r5,r5,4
   2aa90:	b811883a 	mov	r8,r23
   2aa94:	d8001d85 	stb	zero,118(sp)
   2aa98:	d8801005 	stb	r2,64(sp)
   2aa9c:	d9402415 	stw	r5,144(sp)
   2aaa0:	9029883a 	mov	r20,r18
   2aaa4:	d8c02715 	stw	r3,156(sp)
   2aaa8:	d8002015 	stw	zero,128(sp)
   2aaac:	80c0008c 	andi	r3,r16,2
   2aab0:	d8c02115 	stw	r3,132(sp)
   2aab4:	18000126 	beq	r3,zero,2aabc <___svfiprintf_internal_r+0x600>
   2aab8:	94800084 	addi	r18,r18,2
   2aabc:	80c0210c 	andi	r3,r16,132
   2aac0:	d8c02515 	stw	r3,148(sp)
   2aac4:	1800ba1e 	bne	r3,zero,2adb0 <___svfiprintf_internal_r+0x8f4>
   2aac8:	d9002317 	ldw	r4,140(sp)
   2aacc:	24b9c83a 	sub	fp,r4,r18
   2aad0:	0700b70e 	bge	zero,fp,2adb0 <___svfiprintf_internal_r+0x8f4>
   2aad4:	02400404 	movi	r9,16
   2aad8:	d8c01c17 	ldw	r3,112(sp)
   2aadc:	d8801b17 	ldw	r2,108(sp)
   2aae0:	4f02c00e 	bge	r9,fp,2b5e4 <___svfiprintf_internal_r+0x1128>
   2aae4:	010000f4 	movhi	r4,3
   2aae8:	210dfe04 	addi	r4,r4,14328
   2aaec:	d9002815 	stw	r4,160(sp)
   2aaf0:	a809883a 	mov	r4,r21
   2aaf4:	dc002b15 	stw	r16,172(sp)
   2aaf8:	a02b883a 	mov	r21,r20
   2aafc:	482f883a 	mov	r23,r9
   2ab00:	9029883a 	mov	r20,r18
   2ab04:	058001c4 	movi	r22,7
   2ab08:	e025883a 	mov	r18,fp
   2ab0c:	dc002217 	ldw	r16,136(sp)
   2ab10:	2039883a 	mov	fp,r4
   2ab14:	00000306 	br	2ab24 <___svfiprintf_internal_r+0x668>
   2ab18:	94bffc04 	addi	r18,r18,-16
   2ab1c:	42000204 	addi	r8,r8,8
   2ab20:	bc80130e 	bge	r23,r18,2ab70 <___svfiprintf_internal_r+0x6b4>
   2ab24:	014000f4 	movhi	r5,3
   2ab28:	18c00404 	addi	r3,r3,16
   2ab2c:	10800044 	addi	r2,r2,1
   2ab30:	294dfe04 	addi	r5,r5,14328
   2ab34:	41400015 	stw	r5,0(r8)
   2ab38:	45c00115 	stw	r23,4(r8)
   2ab3c:	d8c01c15 	stw	r3,112(sp)
   2ab40:	d8801b15 	stw	r2,108(sp)
   2ab44:	b0bff40e 	bge	r22,r2,2ab18 <_gp+0xfffed718>
   2ab48:	8809883a 	mov	r4,r17
   2ab4c:	800b883a 	mov	r5,r16
   2ab50:	d9801a04 	addi	r6,sp,104
   2ab54:	002a2f40 	call	2a2f4 <__ssprint_r>
   2ab58:	1001501e 	bne	r2,zero,2b09c <___svfiprintf_internal_r+0xbe0>
   2ab5c:	94bffc04 	addi	r18,r18,-16
   2ab60:	d8c01c17 	ldw	r3,112(sp)
   2ab64:	d8801b17 	ldw	r2,108(sp)
   2ab68:	d811883a 	mov	r8,sp
   2ab6c:	bcbfed16 	blt	r23,r18,2ab24 <_gp+0xfffed724>
   2ab70:	dc002b17 	ldw	r16,172(sp)
   2ab74:	e009883a 	mov	r4,fp
   2ab78:	9039883a 	mov	fp,r18
   2ab7c:	a025883a 	mov	r18,r20
   2ab80:	a829883a 	mov	r20,r21
   2ab84:	202b883a 	mov	r21,r4
   2ab88:	d9002817 	ldw	r4,160(sp)
   2ab8c:	e0c7883a 	add	r3,fp,r3
   2ab90:	10800044 	addi	r2,r2,1
   2ab94:	41000015 	stw	r4,0(r8)
   2ab98:	47000115 	stw	fp,4(r8)
   2ab9c:	d8c01c15 	stw	r3,112(sp)
   2aba0:	d8801b15 	stw	r2,108(sp)
   2aba4:	010001c4 	movi	r4,7
   2aba8:	2081da16 	blt	r4,r2,2b314 <___svfiprintf_internal_r+0xe58>
   2abac:	42000204 	addi	r8,r8,8
   2abb0:	00008106 	br	2adb8 <___svfiprintf_internal_r+0x8fc>
   2abb4:	010000f4 	movhi	r4,3
   2abb8:	210d8c04 	addi	r4,r4,13872
   2abbc:	dd801d85 	stb	r22,118(sp)
   2abc0:	d9002a15 	stw	r4,168(sp)
   2abc4:	80c0080c 	andi	r3,r16,32
   2abc8:	b811883a 	mov	r8,r23
   2abcc:	d8802417 	ldw	r2,144(sp)
   2abd0:	183f091e 	bne	r3,zero,2a7f8 <_gp+0xfffed3f8>
   2abd4:	80c0040c 	andi	r3,r16,16
   2abd8:	1801f21e 	bne	r3,zero,2b3a4 <___svfiprintf_internal_r+0xee8>
   2abdc:	80c0100c 	andi	r3,r16,64
   2abe0:	18024626 	beq	r3,zero,2b4fc <___svfiprintf_internal_r+0x1040>
   2abe4:	d9402417 	ldw	r5,144(sp)
   2abe8:	1480000b 	ldhu	r18,0(r2)
   2abec:	002d883a 	mov	r22,zero
   2abf0:	29400104 	addi	r5,r5,4
   2abf4:	d9402415 	stw	r5,144(sp)
   2abf8:	003f0406 	br	2a80c <_gp+0xfffed40c>
   2abfc:	84000414 	ori	r16,r16,16
   2ac00:	dd801d85 	stb	r22,118(sp)
   2ac04:	8080080c 	andi	r2,r16,32
   2ac08:	b811883a 	mov	r8,r23
   2ac0c:	d8c02417 	ldw	r3,144(sp)
   2ac10:	103f881e 	bne	r2,zero,2aa34 <_gp+0xfffed634>
   2ac14:	8080040c 	andi	r2,r16,16
   2ac18:	1001f81e 	bne	r2,zero,2b3fc <___svfiprintf_internal_r+0xf40>
   2ac1c:	8080100c 	andi	r2,r16,64
   2ac20:	10021f26 	beq	r2,zero,2b4a0 <___svfiprintf_internal_r+0xfe4>
   2ac24:	1c80000f 	ldh	r18,0(r3)
   2ac28:	d8802417 	ldw	r2,144(sp)
   2ac2c:	902dd7fa 	srai	r22,r18,31
   2ac30:	10800104 	addi	r2,r2,4
   2ac34:	d8802415 	stw	r2,144(sp)
   2ac38:	b005883a 	mov	r2,r22
   2ac3c:	103f840e 	bge	r2,zero,2aa50 <_gp+0xfffed650>
   2ac40:	04a5c83a 	sub	r18,zero,r18
   2ac44:	9004c03a 	cmpne	r2,r18,zero
   2ac48:	05adc83a 	sub	r22,zero,r22
   2ac4c:	b0adc83a 	sub	r22,r22,r2
   2ac50:	05c00b44 	movi	r23,45
   2ac54:	ddc01d85 	stb	r23,118(sp)
   2ac58:	dd002017 	ldw	r20,128(sp)
   2ac5c:	00800044 	movi	r2,1
   2ac60:	9586b03a 	or	r3,r18,r22
   2ac64:	003efd06 	br	2a85c <_gp+0xfffed45c>
   2ac68:	dc002115 	stw	r16,132(sp)
   2ac6c:	d8002315 	stw	zero,140(sp)
   2ac70:	373ff404 	addi	fp,r6,-48
   2ac74:	0009883a 	mov	r4,zero
   2ac78:	a821883a 	mov	r16,r21
   2ac7c:	01400284 	movi	r5,10
   2ac80:	002e2bc0 	call	2e2bc <__mulsi3>
   2ac84:	81800007 	ldb	r6,0(r16)
   2ac88:	1709883a 	add	r4,r2,fp
   2ac8c:	ad400044 	addi	r21,r21,1
   2ac90:	373ff404 	addi	fp,r6,-48
   2ac94:	a821883a 	mov	r16,r21
   2ac98:	a73ff82e 	bgeu	r20,fp,2ac7c <_gp+0xfffed87c>
   2ac9c:	d9002315 	stw	r4,140(sp)
   2aca0:	30bff804 	addi	r2,r6,-32
   2aca4:	dc002117 	ldw	r16,132(sp)
   2aca8:	90be522e 	bgeu	r18,r2,2a5f4 <_gp+0xfffed1f4>
   2acac:	dd801d85 	stb	r22,118(sp)
   2acb0:	b811883a 	mov	r8,r23
   2acb4:	3000f326 	beq	r6,zero,2b084 <___svfiprintf_internal_r+0xbc8>
   2acb8:	04800044 	movi	r18,1
   2acbc:	d8c01004 	addi	r3,sp,64
   2acc0:	d9801005 	stb	r6,64(sp)
   2acc4:	d8001d85 	stb	zero,118(sp)
   2acc8:	9029883a 	mov	r20,r18
   2accc:	d8c02715 	stw	r3,156(sp)
   2acd0:	003f7506 	br	2aaa8 <_gp+0xfffed6a8>
   2acd4:	84002014 	ori	r16,r16,128
   2acd8:	a9800007 	ldb	r6,0(r21)
   2acdc:	003e4206 	br	2a5e8 <_gp+0xfffed1e8>
   2ace0:	a9800007 	ldb	r6,0(r21)
   2ace4:	01400a84 	movi	r5,42
   2ace8:	a8800044 	addi	r2,r21,1
   2acec:	31425226 	beq	r6,r5,2b638 <___svfiprintf_internal_r+0x117c>
   2acf0:	373ff404 	addi	fp,r6,-48
   2acf4:	102b883a 	mov	r21,r2
   2acf8:	0009883a 	mov	r4,zero
   2acfc:	a7024536 	bltu	r20,fp,2b614 <___svfiprintf_internal_r+0x1158>
   2ad00:	01400284 	movi	r5,10
   2ad04:	002e2bc0 	call	2e2bc <__mulsi3>
   2ad08:	a9800007 	ldb	r6,0(r21)
   2ad0c:	e089883a 	add	r4,fp,r2
   2ad10:	ad400044 	addi	r21,r21,1
   2ad14:	373ff404 	addi	fp,r6,-48
   2ad18:	a73ff92e 	bgeu	r20,fp,2ad00 <_gp+0xfffed900>
   2ad1c:	20021316 	blt	r4,zero,2b56c <___svfiprintf_internal_r+0x10b0>
   2ad20:	d9002015 	stw	r4,128(sp)
   2ad24:	003e3106 	br	2a5ec <_gp+0xfffed1ec>
   2ad28:	84000414 	ori	r16,r16,16
   2ad2c:	80c0080c 	andi	r3,r16,32
   2ad30:	b811883a 	mov	r8,r23
   2ad34:	d8802417 	ldw	r2,144(sp)
   2ad38:	183ebe1e 	bne	r3,zero,2a834 <_gp+0xfffed434>
   2ad3c:	80c0040c 	andi	r3,r16,16
   2ad40:	18019e1e 	bne	r3,zero,2b3bc <___svfiprintf_internal_r+0xf00>
   2ad44:	80c0100c 	andi	r3,r16,64
   2ad48:	1801dc26 	beq	r3,zero,2b4bc <___svfiprintf_internal_r+0x1000>
   2ad4c:	d8c02417 	ldw	r3,144(sp)
   2ad50:	1480000b 	ldhu	r18,0(r2)
   2ad54:	002d883a 	mov	r22,zero
   2ad58:	18c00104 	addi	r3,r3,4
   2ad5c:	d8c02415 	stw	r3,144(sp)
   2ad60:	00800044 	movi	r2,1
   2ad64:	9007883a 	mov	r3,r18
   2ad68:	003eb906 	br	2a850 <_gp+0xfffed450>
   2ad6c:	84000414 	ori	r16,r16,16
   2ad70:	80c0080c 	andi	r3,r16,32
   2ad74:	b811883a 	mov	r8,r23
   2ad78:	d8802417 	ldw	r2,144(sp)
   2ad7c:	183f101e 	bne	r3,zero,2a9c0 <_gp+0xfffed5c0>
   2ad80:	80c0040c 	andi	r3,r16,16
   2ad84:	1801951e 	bne	r3,zero,2b3dc <___svfiprintf_internal_r+0xf20>
   2ad88:	80c0100c 	andi	r3,r16,64
   2ad8c:	1801d326 	beq	r3,zero,2b4dc <___svfiprintf_internal_r+0x1020>
   2ad90:	d9002417 	ldw	r4,144(sp)
   2ad94:	1480000b 	ldhu	r18,0(r2)
   2ad98:	002d883a 	mov	r22,zero
   2ad9c:	21000104 	addi	r4,r4,4
   2ada0:	d9002415 	stw	r4,144(sp)
   2ada4:	0005883a 	mov	r2,zero
   2ada8:	9007883a 	mov	r3,r18
   2adac:	003ea806 	br	2a850 <_gp+0xfffed450>
   2adb0:	d8c01c17 	ldw	r3,112(sp)
   2adb4:	d8801b17 	ldw	r2,108(sp)
   2adb8:	d9001d87 	ldb	r4,118(sp)
   2adbc:	20000b26 	beq	r4,zero,2adec <___svfiprintf_internal_r+0x930>
   2adc0:	d9001d84 	addi	r4,sp,118
   2adc4:	18c00044 	addi	r3,r3,1
   2adc8:	10800044 	addi	r2,r2,1
   2adcc:	41000015 	stw	r4,0(r8)
   2add0:	01000044 	movi	r4,1
   2add4:	41000115 	stw	r4,4(r8)
   2add8:	d8c01c15 	stw	r3,112(sp)
   2addc:	d8801b15 	stw	r2,108(sp)
   2ade0:	010001c4 	movi	r4,7
   2ade4:	20813616 	blt	r4,r2,2b2c0 <___svfiprintf_internal_r+0xe04>
   2ade8:	42000204 	addi	r8,r8,8
   2adec:	d9402117 	ldw	r5,132(sp)
   2adf0:	28000b26 	beq	r5,zero,2ae20 <___svfiprintf_internal_r+0x964>
   2adf4:	d9001d04 	addi	r4,sp,116
   2adf8:	18c00084 	addi	r3,r3,2
   2adfc:	10800044 	addi	r2,r2,1
   2ae00:	41000015 	stw	r4,0(r8)
   2ae04:	01000084 	movi	r4,2
   2ae08:	41000115 	stw	r4,4(r8)
   2ae0c:	d8c01c15 	stw	r3,112(sp)
   2ae10:	d8801b15 	stw	r2,108(sp)
   2ae14:	010001c4 	movi	r4,7
   2ae18:	20813216 	blt	r4,r2,2b2e4 <___svfiprintf_internal_r+0xe28>
   2ae1c:	42000204 	addi	r8,r8,8
   2ae20:	d9402517 	ldw	r5,148(sp)
   2ae24:	01002004 	movi	r4,128
   2ae28:	2900ad26 	beq	r5,r4,2b0e0 <___svfiprintf_internal_r+0xc24>
   2ae2c:	d9002017 	ldw	r4,128(sp)
   2ae30:	252fc83a 	sub	r23,r4,r20
   2ae34:	05c0330e 	bge	zero,r23,2af04 <___svfiprintf_internal_r+0xa48>
   2ae38:	01c00404 	movi	r7,16
   2ae3c:	3dc1940e 	bge	r7,r23,2b490 <___svfiprintf_internal_r+0xfd4>
   2ae40:	010000f4 	movhi	r4,3
   2ae44:	210dfa04 	addi	r4,r4,14312
   2ae48:	d9002115 	stw	r4,132(sp)
   2ae4c:	a809883a 	mov	r4,r21
   2ae50:	dc002015 	stw	r16,128(sp)
   2ae54:	a02b883a 	mov	r21,r20
   2ae58:	3839883a 	mov	fp,r7
   2ae5c:	9029883a 	mov	r20,r18
   2ae60:	058001c4 	movi	r22,7
   2ae64:	b825883a 	mov	r18,r23
   2ae68:	dc002217 	ldw	r16,136(sp)
   2ae6c:	202f883a 	mov	r23,r4
   2ae70:	00000306 	br	2ae80 <___svfiprintf_internal_r+0x9c4>
   2ae74:	94bffc04 	addi	r18,r18,-16
   2ae78:	42000204 	addi	r8,r8,8
   2ae7c:	e480110e 	bge	fp,r18,2aec4 <___svfiprintf_internal_r+0xa08>
   2ae80:	18c00404 	addi	r3,r3,16
   2ae84:	10800044 	addi	r2,r2,1
   2ae88:	44c00015 	stw	r19,0(r8)
   2ae8c:	47000115 	stw	fp,4(r8)
   2ae90:	d8c01c15 	stw	r3,112(sp)
   2ae94:	d8801b15 	stw	r2,108(sp)
   2ae98:	b0bff60e 	bge	r22,r2,2ae74 <_gp+0xfffeda74>
   2ae9c:	8809883a 	mov	r4,r17
   2aea0:	800b883a 	mov	r5,r16
   2aea4:	d9801a04 	addi	r6,sp,104
   2aea8:	002a2f40 	call	2a2f4 <__ssprint_r>
   2aeac:	10007b1e 	bne	r2,zero,2b09c <___svfiprintf_internal_r+0xbe0>
   2aeb0:	94bffc04 	addi	r18,r18,-16
   2aeb4:	d8c01c17 	ldw	r3,112(sp)
   2aeb8:	d8801b17 	ldw	r2,108(sp)
   2aebc:	d811883a 	mov	r8,sp
   2aec0:	e4bfef16 	blt	fp,r18,2ae80 <_gp+0xfffeda80>
   2aec4:	dc002017 	ldw	r16,128(sp)
   2aec8:	b809883a 	mov	r4,r23
   2aecc:	902f883a 	mov	r23,r18
   2aed0:	a025883a 	mov	r18,r20
   2aed4:	a829883a 	mov	r20,r21
   2aed8:	202b883a 	mov	r21,r4
   2aedc:	d9402117 	ldw	r5,132(sp)
   2aee0:	1dc7883a 	add	r3,r3,r23
   2aee4:	10800044 	addi	r2,r2,1
   2aee8:	41400015 	stw	r5,0(r8)
   2aeec:	45c00115 	stw	r23,4(r8)
   2aef0:	d8c01c15 	stw	r3,112(sp)
   2aef4:	d8801b15 	stw	r2,108(sp)
   2aef8:	010001c4 	movi	r4,7
   2aefc:	2080d616 	blt	r4,r2,2b258 <___svfiprintf_internal_r+0xd9c>
   2af00:	42000204 	addi	r8,r8,8
   2af04:	d9002717 	ldw	r4,156(sp)
   2af08:	a0c7883a 	add	r3,r20,r3
   2af0c:	10800044 	addi	r2,r2,1
   2af10:	41000015 	stw	r4,0(r8)
   2af14:	45000115 	stw	r20,4(r8)
   2af18:	d8c01c15 	stw	r3,112(sp)
   2af1c:	d8801b15 	stw	r2,108(sp)
   2af20:	010001c4 	movi	r4,7
   2af24:	2080a516 	blt	r4,r2,2b1bc <___svfiprintf_internal_r+0xd00>
   2af28:	42000204 	addi	r8,r8,8
   2af2c:	8400010c 	andi	r16,r16,4
   2af30:	80002b26 	beq	r16,zero,2afe0 <___svfiprintf_internal_r+0xb24>
   2af34:	d9402317 	ldw	r5,140(sp)
   2af38:	2ca1c83a 	sub	r16,r5,r18
   2af3c:	0400280e 	bge	zero,r16,2afe0 <___svfiprintf_internal_r+0xb24>
   2af40:	05000404 	movi	r20,16
   2af44:	d8801b17 	ldw	r2,108(sp)
   2af48:	a401aa0e 	bge	r20,r16,2b5f4 <___svfiprintf_internal_r+0x1138>
   2af4c:	014000f4 	movhi	r5,3
   2af50:	294dfe04 	addi	r5,r5,14328
   2af54:	d9402815 	stw	r5,160(sp)
   2af58:	058001c4 	movi	r22,7
   2af5c:	ddc02217 	ldw	r23,136(sp)
   2af60:	00000306 	br	2af70 <___svfiprintf_internal_r+0xab4>
   2af64:	843ffc04 	addi	r16,r16,-16
   2af68:	42000204 	addi	r8,r8,8
   2af6c:	a400130e 	bge	r20,r16,2afbc <___svfiprintf_internal_r+0xb00>
   2af70:	010000f4 	movhi	r4,3
   2af74:	18c00404 	addi	r3,r3,16
   2af78:	10800044 	addi	r2,r2,1
   2af7c:	210dfe04 	addi	r4,r4,14328
   2af80:	41000015 	stw	r4,0(r8)
   2af84:	45000115 	stw	r20,4(r8)
   2af88:	d8c01c15 	stw	r3,112(sp)
   2af8c:	d8801b15 	stw	r2,108(sp)
   2af90:	b0bff40e 	bge	r22,r2,2af64 <_gp+0xfffedb64>
   2af94:	8809883a 	mov	r4,r17
   2af98:	b80b883a 	mov	r5,r23
   2af9c:	d9801a04 	addi	r6,sp,104
   2afa0:	002a2f40 	call	2a2f4 <__ssprint_r>
   2afa4:	10003d1e 	bne	r2,zero,2b09c <___svfiprintf_internal_r+0xbe0>
   2afa8:	843ffc04 	addi	r16,r16,-16
   2afac:	d8c01c17 	ldw	r3,112(sp)
   2afb0:	d8801b17 	ldw	r2,108(sp)
   2afb4:	d811883a 	mov	r8,sp
   2afb8:	a43fed16 	blt	r20,r16,2af70 <_gp+0xfffedb70>
   2afbc:	d9402817 	ldw	r5,160(sp)
   2afc0:	1c07883a 	add	r3,r3,r16
   2afc4:	10800044 	addi	r2,r2,1
   2afc8:	41400015 	stw	r5,0(r8)
   2afcc:	44000115 	stw	r16,4(r8)
   2afd0:	d8c01c15 	stw	r3,112(sp)
   2afd4:	d8801b15 	stw	r2,108(sp)
   2afd8:	010001c4 	movi	r4,7
   2afdc:	2080e416 	blt	r4,r2,2b370 <___svfiprintf_internal_r+0xeb4>
   2afe0:	d8802317 	ldw	r2,140(sp)
   2afe4:	9080010e 	bge	r18,r2,2afec <___svfiprintf_internal_r+0xb30>
   2afe8:	1025883a 	mov	r18,r2
   2afec:	d9002617 	ldw	r4,152(sp)
   2aff0:	2489883a 	add	r4,r4,r18
   2aff4:	d9002615 	stw	r4,152(sp)
   2aff8:	1800781e 	bne	r3,zero,2b1dc <___svfiprintf_internal_r+0xd20>
   2affc:	a8800007 	ldb	r2,0(r21)
   2b000:	d8001b15 	stw	zero,108(sp)
   2b004:	d811883a 	mov	r8,sp
   2b008:	103d511e 	bne	r2,zero,2a550 <_gp+0xfffed150>
   2b00c:	a825883a 	mov	r18,r21
   2b010:	003d6806 	br	2a5b4 <_gp+0xfffed1b4>
   2b014:	10803fcc 	andi	r2,r2,255
   2b018:	00c00044 	movi	r3,1
   2b01c:	10fe191e 	bne	r2,r3,2a884 <_gp+0xfffed484>
   2b020:	b000c826 	beq	r22,zero,2b344 <___svfiprintf_internal_r+0xe88>
   2b024:	df001a04 	addi	fp,sp,104
   2b028:	4029883a 	mov	r20,r8
   2b02c:	9009883a 	mov	r4,r18
   2b030:	b00b883a 	mov	r5,r22
   2b034:	01800284 	movi	r6,10
   2b038:	000f883a 	mov	r7,zero
   2b03c:	002db740 	call	2db74 <__umoddi3>
   2b040:	10800c04 	addi	r2,r2,48
   2b044:	e73fffc4 	addi	fp,fp,-1
   2b048:	9009883a 	mov	r4,r18
   2b04c:	b00b883a 	mov	r5,r22
   2b050:	01800284 	movi	r6,10
   2b054:	000f883a 	mov	r7,zero
   2b058:	e0800005 	stb	r2,0(fp)
   2b05c:	002d5340 	call	2d534 <__udivdi3>
   2b060:	1025883a 	mov	r18,r2
   2b064:	10c4b03a 	or	r2,r2,r3
   2b068:	182d883a 	mov	r22,r3
   2b06c:	103fef1e 	bne	r2,zero,2b02c <_gp+0xfffedc2c>
   2b070:	d9001e17 	ldw	r4,120(sp)
   2b074:	a011883a 	mov	r8,r20
   2b078:	df002715 	stw	fp,156(sp)
   2b07c:	2729c83a 	sub	r20,r4,fp
   2b080:	00006206 	br	2b20c <___svfiprintf_internal_r+0xd50>
   2b084:	d8801c17 	ldw	r2,112(sp)
   2b088:	10000426 	beq	r2,zero,2b09c <___svfiprintf_internal_r+0xbe0>
   2b08c:	d9002917 	ldw	r4,164(sp)
   2b090:	d9402217 	ldw	r5,136(sp)
   2b094:	d9801a04 	addi	r6,sp,104
   2b098:	002a2f40 	call	2a2f4 <__ssprint_r>
   2b09c:	d9402217 	ldw	r5,136(sp)
   2b0a0:	2880030b 	ldhu	r2,12(r5)
   2b0a4:	1080100c 	andi	r2,r2,64
   2b0a8:	1000621e 	bne	r2,zero,2b234 <___svfiprintf_internal_r+0xd78>
   2b0ac:	d8802617 	ldw	r2,152(sp)
   2b0b0:	dfc03717 	ldw	ra,220(sp)
   2b0b4:	df003617 	ldw	fp,216(sp)
   2b0b8:	ddc03517 	ldw	r23,212(sp)
   2b0bc:	dd803417 	ldw	r22,208(sp)
   2b0c0:	dd403317 	ldw	r21,204(sp)
   2b0c4:	dd003217 	ldw	r20,200(sp)
   2b0c8:	dcc03117 	ldw	r19,196(sp)
   2b0cc:	dc803017 	ldw	r18,192(sp)
   2b0d0:	dc402f17 	ldw	r17,188(sp)
   2b0d4:	dc002e17 	ldw	r16,184(sp)
   2b0d8:	dec03804 	addi	sp,sp,224
   2b0dc:	f800283a 	ret
   2b0e0:	d9002317 	ldw	r4,140(sp)
   2b0e4:	24afc83a 	sub	r23,r4,r18
   2b0e8:	05ff500e 	bge	zero,r23,2ae2c <_gp+0xfffeda2c>
   2b0ec:	01c00404 	movi	r7,16
   2b0f0:	3dc1440e 	bge	r7,r23,2b604 <___svfiprintf_internal_r+0x1148>
   2b0f4:	010000f4 	movhi	r4,3
   2b0f8:	210dfa04 	addi	r4,r4,14312
   2b0fc:	d9002115 	stw	r4,132(sp)
   2b100:	a809883a 	mov	r4,r21
   2b104:	dc002515 	stw	r16,148(sp)
   2b108:	a02b883a 	mov	r21,r20
   2b10c:	3839883a 	mov	fp,r7
   2b110:	9029883a 	mov	r20,r18
   2b114:	058001c4 	movi	r22,7
   2b118:	b825883a 	mov	r18,r23
   2b11c:	dc002217 	ldw	r16,136(sp)
   2b120:	202f883a 	mov	r23,r4
   2b124:	00000306 	br	2b134 <___svfiprintf_internal_r+0xc78>
   2b128:	94bffc04 	addi	r18,r18,-16
   2b12c:	42000204 	addi	r8,r8,8
   2b130:	e480110e 	bge	fp,r18,2b178 <___svfiprintf_internal_r+0xcbc>
   2b134:	18c00404 	addi	r3,r3,16
   2b138:	10800044 	addi	r2,r2,1
   2b13c:	44c00015 	stw	r19,0(r8)
   2b140:	47000115 	stw	fp,4(r8)
   2b144:	d8c01c15 	stw	r3,112(sp)
   2b148:	d8801b15 	stw	r2,108(sp)
   2b14c:	b0bff60e 	bge	r22,r2,2b128 <_gp+0xfffedd28>
   2b150:	8809883a 	mov	r4,r17
   2b154:	800b883a 	mov	r5,r16
   2b158:	d9801a04 	addi	r6,sp,104
   2b15c:	002a2f40 	call	2a2f4 <__ssprint_r>
   2b160:	103fce1e 	bne	r2,zero,2b09c <_gp+0xfffedc9c>
   2b164:	94bffc04 	addi	r18,r18,-16
   2b168:	d8c01c17 	ldw	r3,112(sp)
   2b16c:	d8801b17 	ldw	r2,108(sp)
   2b170:	d811883a 	mov	r8,sp
   2b174:	e4bfef16 	blt	fp,r18,2b134 <_gp+0xfffedd34>
   2b178:	dc002517 	ldw	r16,148(sp)
   2b17c:	b809883a 	mov	r4,r23
   2b180:	902f883a 	mov	r23,r18
   2b184:	a025883a 	mov	r18,r20
   2b188:	a829883a 	mov	r20,r21
   2b18c:	202b883a 	mov	r21,r4
   2b190:	d9402117 	ldw	r5,132(sp)
   2b194:	1dc7883a 	add	r3,r3,r23
   2b198:	10800044 	addi	r2,r2,1
   2b19c:	41400015 	stw	r5,0(r8)
   2b1a0:	45c00115 	stw	r23,4(r8)
   2b1a4:	d8c01c15 	stw	r3,112(sp)
   2b1a8:	d8801b15 	stw	r2,108(sp)
   2b1ac:	010001c4 	movi	r4,7
   2b1b0:	2080ae16 	blt	r4,r2,2b46c <___svfiprintf_internal_r+0xfb0>
   2b1b4:	42000204 	addi	r8,r8,8
   2b1b8:	003f1c06 	br	2ae2c <_gp+0xfffeda2c>
   2b1bc:	d9402217 	ldw	r5,136(sp)
   2b1c0:	8809883a 	mov	r4,r17
   2b1c4:	d9801a04 	addi	r6,sp,104
   2b1c8:	002a2f40 	call	2a2f4 <__ssprint_r>
   2b1cc:	103fb31e 	bne	r2,zero,2b09c <_gp+0xfffedc9c>
   2b1d0:	d8c01c17 	ldw	r3,112(sp)
   2b1d4:	d811883a 	mov	r8,sp
   2b1d8:	003f5406 	br	2af2c <_gp+0xfffedb2c>
   2b1dc:	d9402217 	ldw	r5,136(sp)
   2b1e0:	8809883a 	mov	r4,r17
   2b1e4:	d9801a04 	addi	r6,sp,104
   2b1e8:	002a2f40 	call	2a2f4 <__ssprint_r>
   2b1ec:	103f8326 	beq	r2,zero,2affc <_gp+0xfffedbfc>
   2b1f0:	003faa06 	br	2b09c <_gp+0xfffedc9c>
   2b1f4:	10803fcc 	andi	r2,r2,255
   2b1f8:	1000021e 	bne	r2,zero,2b204 <___svfiprintf_internal_r+0xd48>
   2b1fc:	8080004c 	andi	r2,r16,1
   2b200:	1000621e 	bne	r2,zero,2b38c <___svfiprintf_internal_r+0xed0>
   2b204:	d8c01a04 	addi	r3,sp,104
   2b208:	d8c02715 	stw	r3,156(sp)
   2b20c:	d9002017 	ldw	r4,128(sp)
   2b210:	a025883a 	mov	r18,r20
   2b214:	a100010e 	bge	r20,r4,2b21c <___svfiprintf_internal_r+0xd60>
   2b218:	2025883a 	mov	r18,r4
   2b21c:	bdc03fcc 	andi	r23,r23,255
   2b220:	bdc0201c 	xori	r23,r23,128
   2b224:	bdffe004 	addi	r23,r23,-128
   2b228:	b83e2026 	beq	r23,zero,2aaac <_gp+0xfffed6ac>
   2b22c:	94800044 	addi	r18,r18,1
   2b230:	003e1e06 	br	2aaac <_gp+0xfffed6ac>
   2b234:	00bfffc4 	movi	r2,-1
   2b238:	003f9d06 	br	2b0b0 <_gp+0xfffedcb0>
   2b23c:	d9402217 	ldw	r5,136(sp)
   2b240:	8809883a 	mov	r4,r17
   2b244:	d9801a04 	addi	r6,sp,104
   2b248:	002a2f40 	call	2a2f4 <__ssprint_r>
   2b24c:	103f931e 	bne	r2,zero,2b09c <_gp+0xfffedc9c>
   2b250:	d811883a 	mov	r8,sp
   2b254:	003cd406 	br	2a5a8 <_gp+0xfffed1a8>
   2b258:	d9402217 	ldw	r5,136(sp)
   2b25c:	8809883a 	mov	r4,r17
   2b260:	d9801a04 	addi	r6,sp,104
   2b264:	002a2f40 	call	2a2f4 <__ssprint_r>
   2b268:	103f8c1e 	bne	r2,zero,2b09c <_gp+0xfffedc9c>
   2b26c:	d8c01c17 	ldw	r3,112(sp)
   2b270:	d8801b17 	ldw	r2,108(sp)
   2b274:	d811883a 	mov	r8,sp
   2b278:	003f2206 	br	2af04 <_gp+0xfffedb04>
   2b27c:	d9002a17 	ldw	r4,168(sp)
   2b280:	df001a04 	addi	fp,sp,104
   2b284:	908003cc 	andi	r2,r18,15
   2b288:	b006973a 	slli	r3,r22,28
   2b28c:	2085883a 	add	r2,r4,r2
   2b290:	9024d13a 	srli	r18,r18,4
   2b294:	10800003 	ldbu	r2,0(r2)
   2b298:	b02cd13a 	srli	r22,r22,4
   2b29c:	e73fffc4 	addi	fp,fp,-1
   2b2a0:	1ca4b03a 	or	r18,r3,r18
   2b2a4:	e0800005 	stb	r2,0(fp)
   2b2a8:	9584b03a 	or	r2,r18,r22
   2b2ac:	103ff51e 	bne	r2,zero,2b284 <_gp+0xfffede84>
   2b2b0:	d9401e17 	ldw	r5,120(sp)
   2b2b4:	df002715 	stw	fp,156(sp)
   2b2b8:	2f29c83a 	sub	r20,r5,fp
   2b2bc:	003fd306 	br	2b20c <_gp+0xfffede0c>
   2b2c0:	d9402217 	ldw	r5,136(sp)
   2b2c4:	8809883a 	mov	r4,r17
   2b2c8:	d9801a04 	addi	r6,sp,104
   2b2cc:	002a2f40 	call	2a2f4 <__ssprint_r>
   2b2d0:	103f721e 	bne	r2,zero,2b09c <_gp+0xfffedc9c>
   2b2d4:	d8c01c17 	ldw	r3,112(sp)
   2b2d8:	d8801b17 	ldw	r2,108(sp)
   2b2dc:	d811883a 	mov	r8,sp
   2b2e0:	003ec206 	br	2adec <_gp+0xfffed9ec>
   2b2e4:	d9402217 	ldw	r5,136(sp)
   2b2e8:	8809883a 	mov	r4,r17
   2b2ec:	d9801a04 	addi	r6,sp,104
   2b2f0:	002a2f40 	call	2a2f4 <__ssprint_r>
   2b2f4:	103f691e 	bne	r2,zero,2b09c <_gp+0xfffedc9c>
   2b2f8:	d8c01c17 	ldw	r3,112(sp)
   2b2fc:	d8801b17 	ldw	r2,108(sp)
   2b300:	d811883a 	mov	r8,sp
   2b304:	003ec606 	br	2ae20 <_gp+0xfffeda20>
   2b308:	00800084 	movi	r2,2
   2b30c:	9586b03a 	or	r3,r18,r22
   2b310:	003d4f06 	br	2a850 <_gp+0xfffed450>
   2b314:	d9402217 	ldw	r5,136(sp)
   2b318:	8809883a 	mov	r4,r17
   2b31c:	d9801a04 	addi	r6,sp,104
   2b320:	002a2f40 	call	2a2f4 <__ssprint_r>
   2b324:	103f5d1e 	bne	r2,zero,2b09c <_gp+0xfffedc9c>
   2b328:	d8c01c17 	ldw	r3,112(sp)
   2b32c:	d8801b17 	ldw	r2,108(sp)
   2b330:	d811883a 	mov	r8,sp
   2b334:	003ea006 	br	2adb8 <_gp+0xfffed9b8>
   2b338:	d8801e17 	ldw	r2,120(sp)
   2b33c:	10e9c83a 	sub	r20,r2,r3
   2b340:	003fb206 	br	2b20c <_gp+0xfffede0c>
   2b344:	00800244 	movi	r2,9
   2b348:	14bf3636 	bltu	r2,r18,2b024 <_gp+0xfffedc24>
   2b34c:	94800c04 	addi	r18,r18,48
   2b350:	d8c019c4 	addi	r3,sp,103
   2b354:	dc8019c5 	stb	r18,103(sp)
   2b358:	dd002c17 	ldw	r20,176(sp)
   2b35c:	d8c02715 	stw	r3,156(sp)
   2b360:	003faa06 	br	2b20c <_gp+0xfffede0c>
   2b364:	d8802415 	stw	r2,144(sp)
   2b368:	a9800007 	ldb	r6,0(r21)
   2b36c:	003c9e06 	br	2a5e8 <_gp+0xfffed1e8>
   2b370:	d9402217 	ldw	r5,136(sp)
   2b374:	8809883a 	mov	r4,r17
   2b378:	d9801a04 	addi	r6,sp,104
   2b37c:	002a2f40 	call	2a2f4 <__ssprint_r>
   2b380:	103f461e 	bne	r2,zero,2b09c <_gp+0xfffedc9c>
   2b384:	d8c01c17 	ldw	r3,112(sp)
   2b388:	003f1506 	br	2afe0 <_gp+0xfffedbe0>
   2b38c:	00800c04 	movi	r2,48
   2b390:	d8c019c4 	addi	r3,sp,103
   2b394:	d88019c5 	stb	r2,103(sp)
   2b398:	dd002c17 	ldw	r20,176(sp)
   2b39c:	d8c02715 	stw	r3,156(sp)
   2b3a0:	003f9a06 	br	2b20c <_gp+0xfffede0c>
   2b3a4:	d9002417 	ldw	r4,144(sp)
   2b3a8:	14800017 	ldw	r18,0(r2)
   2b3ac:	002d883a 	mov	r22,zero
   2b3b0:	21000104 	addi	r4,r4,4
   2b3b4:	d9002415 	stw	r4,144(sp)
   2b3b8:	003d1406 	br	2a80c <_gp+0xfffed40c>
   2b3bc:	14800017 	ldw	r18,0(r2)
   2b3c0:	d8802417 	ldw	r2,144(sp)
   2b3c4:	002d883a 	mov	r22,zero
   2b3c8:	9007883a 	mov	r3,r18
   2b3cc:	10800104 	addi	r2,r2,4
   2b3d0:	d8802415 	stw	r2,144(sp)
   2b3d4:	00800044 	movi	r2,1
   2b3d8:	003d1d06 	br	2a850 <_gp+0xfffed450>
   2b3dc:	d8c02417 	ldw	r3,144(sp)
   2b3e0:	14800017 	ldw	r18,0(r2)
   2b3e4:	002d883a 	mov	r22,zero
   2b3e8:	18c00104 	addi	r3,r3,4
   2b3ec:	d8c02415 	stw	r3,144(sp)
   2b3f0:	0005883a 	mov	r2,zero
   2b3f4:	9007883a 	mov	r3,r18
   2b3f8:	003d1506 	br	2a850 <_gp+0xfffed450>
   2b3fc:	1c800017 	ldw	r18,0(r3)
   2b400:	d9402417 	ldw	r5,144(sp)
   2b404:	902dd7fa 	srai	r22,r18,31
   2b408:	29400104 	addi	r5,r5,4
   2b40c:	d9402415 	stw	r5,144(sp)
   2b410:	b005883a 	mov	r2,r22
   2b414:	003d8d06 	br	2aa4c <_gp+0xfffed64c>
   2b418:	d9002417 	ldw	r4,144(sp)
   2b41c:	d9402617 	ldw	r5,152(sp)
   2b420:	20800017 	ldw	r2,0(r4)
   2b424:	2807d7fa 	srai	r3,r5,31
   2b428:	21000104 	addi	r4,r4,4
   2b42c:	d9002415 	stw	r4,144(sp)
   2b430:	11400015 	stw	r5,0(r2)
   2b434:	10c00115 	stw	r3,4(r2)
   2b438:	003c4306 	br	2a548 <_gp+0xfffed148>
   2b43c:	00800c04 	movi	r2,48
   2b440:	d8801d05 	stb	r2,116(sp)
   2b444:	d9801d45 	stb	r6,117(sp)
   2b448:	84000094 	ori	r16,r16,2
   2b44c:	00800084 	movi	r2,2
   2b450:	003cff06 	br	2a850 <_gp+0xfffed450>
   2b454:	a9800007 	ldb	r6,0(r21)
   2b458:	003c6306 	br	2a5e8 <_gp+0xfffed1e8>
   2b45c:	ad400044 	addi	r21,r21,1
   2b460:	84000814 	ori	r16,r16,32
   2b464:	11800047 	ldb	r6,1(r2)
   2b468:	003c5f06 	br	2a5e8 <_gp+0xfffed1e8>
   2b46c:	d9402217 	ldw	r5,136(sp)
   2b470:	8809883a 	mov	r4,r17
   2b474:	d9801a04 	addi	r6,sp,104
   2b478:	002a2f40 	call	2a2f4 <__ssprint_r>
   2b47c:	103f071e 	bne	r2,zero,2b09c <_gp+0xfffedc9c>
   2b480:	d8c01c17 	ldw	r3,112(sp)
   2b484:	d8801b17 	ldw	r2,108(sp)
   2b488:	d811883a 	mov	r8,sp
   2b48c:	003e6706 	br	2ae2c <_gp+0xfffeda2c>
   2b490:	014000f4 	movhi	r5,3
   2b494:	294dfa04 	addi	r5,r5,14312
   2b498:	d9402115 	stw	r5,132(sp)
   2b49c:	003e8f06 	br	2aedc <_gp+0xfffedadc>
   2b4a0:	1c800017 	ldw	r18,0(r3)
   2b4a4:	d8c02417 	ldw	r3,144(sp)
   2b4a8:	902dd7fa 	srai	r22,r18,31
   2b4ac:	18c00104 	addi	r3,r3,4
   2b4b0:	d8c02415 	stw	r3,144(sp)
   2b4b4:	b005883a 	mov	r2,r22
   2b4b8:	003d6406 	br	2aa4c <_gp+0xfffed64c>
   2b4bc:	d9002417 	ldw	r4,144(sp)
   2b4c0:	14800017 	ldw	r18,0(r2)
   2b4c4:	002d883a 	mov	r22,zero
   2b4c8:	21000104 	addi	r4,r4,4
   2b4cc:	d9002415 	stw	r4,144(sp)
   2b4d0:	00800044 	movi	r2,1
   2b4d4:	9007883a 	mov	r3,r18
   2b4d8:	003cdd06 	br	2a850 <_gp+0xfffed450>
   2b4dc:	d9402417 	ldw	r5,144(sp)
   2b4e0:	14800017 	ldw	r18,0(r2)
   2b4e4:	002d883a 	mov	r22,zero
   2b4e8:	29400104 	addi	r5,r5,4
   2b4ec:	d9402415 	stw	r5,144(sp)
   2b4f0:	0005883a 	mov	r2,zero
   2b4f4:	9007883a 	mov	r3,r18
   2b4f8:	003cd506 	br	2a850 <_gp+0xfffed450>
   2b4fc:	14800017 	ldw	r18,0(r2)
   2b500:	d8802417 	ldw	r2,144(sp)
   2b504:	002d883a 	mov	r22,zero
   2b508:	10800104 	addi	r2,r2,4
   2b50c:	d8802415 	stw	r2,144(sp)
   2b510:	003cbe06 	br	2a80c <_gp+0xfffed40c>
   2b514:	8400100c 	andi	r16,r16,64
   2b518:	80002b26 	beq	r16,zero,2b5c8 <___svfiprintf_internal_r+0x110c>
   2b51c:	d9402417 	ldw	r5,144(sp)
   2b520:	d8c02617 	ldw	r3,152(sp)
   2b524:	28800017 	ldw	r2,0(r5)
   2b528:	29400104 	addi	r5,r5,4
   2b52c:	d9402415 	stw	r5,144(sp)
   2b530:	10c0000d 	sth	r3,0(r2)
   2b534:	003c0406 	br	2a548 <_gp+0xfffed148>
   2b538:	d8c01e17 	ldw	r3,120(sp)
   2b53c:	d9002717 	ldw	r4,156(sp)
   2b540:	1929c83a 	sub	r20,r3,r4
   2b544:	003f3106 	br	2b20c <_gp+0xfffede0c>
   2b548:	d9002717 	ldw	r4,156(sp)
   2b54c:	ddc02d15 	stw	r23,180(sp)
   2b550:	0020d780 	call	20d78 <strlen>
   2b554:	1029883a 	mov	r20,r2
   2b558:	ddc01d83 	ldbu	r23,118(sp)
   2b55c:	dd802415 	stw	r22,144(sp)
   2b560:	d8002015 	stw	zero,128(sp)
   2b564:	da002d17 	ldw	r8,180(sp)
   2b568:	003f2806 	br	2b20c <_gp+0xfffede0c>
   2b56c:	013fffc4 	movi	r4,-1
   2b570:	003deb06 	br	2ad20 <_gp+0xfffed920>
   2b574:	dd002017 	ldw	r20,128(sp)
   2b578:	00800184 	movi	r2,6
   2b57c:	1500012e 	bgeu	r2,r20,2b584 <___svfiprintf_internal_r+0x10c8>
   2b580:	1029883a 	mov	r20,r2
   2b584:	a025883a 	mov	r18,r20
   2b588:	a0002916 	blt	r20,zero,2b630 <___svfiprintf_internal_r+0x1174>
   2b58c:	00c000f4 	movhi	r3,3
   2b590:	18cd9604 	addi	r3,r3,13912
   2b594:	dd802415 	stw	r22,144(sp)
   2b598:	d8c02715 	stw	r3,156(sp)
   2b59c:	003d4206 	br	2aaa8 <_gp+0xfffed6a8>
   2b5a0:	04001004 	movi	r16,64
   2b5a4:	800b883a 	mov	r5,r16
   2b5a8:	0027e1c0 	call	27e1c <_malloc_r>
   2b5ac:	d8c02217 	ldw	r3,136(sp)
   2b5b0:	18800015 	stw	r2,0(r3)
   2b5b4:	18800415 	stw	r2,16(r3)
   2b5b8:	10002b26 	beq	r2,zero,2b668 <___svfiprintf_internal_r+0x11ac>
   2b5bc:	d9402217 	ldw	r5,136(sp)
   2b5c0:	2c000515 	stw	r16,20(r5)
   2b5c4:	003bd106 	br	2a50c <_gp+0xfffed10c>
   2b5c8:	d9002417 	ldw	r4,144(sp)
   2b5cc:	d9402617 	ldw	r5,152(sp)
   2b5d0:	20800017 	ldw	r2,0(r4)
   2b5d4:	21000104 	addi	r4,r4,4
   2b5d8:	d9002415 	stw	r4,144(sp)
   2b5dc:	11400015 	stw	r5,0(r2)
   2b5e0:	003bd906 	br	2a548 <_gp+0xfffed148>
   2b5e4:	014000f4 	movhi	r5,3
   2b5e8:	294dfe04 	addi	r5,r5,14328
   2b5ec:	d9402815 	stw	r5,160(sp)
   2b5f0:	003d6506 	br	2ab88 <_gp+0xfffed788>
   2b5f4:	010000f4 	movhi	r4,3
   2b5f8:	210dfe04 	addi	r4,r4,14328
   2b5fc:	d9002815 	stw	r4,160(sp)
   2b600:	003e6e06 	br	2afbc <_gp+0xfffedbbc>
   2b604:	014000f4 	movhi	r5,3
   2b608:	294dfa04 	addi	r5,r5,14312
   2b60c:	d9402115 	stw	r5,132(sp)
   2b610:	003edf06 	br	2b190 <_gp+0xfffedd90>
   2b614:	d8002015 	stw	zero,128(sp)
   2b618:	003bf406 	br	2a5ec <_gp+0xfffed1ec>
   2b61c:	dd002017 	ldw	r20,128(sp)
   2b620:	ddc01d83 	ldbu	r23,118(sp)
   2b624:	dd802415 	stw	r22,144(sp)
   2b628:	d8002015 	stw	zero,128(sp)
   2b62c:	003ef706 	br	2b20c <_gp+0xfffede0c>
   2b630:	0025883a 	mov	r18,zero
   2b634:	003fd506 	br	2b58c <_gp+0xfffee18c>
   2b638:	d8c02417 	ldw	r3,144(sp)
   2b63c:	a809883a 	mov	r4,r21
   2b640:	102b883a 	mov	r21,r2
   2b644:	18c00017 	ldw	r3,0(r3)
   2b648:	d8c02015 	stw	r3,128(sp)
   2b64c:	d8c02417 	ldw	r3,144(sp)
   2b650:	d8802017 	ldw	r2,128(sp)
   2b654:	19400104 	addi	r5,r3,4
   2b658:	d9402415 	stw	r5,144(sp)
   2b65c:	10000716 	blt	r2,zero,2b67c <___svfiprintf_internal_r+0x11c0>
   2b660:	21800047 	ldb	r6,1(r4)
   2b664:	003be006 	br	2a5e8 <_gp+0xfffed1e8>
   2b668:	d9002917 	ldw	r4,164(sp)
   2b66c:	00800304 	movi	r2,12
   2b670:	20800015 	stw	r2,0(r4)
   2b674:	00bfffc4 	movi	r2,-1
   2b678:	003e8d06 	br	2b0b0 <_gp+0xfffedcb0>
   2b67c:	00ffffc4 	movi	r3,-1
   2b680:	d8c02015 	stw	r3,128(sp)
   2b684:	21800047 	ldb	r6,1(r4)
   2b688:	003bd706 	br	2a5e8 <_gp+0xfffed1e8>

0002b68c <__sprint_r.part.0>:
   2b68c:	28801917 	ldw	r2,100(r5)
   2b690:	defff604 	addi	sp,sp,-40
   2b694:	dd400515 	stw	r21,20(sp)
   2b698:	dcc00315 	stw	r19,12(sp)
   2b69c:	dfc00915 	stw	ra,36(sp)
   2b6a0:	df000815 	stw	fp,32(sp)
   2b6a4:	ddc00715 	stw	r23,28(sp)
   2b6a8:	dd800615 	stw	r22,24(sp)
   2b6ac:	dd000415 	stw	r20,16(sp)
   2b6b0:	dc800215 	stw	r18,8(sp)
   2b6b4:	dc400115 	stw	r17,4(sp)
   2b6b8:	dc000015 	stw	r16,0(sp)
   2b6bc:	1088000c 	andi	r2,r2,8192
   2b6c0:	2827883a 	mov	r19,r5
   2b6c4:	302b883a 	mov	r21,r6
   2b6c8:	10002d26 	beq	r2,zero,2b780 <__sprint_r.part.0+0xf4>
   2b6cc:	30800217 	ldw	r2,8(r6)
   2b6d0:	35800017 	ldw	r22,0(r6)
   2b6d4:	10002826 	beq	r2,zero,2b778 <__sprint_r.part.0+0xec>
   2b6d8:	2029883a 	mov	r20,r4
   2b6dc:	b5c00104 	addi	r23,r22,4
   2b6e0:	04bfffc4 	movi	r18,-1
   2b6e4:	bc400017 	ldw	r17,0(r23)
   2b6e8:	b4000017 	ldw	r16,0(r22)
   2b6ec:	0039883a 	mov	fp,zero
   2b6f0:	8822d0ba 	srli	r17,r17,2
   2b6f4:	04400316 	blt	zero,r17,2b704 <__sprint_r.part.0+0x78>
   2b6f8:	00001706 	br	2b758 <__sprint_r.part.0+0xcc>
   2b6fc:	84000104 	addi	r16,r16,4
   2b700:	8f001526 	beq	r17,fp,2b758 <__sprint_r.part.0+0xcc>
   2b704:	81400017 	ldw	r5,0(r16)
   2b708:	a009883a 	mov	r4,r20
   2b70c:	980d883a 	mov	r6,r19
   2b710:	002ce840 	call	2ce84 <_fputwc_r>
   2b714:	e7000044 	addi	fp,fp,1
   2b718:	14bff81e 	bne	r2,r18,2b6fc <_gp+0xfffee2fc>
   2b71c:	9005883a 	mov	r2,r18
   2b720:	a8000215 	stw	zero,8(r21)
   2b724:	a8000115 	stw	zero,4(r21)
   2b728:	dfc00917 	ldw	ra,36(sp)
   2b72c:	df000817 	ldw	fp,32(sp)
   2b730:	ddc00717 	ldw	r23,28(sp)
   2b734:	dd800617 	ldw	r22,24(sp)
   2b738:	dd400517 	ldw	r21,20(sp)
   2b73c:	dd000417 	ldw	r20,16(sp)
   2b740:	dcc00317 	ldw	r19,12(sp)
   2b744:	dc800217 	ldw	r18,8(sp)
   2b748:	dc400117 	ldw	r17,4(sp)
   2b74c:	dc000017 	ldw	r16,0(sp)
   2b750:	dec00a04 	addi	sp,sp,40
   2b754:	f800283a 	ret
   2b758:	a8c00217 	ldw	r3,8(r21)
   2b75c:	8c63883a 	add	r17,r17,r17
   2b760:	8c63883a 	add	r17,r17,r17
   2b764:	1c45c83a 	sub	r2,r3,r17
   2b768:	a8800215 	stw	r2,8(r21)
   2b76c:	b5800204 	addi	r22,r22,8
   2b770:	bdc00204 	addi	r23,r23,8
   2b774:	103fdb1e 	bne	r2,zero,2b6e4 <_gp+0xfffee2e4>
   2b778:	0005883a 	mov	r2,zero
   2b77c:	003fe806 	br	2b720 <_gp+0xfffee320>
   2b780:	00275700 	call	27570 <__sfvwrite_r>
   2b784:	003fe606 	br	2b720 <_gp+0xfffee320>

0002b788 <__sprint_r>:
   2b788:	30c00217 	ldw	r3,8(r6)
   2b78c:	18000126 	beq	r3,zero,2b794 <__sprint_r+0xc>
   2b790:	002b68c1 	jmpi	2b68c <__sprint_r.part.0>
   2b794:	30000115 	stw	zero,4(r6)
   2b798:	0005883a 	mov	r2,zero
   2b79c:	f800283a 	ret

0002b7a0 <___vfiprintf_internal_r>:
   2b7a0:	defeca04 	addi	sp,sp,-1240
   2b7a4:	dcc12f15 	stw	r19,1212(sp)
   2b7a8:	dfc13515 	stw	ra,1236(sp)
   2b7ac:	df013415 	stw	fp,1232(sp)
   2b7b0:	ddc13315 	stw	r23,1228(sp)
   2b7b4:	dd813215 	stw	r22,1224(sp)
   2b7b8:	dd413115 	stw	r21,1220(sp)
   2b7bc:	dd013015 	stw	r20,1216(sp)
   2b7c0:	dc812e15 	stw	r18,1208(sp)
   2b7c4:	dc412d15 	stw	r17,1204(sp)
   2b7c8:	dc012c15 	stw	r16,1200(sp)
   2b7cc:	d9012115 	stw	r4,1156(sp)
   2b7d0:	d9412015 	stw	r5,1152(sp)
   2b7d4:	d9c12315 	stw	r7,1164(sp)
   2b7d8:	3027883a 	mov	r19,r6
   2b7dc:	20000226 	beq	r4,zero,2b7e8 <___vfiprintf_internal_r+0x48>
   2b7e0:	20800e17 	ldw	r2,56(r4)
   2b7e4:	1000f726 	beq	r2,zero,2bbc4 <___vfiprintf_internal_r+0x424>
   2b7e8:	d8812017 	ldw	r2,1152(sp)
   2b7ec:	10c0030b 	ldhu	r3,12(r2)
   2b7f0:	1908000c 	andi	r4,r3,8192
   2b7f4:	1805883a 	mov	r2,r3
   2b7f8:	2000081e 	bne	r4,zero,2b81c <___vfiprintf_internal_r+0x7c>
   2b7fc:	d9412017 	ldw	r5,1152(sp)
   2b800:	18880014 	ori	r2,r3,8192
   2b804:	00f7ffc4 	movi	r3,-8193
   2b808:	29001917 	ldw	r4,100(r5)
   2b80c:	2880030d 	sth	r2,12(r5)
   2b810:	20c8703a 	and	r4,r4,r3
   2b814:	29001915 	stw	r4,100(r5)
   2b818:	1007883a 	mov	r3,r2
   2b81c:	1100020c 	andi	r4,r2,8
   2b820:	2000a726 	beq	r4,zero,2bac0 <___vfiprintf_internal_r+0x320>
   2b824:	d9412017 	ldw	r5,1152(sp)
   2b828:	29000417 	ldw	r4,16(r5)
   2b82c:	2000a426 	beq	r4,zero,2bac0 <___vfiprintf_internal_r+0x320>
   2b830:	1080068c 	andi	r2,r2,26
   2b834:	01000284 	movi	r4,10
   2b838:	1100ab26 	beq	r2,r4,2bae8 <___vfiprintf_internal_r+0x348>
   2b83c:	d9010a04 	addi	r4,sp,1064
   2b840:	d94109c4 	addi	r5,sp,1063
   2b844:	070000f4 	movhi	fp,3
   2b848:	044000f4 	movhi	r17,3
   2b84c:	2145c83a 	sub	r2,r4,r5
   2b850:	e70e0604 	addi	fp,fp,14360
   2b854:	8c4e0204 	addi	r17,r17,14344
   2b858:	d9011e15 	stw	r4,1144(sp)
   2b85c:	d9411f15 	stw	r5,1148(sp)
   2b860:	dec11a15 	stw	sp,1128(sp)
   2b864:	d8011c15 	stw	zero,1136(sp)
   2b868:	d8011b15 	stw	zero,1132(sp)
   2b86c:	d8012715 	stw	zero,1180(sp)
   2b870:	d8012515 	stw	zero,1172(sp)
   2b874:	d811883a 	mov	r8,sp
   2b878:	d8812815 	stw	r2,1184(sp)
   2b87c:	982f883a 	mov	r23,r19
   2b880:	b8800007 	ldb	r2,0(r23)
   2b884:	1003b026 	beq	r2,zero,2c748 <___vfiprintf_internal_r+0xfa8>
   2b888:	01000944 	movi	r4,37
   2b88c:	1103ae26 	beq	r2,r4,2c748 <___vfiprintf_internal_r+0xfa8>
   2b890:	b805883a 	mov	r2,r23
   2b894:	00000106 	br	2b89c <___vfiprintf_internal_r+0xfc>
   2b898:	19000326 	beq	r3,r4,2b8a8 <___vfiprintf_internal_r+0x108>
   2b89c:	10800044 	addi	r2,r2,1
   2b8a0:	10c00007 	ldb	r3,0(r2)
   2b8a4:	183ffc1e 	bne	r3,zero,2b898 <_gp+0xfffee498>
   2b8a8:	15e1c83a 	sub	r16,r2,r23
   2b8ac:	1029883a 	mov	r20,r2
   2b8b0:	80001026 	beq	r16,zero,2b8f4 <___vfiprintf_internal_r+0x154>
   2b8b4:	d8c11c17 	ldw	r3,1136(sp)
   2b8b8:	d8811b17 	ldw	r2,1132(sp)
   2b8bc:	45c00015 	stw	r23,0(r8)
   2b8c0:	80c7883a 	add	r3,r16,r3
   2b8c4:	10800044 	addi	r2,r2,1
   2b8c8:	44000115 	stw	r16,4(r8)
   2b8cc:	d8c11c15 	stw	r3,1136(sp)
   2b8d0:	d8811b15 	stw	r2,1132(sp)
   2b8d4:	010001c4 	movi	r4,7
   2b8d8:	2080740e 	bge	r4,r2,2baac <___vfiprintf_internal_r+0x30c>
   2b8dc:	1803a71e 	bne	r3,zero,2c77c <___vfiprintf_internal_r+0xfdc>
   2b8e0:	d8c12517 	ldw	r3,1172(sp)
   2b8e4:	d8011b15 	stw	zero,1132(sp)
   2b8e8:	d811883a 	mov	r8,sp
   2b8ec:	1c07883a 	add	r3,r3,r16
   2b8f0:	d8c12515 	stw	r3,1172(sp)
   2b8f4:	a0800007 	ldb	r2,0(r20)
   2b8f8:	1002bf26 	beq	r2,zero,2c3f8 <___vfiprintf_internal_r+0xc58>
   2b8fc:	a5c00044 	addi	r23,r20,1
   2b900:	a1800047 	ldb	r6,1(r20)
   2b904:	d8011d85 	stb	zero,1142(sp)
   2b908:	d8012205 	stb	zero,1160(sp)
   2b90c:	043fffc4 	movi	r16,-1
   2b910:	d8012415 	stw	zero,1168(sp)
   2b914:	0025883a 	mov	r18,zero
   2b918:	05001604 	movi	r20,88
   2b91c:	05400244 	movi	r21,9
   2b920:	4027883a 	mov	r19,r8
   2b924:	bdc00044 	addi	r23,r23,1
   2b928:	30bff804 	addi	r2,r6,-32
   2b92c:	a0825636 	bltu	r20,r2,2c288 <___vfiprintf_internal_r+0xae8>
   2b930:	100490ba 	slli	r2,r2,2
   2b934:	010000f4 	movhi	r4,3
   2b938:	212e5204 	addi	r4,r4,-18104
   2b93c:	1105883a 	add	r2,r2,r4
   2b940:	10800017 	ldw	r2,0(r2)
   2b944:	1000683a 	jmp	r2
   2b948:	0002c218 	cmpnei	zero,zero,2824
   2b94c:	0002c288 	cmpgei	zero,zero,2826
   2b950:	0002c288 	cmpgei	zero,zero,2826
   2b954:	0002c27c 	xorhi	zero,zero,2825
   2b958:	0002c288 	cmpgei	zero,zero,2826
   2b95c:	0002c288 	cmpgei	zero,zero,2826
   2b960:	0002c288 	cmpgei	zero,zero,2826
   2b964:	0002c288 	cmpgei	zero,zero,2826
   2b968:	0002c288 	cmpgei	zero,zero,2826
   2b96c:	0002c288 	cmpgei	zero,zero,2826
   2b970:	0002c008 	cmpgei	zero,zero,2816
   2b974:	0002c230 	cmpltui	zero,zero,2824
   2b978:	0002c288 	cmpgei	zero,zero,2826
   2b97c:	0002bbdc 	xori	zero,zero,2799
   2b980:	0002c02c 	andhi	zero,zero,2816
   2b984:	0002c288 	cmpgei	zero,zero,2826
   2b988:	0002bbe8 	cmpgeui	zero,zero,2799
   2b98c:	0002bbf4 	movhi	zero,2799
   2b990:	0002bbf4 	movhi	zero,2799
   2b994:	0002bbf4 	movhi	zero,2799
   2b998:	0002bbf4 	movhi	zero,2799
   2b99c:	0002bbf4 	movhi	zero,2799
   2b9a0:	0002bbf4 	movhi	zero,2799
   2b9a4:	0002bbf4 	movhi	zero,2799
   2b9a8:	0002bbf4 	movhi	zero,2799
   2b9ac:	0002bbf4 	movhi	zero,2799
   2b9b0:	0002c288 	cmpgei	zero,zero,2826
   2b9b4:	0002c288 	cmpgei	zero,zero,2826
   2b9b8:	0002c288 	cmpgei	zero,zero,2826
   2b9bc:	0002c288 	cmpgei	zero,zero,2826
   2b9c0:	0002c288 	cmpgei	zero,zero,2826
   2b9c4:	0002c288 	cmpgei	zero,zero,2826
   2b9c8:	0002c288 	cmpgei	zero,zero,2826
   2b9cc:	0002c288 	cmpgei	zero,zero,2826
   2b9d0:	0002c288 	cmpgei	zero,zero,2826
   2b9d4:	0002c288 	cmpgei	zero,zero,2826
   2b9d8:	0002bc34 	movhi	zero,2800
   2b9dc:	0002c288 	cmpgei	zero,zero,2826
   2b9e0:	0002c288 	cmpgei	zero,zero,2826
   2b9e4:	0002c288 	cmpgei	zero,zero,2826
   2b9e8:	0002c288 	cmpgei	zero,zero,2826
   2b9ec:	0002c288 	cmpgei	zero,zero,2826
   2b9f0:	0002c288 	cmpgei	zero,zero,2826
   2b9f4:	0002c288 	cmpgei	zero,zero,2826
   2b9f8:	0002c288 	cmpgei	zero,zero,2826
   2b9fc:	0002c288 	cmpgei	zero,zero,2826
   2ba00:	0002c288 	cmpgei	zero,zero,2826
   2ba04:	0002bf24 	muli	zero,zero,2812
   2ba08:	0002c288 	cmpgei	zero,zero,2826
   2ba0c:	0002c288 	cmpgei	zero,zero,2826
   2ba10:	0002c288 	cmpgei	zero,zero,2826
   2ba14:	0002c288 	cmpgei	zero,zero,2826
   2ba18:	0002c288 	cmpgei	zero,zero,2826
   2ba1c:	0002bf64 	muli	zero,zero,2813
   2ba20:	0002c288 	cmpgei	zero,zero,2826
   2ba24:	0002c288 	cmpgei	zero,zero,2826
   2ba28:	0002bfa8 	cmpgeui	zero,zero,2814
   2ba2c:	0002c288 	cmpgei	zero,zero,2826
   2ba30:	0002c288 	cmpgei	zero,zero,2826
   2ba34:	0002c288 	cmpgei	zero,zero,2826
   2ba38:	0002c288 	cmpgei	zero,zero,2826
   2ba3c:	0002c288 	cmpgei	zero,zero,2826
   2ba40:	0002c288 	cmpgei	zero,zero,2826
   2ba44:	0002c288 	cmpgei	zero,zero,2826
   2ba48:	0002c288 	cmpgei	zero,zero,2826
   2ba4c:	0002c288 	cmpgei	zero,zero,2826
   2ba50:	0002c288 	cmpgei	zero,zero,2826
   2ba54:	0002bef0 	cmpltui	zero,zero,2811
   2ba58:	0002c240 	call	2c24 <__reset-0x1d3dc>
   2ba5c:	0002c288 	cmpgei	zero,zero,2826
   2ba60:	0002c288 	cmpgei	zero,zero,2826
   2ba64:	0002c288 	cmpgei	zero,zero,2826
   2ba68:	0002c07c 	xorhi	zero,zero,2817
   2ba6c:	0002c240 	call	2c24 <__reset-0x1d3dc>
   2ba70:	0002c288 	cmpgei	zero,zero,2826
   2ba74:	0002c288 	cmpgei	zero,zero,2826
   2ba78:	0002bf94 	movui	zero,2814
   2ba7c:	0002c288 	cmpgei	zero,zero,2826
   2ba80:	0002c1e0 	cmpeqi	zero,zero,2823
   2ba84:	0002c168 	cmpgeui	zero,zero,2821
   2ba88:	0002c19c 	xori	zero,zero,2822
   2ba8c:	0002c088 	cmpgei	zero,zero,2818
   2ba90:	0002c288 	cmpgei	zero,zero,2826
   2ba94:	0002c094 	movui	zero,2818
   2ba98:	0002c288 	cmpgei	zero,zero,2826
   2ba9c:	0002c0f0 	cmpltui	zero,zero,2819
   2baa0:	0002c288 	cmpgei	zero,zero,2826
   2baa4:	0002c288 	cmpgei	zero,zero,2826
   2baa8:	0002c124 	muli	zero,zero,2820
   2baac:	42000204 	addi	r8,r8,8
   2bab0:	d8c12517 	ldw	r3,1172(sp)
   2bab4:	1c07883a 	add	r3,r3,r16
   2bab8:	d8c12515 	stw	r3,1172(sp)
   2babc:	003f8d06 	br	2b8f4 <_gp+0xfffee4f4>
   2bac0:	d9012117 	ldw	r4,1156(sp)
   2bac4:	d9412017 	ldw	r5,1152(sp)
   2bac8:	00250d00 	call	250d0 <__swsetup_r>
   2bacc:	1000301e 	bne	r2,zero,2bb90 <___vfiprintf_internal_r+0x3f0>
   2bad0:	d8812017 	ldw	r2,1152(sp)
   2bad4:	01000284 	movi	r4,10
   2bad8:	10c0030b 	ldhu	r3,12(r2)
   2badc:	1805883a 	mov	r2,r3
   2bae0:	1080068c 	andi	r2,r2,26
   2bae4:	113f551e 	bne	r2,r4,2b83c <_gp+0xfffee43c>
   2bae8:	d9012017 	ldw	r4,1152(sp)
   2baec:	2080038b 	ldhu	r2,14(r4)
   2baf0:	113fffcc 	andi	r4,r2,65535
   2baf4:	2120001c 	xori	r4,r4,32768
   2baf8:	21200004 	addi	r4,r4,-32768
   2bafc:	203f4f16 	blt	r4,zero,2b83c <_gp+0xfffee43c>
   2bb00:	d9412017 	ldw	r5,1152(sp)
   2bb04:	d9012117 	ldw	r4,1156(sp)
   2bb08:	d9c12317 	ldw	r7,1164(sp)
   2bb0c:	2b001917 	ldw	r12,100(r5)
   2bb10:	2ac00717 	ldw	r11,28(r5)
   2bb14:	2a800917 	ldw	r10,36(r5)
   2bb18:	02010004 	movi	r8,1024
   2bb1c:	18ffff4c 	andi	r3,r3,65533
   2bb20:	da0b883a 	add	r5,sp,r8
   2bb24:	980d883a 	mov	r6,r19
   2bb28:	d8c1030d 	sth	r3,1036(sp)
   2bb2c:	db011915 	stw	r12,1124(sp)
   2bb30:	d881038d 	sth	r2,1038(sp)
   2bb34:	dac10715 	stw	r11,1052(sp)
   2bb38:	da810915 	stw	r10,1060(sp)
   2bb3c:	dec10015 	stw	sp,1024(sp)
   2bb40:	dec10415 	stw	sp,1040(sp)
   2bb44:	da010215 	stw	r8,1032(sp)
   2bb48:	da010515 	stw	r8,1044(sp)
   2bb4c:	d8010615 	stw	zero,1048(sp)
   2bb50:	002b7a00 	call	2b7a0 <___vfiprintf_internal_r>
   2bb54:	1021883a 	mov	r16,r2
   2bb58:	10000416 	blt	r2,zero,2bb6c <___vfiprintf_internal_r+0x3cc>
   2bb5c:	d9012117 	ldw	r4,1156(sp)
   2bb60:	d9410004 	addi	r5,sp,1024
   2bb64:	0026b500 	call	26b50 <_fflush_r>
   2bb68:	10040f1e 	bne	r2,zero,2cba8 <___vfiprintf_internal_r+0x1408>
   2bb6c:	d881030b 	ldhu	r2,1036(sp)
   2bb70:	1080100c 	andi	r2,r2,64
   2bb74:	10000426 	beq	r2,zero,2bb88 <___vfiprintf_internal_r+0x3e8>
   2bb78:	d8c12017 	ldw	r3,1152(sp)
   2bb7c:	1880030b 	ldhu	r2,12(r3)
   2bb80:	10801014 	ori	r2,r2,64
   2bb84:	1880030d 	sth	r2,12(r3)
   2bb88:	8005883a 	mov	r2,r16
   2bb8c:	00000106 	br	2bb94 <___vfiprintf_internal_r+0x3f4>
   2bb90:	00bfffc4 	movi	r2,-1
   2bb94:	dfc13517 	ldw	ra,1236(sp)
   2bb98:	df013417 	ldw	fp,1232(sp)
   2bb9c:	ddc13317 	ldw	r23,1228(sp)
   2bba0:	dd813217 	ldw	r22,1224(sp)
   2bba4:	dd413117 	ldw	r21,1220(sp)
   2bba8:	dd013017 	ldw	r20,1216(sp)
   2bbac:	dcc12f17 	ldw	r19,1212(sp)
   2bbb0:	dc812e17 	ldw	r18,1208(sp)
   2bbb4:	dc412d17 	ldw	r17,1204(sp)
   2bbb8:	dc012c17 	ldw	r16,1200(sp)
   2bbbc:	dec13604 	addi	sp,sp,1240
   2bbc0:	f800283a 	ret
   2bbc4:	002710c0 	call	2710c <__sinit>
   2bbc8:	003f0706 	br	2b7e8 <_gp+0xfffee3e8>
   2bbcc:	d8c12417 	ldw	r3,1168(sp)
   2bbd0:	d8812315 	stw	r2,1164(sp)
   2bbd4:	00c7c83a 	sub	r3,zero,r3
   2bbd8:	d8c12415 	stw	r3,1168(sp)
   2bbdc:	94800114 	ori	r18,r18,4
   2bbe0:	b9800007 	ldb	r6,0(r23)
   2bbe4:	003f4f06 	br	2b924 <_gp+0xfffee524>
   2bbe8:	94802014 	ori	r18,r18,128
   2bbec:	b9800007 	ldb	r6,0(r23)
   2bbf0:	003f4c06 	br	2b924 <_gp+0xfffee524>
   2bbf4:	dc012615 	stw	r16,1176(sp)
   2bbf8:	d8012415 	stw	zero,1168(sp)
   2bbfc:	35bff404 	addi	r22,r6,-48
   2bc00:	0009883a 	mov	r4,zero
   2bc04:	b821883a 	mov	r16,r23
   2bc08:	01400284 	movi	r5,10
   2bc0c:	002e2bc0 	call	2e2bc <__mulsi3>
   2bc10:	81800007 	ldb	r6,0(r16)
   2bc14:	1589883a 	add	r4,r2,r22
   2bc18:	bdc00044 	addi	r23,r23,1
   2bc1c:	35bff404 	addi	r22,r6,-48
   2bc20:	b821883a 	mov	r16,r23
   2bc24:	adbff82e 	bgeu	r21,r22,2bc08 <_gp+0xfffee808>
   2bc28:	d9012415 	stw	r4,1168(sp)
   2bc2c:	dc012617 	ldw	r16,1176(sp)
   2bc30:	003f3d06 	br	2b928 <_gp+0xfffee528>
   2bc34:	d8c12203 	ldbu	r3,1160(sp)
   2bc38:	94800414 	ori	r18,r18,16
   2bc3c:	9080080c 	andi	r2,r18,32
   2bc40:	d8c11d85 	stb	r3,1142(sp)
   2bc44:	9811883a 	mov	r8,r19
   2bc48:	d8c12317 	ldw	r3,1164(sp)
   2bc4c:	10018226 	beq	r2,zero,2c258 <___vfiprintf_internal_r+0xab8>
   2bc50:	d9012317 	ldw	r4,1164(sp)
   2bc54:	18800117 	ldw	r2,4(r3)
   2bc58:	1cc00017 	ldw	r19,0(r3)
   2bc5c:	21000204 	addi	r4,r4,8
   2bc60:	d9012315 	stw	r4,1164(sp)
   2bc64:	102b883a 	mov	r21,r2
   2bc68:	10030016 	blt	r2,zero,2c86c <___vfiprintf_internal_r+0x10cc>
   2bc6c:	dd811d83 	ldbu	r22,1142(sp)
   2bc70:	8029883a 	mov	r20,r16
   2bc74:	00800044 	movi	r2,1
   2bc78:	9d46b03a 	or	r3,r19,r21
   2bc7c:	80000216 	blt	r16,zero,2bc88 <___vfiprintf_internal_r+0x4e8>
   2bc80:	013fdfc4 	movi	r4,-129
   2bc84:	9124703a 	and	r18,r18,r4
   2bc88:	1801b41e 	bne	r3,zero,2c35c <___vfiprintf_internal_r+0xbbc>
   2bc8c:	80028126 	beq	r16,zero,2c694 <___vfiprintf_internal_r+0xef4>
   2bc90:	10803fcc 	andi	r2,r2,255
   2bc94:	00c00044 	movi	r3,1
   2bc98:	10c1d126 	beq	r2,r3,2c3e0 <___vfiprintf_internal_r+0xc40>
   2bc9c:	00c00084 	movi	r3,2
   2bca0:	10c28626 	beq	r2,r3,2c6bc <___vfiprintf_internal_r+0xf1c>
   2bca4:	d8c10a04 	addi	r3,sp,1064
   2bca8:	9808d0fa 	srli	r4,r19,3
   2bcac:	a80a977a 	slli	r5,r21,29
   2bcb0:	a82ad0fa 	srli	r21,r21,3
   2bcb4:	9cc001cc 	andi	r19,r19,7
   2bcb8:	98800c04 	addi	r2,r19,48
   2bcbc:	18ffffc4 	addi	r3,r3,-1
   2bcc0:	2926b03a 	or	r19,r5,r4
   2bcc4:	18800005 	stb	r2,0(r3)
   2bcc8:	9d48b03a 	or	r4,r19,r21
   2bccc:	203ff61e 	bne	r4,zero,2bca8 <_gp+0xfffee8a8>
   2bcd0:	9100004c 	andi	r4,r18,1
   2bcd4:	d8c12215 	stw	r3,1160(sp)
   2bcd8:	2002b31e 	bne	r4,zero,2c7a8 <___vfiprintf_internal_r+0x1008>
   2bcdc:	d9411e17 	ldw	r5,1144(sp)
   2bce0:	28e9c83a 	sub	r20,r5,r3
   2bce4:	a02b883a 	mov	r21,r20
   2bce8:	a400010e 	bge	r20,r16,2bcf0 <___vfiprintf_internal_r+0x550>
   2bcec:	802b883a 	mov	r21,r16
   2bcf0:	b5803fcc 	andi	r22,r22,255
   2bcf4:	b580201c 	xori	r22,r22,128
   2bcf8:	b5bfe004 	addi	r22,r22,-128
   2bcfc:	b0000126 	beq	r22,zero,2bd04 <___vfiprintf_internal_r+0x564>
   2bd00:	ad400044 	addi	r21,r21,1
   2bd04:	9280008c 	andi	r10,r18,2
   2bd08:	50000126 	beq	r10,zero,2bd10 <___vfiprintf_internal_r+0x570>
   2bd0c:	ad400084 	addi	r21,r21,2
   2bd10:	9580210c 	andi	r22,r18,132
   2bd14:	b001751e 	bne	r22,zero,2c2ec <___vfiprintf_internal_r+0xb4c>
   2bd18:	d9012417 	ldw	r4,1168(sp)
   2bd1c:	2567c83a 	sub	r19,r4,r21
   2bd20:	04c1720e 	bge	zero,r19,2c2ec <___vfiprintf_internal_r+0xb4c>
   2bd24:	01c00404 	movi	r7,16
   2bd28:	d8c11c17 	ldw	r3,1136(sp)
   2bd2c:	3cc36b0e 	bge	r7,r19,2cadc <___vfiprintf_internal_r+0x133c>
   2bd30:	008000f4 	movhi	r2,3
   2bd34:	108e0604 	addi	r2,r2,14360
   2bd38:	dc012915 	stw	r16,1188(sp)
   2bd3c:	d9011b17 	ldw	r4,1132(sp)
   2bd40:	9821883a 	mov	r16,r19
   2bd44:	d8812615 	stw	r2,1176(sp)
   2bd48:	030001c4 	movi	r12,7
   2bd4c:	5027883a 	mov	r19,r10
   2bd50:	00000506 	br	2bd68 <___vfiprintf_internal_r+0x5c8>
   2bd54:	21400084 	addi	r5,r4,2
   2bd58:	42000204 	addi	r8,r8,8
   2bd5c:	1009883a 	mov	r4,r2
   2bd60:	843ffc04 	addi	r16,r16,-16
   2bd64:	3c000d0e 	bge	r7,r16,2bd9c <___vfiprintf_internal_r+0x5fc>
   2bd68:	18c00404 	addi	r3,r3,16
   2bd6c:	20800044 	addi	r2,r4,1
   2bd70:	47000015 	stw	fp,0(r8)
   2bd74:	41c00115 	stw	r7,4(r8)
   2bd78:	d8c11c15 	stw	r3,1136(sp)
   2bd7c:	d8811b15 	stw	r2,1132(sp)
   2bd80:	60bff40e 	bge	r12,r2,2bd54 <_gp+0xfffee954>
   2bd84:	18014b1e 	bne	r3,zero,2c2b4 <___vfiprintf_internal_r+0xb14>
   2bd88:	843ffc04 	addi	r16,r16,-16
   2bd8c:	0009883a 	mov	r4,zero
   2bd90:	01400044 	movi	r5,1
   2bd94:	d811883a 	mov	r8,sp
   2bd98:	3c3ff316 	blt	r7,r16,2bd68 <_gp+0xfffee968>
   2bd9c:	9815883a 	mov	r10,r19
   2bda0:	8027883a 	mov	r19,r16
   2bda4:	dc012917 	ldw	r16,1188(sp)
   2bda8:	d9012617 	ldw	r4,1176(sp)
   2bdac:	98c7883a 	add	r3,r19,r3
   2bdb0:	44c00115 	stw	r19,4(r8)
   2bdb4:	41000015 	stw	r4,0(r8)
   2bdb8:	d8c11c15 	stw	r3,1136(sp)
   2bdbc:	d9411b15 	stw	r5,1132(sp)
   2bdc0:	008001c4 	movi	r2,7
   2bdc4:	11425116 	blt	r2,r5,2c70c <___vfiprintf_internal_r+0xf6c>
   2bdc8:	d9011d87 	ldb	r4,1142(sp)
   2bdcc:	42000204 	addi	r8,r8,8
   2bdd0:	28800044 	addi	r2,r5,1
   2bdd4:	20014a1e 	bne	r4,zero,2c300 <___vfiprintf_internal_r+0xb60>
   2bdd8:	50000c26 	beq	r10,zero,2be0c <___vfiprintf_internal_r+0x66c>
   2bddc:	d9011d04 	addi	r4,sp,1140
   2bde0:	18c00084 	addi	r3,r3,2
   2bde4:	41000015 	stw	r4,0(r8)
   2bde8:	01000084 	movi	r4,2
   2bdec:	41000115 	stw	r4,4(r8)
   2bdf0:	d8c11c15 	stw	r3,1136(sp)
   2bdf4:	d8811b15 	stw	r2,1132(sp)
   2bdf8:	010001c4 	movi	r4,7
   2bdfc:	20822016 	blt	r4,r2,2c680 <___vfiprintf_internal_r+0xee0>
   2be00:	100b883a 	mov	r5,r2
   2be04:	42000204 	addi	r8,r8,8
   2be08:	10800044 	addi	r2,r2,1
   2be0c:	01002004 	movi	r4,128
   2be10:	b101de26 	beq	r22,r4,2c58c <___vfiprintf_internal_r+0xdec>
   2be14:	8521c83a 	sub	r16,r16,r20
   2be18:	0400230e 	bge	zero,r16,2bea8 <___vfiprintf_internal_r+0x708>
   2be1c:	04c00404 	movi	r19,16
   2be20:	9c030d0e 	bge	r19,r16,2ca58 <___vfiprintf_internal_r+0x12b8>
   2be24:	008000f4 	movhi	r2,3
   2be28:	108e0204 	addi	r2,r2,14344
   2be2c:	d8812615 	stw	r2,1176(sp)
   2be30:	058001c4 	movi	r22,7
   2be34:	00000506 	br	2be4c <___vfiprintf_internal_r+0x6ac>
   2be38:	28800084 	addi	r2,r5,2
   2be3c:	42000204 	addi	r8,r8,8
   2be40:	200b883a 	mov	r5,r4
   2be44:	843ffc04 	addi	r16,r16,-16
   2be48:	9c000d0e 	bge	r19,r16,2be80 <___vfiprintf_internal_r+0x6e0>
   2be4c:	18c00404 	addi	r3,r3,16
   2be50:	29000044 	addi	r4,r5,1
   2be54:	44400015 	stw	r17,0(r8)
   2be58:	44c00115 	stw	r19,4(r8)
   2be5c:	d8c11c15 	stw	r3,1136(sp)
   2be60:	d9011b15 	stw	r4,1132(sp)
   2be64:	b13ff40e 	bge	r22,r4,2be38 <_gp+0xfffeea38>
   2be68:	1801321e 	bne	r3,zero,2c334 <___vfiprintf_internal_r+0xb94>
   2be6c:	843ffc04 	addi	r16,r16,-16
   2be70:	000b883a 	mov	r5,zero
   2be74:	00800044 	movi	r2,1
   2be78:	d811883a 	mov	r8,sp
   2be7c:	9c3ff316 	blt	r19,r16,2be4c <_gp+0xfffeea4c>
   2be80:	d9012617 	ldw	r4,1176(sp)
   2be84:	1c07883a 	add	r3,r3,r16
   2be88:	44000115 	stw	r16,4(r8)
   2be8c:	41000015 	stw	r4,0(r8)
   2be90:	d8c11c15 	stw	r3,1136(sp)
   2be94:	d8811b15 	stw	r2,1132(sp)
   2be98:	010001c4 	movi	r4,7
   2be9c:	20816216 	blt	r4,r2,2c428 <___vfiprintf_internal_r+0xc88>
   2bea0:	42000204 	addi	r8,r8,8
   2bea4:	10800044 	addi	r2,r2,1
   2bea8:	d9012217 	ldw	r4,1160(sp)
   2beac:	1d07883a 	add	r3,r3,r20
   2beb0:	45000115 	stw	r20,4(r8)
   2beb4:	41000015 	stw	r4,0(r8)
   2beb8:	d8c11c15 	stw	r3,1136(sp)
   2bebc:	d8811b15 	stw	r2,1132(sp)
   2bec0:	010001c4 	movi	r4,7
   2bec4:	2081610e 	bge	r4,r2,2c44c <___vfiprintf_internal_r+0xcac>
   2bec8:	1802211e 	bne	r3,zero,2c750 <___vfiprintf_internal_r+0xfb0>
   2becc:	d8011b15 	stw	zero,1132(sp)
   2bed0:	9480010c 	andi	r18,r18,4
   2bed4:	9002171e 	bne	r18,zero,2c734 <___vfiprintf_internal_r+0xf94>
   2bed8:	d9412417 	ldw	r5,1168(sp)
   2bedc:	a9433716 	blt	r21,r5,2cbbc <___vfiprintf_internal_r+0x141c>
   2bee0:	d8812517 	ldw	r2,1172(sp)
   2bee4:	1545883a 	add	r2,r2,r21
   2bee8:	d8812515 	stw	r2,1172(sp)
   2beec:	00019a06 	br	2c558 <___vfiprintf_internal_r+0xdb8>
   2bef0:	d8c12317 	ldw	r3,1164(sp)
   2bef4:	05400044 	movi	r21,1
   2bef8:	9811883a 	mov	r8,r19
   2befc:	18800017 	ldw	r2,0(r3)
   2bf00:	18c00104 	addi	r3,r3,4
   2bf04:	d8c12315 	stw	r3,1164(sp)
   2bf08:	d8c10004 	addi	r3,sp,1024
   2bf0c:	d8011d85 	stb	zero,1142(sp)
   2bf10:	d8810005 	stb	r2,1024(sp)
   2bf14:	a829883a 	mov	r20,r21
   2bf18:	d8c12215 	stw	r3,1160(sp)
   2bf1c:	0021883a 	mov	r16,zero
   2bf20:	003f7806 	br	2bd04 <_gp+0xfffee904>
   2bf24:	94800414 	ori	r18,r18,16
   2bf28:	9080080c 	andi	r2,r18,32
   2bf2c:	9811883a 	mov	r8,r19
   2bf30:	10009026 	beq	r2,zero,2c174 <___vfiprintf_internal_r+0x9d4>
   2bf34:	d8812317 	ldw	r2,1164(sp)
   2bf38:	d8c12317 	ldw	r3,1164(sp)
   2bf3c:	14c00017 	ldw	r19,0(r2)
   2bf40:	15400117 	ldw	r21,4(r2)
   2bf44:	18c00204 	addi	r3,r3,8
   2bf48:	d8c12315 	stw	r3,1164(sp)
   2bf4c:	0005883a 	mov	r2,zero
   2bf50:	9d46b03a 	or	r3,r19,r21
   2bf54:	d8011d85 	stb	zero,1142(sp)
   2bf58:	8029883a 	mov	r20,r16
   2bf5c:	002d883a 	mov	r22,zero
   2bf60:	003f4606 	br	2bc7c <_gp+0xfffee87c>
   2bf64:	94800414 	ori	r18,r18,16
   2bf68:	9080080c 	andi	r2,r18,32
   2bf6c:	9811883a 	mov	r8,r19
   2bf70:	10006226 	beq	r2,zero,2c0fc <___vfiprintf_internal_r+0x95c>
   2bf74:	d9012317 	ldw	r4,1164(sp)
   2bf78:	00800044 	movi	r2,1
   2bf7c:	24c00017 	ldw	r19,0(r4)
   2bf80:	25400117 	ldw	r21,4(r4)
   2bf84:	21000204 	addi	r4,r4,8
   2bf88:	d9012315 	stw	r4,1164(sp)
   2bf8c:	9d46b03a 	or	r3,r19,r21
   2bf90:	003ff006 	br	2bf54 <_gp+0xfffeeb54>
   2bf94:	b9800007 	ldb	r6,0(r23)
   2bf98:	00801b04 	movi	r2,108
   2bf9c:	3082b226 	beq	r6,r2,2ca68 <___vfiprintf_internal_r+0x12c8>
   2bfa0:	94800414 	ori	r18,r18,16
   2bfa4:	003e5f06 	br	2b924 <_gp+0xfffee524>
   2bfa8:	d8c12203 	ldbu	r3,1160(sp)
   2bfac:	010000f4 	movhi	r4,3
   2bfb0:	210d8c04 	addi	r4,r4,13872
   2bfb4:	d8c11d85 	stb	r3,1142(sp)
   2bfb8:	d9012715 	stw	r4,1180(sp)
   2bfbc:	90c0080c 	andi	r3,r18,32
   2bfc0:	9811883a 	mov	r8,r19
   2bfc4:	d8812317 	ldw	r2,1164(sp)
   2bfc8:	18005f26 	beq	r3,zero,2c148 <___vfiprintf_internal_r+0x9a8>
   2bfcc:	d9012317 	ldw	r4,1164(sp)
   2bfd0:	14c00017 	ldw	r19,0(r2)
   2bfd4:	15400117 	ldw	r21,4(r2)
   2bfd8:	21000204 	addi	r4,r4,8
   2bfdc:	d9012315 	stw	r4,1164(sp)
   2bfe0:	9080004c 	andi	r2,r18,1
   2bfe4:	1001e226 	beq	r2,zero,2c770 <___vfiprintf_internal_r+0xfd0>
   2bfe8:	9d46b03a 	or	r3,r19,r21
   2bfec:	18024e26 	beq	r3,zero,2c928 <___vfiprintf_internal_r+0x1188>
   2bff0:	00800c04 	movi	r2,48
   2bff4:	d8811d05 	stb	r2,1140(sp)
   2bff8:	d9811d45 	stb	r6,1141(sp)
   2bffc:	94800094 	ori	r18,r18,2
   2c000:	00800084 	movi	r2,2
   2c004:	003fd306 	br	2bf54 <_gp+0xfffeeb54>
   2c008:	d9012317 	ldw	r4,1164(sp)
   2c00c:	d9412317 	ldw	r5,1164(sp)
   2c010:	21000017 	ldw	r4,0(r4)
   2c014:	28800104 	addi	r2,r5,4
   2c018:	d9012415 	stw	r4,1168(sp)
   2c01c:	203eeb16 	blt	r4,zero,2bbcc <_gp+0xfffee7cc>
   2c020:	d8812315 	stw	r2,1164(sp)
   2c024:	b9800007 	ldb	r6,0(r23)
   2c028:	003e3e06 	br	2b924 <_gp+0xfffee524>
   2c02c:	b9800007 	ldb	r6,0(r23)
   2c030:	01000a84 	movi	r4,42
   2c034:	b8800044 	addi	r2,r23,1
   2c038:	3102d226 	beq	r6,r4,2cb84 <___vfiprintf_internal_r+0x13e4>
   2c03c:	35bff404 	addi	r22,r6,-48
   2c040:	102f883a 	mov	r23,r2
   2c044:	0021883a 	mov	r16,zero
   2c048:	adbe3736 	bltu	r21,r22,2b928 <_gp+0xfffee528>
   2c04c:	0009883a 	mov	r4,zero
   2c050:	01400284 	movi	r5,10
   2c054:	002e2bc0 	call	2e2bc <__mulsi3>
   2c058:	b9800007 	ldb	r6,0(r23)
   2c05c:	b089883a 	add	r4,r22,r2
   2c060:	bdc00044 	addi	r23,r23,1
   2c064:	35bff404 	addi	r22,r6,-48
   2c068:	adbff92e 	bgeu	r21,r22,2c050 <_gp+0xfffeec50>
   2c06c:	2021883a 	mov	r16,r4
   2c070:	203e2d0e 	bge	r4,zero,2b928 <_gp+0xfffee528>
   2c074:	043fffc4 	movi	r16,-1
   2c078:	003e2b06 	br	2b928 <_gp+0xfffee528>
   2c07c:	94801014 	ori	r18,r18,64
   2c080:	b9800007 	ldb	r6,0(r23)
   2c084:	003e2706 	br	2b924 <_gp+0xfffee524>
   2c088:	94800814 	ori	r18,r18,32
   2c08c:	b9800007 	ldb	r6,0(r23)
   2c090:	003e2406 	br	2b924 <_gp+0xfffee524>
   2c094:	d9412317 	ldw	r5,1164(sp)
   2c098:	d8812317 	ldw	r2,1164(sp)
   2c09c:	d8011d85 	stb	zero,1142(sp)
   2c0a0:	29400017 	ldw	r5,0(r5)
   2c0a4:	9811883a 	mov	r8,r19
   2c0a8:	14c00104 	addi	r19,r2,4
   2c0ac:	d9412215 	stw	r5,1160(sp)
   2c0b0:	28029026 	beq	r5,zero,2caf4 <___vfiprintf_internal_r+0x1354>
   2c0b4:	d9012217 	ldw	r4,1160(sp)
   2c0b8:	80027616 	blt	r16,zero,2ca94 <___vfiprintf_internal_r+0x12f4>
   2c0bc:	000b883a 	mov	r5,zero
   2c0c0:	800d883a 	mov	r6,r16
   2c0c4:	da012a15 	stw	r8,1192(sp)
   2c0c8:	00285c40 	call	285c4 <memchr>
   2c0cc:	da012a17 	ldw	r8,1192(sp)
   2c0d0:	1002a026 	beq	r2,zero,2cb54 <___vfiprintf_internal_r+0x13b4>
   2c0d4:	d8c12217 	ldw	r3,1160(sp)
   2c0d8:	10e9c83a 	sub	r20,r2,r3
   2c0dc:	85023816 	blt	r16,r20,2c9c0 <___vfiprintf_internal_r+0x1220>
   2c0e0:	dd811d83 	ldbu	r22,1142(sp)
   2c0e4:	dcc12315 	stw	r19,1164(sp)
   2c0e8:	0021883a 	mov	r16,zero
   2c0ec:	003efd06 	br	2bce4 <_gp+0xfffee8e4>
   2c0f0:	9080080c 	andi	r2,r18,32
   2c0f4:	9811883a 	mov	r8,r19
   2c0f8:	103f9e1e 	bne	r2,zero,2bf74 <_gp+0xfffeeb74>
   2c0fc:	9080040c 	andi	r2,r18,16
   2c100:	10021726 	beq	r2,zero,2c960 <___vfiprintf_internal_r+0x11c0>
   2c104:	d9412317 	ldw	r5,1164(sp)
   2c108:	002b883a 	mov	r21,zero
   2c10c:	00800044 	movi	r2,1
   2c110:	2cc00017 	ldw	r19,0(r5)
   2c114:	29400104 	addi	r5,r5,4
   2c118:	d9412315 	stw	r5,1164(sp)
   2c11c:	9807883a 	mov	r3,r19
   2c120:	003f8c06 	br	2bf54 <_gp+0xfffeeb54>
   2c124:	d8c12203 	ldbu	r3,1160(sp)
   2c128:	010000f4 	movhi	r4,3
   2c12c:	210d9104 	addi	r4,r4,13892
   2c130:	d8c11d85 	stb	r3,1142(sp)
   2c134:	d9012715 	stw	r4,1180(sp)
   2c138:	90c0080c 	andi	r3,r18,32
   2c13c:	9811883a 	mov	r8,r19
   2c140:	d8812317 	ldw	r2,1164(sp)
   2c144:	183fa11e 	bne	r3,zero,2bfcc <_gp+0xfffeebcc>
   2c148:	90c0040c 	andi	r3,r18,16
   2c14c:	1801e526 	beq	r3,zero,2c8e4 <___vfiprintf_internal_r+0x1144>
   2c150:	d9412317 	ldw	r5,1164(sp)
   2c154:	14c00017 	ldw	r19,0(r2)
   2c158:	002b883a 	mov	r21,zero
   2c15c:	29400104 	addi	r5,r5,4
   2c160:	d9412315 	stw	r5,1164(sp)
   2c164:	003f9e06 	br	2bfe0 <_gp+0xfffeebe0>
   2c168:	9080080c 	andi	r2,r18,32
   2c16c:	9811883a 	mov	r8,r19
   2c170:	103f701e 	bne	r2,zero,2bf34 <_gp+0xfffeeb34>
   2c174:	9080040c 	andi	r2,r18,16
   2c178:	1001ef26 	beq	r2,zero,2c938 <___vfiprintf_internal_r+0x1198>
   2c17c:	d9012317 	ldw	r4,1164(sp)
   2c180:	002b883a 	mov	r21,zero
   2c184:	0005883a 	mov	r2,zero
   2c188:	24c00017 	ldw	r19,0(r4)
   2c18c:	21000104 	addi	r4,r4,4
   2c190:	d9012315 	stw	r4,1164(sp)
   2c194:	9807883a 	mov	r3,r19
   2c198:	003f6e06 	br	2bf54 <_gp+0xfffeeb54>
   2c19c:	d8c12317 	ldw	r3,1164(sp)
   2c1a0:	9811883a 	mov	r8,r19
   2c1a4:	00800c04 	movi	r2,48
   2c1a8:	1cc00017 	ldw	r19,0(r3)
   2c1ac:	010000f4 	movhi	r4,3
   2c1b0:	18c00104 	addi	r3,r3,4
   2c1b4:	d8811d05 	stb	r2,1140(sp)
   2c1b8:	210d9104 	addi	r4,r4,13892
   2c1bc:	00801e04 	movi	r2,120
   2c1c0:	d8811d45 	stb	r2,1141(sp)
   2c1c4:	d8c12315 	stw	r3,1164(sp)
   2c1c8:	002b883a 	mov	r21,zero
   2c1cc:	94800094 	ori	r18,r18,2
   2c1d0:	d9012715 	stw	r4,1180(sp)
   2c1d4:	00800084 	movi	r2,2
   2c1d8:	9807883a 	mov	r3,r19
   2c1dc:	003f5d06 	br	2bf54 <_gp+0xfffeeb54>
   2c1e0:	d8c12203 	ldbu	r3,1160(sp)
   2c1e4:	9080080c 	andi	r2,r18,32
   2c1e8:	9811883a 	mov	r8,r19
   2c1ec:	d8c11d85 	stb	r3,1142(sp)
   2c1f0:	1001b126 	beq	r2,zero,2c8b8 <___vfiprintf_internal_r+0x1118>
   2c1f4:	d9012317 	ldw	r4,1164(sp)
   2c1f8:	d9412517 	ldw	r5,1172(sp)
   2c1fc:	20800017 	ldw	r2,0(r4)
   2c200:	2807d7fa 	srai	r3,r5,31
   2c204:	21000104 	addi	r4,r4,4
   2c208:	d9012315 	stw	r4,1164(sp)
   2c20c:	11400015 	stw	r5,0(r2)
   2c210:	10c00115 	stw	r3,4(r2)
   2c214:	003d9a06 	br	2b880 <_gp+0xfffee480>
   2c218:	d8812207 	ldb	r2,1160(sp)
   2c21c:	1001c41e 	bne	r2,zero,2c930 <___vfiprintf_internal_r+0x1190>
   2c220:	00c00804 	movi	r3,32
   2c224:	d8c12205 	stb	r3,1160(sp)
   2c228:	b9800007 	ldb	r6,0(r23)
   2c22c:	003dbd06 	br	2b924 <_gp+0xfffee524>
   2c230:	00c00ac4 	movi	r3,43
   2c234:	d8c12205 	stb	r3,1160(sp)
   2c238:	b9800007 	ldb	r6,0(r23)
   2c23c:	003db906 	br	2b924 <_gp+0xfffee524>
   2c240:	d8c12203 	ldbu	r3,1160(sp)
   2c244:	9080080c 	andi	r2,r18,32
   2c248:	9811883a 	mov	r8,r19
   2c24c:	d8c11d85 	stb	r3,1142(sp)
   2c250:	d8c12317 	ldw	r3,1164(sp)
   2c254:	103e7e1e 	bne	r2,zero,2bc50 <_gp+0xfffee850>
   2c258:	9080040c 	andi	r2,r18,16
   2c25c:	1001a926 	beq	r2,zero,2c904 <___vfiprintf_internal_r+0x1164>
   2c260:	1cc00017 	ldw	r19,0(r3)
   2c264:	d9412317 	ldw	r5,1164(sp)
   2c268:	982bd7fa 	srai	r21,r19,31
   2c26c:	29400104 	addi	r5,r5,4
   2c270:	d9412315 	stw	r5,1164(sp)
   2c274:	a805883a 	mov	r2,r21
   2c278:	003e7b06 	br	2bc68 <_gp+0xfffee868>
   2c27c:	94800054 	ori	r18,r18,1
   2c280:	b9800007 	ldb	r6,0(r23)
   2c284:	003da706 	br	2b924 <_gp+0xfffee524>
   2c288:	d8c12203 	ldbu	r3,1160(sp)
   2c28c:	9811883a 	mov	r8,r19
   2c290:	d8c11d85 	stb	r3,1142(sp)
   2c294:	30005826 	beq	r6,zero,2c3f8 <___vfiprintf_internal_r+0xc58>
   2c298:	05400044 	movi	r21,1
   2c29c:	d8c10004 	addi	r3,sp,1024
   2c2a0:	d9810005 	stb	r6,1024(sp)
   2c2a4:	d8011d85 	stb	zero,1142(sp)
   2c2a8:	a829883a 	mov	r20,r21
   2c2ac:	d8c12215 	stw	r3,1160(sp)
   2c2b0:	003f1a06 	br	2bf1c <_gp+0xfffeeb1c>
   2c2b4:	d9012117 	ldw	r4,1156(sp)
   2c2b8:	d9412017 	ldw	r5,1152(sp)
   2c2bc:	d9811a04 	addi	r6,sp,1128
   2c2c0:	d9c12a15 	stw	r7,1192(sp)
   2c2c4:	db012b15 	stw	r12,1196(sp)
   2c2c8:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c2cc:	d9c12a17 	ldw	r7,1192(sp)
   2c2d0:	db012b17 	ldw	r12,1196(sp)
   2c2d4:	10004e1e 	bne	r2,zero,2c410 <___vfiprintf_internal_r+0xc70>
   2c2d8:	d9011b17 	ldw	r4,1132(sp)
   2c2dc:	d8c11c17 	ldw	r3,1136(sp)
   2c2e0:	d811883a 	mov	r8,sp
   2c2e4:	21400044 	addi	r5,r4,1
   2c2e8:	003e9d06 	br	2bd60 <_gp+0xfffee960>
   2c2ec:	d9411b17 	ldw	r5,1132(sp)
   2c2f0:	d8c11c17 	ldw	r3,1136(sp)
   2c2f4:	28800044 	addi	r2,r5,1
   2c2f8:	d9011d87 	ldb	r4,1142(sp)
   2c2fc:	203eb626 	beq	r4,zero,2bdd8 <_gp+0xfffee9d8>
   2c300:	01000044 	movi	r4,1
   2c304:	d9411d84 	addi	r5,sp,1142
   2c308:	1907883a 	add	r3,r3,r4
   2c30c:	41400015 	stw	r5,0(r8)
   2c310:	41000115 	stw	r4,4(r8)
   2c314:	d8c11c15 	stw	r3,1136(sp)
   2c318:	d8811b15 	stw	r2,1132(sp)
   2c31c:	014001c4 	movi	r5,7
   2c320:	2880ce16 	blt	r5,r2,2c65c <___vfiprintf_internal_r+0xebc>
   2c324:	100b883a 	mov	r5,r2
   2c328:	42000204 	addi	r8,r8,8
   2c32c:	10800044 	addi	r2,r2,1
   2c330:	003ea906 	br	2bdd8 <_gp+0xfffee9d8>
   2c334:	d9012117 	ldw	r4,1156(sp)
   2c338:	d9412017 	ldw	r5,1152(sp)
   2c33c:	d9811a04 	addi	r6,sp,1128
   2c340:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c344:	1000321e 	bne	r2,zero,2c410 <___vfiprintf_internal_r+0xc70>
   2c348:	d9411b17 	ldw	r5,1132(sp)
   2c34c:	d8c11c17 	ldw	r3,1136(sp)
   2c350:	d811883a 	mov	r8,sp
   2c354:	28800044 	addi	r2,r5,1
   2c358:	003eba06 	br	2be44 <_gp+0xfffeea44>
   2c35c:	10803fcc 	andi	r2,r2,255
   2c360:	00c00044 	movi	r3,1
   2c364:	10fe4d1e 	bne	r2,r3,2bc9c <_gp+0xfffee89c>
   2c368:	a800021e 	bne	r21,zero,2c374 <___vfiprintf_internal_r+0xbd4>
   2c36c:	00800244 	movi	r2,9
   2c370:	14c01b2e 	bgeu	r2,r19,2c3e0 <___vfiprintf_internal_r+0xc40>
   2c374:	dc012215 	stw	r16,1160(sp)
   2c378:	dd010a04 	addi	r20,sp,1064
   2c37c:	a821883a 	mov	r16,r21
   2c380:	402b883a 	mov	r21,r8
   2c384:	9809883a 	mov	r4,r19
   2c388:	800b883a 	mov	r5,r16
   2c38c:	01800284 	movi	r6,10
   2c390:	000f883a 	mov	r7,zero
   2c394:	002db740 	call	2db74 <__umoddi3>
   2c398:	10800c04 	addi	r2,r2,48
   2c39c:	a53fffc4 	addi	r20,r20,-1
   2c3a0:	9809883a 	mov	r4,r19
   2c3a4:	800b883a 	mov	r5,r16
   2c3a8:	01800284 	movi	r6,10
   2c3ac:	000f883a 	mov	r7,zero
   2c3b0:	a0800005 	stb	r2,0(r20)
   2c3b4:	002d5340 	call	2d534 <__udivdi3>
   2c3b8:	1027883a 	mov	r19,r2
   2c3bc:	10c4b03a 	or	r2,r2,r3
   2c3c0:	1821883a 	mov	r16,r3
   2c3c4:	103fef1e 	bne	r2,zero,2c384 <_gp+0xfffeef84>
   2c3c8:	d9011e17 	ldw	r4,1144(sp)
   2c3cc:	dc012217 	ldw	r16,1160(sp)
   2c3d0:	a811883a 	mov	r8,r21
   2c3d4:	dd012215 	stw	r20,1160(sp)
   2c3d8:	2529c83a 	sub	r20,r4,r20
   2c3dc:	003e4106 	br	2bce4 <_gp+0xfffee8e4>
   2c3e0:	9cc00c04 	addi	r19,r19,48
   2c3e4:	d8c109c4 	addi	r3,sp,1063
   2c3e8:	dcc109c5 	stb	r19,1063(sp)
   2c3ec:	dd012817 	ldw	r20,1184(sp)
   2c3f0:	d8c12215 	stw	r3,1160(sp)
   2c3f4:	003e3b06 	br	2bce4 <_gp+0xfffee8e4>
   2c3f8:	d8811c17 	ldw	r2,1136(sp)
   2c3fc:	10000426 	beq	r2,zero,2c410 <___vfiprintf_internal_r+0xc70>
   2c400:	d9012117 	ldw	r4,1156(sp)
   2c404:	d9412017 	ldw	r5,1152(sp)
   2c408:	d9811a04 	addi	r6,sp,1128
   2c40c:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c410:	d9412017 	ldw	r5,1152(sp)
   2c414:	2880030b 	ldhu	r2,12(r5)
   2c418:	1080100c 	andi	r2,r2,64
   2c41c:	103ddc1e 	bne	r2,zero,2bb90 <_gp+0xfffee790>
   2c420:	d8812517 	ldw	r2,1172(sp)
   2c424:	003ddb06 	br	2bb94 <_gp+0xfffee794>
   2c428:	1801061e 	bne	r3,zero,2c844 <___vfiprintf_internal_r+0x10a4>
   2c42c:	d8c12217 	ldw	r3,1160(sp)
   2c430:	00800044 	movi	r2,1
   2c434:	dd000115 	stw	r20,4(sp)
   2c438:	d8c00015 	stw	r3,0(sp)
   2c43c:	dd011c15 	stw	r20,1136(sp)
   2c440:	d8811b15 	stw	r2,1132(sp)
   2c444:	a007883a 	mov	r3,r20
   2c448:	d811883a 	mov	r8,sp
   2c44c:	42000204 	addi	r8,r8,8
   2c450:	9480010c 	andi	r18,r18,4
   2c454:	90003426 	beq	r18,zero,2c528 <___vfiprintf_internal_r+0xd88>
   2c458:	d9412417 	ldw	r5,1168(sp)
   2c45c:	2d65c83a 	sub	r18,r5,r21
   2c460:	0480310e 	bge	zero,r18,2c528 <___vfiprintf_internal_r+0xd88>
   2c464:	04000404 	movi	r16,16
   2c468:	8481ad0e 	bge	r16,r18,2cb20 <___vfiprintf_internal_r+0x1380>
   2c46c:	014000f4 	movhi	r5,3
   2c470:	294e0604 	addi	r5,r5,14360
   2c474:	d9011b17 	ldw	r4,1132(sp)
   2c478:	d9412615 	stw	r5,1176(sp)
   2c47c:	04c001c4 	movi	r19,7
   2c480:	dd012117 	ldw	r20,1156(sp)
   2c484:	dd812017 	ldw	r22,1152(sp)
   2c488:	00000506 	br	2c4a0 <___vfiprintf_internal_r+0xd00>
   2c48c:	21400084 	addi	r5,r4,2
   2c490:	42000204 	addi	r8,r8,8
   2c494:	1009883a 	mov	r4,r2
   2c498:	94bffc04 	addi	r18,r18,-16
   2c49c:	84800d0e 	bge	r16,r18,2c4d4 <___vfiprintf_internal_r+0xd34>
   2c4a0:	18c00404 	addi	r3,r3,16
   2c4a4:	20800044 	addi	r2,r4,1
   2c4a8:	47000015 	stw	fp,0(r8)
   2c4ac:	44000115 	stw	r16,4(r8)
   2c4b0:	d8c11c15 	stw	r3,1136(sp)
   2c4b4:	d8811b15 	stw	r2,1132(sp)
   2c4b8:	98bff40e 	bge	r19,r2,2c48c <_gp+0xfffef08c>
   2c4bc:	1800291e 	bne	r3,zero,2c564 <___vfiprintf_internal_r+0xdc4>
   2c4c0:	94bffc04 	addi	r18,r18,-16
   2c4c4:	0009883a 	mov	r4,zero
   2c4c8:	01400044 	movi	r5,1
   2c4cc:	d811883a 	mov	r8,sp
   2c4d0:	84bff316 	blt	r16,r18,2c4a0 <_gp+0xfffef0a0>
   2c4d4:	d8812617 	ldw	r2,1176(sp)
   2c4d8:	1c87883a 	add	r3,r3,r18
   2c4dc:	44800115 	stw	r18,4(r8)
   2c4e0:	40800015 	stw	r2,0(r8)
   2c4e4:	d8c11c15 	stw	r3,1136(sp)
   2c4e8:	d9411b15 	stw	r5,1132(sp)
   2c4ec:	008001c4 	movi	r2,7
   2c4f0:	11400d0e 	bge	r2,r5,2c528 <___vfiprintf_internal_r+0xd88>
   2c4f4:	1800061e 	bne	r3,zero,2c510 <___vfiprintf_internal_r+0xd70>
   2c4f8:	d8c12417 	ldw	r3,1168(sp)
   2c4fc:	a8c12e16 	blt	r21,r3,2c9b8 <___vfiprintf_internal_r+0x1218>
   2c500:	d9012517 	ldw	r4,1172(sp)
   2c504:	2549883a 	add	r4,r4,r21
   2c508:	d9012515 	stw	r4,1172(sp)
   2c50c:	00001206 	br	2c558 <___vfiprintf_internal_r+0xdb8>
   2c510:	d9012117 	ldw	r4,1156(sp)
   2c514:	d9412017 	ldw	r5,1152(sp)
   2c518:	d9811a04 	addi	r6,sp,1128
   2c51c:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c520:	103fbb1e 	bne	r2,zero,2c410 <_gp+0xfffef010>
   2c524:	d8c11c17 	ldw	r3,1136(sp)
   2c528:	d8812417 	ldw	r2,1168(sp)
   2c52c:	a880010e 	bge	r21,r2,2c534 <___vfiprintf_internal_r+0xd94>
   2c530:	102b883a 	mov	r21,r2
   2c534:	d9012517 	ldw	r4,1172(sp)
   2c538:	2549883a 	add	r4,r4,r21
   2c53c:	d9012515 	stw	r4,1172(sp)
   2c540:	18000526 	beq	r3,zero,2c558 <___vfiprintf_internal_r+0xdb8>
   2c544:	d9012117 	ldw	r4,1156(sp)
   2c548:	d9412017 	ldw	r5,1152(sp)
   2c54c:	d9811a04 	addi	r6,sp,1128
   2c550:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c554:	103fae1e 	bne	r2,zero,2c410 <_gp+0xfffef010>
   2c558:	d8011b15 	stw	zero,1132(sp)
   2c55c:	d811883a 	mov	r8,sp
   2c560:	003cc706 	br	2b880 <_gp+0xfffee480>
   2c564:	a009883a 	mov	r4,r20
   2c568:	b00b883a 	mov	r5,r22
   2c56c:	d9811a04 	addi	r6,sp,1128
   2c570:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c574:	103fa61e 	bne	r2,zero,2c410 <_gp+0xfffef010>
   2c578:	d9011b17 	ldw	r4,1132(sp)
   2c57c:	d8c11c17 	ldw	r3,1136(sp)
   2c580:	d811883a 	mov	r8,sp
   2c584:	21400044 	addi	r5,r4,1
   2c588:	003fc306 	br	2c498 <_gp+0xfffef098>
   2c58c:	d9012417 	ldw	r4,1168(sp)
   2c590:	256dc83a 	sub	r22,r4,r21
   2c594:	05be1f0e 	bge	zero,r22,2be14 <_gp+0xfffeea14>
   2c598:	04c00404 	movi	r19,16
   2c59c:	9d81720e 	bge	r19,r22,2cb68 <___vfiprintf_internal_r+0x13c8>
   2c5a0:	008000f4 	movhi	r2,3
   2c5a4:	108e0204 	addi	r2,r2,14344
   2c5a8:	d8812615 	stw	r2,1176(sp)
   2c5ac:	028001c4 	movi	r10,7
   2c5b0:	00000506 	br	2c5c8 <___vfiprintf_internal_r+0xe28>
   2c5b4:	29000084 	addi	r4,r5,2
   2c5b8:	42000204 	addi	r8,r8,8
   2c5bc:	100b883a 	mov	r5,r2
   2c5c0:	b5bffc04 	addi	r22,r22,-16
   2c5c4:	9d800d0e 	bge	r19,r22,2c5fc <___vfiprintf_internal_r+0xe5c>
   2c5c8:	18c00404 	addi	r3,r3,16
   2c5cc:	28800044 	addi	r2,r5,1
   2c5d0:	44400015 	stw	r17,0(r8)
   2c5d4:	44c00115 	stw	r19,4(r8)
   2c5d8:	d8c11c15 	stw	r3,1136(sp)
   2c5dc:	d8811b15 	stw	r2,1132(sp)
   2c5e0:	50bff40e 	bge	r10,r2,2c5b4 <_gp+0xfffef1b4>
   2c5e4:	1800111e 	bne	r3,zero,2c62c <___vfiprintf_internal_r+0xe8c>
   2c5e8:	b5bffc04 	addi	r22,r22,-16
   2c5ec:	000b883a 	mov	r5,zero
   2c5f0:	01000044 	movi	r4,1
   2c5f4:	d811883a 	mov	r8,sp
   2c5f8:	9dbff316 	blt	r19,r22,2c5c8 <_gp+0xfffef1c8>
   2c5fc:	d9412617 	ldw	r5,1176(sp)
   2c600:	1d87883a 	add	r3,r3,r22
   2c604:	45800115 	stw	r22,4(r8)
   2c608:	41400015 	stw	r5,0(r8)
   2c60c:	d8c11c15 	stw	r3,1136(sp)
   2c610:	d9011b15 	stw	r4,1132(sp)
   2c614:	008001c4 	movi	r2,7
   2c618:	11008516 	blt	r2,r4,2c830 <___vfiprintf_internal_r+0x1090>
   2c61c:	42000204 	addi	r8,r8,8
   2c620:	20800044 	addi	r2,r4,1
   2c624:	200b883a 	mov	r5,r4
   2c628:	003dfa06 	br	2be14 <_gp+0xfffeea14>
   2c62c:	d9012117 	ldw	r4,1156(sp)
   2c630:	d9412017 	ldw	r5,1152(sp)
   2c634:	d9811a04 	addi	r6,sp,1128
   2c638:	da812a15 	stw	r10,1192(sp)
   2c63c:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c640:	da812a17 	ldw	r10,1192(sp)
   2c644:	103f721e 	bne	r2,zero,2c410 <_gp+0xfffef010>
   2c648:	d9411b17 	ldw	r5,1132(sp)
   2c64c:	d8c11c17 	ldw	r3,1136(sp)
   2c650:	d811883a 	mov	r8,sp
   2c654:	29000044 	addi	r4,r5,1
   2c658:	003fd906 	br	2c5c0 <_gp+0xfffef1c0>
   2c65c:	1800681e 	bne	r3,zero,2c800 <___vfiprintf_internal_r+0x1060>
   2c660:	50004d26 	beq	r10,zero,2c798 <___vfiprintf_internal_r+0xff8>
   2c664:	d8811d04 	addi	r2,sp,1140
   2c668:	00c00084 	movi	r3,2
   2c66c:	d8800015 	stw	r2,0(sp)
   2c670:	d8c00115 	stw	r3,4(sp)
   2c674:	2005883a 	mov	r2,r4
   2c678:	d811883a 	mov	r8,sp
   2c67c:	003de006 	br	2be00 <_gp+0xfffeea00>
   2c680:	1800551e 	bne	r3,zero,2c7d8 <___vfiprintf_internal_r+0x1038>
   2c684:	000b883a 	mov	r5,zero
   2c688:	00800044 	movi	r2,1
   2c68c:	d811883a 	mov	r8,sp
   2c690:	003dde06 	br	2be0c <_gp+0xfffeea0c>
   2c694:	10803fcc 	andi	r2,r2,255
   2c698:	1000191e 	bne	r2,zero,2c700 <___vfiprintf_internal_r+0xf60>
   2c69c:	9080004c 	andi	r2,r18,1
   2c6a0:	10001726 	beq	r2,zero,2c700 <___vfiprintf_internal_r+0xf60>
   2c6a4:	00800c04 	movi	r2,48
   2c6a8:	d8c109c4 	addi	r3,sp,1063
   2c6ac:	d88109c5 	stb	r2,1063(sp)
   2c6b0:	dd012817 	ldw	r20,1184(sp)
   2c6b4:	d8c12215 	stw	r3,1160(sp)
   2c6b8:	003d8a06 	br	2bce4 <_gp+0xfffee8e4>
   2c6bc:	d9012717 	ldw	r4,1180(sp)
   2c6c0:	dd010a04 	addi	r20,sp,1064
   2c6c4:	988003cc 	andi	r2,r19,15
   2c6c8:	a806973a 	slli	r3,r21,28
   2c6cc:	2085883a 	add	r2,r4,r2
   2c6d0:	9826d13a 	srli	r19,r19,4
   2c6d4:	10800003 	ldbu	r2,0(r2)
   2c6d8:	a82ad13a 	srli	r21,r21,4
   2c6dc:	a53fffc4 	addi	r20,r20,-1
   2c6e0:	1ce6b03a 	or	r19,r3,r19
   2c6e4:	a0800005 	stb	r2,0(r20)
   2c6e8:	9d44b03a 	or	r2,r19,r21
   2c6ec:	103ff51e 	bne	r2,zero,2c6c4 <_gp+0xfffef2c4>
   2c6f0:	d9411e17 	ldw	r5,1144(sp)
   2c6f4:	dd012215 	stw	r20,1160(sp)
   2c6f8:	2d29c83a 	sub	r20,r5,r20
   2c6fc:	003d7906 	br	2bce4 <_gp+0xfffee8e4>
   2c700:	d8c10a04 	addi	r3,sp,1064
   2c704:	d8c12215 	stw	r3,1160(sp)
   2c708:	003d7606 	br	2bce4 <_gp+0xfffee8e4>
   2c70c:	18009e1e 	bne	r3,zero,2c988 <___vfiprintf_internal_r+0x11e8>
   2c710:	d8811d87 	ldb	r2,1142(sp)
   2c714:	10005f26 	beq	r2,zero,2c894 <___vfiprintf_internal_r+0x10f4>
   2c718:	00c00044 	movi	r3,1
   2c71c:	d9011d84 	addi	r4,sp,1142
   2c720:	1805883a 	mov	r2,r3
   2c724:	d9000015 	stw	r4,0(sp)
   2c728:	d8c00115 	stw	r3,4(sp)
   2c72c:	d811883a 	mov	r8,sp
   2c730:	003efc06 	br	2c324 <_gp+0xfffeef24>
   2c734:	d9412417 	ldw	r5,1168(sp)
   2c738:	d811883a 	mov	r8,sp
   2c73c:	2d65c83a 	sub	r18,r5,r21
   2c740:	04bf4816 	blt	zero,r18,2c464 <_gp+0xfffef064>
   2c744:	003f6c06 	br	2c4f8 <_gp+0xfffef0f8>
   2c748:	b829883a 	mov	r20,r23
   2c74c:	003c6906 	br	2b8f4 <_gp+0xfffee4f4>
   2c750:	d9012117 	ldw	r4,1156(sp)
   2c754:	d9412017 	ldw	r5,1152(sp)
   2c758:	d9811a04 	addi	r6,sp,1128
   2c75c:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c760:	103f2b1e 	bne	r2,zero,2c410 <_gp+0xfffef010>
   2c764:	d8c11c17 	ldw	r3,1136(sp)
   2c768:	d811883a 	mov	r8,sp
   2c76c:	003f3806 	br	2c450 <_gp+0xfffef050>
   2c770:	00800084 	movi	r2,2
   2c774:	9d46b03a 	or	r3,r19,r21
   2c778:	003df606 	br	2bf54 <_gp+0xfffeeb54>
   2c77c:	d9012117 	ldw	r4,1156(sp)
   2c780:	d9412017 	ldw	r5,1152(sp)
   2c784:	d9811a04 	addi	r6,sp,1128
   2c788:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c78c:	103f201e 	bne	r2,zero,2c410 <_gp+0xfffef010>
   2c790:	d811883a 	mov	r8,sp
   2c794:	003cc606 	br	2bab0 <_gp+0xfffee6b0>
   2c798:	000b883a 	mov	r5,zero
   2c79c:	2005883a 	mov	r2,r4
   2c7a0:	d811883a 	mov	r8,sp
   2c7a4:	003d9906 	br	2be0c <_gp+0xfffeea0c>
   2c7a8:	10803fcc 	andi	r2,r2,255
   2c7ac:	1080201c 	xori	r2,r2,128
   2c7b0:	10bfe004 	addi	r2,r2,-128
   2c7b4:	01000c04 	movi	r4,48
   2c7b8:	1100b226 	beq	r2,r4,2ca84 <___vfiprintf_internal_r+0x12e4>
   2c7bc:	d9412217 	ldw	r5,1160(sp)
   2c7c0:	d8811e17 	ldw	r2,1144(sp)
   2c7c4:	193fffc5 	stb	r4,-1(r3)
   2c7c8:	297fffc4 	addi	r5,r5,-1
   2c7cc:	d9412215 	stw	r5,1160(sp)
   2c7d0:	1169c83a 	sub	r20,r2,r5
   2c7d4:	003d4306 	br	2bce4 <_gp+0xfffee8e4>
   2c7d8:	d9012117 	ldw	r4,1156(sp)
   2c7dc:	d9412017 	ldw	r5,1152(sp)
   2c7e0:	d9811a04 	addi	r6,sp,1128
   2c7e4:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c7e8:	103f091e 	bne	r2,zero,2c410 <_gp+0xfffef010>
   2c7ec:	d9411b17 	ldw	r5,1132(sp)
   2c7f0:	d8c11c17 	ldw	r3,1136(sp)
   2c7f4:	d811883a 	mov	r8,sp
   2c7f8:	28800044 	addi	r2,r5,1
   2c7fc:	003d8306 	br	2be0c <_gp+0xfffeea0c>
   2c800:	d9012117 	ldw	r4,1156(sp)
   2c804:	d9412017 	ldw	r5,1152(sp)
   2c808:	d9811a04 	addi	r6,sp,1128
   2c80c:	da812a15 	stw	r10,1192(sp)
   2c810:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c814:	da812a17 	ldw	r10,1192(sp)
   2c818:	103efd1e 	bne	r2,zero,2c410 <_gp+0xfffef010>
   2c81c:	d9411b17 	ldw	r5,1132(sp)
   2c820:	d8c11c17 	ldw	r3,1136(sp)
   2c824:	d811883a 	mov	r8,sp
   2c828:	28800044 	addi	r2,r5,1
   2c82c:	003d6a06 	br	2bdd8 <_gp+0xfffee9d8>
   2c830:	1800a01e 	bne	r3,zero,2cab4 <___vfiprintf_internal_r+0x1314>
   2c834:	000b883a 	mov	r5,zero
   2c838:	00800044 	movi	r2,1
   2c83c:	d811883a 	mov	r8,sp
   2c840:	003d7406 	br	2be14 <_gp+0xfffeea14>
   2c844:	d9012117 	ldw	r4,1156(sp)
   2c848:	d9412017 	ldw	r5,1152(sp)
   2c84c:	d9811a04 	addi	r6,sp,1128
   2c850:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c854:	103eee1e 	bne	r2,zero,2c410 <_gp+0xfffef010>
   2c858:	d8811b17 	ldw	r2,1132(sp)
   2c85c:	d8c11c17 	ldw	r3,1136(sp)
   2c860:	d811883a 	mov	r8,sp
   2c864:	10800044 	addi	r2,r2,1
   2c868:	003d8f06 	br	2bea8 <_gp+0xfffeeaa8>
   2c86c:	04e7c83a 	sub	r19,zero,r19
   2c870:	9804c03a 	cmpne	r2,r19,zero
   2c874:	056bc83a 	sub	r21,zero,r21
   2c878:	a8abc83a 	sub	r21,r21,r2
   2c87c:	05800b44 	movi	r22,45
   2c880:	dd811d85 	stb	r22,1142(sp)
   2c884:	8029883a 	mov	r20,r16
   2c888:	00800044 	movi	r2,1
   2c88c:	9d46b03a 	or	r3,r19,r21
   2c890:	003cfa06 	br	2bc7c <_gp+0xfffee87c>
   2c894:	000b883a 	mov	r5,zero
   2c898:	00800044 	movi	r2,1
   2c89c:	d811883a 	mov	r8,sp
   2c8a0:	503d5a26 	beq	r10,zero,2be0c <_gp+0xfffeea0c>
   2c8a4:	00c00084 	movi	r3,2
   2c8a8:	d9011d04 	addi	r4,sp,1140
   2c8ac:	d9000015 	stw	r4,0(sp)
   2c8b0:	d8c00115 	stw	r3,4(sp)
   2c8b4:	003d5206 	br	2be00 <_gp+0xfffeea00>
   2c8b8:	9080040c 	andi	r2,r18,16
   2c8bc:	1000421e 	bne	r2,zero,2c9c8 <___vfiprintf_internal_r+0x1228>
   2c8c0:	9480100c 	andi	r18,r18,64
   2c8c4:	90009c26 	beq	r18,zero,2cb38 <___vfiprintf_internal_r+0x1398>
   2c8c8:	d9412317 	ldw	r5,1164(sp)
   2c8cc:	d8c12517 	ldw	r3,1172(sp)
   2c8d0:	28800017 	ldw	r2,0(r5)
   2c8d4:	29400104 	addi	r5,r5,4
   2c8d8:	d9412315 	stw	r5,1164(sp)
   2c8dc:	10c0000d 	sth	r3,0(r2)
   2c8e0:	003be706 	br	2b880 <_gp+0xfffee480>
   2c8e4:	90c0100c 	andi	r3,r18,64
   2c8e8:	18003e26 	beq	r3,zero,2c9e4 <___vfiprintf_internal_r+0x1244>
   2c8ec:	d8c12317 	ldw	r3,1164(sp)
   2c8f0:	14c0000b 	ldhu	r19,0(r2)
   2c8f4:	002b883a 	mov	r21,zero
   2c8f8:	18c00104 	addi	r3,r3,4
   2c8fc:	d8c12315 	stw	r3,1164(sp)
   2c900:	003db706 	br	2bfe0 <_gp+0xfffeebe0>
   2c904:	9080100c 	andi	r2,r18,64
   2c908:	10004c26 	beq	r2,zero,2ca3c <___vfiprintf_internal_r+0x129c>
   2c90c:	1cc0000f 	ldh	r19,0(r3)
   2c910:	d8812317 	ldw	r2,1164(sp)
   2c914:	982bd7fa 	srai	r21,r19,31
   2c918:	10800104 	addi	r2,r2,4
   2c91c:	d8812315 	stw	r2,1164(sp)
   2c920:	a805883a 	mov	r2,r21
   2c924:	003cd006 	br	2bc68 <_gp+0xfffee868>
   2c928:	00800084 	movi	r2,2
   2c92c:	003d8906 	br	2bf54 <_gp+0xfffeeb54>
   2c930:	b9800007 	ldb	r6,0(r23)
   2c934:	003bfb06 	br	2b924 <_gp+0xfffee524>
   2c938:	9080100c 	andi	r2,r18,64
   2c93c:	10003726 	beq	r2,zero,2ca1c <___vfiprintf_internal_r+0x127c>
   2c940:	d9412317 	ldw	r5,1164(sp)
   2c944:	002b883a 	mov	r21,zero
   2c948:	0005883a 	mov	r2,zero
   2c94c:	2cc0000b 	ldhu	r19,0(r5)
   2c950:	29400104 	addi	r5,r5,4
   2c954:	d9412315 	stw	r5,1164(sp)
   2c958:	9807883a 	mov	r3,r19
   2c95c:	003d7d06 	br	2bf54 <_gp+0xfffeeb54>
   2c960:	9080100c 	andi	r2,r18,64
   2c964:	10002526 	beq	r2,zero,2c9fc <___vfiprintf_internal_r+0x125c>
   2c968:	d8812317 	ldw	r2,1164(sp)
   2c96c:	002b883a 	mov	r21,zero
   2c970:	14c0000b 	ldhu	r19,0(r2)
   2c974:	10800104 	addi	r2,r2,4
   2c978:	d8812315 	stw	r2,1164(sp)
   2c97c:	9807883a 	mov	r3,r19
   2c980:	00800044 	movi	r2,1
   2c984:	003d7306 	br	2bf54 <_gp+0xfffeeb54>
   2c988:	d9012117 	ldw	r4,1156(sp)
   2c98c:	d9412017 	ldw	r5,1152(sp)
   2c990:	d9811a04 	addi	r6,sp,1128
   2c994:	da812a15 	stw	r10,1192(sp)
   2c998:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2c99c:	da812a17 	ldw	r10,1192(sp)
   2c9a0:	103e9b1e 	bne	r2,zero,2c410 <_gp+0xfffef010>
   2c9a4:	d9411b17 	ldw	r5,1132(sp)
   2c9a8:	d8c11c17 	ldw	r3,1136(sp)
   2c9ac:	d811883a 	mov	r8,sp
   2c9b0:	28800044 	addi	r2,r5,1
   2c9b4:	003e5006 	br	2c2f8 <_gp+0xfffeeef8>
   2c9b8:	182b883a 	mov	r21,r3
   2c9bc:	003ed006 	br	2c500 <_gp+0xfffef100>
   2c9c0:	8029883a 	mov	r20,r16
   2c9c4:	003dc606 	br	2c0e0 <_gp+0xfffeece0>
   2c9c8:	d8c12317 	ldw	r3,1164(sp)
   2c9cc:	d9012517 	ldw	r4,1172(sp)
   2c9d0:	18800017 	ldw	r2,0(r3)
   2c9d4:	18c00104 	addi	r3,r3,4
   2c9d8:	d8c12315 	stw	r3,1164(sp)
   2c9dc:	11000015 	stw	r4,0(r2)
   2c9e0:	003ba706 	br	2b880 <_gp+0xfffee480>
   2c9e4:	d9012317 	ldw	r4,1164(sp)
   2c9e8:	14c00017 	ldw	r19,0(r2)
   2c9ec:	002b883a 	mov	r21,zero
   2c9f0:	21000104 	addi	r4,r4,4
   2c9f4:	d9012315 	stw	r4,1164(sp)
   2c9f8:	003d7906 	br	2bfe0 <_gp+0xfffeebe0>
   2c9fc:	d8c12317 	ldw	r3,1164(sp)
   2ca00:	002b883a 	mov	r21,zero
   2ca04:	00800044 	movi	r2,1
   2ca08:	1cc00017 	ldw	r19,0(r3)
   2ca0c:	18c00104 	addi	r3,r3,4
   2ca10:	d8c12315 	stw	r3,1164(sp)
   2ca14:	9807883a 	mov	r3,r19
   2ca18:	003d4e06 	br	2bf54 <_gp+0xfffeeb54>
   2ca1c:	d8812317 	ldw	r2,1164(sp)
   2ca20:	002b883a 	mov	r21,zero
   2ca24:	14c00017 	ldw	r19,0(r2)
   2ca28:	10800104 	addi	r2,r2,4
   2ca2c:	d8812315 	stw	r2,1164(sp)
   2ca30:	9807883a 	mov	r3,r19
   2ca34:	0005883a 	mov	r2,zero
   2ca38:	003d4606 	br	2bf54 <_gp+0xfffeeb54>
   2ca3c:	1cc00017 	ldw	r19,0(r3)
   2ca40:	d8c12317 	ldw	r3,1164(sp)
   2ca44:	982bd7fa 	srai	r21,r19,31
   2ca48:	18c00104 	addi	r3,r3,4
   2ca4c:	d8c12315 	stw	r3,1164(sp)
   2ca50:	a805883a 	mov	r2,r21
   2ca54:	003c8406 	br	2bc68 <_gp+0xfffee868>
   2ca58:	010000f4 	movhi	r4,3
   2ca5c:	210e0204 	addi	r4,r4,14344
   2ca60:	d9012615 	stw	r4,1176(sp)
   2ca64:	003d0606 	br	2be80 <_gp+0xfffeea80>
   2ca68:	b9800043 	ldbu	r6,1(r23)
   2ca6c:	94800814 	ori	r18,r18,32
   2ca70:	bdc00044 	addi	r23,r23,1
   2ca74:	31803fcc 	andi	r6,r6,255
   2ca78:	3180201c 	xori	r6,r6,128
   2ca7c:	31bfe004 	addi	r6,r6,-128
   2ca80:	003ba806 	br	2b924 <_gp+0xfffee524>
   2ca84:	d8811e17 	ldw	r2,1144(sp)
   2ca88:	d8c12217 	ldw	r3,1160(sp)
   2ca8c:	10e9c83a 	sub	r20,r2,r3
   2ca90:	003c9406 	br	2bce4 <_gp+0xfffee8e4>
   2ca94:	da012a15 	stw	r8,1192(sp)
   2ca98:	0020d780 	call	20d78 <strlen>
   2ca9c:	1029883a 	mov	r20,r2
   2caa0:	dd811d83 	ldbu	r22,1142(sp)
   2caa4:	dcc12315 	stw	r19,1164(sp)
   2caa8:	0021883a 	mov	r16,zero
   2caac:	da012a17 	ldw	r8,1192(sp)
   2cab0:	003c8c06 	br	2bce4 <_gp+0xfffee8e4>
   2cab4:	d9012117 	ldw	r4,1156(sp)
   2cab8:	d9412017 	ldw	r5,1152(sp)
   2cabc:	d9811a04 	addi	r6,sp,1128
   2cac0:	002b68c0 	call	2b68c <__sprint_r.part.0>
   2cac4:	103e521e 	bne	r2,zero,2c410 <_gp+0xfffef010>
   2cac8:	d9411b17 	ldw	r5,1132(sp)
   2cacc:	d8c11c17 	ldw	r3,1136(sp)
   2cad0:	d811883a 	mov	r8,sp
   2cad4:	28800044 	addi	r2,r5,1
   2cad8:	003cce06 	br	2be14 <_gp+0xfffeea14>
   2cadc:	014000f4 	movhi	r5,3
   2cae0:	294e0604 	addi	r5,r5,14360
   2cae4:	d9412615 	stw	r5,1176(sp)
   2cae8:	d9411b17 	ldw	r5,1132(sp)
   2caec:	29400044 	addi	r5,r5,1
   2caf0:	003cad06 	br	2bda8 <_gp+0xfffee9a8>
   2caf4:	00800184 	movi	r2,6
   2caf8:	1400012e 	bgeu	r2,r16,2cb00 <___vfiprintf_internal_r+0x1360>
   2cafc:	1021883a 	mov	r16,r2
   2cb00:	8029883a 	mov	r20,r16
   2cb04:	802b883a 	mov	r21,r16
   2cb08:	80001c16 	blt	r16,zero,2cb7c <___vfiprintf_internal_r+0x13dc>
   2cb0c:	00c000f4 	movhi	r3,3
   2cb10:	18cd9604 	addi	r3,r3,13912
   2cb14:	dcc12315 	stw	r19,1164(sp)
   2cb18:	d8c12215 	stw	r3,1160(sp)
   2cb1c:	003cff06 	br	2bf1c <_gp+0xfffeeb1c>
   2cb20:	d9411b17 	ldw	r5,1132(sp)
   2cb24:	008000f4 	movhi	r2,3
   2cb28:	108e0604 	addi	r2,r2,14360
   2cb2c:	d8812615 	stw	r2,1176(sp)
   2cb30:	29400044 	addi	r5,r5,1
   2cb34:	003e6706 	br	2c4d4 <_gp+0xfffef0d4>
   2cb38:	d9012317 	ldw	r4,1164(sp)
   2cb3c:	d9412517 	ldw	r5,1172(sp)
   2cb40:	20800017 	ldw	r2,0(r4)
   2cb44:	21000104 	addi	r4,r4,4
   2cb48:	d9012315 	stw	r4,1164(sp)
   2cb4c:	11400015 	stw	r5,0(r2)
   2cb50:	003b4b06 	br	2b880 <_gp+0xfffee480>
   2cb54:	8029883a 	mov	r20,r16
   2cb58:	dd811d83 	ldbu	r22,1142(sp)
   2cb5c:	dcc12315 	stw	r19,1164(sp)
   2cb60:	0021883a 	mov	r16,zero
   2cb64:	003c5f06 	br	2bce4 <_gp+0xfffee8e4>
   2cb68:	010000f4 	movhi	r4,3
   2cb6c:	210e0204 	addi	r4,r4,14344
   2cb70:	d9012615 	stw	r4,1176(sp)
   2cb74:	1009883a 	mov	r4,r2
   2cb78:	003ea006 	br	2c5fc <_gp+0xfffef1fc>
   2cb7c:	002b883a 	mov	r21,zero
   2cb80:	003fe206 	br	2cb0c <_gp+0xfffef70c>
   2cb84:	d9412317 	ldw	r5,1164(sp)
   2cb88:	b807883a 	mov	r3,r23
   2cb8c:	102f883a 	mov	r23,r2
   2cb90:	2c000017 	ldw	r16,0(r5)
   2cb94:	29000104 	addi	r4,r5,4
   2cb98:	d9012315 	stw	r4,1164(sp)
   2cb9c:	80000416 	blt	r16,zero,2cbb0 <___vfiprintf_internal_r+0x1410>
   2cba0:	19800047 	ldb	r6,1(r3)
   2cba4:	003b5f06 	br	2b924 <_gp+0xfffee524>
   2cba8:	043fffc4 	movi	r16,-1
   2cbac:	003bef06 	br	2bb6c <_gp+0xfffee76c>
   2cbb0:	043fffc4 	movi	r16,-1
   2cbb4:	19800047 	ldb	r6,1(r3)
   2cbb8:	003b5a06 	br	2b924 <_gp+0xfffee524>
   2cbbc:	282b883a 	mov	r21,r5
   2cbc0:	003cc706 	br	2bee0 <_gp+0xfffeeae0>

0002cbc4 <__vfiprintf_internal>:
   2cbc4:	2007883a 	mov	r3,r4
   2cbc8:	010000f4 	movhi	r4,3
   2cbcc:	21150104 	addi	r4,r4,21508
   2cbd0:	21000017 	ldw	r4,0(r4)
   2cbd4:	2805883a 	mov	r2,r5
   2cbd8:	300f883a 	mov	r7,r6
   2cbdc:	180b883a 	mov	r5,r3
   2cbe0:	100d883a 	mov	r6,r2
   2cbe4:	002b7a01 	jmpi	2b7a0 <___vfiprintf_internal_r>

0002cbe8 <_write_r>:
   2cbe8:	defffd04 	addi	sp,sp,-12
   2cbec:	dc000015 	stw	r16,0(sp)
   2cbf0:	040000f4 	movhi	r16,3
   2cbf4:	dc400115 	stw	r17,4(sp)
   2cbf8:	841bd104 	addi	r16,r16,28484
   2cbfc:	2023883a 	mov	r17,r4
   2cc00:	2809883a 	mov	r4,r5
   2cc04:	300b883a 	mov	r5,r6
   2cc08:	380d883a 	mov	r6,r7
   2cc0c:	dfc00215 	stw	ra,8(sp)
   2cc10:	80000015 	stw	zero,0(r16)
   2cc14:	00315a00 	call	315a0 <write>
   2cc18:	00ffffc4 	movi	r3,-1
   2cc1c:	10c00526 	beq	r2,r3,2cc34 <_write_r+0x4c>
   2cc20:	dfc00217 	ldw	ra,8(sp)
   2cc24:	dc400117 	ldw	r17,4(sp)
   2cc28:	dc000017 	ldw	r16,0(sp)
   2cc2c:	dec00304 	addi	sp,sp,12
   2cc30:	f800283a 	ret
   2cc34:	80c00017 	ldw	r3,0(r16)
   2cc38:	183ff926 	beq	r3,zero,2cc20 <_gp+0xfffef820>
   2cc3c:	88c00015 	stw	r3,0(r17)
   2cc40:	003ff706 	br	2cc20 <_gp+0xfffef820>

0002cc44 <_close_r>:
   2cc44:	defffd04 	addi	sp,sp,-12
   2cc48:	dc000015 	stw	r16,0(sp)
   2cc4c:	040000f4 	movhi	r16,3
   2cc50:	dc400115 	stw	r17,4(sp)
   2cc54:	841bd104 	addi	r16,r16,28484
   2cc58:	2023883a 	mov	r17,r4
   2cc5c:	2809883a 	mov	r4,r5
   2cc60:	dfc00215 	stw	ra,8(sp)
   2cc64:	80000015 	stw	zero,0(r16)
   2cc68:	0030b300 	call	30b30 <close>
   2cc6c:	00ffffc4 	movi	r3,-1
   2cc70:	10c00526 	beq	r2,r3,2cc88 <_close_r+0x44>
   2cc74:	dfc00217 	ldw	ra,8(sp)
   2cc78:	dc400117 	ldw	r17,4(sp)
   2cc7c:	dc000017 	ldw	r16,0(sp)
   2cc80:	dec00304 	addi	sp,sp,12
   2cc84:	f800283a 	ret
   2cc88:	80c00017 	ldw	r3,0(r16)
   2cc8c:	183ff926 	beq	r3,zero,2cc74 <_gp+0xfffef874>
   2cc90:	88c00015 	stw	r3,0(r17)
   2cc94:	003ff706 	br	2cc74 <_gp+0xfffef874>

0002cc98 <_calloc_r>:
   2cc98:	defffe04 	addi	sp,sp,-8
   2cc9c:	dc000015 	stw	r16,0(sp)
   2cca0:	2021883a 	mov	r16,r4
   2cca4:	2809883a 	mov	r4,r5
   2cca8:	300b883a 	mov	r5,r6
   2ccac:	dfc00115 	stw	ra,4(sp)
   2ccb0:	002e2bc0 	call	2e2bc <__mulsi3>
   2ccb4:	8009883a 	mov	r4,r16
   2ccb8:	100b883a 	mov	r5,r2
   2ccbc:	0027e1c0 	call	27e1c <_malloc_r>
   2ccc0:	1021883a 	mov	r16,r2
   2ccc4:	10002826 	beq	r2,zero,2cd68 <_calloc_r+0xd0>
   2ccc8:	11bfff17 	ldw	r6,-4(r2)
   2cccc:	00bfff04 	movi	r2,-4
   2ccd0:	00c00904 	movi	r3,36
   2ccd4:	308c703a 	and	r6,r6,r2
   2ccd8:	308d883a 	add	r6,r6,r2
   2ccdc:	19801436 	bltu	r3,r6,2cd30 <_calloc_r+0x98>
   2cce0:	008004c4 	movi	r2,19
   2cce4:	11800936 	bltu	r2,r6,2cd0c <_calloc_r+0x74>
   2cce8:	8005883a 	mov	r2,r16
   2ccec:	10000015 	stw	zero,0(r2)
   2ccf0:	10000115 	stw	zero,4(r2)
   2ccf4:	10000215 	stw	zero,8(r2)
   2ccf8:	8005883a 	mov	r2,r16
   2ccfc:	dfc00117 	ldw	ra,4(sp)
   2cd00:	dc000017 	ldw	r16,0(sp)
   2cd04:	dec00204 	addi	sp,sp,8
   2cd08:	f800283a 	ret
   2cd0c:	80000015 	stw	zero,0(r16)
   2cd10:	80000115 	stw	zero,4(r16)
   2cd14:	008006c4 	movi	r2,27
   2cd18:	11800d2e 	bgeu	r2,r6,2cd50 <_calloc_r+0xb8>
   2cd1c:	80000215 	stw	zero,8(r16)
   2cd20:	80000315 	stw	zero,12(r16)
   2cd24:	30c00c26 	beq	r6,r3,2cd58 <_calloc_r+0xc0>
   2cd28:	80800404 	addi	r2,r16,16
   2cd2c:	003fef06 	br	2ccec <_gp+0xfffef8ec>
   2cd30:	8009883a 	mov	r4,r16
   2cd34:	000b883a 	mov	r5,zero
   2cd38:	00289400 	call	28940 <memset>
   2cd3c:	8005883a 	mov	r2,r16
   2cd40:	dfc00117 	ldw	ra,4(sp)
   2cd44:	dc000017 	ldw	r16,0(sp)
   2cd48:	dec00204 	addi	sp,sp,8
   2cd4c:	f800283a 	ret
   2cd50:	80800204 	addi	r2,r16,8
   2cd54:	003fe506 	br	2ccec <_gp+0xfffef8ec>
   2cd58:	80000415 	stw	zero,16(r16)
   2cd5c:	80800604 	addi	r2,r16,24
   2cd60:	80000515 	stw	zero,20(r16)
   2cd64:	003fe106 	br	2ccec <_gp+0xfffef8ec>
   2cd68:	0005883a 	mov	r2,zero
   2cd6c:	003fe306 	br	2ccfc <_gp+0xfffef8fc>

0002cd70 <_fclose_r>:
   2cd70:	28003226 	beq	r5,zero,2ce3c <_fclose_r+0xcc>
   2cd74:	defffc04 	addi	sp,sp,-16
   2cd78:	dc400115 	stw	r17,4(sp)
   2cd7c:	2023883a 	mov	r17,r4
   2cd80:	dc000015 	stw	r16,0(sp)
   2cd84:	dfc00315 	stw	ra,12(sp)
   2cd88:	dc800215 	stw	r18,8(sp)
   2cd8c:	2821883a 	mov	r16,r5
   2cd90:	002711c0 	call	2711c <__sfp_lock_acquire>
   2cd94:	88000226 	beq	r17,zero,2cda0 <_fclose_r+0x30>
   2cd98:	88800e17 	ldw	r2,56(r17)
   2cd9c:	10002926 	beq	r2,zero,2ce44 <_fclose_r+0xd4>
   2cda0:	8080030f 	ldh	r2,12(r16)
   2cda4:	10002226 	beq	r2,zero,2ce30 <_fclose_r+0xc0>
   2cda8:	8809883a 	mov	r4,r17
   2cdac:	800b883a 	mov	r5,r16
   2cdb0:	0026b500 	call	26b50 <_fflush_r>
   2cdb4:	1025883a 	mov	r18,r2
   2cdb8:	80800b17 	ldw	r2,44(r16)
   2cdbc:	10000426 	beq	r2,zero,2cdd0 <_fclose_r+0x60>
   2cdc0:	81400717 	ldw	r5,28(r16)
   2cdc4:	8809883a 	mov	r4,r17
   2cdc8:	103ee83a 	callr	r2
   2cdcc:	10002616 	blt	r2,zero,2ce68 <_fclose_r+0xf8>
   2cdd0:	8080030b 	ldhu	r2,12(r16)
   2cdd4:	1080200c 	andi	r2,r2,128
   2cdd8:	10001f1e 	bne	r2,zero,2ce58 <_fclose_r+0xe8>
   2cddc:	81400c17 	ldw	r5,48(r16)
   2cde0:	28000526 	beq	r5,zero,2cdf8 <_fclose_r+0x88>
   2cde4:	80801004 	addi	r2,r16,64
   2cde8:	28800226 	beq	r5,r2,2cdf4 <_fclose_r+0x84>
   2cdec:	8809883a 	mov	r4,r17
   2cdf0:	00272800 	call	27280 <_free_r>
   2cdf4:	80000c15 	stw	zero,48(r16)
   2cdf8:	81401117 	ldw	r5,68(r16)
   2cdfc:	28000326 	beq	r5,zero,2ce0c <_fclose_r+0x9c>
   2ce00:	8809883a 	mov	r4,r17
   2ce04:	00272800 	call	27280 <_free_r>
   2ce08:	80001115 	stw	zero,68(r16)
   2ce0c:	8000030d 	sth	zero,12(r16)
   2ce10:	00271200 	call	27120 <__sfp_lock_release>
   2ce14:	9005883a 	mov	r2,r18
   2ce18:	dfc00317 	ldw	ra,12(sp)
   2ce1c:	dc800217 	ldw	r18,8(sp)
   2ce20:	dc400117 	ldw	r17,4(sp)
   2ce24:	dc000017 	ldw	r16,0(sp)
   2ce28:	dec00404 	addi	sp,sp,16
   2ce2c:	f800283a 	ret
   2ce30:	00271200 	call	27120 <__sfp_lock_release>
   2ce34:	0005883a 	mov	r2,zero
   2ce38:	003ff706 	br	2ce18 <_gp+0xfffefa18>
   2ce3c:	0005883a 	mov	r2,zero
   2ce40:	f800283a 	ret
   2ce44:	8809883a 	mov	r4,r17
   2ce48:	002710c0 	call	2710c <__sinit>
   2ce4c:	8080030f 	ldh	r2,12(r16)
   2ce50:	103fd51e 	bne	r2,zero,2cda8 <_gp+0xfffef9a8>
   2ce54:	003ff606 	br	2ce30 <_gp+0xfffefa30>
   2ce58:	81400417 	ldw	r5,16(r16)
   2ce5c:	8809883a 	mov	r4,r17
   2ce60:	00272800 	call	27280 <_free_r>
   2ce64:	003fdd06 	br	2cddc <_gp+0xfffef9dc>
   2ce68:	04bfffc4 	movi	r18,-1
   2ce6c:	003fd806 	br	2cdd0 <_gp+0xfffef9d0>

0002ce70 <fclose>:
   2ce70:	008000f4 	movhi	r2,3
   2ce74:	10950104 	addi	r2,r2,21508
   2ce78:	200b883a 	mov	r5,r4
   2ce7c:	11000017 	ldw	r4,0(r2)
   2ce80:	002cd701 	jmpi	2cd70 <_fclose_r>

0002ce84 <_fputwc_r>:
   2ce84:	3080030b 	ldhu	r2,12(r6)
   2ce88:	defff804 	addi	sp,sp,-32
   2ce8c:	dcc00415 	stw	r19,16(sp)
   2ce90:	dc800315 	stw	r18,12(sp)
   2ce94:	dc000115 	stw	r16,4(sp)
   2ce98:	dfc00715 	stw	ra,28(sp)
   2ce9c:	dd400615 	stw	r21,24(sp)
   2cea0:	dd000515 	stw	r20,20(sp)
   2cea4:	dc400215 	stw	r17,8(sp)
   2cea8:	10c8000c 	andi	r3,r2,8192
   2ceac:	3021883a 	mov	r16,r6
   2ceb0:	2027883a 	mov	r19,r4
   2ceb4:	2825883a 	mov	r18,r5
   2ceb8:	1800051e 	bne	r3,zero,2ced0 <_fputwc_r+0x4c>
   2cebc:	30c01917 	ldw	r3,100(r6)
   2cec0:	10880014 	ori	r2,r2,8192
   2cec4:	3080030d 	sth	r2,12(r6)
   2cec8:	18880014 	ori	r2,r3,8192
   2cecc:	30801915 	stw	r2,100(r6)
   2ced0:	0027c0c0 	call	27c0c <__locale_mb_cur_max>
   2ced4:	00c00044 	movi	r3,1
   2ced8:	10c03e26 	beq	r2,r3,2cfd4 <_fputwc_r+0x150>
   2cedc:	9809883a 	mov	r4,r19
   2cee0:	d80b883a 	mov	r5,sp
   2cee4:	900d883a 	mov	r6,r18
   2cee8:	81c01704 	addi	r7,r16,92
   2ceec:	002d3340 	call	2d334 <_wcrtomb_r>
   2cef0:	1029883a 	mov	r20,r2
   2cef4:	00bfffc4 	movi	r2,-1
   2cef8:	a0802026 	beq	r20,r2,2cf7c <_fputwc_r+0xf8>
   2cefc:	d9400003 	ldbu	r5,0(sp)
   2cf00:	a0001c26 	beq	r20,zero,2cf74 <_fputwc_r+0xf0>
   2cf04:	0023883a 	mov	r17,zero
   2cf08:	05400284 	movi	r21,10
   2cf0c:	00000906 	br	2cf34 <_fputwc_r+0xb0>
   2cf10:	80800017 	ldw	r2,0(r16)
   2cf14:	11400005 	stb	r5,0(r2)
   2cf18:	80c00017 	ldw	r3,0(r16)
   2cf1c:	18c00044 	addi	r3,r3,1
   2cf20:	80c00015 	stw	r3,0(r16)
   2cf24:	8c400044 	addi	r17,r17,1
   2cf28:	dc45883a 	add	r2,sp,r17
   2cf2c:	8d00112e 	bgeu	r17,r20,2cf74 <_fputwc_r+0xf0>
   2cf30:	11400003 	ldbu	r5,0(r2)
   2cf34:	80c00217 	ldw	r3,8(r16)
   2cf38:	18ffffc4 	addi	r3,r3,-1
   2cf3c:	80c00215 	stw	r3,8(r16)
   2cf40:	183ff30e 	bge	r3,zero,2cf10 <_gp+0xfffefb10>
   2cf44:	80800617 	ldw	r2,24(r16)
   2cf48:	18801916 	blt	r3,r2,2cfb0 <_fputwc_r+0x12c>
   2cf4c:	80800017 	ldw	r2,0(r16)
   2cf50:	11400005 	stb	r5,0(r2)
   2cf54:	80800017 	ldw	r2,0(r16)
   2cf58:	10c00003 	ldbu	r3,0(r2)
   2cf5c:	10800044 	addi	r2,r2,1
   2cf60:	1d402326 	beq	r3,r21,2cff0 <_fputwc_r+0x16c>
   2cf64:	80800015 	stw	r2,0(r16)
   2cf68:	8c400044 	addi	r17,r17,1
   2cf6c:	dc45883a 	add	r2,sp,r17
   2cf70:	8d3fef36 	bltu	r17,r20,2cf30 <_gp+0xfffefb30>
   2cf74:	9005883a 	mov	r2,r18
   2cf78:	00000406 	br	2cf8c <_fputwc_r+0x108>
   2cf7c:	80c0030b 	ldhu	r3,12(r16)
   2cf80:	a005883a 	mov	r2,r20
   2cf84:	18c01014 	ori	r3,r3,64
   2cf88:	80c0030d 	sth	r3,12(r16)
   2cf8c:	dfc00717 	ldw	ra,28(sp)
   2cf90:	dd400617 	ldw	r21,24(sp)
   2cf94:	dd000517 	ldw	r20,20(sp)
   2cf98:	dcc00417 	ldw	r19,16(sp)
   2cf9c:	dc800317 	ldw	r18,12(sp)
   2cfa0:	dc400217 	ldw	r17,8(sp)
   2cfa4:	dc000117 	ldw	r16,4(sp)
   2cfa8:	dec00804 	addi	sp,sp,32
   2cfac:	f800283a 	ret
   2cfb0:	9809883a 	mov	r4,r19
   2cfb4:	29403fcc 	andi	r5,r5,255
   2cfb8:	800d883a 	mov	r6,r16
   2cfbc:	002d1c40 	call	2d1c4 <__swbuf_r>
   2cfc0:	10bfffe0 	cmpeqi	r2,r2,-1
   2cfc4:	10803fcc 	andi	r2,r2,255
   2cfc8:	103fd626 	beq	r2,zero,2cf24 <_gp+0xfffefb24>
   2cfcc:	00bfffc4 	movi	r2,-1
   2cfd0:	003fee06 	br	2cf8c <_gp+0xfffefb8c>
   2cfd4:	90ffffc4 	addi	r3,r18,-1
   2cfd8:	01003f84 	movi	r4,254
   2cfdc:	20ffbf36 	bltu	r4,r3,2cedc <_gp+0xfffefadc>
   2cfe0:	900b883a 	mov	r5,r18
   2cfe4:	dc800005 	stb	r18,0(sp)
   2cfe8:	1029883a 	mov	r20,r2
   2cfec:	003fc506 	br	2cf04 <_gp+0xfffefb04>
   2cff0:	9809883a 	mov	r4,r19
   2cff4:	a80b883a 	mov	r5,r21
   2cff8:	800d883a 	mov	r6,r16
   2cffc:	002d1c40 	call	2d1c4 <__swbuf_r>
   2d000:	10bfffe0 	cmpeqi	r2,r2,-1
   2d004:	003fef06 	br	2cfc4 <_gp+0xfffefbc4>

0002d008 <fputwc>:
   2d008:	defffc04 	addi	sp,sp,-16
   2d00c:	dc000115 	stw	r16,4(sp)
   2d010:	040000f4 	movhi	r16,3
   2d014:	84150104 	addi	r16,r16,21508
   2d018:	dc400215 	stw	r17,8(sp)
   2d01c:	2023883a 	mov	r17,r4
   2d020:	81000017 	ldw	r4,0(r16)
   2d024:	dfc00315 	stw	ra,12(sp)
   2d028:	280d883a 	mov	r6,r5
   2d02c:	20000626 	beq	r4,zero,2d048 <fputwc+0x40>
   2d030:	20800e17 	ldw	r2,56(r4)
   2d034:	1000041e 	bne	r2,zero,2d048 <fputwc+0x40>
   2d038:	d9400015 	stw	r5,0(sp)
   2d03c:	002710c0 	call	2710c <__sinit>
   2d040:	81000017 	ldw	r4,0(r16)
   2d044:	d9800017 	ldw	r6,0(sp)
   2d048:	880b883a 	mov	r5,r17
   2d04c:	dfc00317 	ldw	ra,12(sp)
   2d050:	dc400217 	ldw	r17,8(sp)
   2d054:	dc000117 	ldw	r16,4(sp)
   2d058:	dec00404 	addi	sp,sp,16
   2d05c:	002ce841 	jmpi	2ce84 <_fputwc_r>

0002d060 <_fstat_r>:
   2d060:	defffd04 	addi	sp,sp,-12
   2d064:	dc000015 	stw	r16,0(sp)
   2d068:	040000f4 	movhi	r16,3
   2d06c:	dc400115 	stw	r17,4(sp)
   2d070:	841bd104 	addi	r16,r16,28484
   2d074:	2023883a 	mov	r17,r4
   2d078:	2809883a 	mov	r4,r5
   2d07c:	300b883a 	mov	r5,r6
   2d080:	dfc00215 	stw	ra,8(sp)
   2d084:	80000015 	stw	zero,0(r16)
   2d088:	0030c840 	call	30c84 <fstat>
   2d08c:	00ffffc4 	movi	r3,-1
   2d090:	10c00526 	beq	r2,r3,2d0a8 <_fstat_r+0x48>
   2d094:	dfc00217 	ldw	ra,8(sp)
   2d098:	dc400117 	ldw	r17,4(sp)
   2d09c:	dc000017 	ldw	r16,0(sp)
   2d0a0:	dec00304 	addi	sp,sp,12
   2d0a4:	f800283a 	ret
   2d0a8:	80c00017 	ldw	r3,0(r16)
   2d0ac:	183ff926 	beq	r3,zero,2d094 <_gp+0xfffefc94>
   2d0b0:	88c00015 	stw	r3,0(r17)
   2d0b4:	003ff706 	br	2d094 <_gp+0xfffefc94>

0002d0b8 <_isatty_r>:
   2d0b8:	defffd04 	addi	sp,sp,-12
   2d0bc:	dc000015 	stw	r16,0(sp)
   2d0c0:	040000f4 	movhi	r16,3
   2d0c4:	dc400115 	stw	r17,4(sp)
   2d0c8:	841bd104 	addi	r16,r16,28484
   2d0cc:	2023883a 	mov	r17,r4
   2d0d0:	2809883a 	mov	r4,r5
   2d0d4:	dfc00215 	stw	ra,8(sp)
   2d0d8:	80000015 	stw	zero,0(r16)
   2d0dc:	0030d8c0 	call	30d8c <isatty>
   2d0e0:	00ffffc4 	movi	r3,-1
   2d0e4:	10c00526 	beq	r2,r3,2d0fc <_isatty_r+0x44>
   2d0e8:	dfc00217 	ldw	ra,8(sp)
   2d0ec:	dc400117 	ldw	r17,4(sp)
   2d0f0:	dc000017 	ldw	r16,0(sp)
   2d0f4:	dec00304 	addi	sp,sp,12
   2d0f8:	f800283a 	ret
   2d0fc:	80c00017 	ldw	r3,0(r16)
   2d100:	183ff926 	beq	r3,zero,2d0e8 <_gp+0xfffefce8>
   2d104:	88c00015 	stw	r3,0(r17)
   2d108:	003ff706 	br	2d0e8 <_gp+0xfffefce8>

0002d10c <_lseek_r>:
   2d10c:	defffd04 	addi	sp,sp,-12
   2d110:	dc000015 	stw	r16,0(sp)
   2d114:	040000f4 	movhi	r16,3
   2d118:	dc400115 	stw	r17,4(sp)
   2d11c:	841bd104 	addi	r16,r16,28484
   2d120:	2023883a 	mov	r17,r4
   2d124:	2809883a 	mov	r4,r5
   2d128:	300b883a 	mov	r5,r6
   2d12c:	380d883a 	mov	r6,r7
   2d130:	dfc00215 	stw	ra,8(sp)
   2d134:	80000015 	stw	zero,0(r16)
   2d138:	0030f6c0 	call	30f6c <lseek>
   2d13c:	00ffffc4 	movi	r3,-1
   2d140:	10c00526 	beq	r2,r3,2d158 <_lseek_r+0x4c>
   2d144:	dfc00217 	ldw	ra,8(sp)
   2d148:	dc400117 	ldw	r17,4(sp)
   2d14c:	dc000017 	ldw	r16,0(sp)
   2d150:	dec00304 	addi	sp,sp,12
   2d154:	f800283a 	ret
   2d158:	80c00017 	ldw	r3,0(r16)
   2d15c:	183ff926 	beq	r3,zero,2d144 <_gp+0xfffefd44>
   2d160:	88c00015 	stw	r3,0(r17)
   2d164:	003ff706 	br	2d144 <_gp+0xfffefd44>

0002d168 <_read_r>:
   2d168:	defffd04 	addi	sp,sp,-12
   2d16c:	dc000015 	stw	r16,0(sp)
   2d170:	040000f4 	movhi	r16,3
   2d174:	dc400115 	stw	r17,4(sp)
   2d178:	841bd104 	addi	r16,r16,28484
   2d17c:	2023883a 	mov	r17,r4
   2d180:	2809883a 	mov	r4,r5
   2d184:	300b883a 	mov	r5,r6
   2d188:	380d883a 	mov	r6,r7
   2d18c:	dfc00215 	stw	ra,8(sp)
   2d190:	80000015 	stw	zero,0(r16)
   2d194:	00311500 	call	31150 <read>
   2d198:	00ffffc4 	movi	r3,-1
   2d19c:	10c00526 	beq	r2,r3,2d1b4 <_read_r+0x4c>
   2d1a0:	dfc00217 	ldw	ra,8(sp)
   2d1a4:	dc400117 	ldw	r17,4(sp)
   2d1a8:	dc000017 	ldw	r16,0(sp)
   2d1ac:	dec00304 	addi	sp,sp,12
   2d1b0:	f800283a 	ret
   2d1b4:	80c00017 	ldw	r3,0(r16)
   2d1b8:	183ff926 	beq	r3,zero,2d1a0 <_gp+0xfffefda0>
   2d1bc:	88c00015 	stw	r3,0(r17)
   2d1c0:	003ff706 	br	2d1a0 <_gp+0xfffefda0>

0002d1c4 <__swbuf_r>:
   2d1c4:	defffc04 	addi	sp,sp,-16
   2d1c8:	dc800215 	stw	r18,8(sp)
   2d1cc:	dc400115 	stw	r17,4(sp)
   2d1d0:	dc000015 	stw	r16,0(sp)
   2d1d4:	dfc00315 	stw	ra,12(sp)
   2d1d8:	2025883a 	mov	r18,r4
   2d1dc:	2823883a 	mov	r17,r5
   2d1e0:	3021883a 	mov	r16,r6
   2d1e4:	20000226 	beq	r4,zero,2d1f0 <__swbuf_r+0x2c>
   2d1e8:	20800e17 	ldw	r2,56(r4)
   2d1ec:	10004126 	beq	r2,zero,2d2f4 <__swbuf_r+0x130>
   2d1f0:	80c00617 	ldw	r3,24(r16)
   2d1f4:	8180030b 	ldhu	r6,12(r16)
   2d1f8:	80c00215 	stw	r3,8(r16)
   2d1fc:	30c0020c 	andi	r3,r6,8
   2d200:	18003526 	beq	r3,zero,2d2d8 <__swbuf_r+0x114>
   2d204:	80c00417 	ldw	r3,16(r16)
   2d208:	18003326 	beq	r3,zero,2d2d8 <__swbuf_r+0x114>
   2d20c:	3088000c 	andi	r2,r6,8192
   2d210:	8c403fcc 	andi	r17,r17,255
   2d214:	10001726 	beq	r2,zero,2d274 <__swbuf_r+0xb0>
   2d218:	80800017 	ldw	r2,0(r16)
   2d21c:	81000517 	ldw	r4,20(r16)
   2d220:	10c7c83a 	sub	r3,r2,r3
   2d224:	19001d0e 	bge	r3,r4,2d29c <__swbuf_r+0xd8>
   2d228:	18c00044 	addi	r3,r3,1
   2d22c:	81400217 	ldw	r5,8(r16)
   2d230:	11000044 	addi	r4,r2,1
   2d234:	81000015 	stw	r4,0(r16)
   2d238:	297fffc4 	addi	r5,r5,-1
   2d23c:	81400215 	stw	r5,8(r16)
   2d240:	14400005 	stb	r17,0(r2)
   2d244:	80800517 	ldw	r2,20(r16)
   2d248:	10c01d26 	beq	r2,r3,2d2c0 <__swbuf_r+0xfc>
   2d24c:	8080030b 	ldhu	r2,12(r16)
   2d250:	1080004c 	andi	r2,r2,1
   2d254:	1000181e 	bne	r2,zero,2d2b8 <__swbuf_r+0xf4>
   2d258:	8805883a 	mov	r2,r17
   2d25c:	dfc00317 	ldw	ra,12(sp)
   2d260:	dc800217 	ldw	r18,8(sp)
   2d264:	dc400117 	ldw	r17,4(sp)
   2d268:	dc000017 	ldw	r16,0(sp)
   2d26c:	dec00404 	addi	sp,sp,16
   2d270:	f800283a 	ret
   2d274:	81001917 	ldw	r4,100(r16)
   2d278:	00b7ffc4 	movi	r2,-8193
   2d27c:	31880014 	ori	r6,r6,8192
   2d280:	2084703a 	and	r2,r4,r2
   2d284:	80801915 	stw	r2,100(r16)
   2d288:	80800017 	ldw	r2,0(r16)
   2d28c:	81000517 	ldw	r4,20(r16)
   2d290:	8180030d 	sth	r6,12(r16)
   2d294:	10c7c83a 	sub	r3,r2,r3
   2d298:	193fe316 	blt	r3,r4,2d228 <_gp+0xfffefe28>
   2d29c:	9009883a 	mov	r4,r18
   2d2a0:	800b883a 	mov	r5,r16
   2d2a4:	0026b500 	call	26b50 <_fflush_r>
   2d2a8:	1000091e 	bne	r2,zero,2d2d0 <__swbuf_r+0x10c>
   2d2ac:	80800017 	ldw	r2,0(r16)
   2d2b0:	00c00044 	movi	r3,1
   2d2b4:	003fdd06 	br	2d22c <_gp+0xfffefe2c>
   2d2b8:	00800284 	movi	r2,10
   2d2bc:	88bfe61e 	bne	r17,r2,2d258 <_gp+0xfffefe58>
   2d2c0:	9009883a 	mov	r4,r18
   2d2c4:	800b883a 	mov	r5,r16
   2d2c8:	0026b500 	call	26b50 <_fflush_r>
   2d2cc:	103fe226 	beq	r2,zero,2d258 <_gp+0xfffefe58>
   2d2d0:	00bfffc4 	movi	r2,-1
   2d2d4:	003fe106 	br	2d25c <_gp+0xfffefe5c>
   2d2d8:	9009883a 	mov	r4,r18
   2d2dc:	800b883a 	mov	r5,r16
   2d2e0:	00250d00 	call	250d0 <__swsetup_r>
   2d2e4:	1000051e 	bne	r2,zero,2d2fc <__swbuf_r+0x138>
   2d2e8:	8180030b 	ldhu	r6,12(r16)
   2d2ec:	80c00417 	ldw	r3,16(r16)
   2d2f0:	003fc606 	br	2d20c <_gp+0xfffefe0c>
   2d2f4:	002710c0 	call	2710c <__sinit>
   2d2f8:	003fbd06 	br	2d1f0 <_gp+0xfffefdf0>
   2d2fc:	80c0030b 	ldhu	r3,12(r16)
   2d300:	00bfffc4 	movi	r2,-1
   2d304:	18c01014 	ori	r3,r3,64
   2d308:	80c0030d 	sth	r3,12(r16)
   2d30c:	00c00244 	movi	r3,9
   2d310:	90c00015 	stw	r3,0(r18)
   2d314:	003fd106 	br	2d25c <_gp+0xfffefe5c>

0002d318 <__swbuf>:
   2d318:	00c000f4 	movhi	r3,3
   2d31c:	18d50104 	addi	r3,r3,21508
   2d320:	2005883a 	mov	r2,r4
   2d324:	19000017 	ldw	r4,0(r3)
   2d328:	280d883a 	mov	r6,r5
   2d32c:	100b883a 	mov	r5,r2
   2d330:	002d1c41 	jmpi	2d1c4 <__swbuf_r>

0002d334 <_wcrtomb_r>:
   2d334:	defff604 	addi	sp,sp,-40
   2d338:	008000f4 	movhi	r2,3
   2d33c:	dc800815 	stw	r18,32(sp)
   2d340:	dc400715 	stw	r17,28(sp)
   2d344:	dc000615 	stw	r16,24(sp)
   2d348:	10950504 	addi	r2,r2,21524
   2d34c:	dfc00915 	stw	ra,36(sp)
   2d350:	2021883a 	mov	r16,r4
   2d354:	3823883a 	mov	r17,r7
   2d358:	14800017 	ldw	r18,0(r2)
   2d35c:	28001426 	beq	r5,zero,2d3b0 <_wcrtomb_r+0x7c>
   2d360:	d9400415 	stw	r5,16(sp)
   2d364:	d9800515 	stw	r6,20(sp)
   2d368:	0027c000 	call	27c00 <__locale_charset>
   2d36c:	d9400417 	ldw	r5,16(sp)
   2d370:	d9800517 	ldw	r6,20(sp)
   2d374:	8009883a 	mov	r4,r16
   2d378:	dc400015 	stw	r17,0(sp)
   2d37c:	100f883a 	mov	r7,r2
   2d380:	903ee83a 	callr	r18
   2d384:	00ffffc4 	movi	r3,-1
   2d388:	10c0031e 	bne	r2,r3,2d398 <_wcrtomb_r+0x64>
   2d38c:	88000015 	stw	zero,0(r17)
   2d390:	00c02284 	movi	r3,138
   2d394:	80c00015 	stw	r3,0(r16)
   2d398:	dfc00917 	ldw	ra,36(sp)
   2d39c:	dc800817 	ldw	r18,32(sp)
   2d3a0:	dc400717 	ldw	r17,28(sp)
   2d3a4:	dc000617 	ldw	r16,24(sp)
   2d3a8:	dec00a04 	addi	sp,sp,40
   2d3ac:	f800283a 	ret
   2d3b0:	0027c000 	call	27c00 <__locale_charset>
   2d3b4:	8009883a 	mov	r4,r16
   2d3b8:	dc400015 	stw	r17,0(sp)
   2d3bc:	d9400104 	addi	r5,sp,4
   2d3c0:	000d883a 	mov	r6,zero
   2d3c4:	100f883a 	mov	r7,r2
   2d3c8:	903ee83a 	callr	r18
   2d3cc:	003fed06 	br	2d384 <_gp+0xfffeff84>

0002d3d0 <wcrtomb>:
   2d3d0:	defff504 	addi	sp,sp,-44
   2d3d4:	dc400515 	stw	r17,20(sp)
   2d3d8:	dc000415 	stw	r16,16(sp)
   2d3dc:	dfc00a15 	stw	ra,40(sp)
   2d3e0:	dd400915 	stw	r21,36(sp)
   2d3e4:	dd000815 	stw	r20,32(sp)
   2d3e8:	dcc00715 	stw	r19,28(sp)
   2d3ec:	dc800615 	stw	r18,24(sp)
   2d3f0:	2021883a 	mov	r16,r4
   2d3f4:	3023883a 	mov	r17,r6
   2d3f8:	20001d26 	beq	r4,zero,2d470 <wcrtomb+0xa0>
   2d3fc:	048000f4 	movhi	r18,3
   2d400:	94950104 	addi	r18,r18,21508
   2d404:	008000f4 	movhi	r2,3
   2d408:	95400017 	ldw	r21,0(r18)
   2d40c:	10950504 	addi	r2,r2,21524
   2d410:	15000017 	ldw	r20,0(r2)
   2d414:	2827883a 	mov	r19,r5
   2d418:	0027c000 	call	27c00 <__locale_charset>
   2d41c:	a809883a 	mov	r4,r21
   2d420:	dc400015 	stw	r17,0(sp)
   2d424:	800b883a 	mov	r5,r16
   2d428:	980d883a 	mov	r6,r19
   2d42c:	100f883a 	mov	r7,r2
   2d430:	a03ee83a 	callr	r20
   2d434:	00ffffc4 	movi	r3,-1
   2d438:	10c0041e 	bne	r2,r3,2d44c <wcrtomb+0x7c>
   2d43c:	90c00017 	ldw	r3,0(r18)
   2d440:	01002284 	movi	r4,138
   2d444:	88000015 	stw	zero,0(r17)
   2d448:	19000015 	stw	r4,0(r3)
   2d44c:	dfc00a17 	ldw	ra,40(sp)
   2d450:	dd400917 	ldw	r21,36(sp)
   2d454:	dd000817 	ldw	r20,32(sp)
   2d458:	dcc00717 	ldw	r19,28(sp)
   2d45c:	dc800617 	ldw	r18,24(sp)
   2d460:	dc400517 	ldw	r17,20(sp)
   2d464:	dc000417 	ldw	r16,16(sp)
   2d468:	dec00b04 	addi	sp,sp,44
   2d46c:	f800283a 	ret
   2d470:	048000f4 	movhi	r18,3
   2d474:	94950104 	addi	r18,r18,21508
   2d478:	008000f4 	movhi	r2,3
   2d47c:	94c00017 	ldw	r19,0(r18)
   2d480:	10950504 	addi	r2,r2,21524
   2d484:	14000017 	ldw	r16,0(r2)
   2d488:	0027c000 	call	27c00 <__locale_charset>
   2d48c:	9809883a 	mov	r4,r19
   2d490:	dc400015 	stw	r17,0(sp)
   2d494:	d9400104 	addi	r5,sp,4
   2d498:	000d883a 	mov	r6,zero
   2d49c:	100f883a 	mov	r7,r2
   2d4a0:	803ee83a 	callr	r16
   2d4a4:	003fe306 	br	2d434 <_gp+0xffff0034>

0002d4a8 <__ascii_wctomb>:
   2d4a8:	28000526 	beq	r5,zero,2d4c0 <__ascii_wctomb+0x18>
   2d4ac:	00803fc4 	movi	r2,255
   2d4b0:	11800536 	bltu	r2,r6,2d4c8 <__ascii_wctomb+0x20>
   2d4b4:	29800005 	stb	r6,0(r5)
   2d4b8:	00800044 	movi	r2,1
   2d4bc:	f800283a 	ret
   2d4c0:	0005883a 	mov	r2,zero
   2d4c4:	f800283a 	ret
   2d4c8:	00802284 	movi	r2,138
   2d4cc:	20800015 	stw	r2,0(r4)
   2d4d0:	00bfffc4 	movi	r2,-1
   2d4d4:	f800283a 	ret

0002d4d8 <_wctomb_r>:
   2d4d8:	008000f4 	movhi	r2,3
   2d4dc:	defff904 	addi	sp,sp,-28
   2d4e0:	10950504 	addi	r2,r2,21524
   2d4e4:	dfc00615 	stw	ra,24(sp)
   2d4e8:	dc400515 	stw	r17,20(sp)
   2d4ec:	dc000415 	stw	r16,16(sp)
   2d4f0:	3823883a 	mov	r17,r7
   2d4f4:	14000017 	ldw	r16,0(r2)
   2d4f8:	d9000115 	stw	r4,4(sp)
   2d4fc:	d9400215 	stw	r5,8(sp)
   2d500:	d9800315 	stw	r6,12(sp)
   2d504:	0027c000 	call	27c00 <__locale_charset>
   2d508:	d9000117 	ldw	r4,4(sp)
   2d50c:	d9400217 	ldw	r5,8(sp)
   2d510:	d9800317 	ldw	r6,12(sp)
   2d514:	dc400015 	stw	r17,0(sp)
   2d518:	100f883a 	mov	r7,r2
   2d51c:	803ee83a 	callr	r16
   2d520:	dfc00617 	ldw	ra,24(sp)
   2d524:	dc400517 	ldw	r17,20(sp)
   2d528:	dc000417 	ldw	r16,16(sp)
   2d52c:	dec00704 	addi	sp,sp,28
   2d530:	f800283a 	ret

0002d534 <__udivdi3>:
   2d534:	defff504 	addi	sp,sp,-44
   2d538:	dcc00415 	stw	r19,16(sp)
   2d53c:	dc000115 	stw	r16,4(sp)
   2d540:	dfc00a15 	stw	ra,40(sp)
   2d544:	df000915 	stw	fp,36(sp)
   2d548:	ddc00815 	stw	r23,32(sp)
   2d54c:	dd800715 	stw	r22,28(sp)
   2d550:	dd400615 	stw	r21,24(sp)
   2d554:	dd000515 	stw	r20,20(sp)
   2d558:	dc800315 	stw	r18,12(sp)
   2d55c:	dc400215 	stw	r17,8(sp)
   2d560:	2027883a 	mov	r19,r4
   2d564:	2821883a 	mov	r16,r5
   2d568:	3800471e 	bne	r7,zero,2d688 <__udivdi3+0x154>
   2d56c:	3025883a 	mov	r18,r6
   2d570:	2023883a 	mov	r17,r4
   2d574:	2980592e 	bgeu	r5,r6,2d6dc <__udivdi3+0x1a8>
   2d578:	00bfffd4 	movui	r2,65535
   2d57c:	2829883a 	mov	r20,r5
   2d580:	1180b236 	bltu	r2,r6,2d84c <__udivdi3+0x318>
   2d584:	00803fc4 	movi	r2,255
   2d588:	1181622e 	bgeu	r2,r6,2db14 <__udivdi3+0x5e0>
   2d58c:	00800204 	movi	r2,8
   2d590:	1007883a 	mov	r3,r2
   2d594:	3084d83a 	srl	r2,r6,r2
   2d598:	010000f4 	movhi	r4,3
   2d59c:	210e0a04 	addi	r4,r4,14376
   2d5a0:	2085883a 	add	r2,r4,r2
   2d5a4:	11000003 	ldbu	r4,0(r2)
   2d5a8:	20c9883a 	add	r4,r4,r3
   2d5ac:	00c00804 	movi	r3,32
   2d5b0:	1907c83a 	sub	r3,r3,r4
   2d5b4:	18000526 	beq	r3,zero,2d5cc <__udivdi3+0x98>
   2d5b8:	80e0983a 	sll	r16,r16,r3
   2d5bc:	9908d83a 	srl	r4,r19,r4
   2d5c0:	30e4983a 	sll	r18,r6,r3
   2d5c4:	98e2983a 	sll	r17,r19,r3
   2d5c8:	8128b03a 	or	r20,r16,r4
   2d5cc:	902ad43a 	srli	r21,r18,16
   2d5d0:	a009883a 	mov	r4,r20
   2d5d4:	95bfffcc 	andi	r22,r18,65535
   2d5d8:	a80b883a 	mov	r5,r21
   2d5dc:	002e2b40 	call	2e2b4 <__umodsi3>
   2d5e0:	a009883a 	mov	r4,r20
   2d5e4:	a80b883a 	mov	r5,r21
   2d5e8:	102f883a 	mov	r23,r2
   2d5ec:	002e2ac0 	call	2e2ac <__udivsi3>
   2d5f0:	1009883a 	mov	r4,r2
   2d5f4:	b00b883a 	mov	r5,r22
   2d5f8:	1021883a 	mov	r16,r2
   2d5fc:	002e2bc0 	call	2e2bc <__mulsi3>
   2d600:	b82e943a 	slli	r23,r23,16
   2d604:	8808d43a 	srli	r4,r17,16
   2d608:	b906b03a 	or	r3,r23,r4
   2d60c:	1880052e 	bgeu	r3,r2,2d624 <__udivdi3+0xf0>
   2d610:	1c87883a 	add	r3,r3,r18
   2d614:	813fffc4 	addi	r4,r16,-1
   2d618:	1c800136 	bltu	r3,r18,2d620 <__udivdi3+0xec>
   2d61c:	18815236 	bltu	r3,r2,2db68 <__udivdi3+0x634>
   2d620:	2021883a 	mov	r16,r4
   2d624:	18a7c83a 	sub	r19,r3,r2
   2d628:	9809883a 	mov	r4,r19
   2d62c:	a80b883a 	mov	r5,r21
   2d630:	002e2b40 	call	2e2b4 <__umodsi3>
   2d634:	1029883a 	mov	r20,r2
   2d638:	9809883a 	mov	r4,r19
   2d63c:	a80b883a 	mov	r5,r21
   2d640:	a028943a 	slli	r20,r20,16
   2d644:	002e2ac0 	call	2e2ac <__udivsi3>
   2d648:	1009883a 	mov	r4,r2
   2d64c:	b00b883a 	mov	r5,r22
   2d650:	8c7fffcc 	andi	r17,r17,65535
   2d654:	1027883a 	mov	r19,r2
   2d658:	a462b03a 	or	r17,r20,r17
   2d65c:	002e2bc0 	call	2e2bc <__mulsi3>
   2d660:	8880052e 	bgeu	r17,r2,2d678 <__udivdi3+0x144>
   2d664:	8ca3883a 	add	r17,r17,r18
   2d668:	98ffffc4 	addi	r3,r19,-1
   2d66c:	8c811036 	bltu	r17,r18,2dab0 <__udivdi3+0x57c>
   2d670:	88810f2e 	bgeu	r17,r2,2dab0 <__udivdi3+0x57c>
   2d674:	9cffff84 	addi	r19,r19,-2
   2d678:	8020943a 	slli	r16,r16,16
   2d67c:	0007883a 	mov	r3,zero
   2d680:	9c04b03a 	or	r2,r19,r16
   2d684:	00006006 	br	2d808 <__udivdi3+0x2d4>
   2d688:	29c05d36 	bltu	r5,r7,2d800 <__udivdi3+0x2cc>
   2d68c:	00bfffd4 	movui	r2,65535
   2d690:	11c0692e 	bgeu	r2,r7,2d838 <__udivdi3+0x304>
   2d694:	00804034 	movhi	r2,256
   2d698:	10bfffc4 	addi	r2,r2,-1
   2d69c:	11c10e2e 	bgeu	r2,r7,2dad8 <__udivdi3+0x5a4>
   2d6a0:	01400604 	movi	r5,24
   2d6a4:	2811883a 	mov	r8,r5
   2d6a8:	394ad83a 	srl	r5,r7,r5
   2d6ac:	008000f4 	movhi	r2,3
   2d6b0:	108e0a04 	addi	r2,r2,14376
   2d6b4:	114b883a 	add	r5,r2,r5
   2d6b8:	29400003 	ldbu	r5,0(r5)
   2d6bc:	00c00804 	movi	r3,32
   2d6c0:	2a0b883a 	add	r5,r5,r8
   2d6c4:	196fc83a 	sub	r23,r3,r5
   2d6c8:	b8006b1e 	bne	r23,zero,2d878 <__udivdi3+0x344>
   2d6cc:	3c011436 	bltu	r7,r16,2db20 <__udivdi3+0x5ec>
   2d6d0:	9985403a 	cmpgeu	r2,r19,r6
   2d6d4:	0007883a 	mov	r3,zero
   2d6d8:	00004b06 	br	2d808 <__udivdi3+0x2d4>
   2d6dc:	3000041e 	bne	r6,zero,2d6f0 <__udivdi3+0x1bc>
   2d6e0:	01000044 	movi	r4,1
   2d6e4:	000b883a 	mov	r5,zero
   2d6e8:	002e2ac0 	call	2e2ac <__udivsi3>
   2d6ec:	1025883a 	mov	r18,r2
   2d6f0:	00bfffd4 	movui	r2,65535
   2d6f4:	14805b2e 	bgeu	r2,r18,2d864 <__udivdi3+0x330>
   2d6f8:	00804034 	movhi	r2,256
   2d6fc:	10bfffc4 	addi	r2,r2,-1
   2d700:	1480fe2e 	bgeu	r2,r18,2dafc <__udivdi3+0x5c8>
   2d704:	00800604 	movi	r2,24
   2d708:	1007883a 	mov	r3,r2
   2d70c:	9084d83a 	srl	r2,r18,r2
   2d710:	010000f4 	movhi	r4,3
   2d714:	210e0a04 	addi	r4,r4,14376
   2d718:	2085883a 	add	r2,r4,r2
   2d71c:	11800003 	ldbu	r6,0(r2)
   2d720:	01c00804 	movi	r7,32
   2d724:	30c7883a 	add	r3,r6,r3
   2d728:	38cfc83a 	sub	r7,r7,r3
   2d72c:	3800a71e 	bne	r7,zero,2d9cc <__udivdi3+0x498>
   2d730:	9028d43a 	srli	r20,r18,16
   2d734:	84a1c83a 	sub	r16,r16,r18
   2d738:	957fffcc 	andi	r21,r18,65535
   2d73c:	00c00044 	movi	r3,1
   2d740:	8009883a 	mov	r4,r16
   2d744:	a00b883a 	mov	r5,r20
   2d748:	d8c00015 	stw	r3,0(sp)
   2d74c:	002e2b40 	call	2e2b4 <__umodsi3>
   2d750:	8009883a 	mov	r4,r16
   2d754:	a00b883a 	mov	r5,r20
   2d758:	102d883a 	mov	r22,r2
   2d75c:	002e2ac0 	call	2e2ac <__udivsi3>
   2d760:	1009883a 	mov	r4,r2
   2d764:	a80b883a 	mov	r5,r21
   2d768:	1021883a 	mov	r16,r2
   2d76c:	002e2bc0 	call	2e2bc <__mulsi3>
   2d770:	b02c943a 	slli	r22,r22,16
   2d774:	880ed43a 	srli	r7,r17,16
   2d778:	d8c00017 	ldw	r3,0(sp)
   2d77c:	b1ccb03a 	or	r6,r22,r7
   2d780:	3080052e 	bgeu	r6,r2,2d798 <__udivdi3+0x264>
   2d784:	348d883a 	add	r6,r6,r18
   2d788:	813fffc4 	addi	r4,r16,-1
   2d78c:	34800136 	bltu	r6,r18,2d794 <__udivdi3+0x260>
   2d790:	3080f236 	bltu	r6,r2,2db5c <__udivdi3+0x628>
   2d794:	2021883a 	mov	r16,r4
   2d798:	30a7c83a 	sub	r19,r6,r2
   2d79c:	9809883a 	mov	r4,r19
   2d7a0:	a00b883a 	mov	r5,r20
   2d7a4:	d8c00015 	stw	r3,0(sp)
   2d7a8:	002e2b40 	call	2e2b4 <__umodsi3>
   2d7ac:	102d883a 	mov	r22,r2
   2d7b0:	9809883a 	mov	r4,r19
   2d7b4:	a00b883a 	mov	r5,r20
   2d7b8:	b02c943a 	slli	r22,r22,16
   2d7bc:	002e2ac0 	call	2e2ac <__udivsi3>
   2d7c0:	1009883a 	mov	r4,r2
   2d7c4:	a80b883a 	mov	r5,r21
   2d7c8:	8c7fffcc 	andi	r17,r17,65535
   2d7cc:	1027883a 	mov	r19,r2
   2d7d0:	b462b03a 	or	r17,r22,r17
   2d7d4:	002e2bc0 	call	2e2bc <__mulsi3>
   2d7d8:	d8c00017 	ldw	r3,0(sp)
   2d7dc:	8880052e 	bgeu	r17,r2,2d7f4 <__udivdi3+0x2c0>
   2d7e0:	8ca3883a 	add	r17,r17,r18
   2d7e4:	993fffc4 	addi	r4,r19,-1
   2d7e8:	8c80af36 	bltu	r17,r18,2daa8 <__udivdi3+0x574>
   2d7ec:	8880ae2e 	bgeu	r17,r2,2daa8 <__udivdi3+0x574>
   2d7f0:	9cffff84 	addi	r19,r19,-2
   2d7f4:	8020943a 	slli	r16,r16,16
   2d7f8:	9c04b03a 	or	r2,r19,r16
   2d7fc:	00000206 	br	2d808 <__udivdi3+0x2d4>
   2d800:	0007883a 	mov	r3,zero
   2d804:	0005883a 	mov	r2,zero
   2d808:	dfc00a17 	ldw	ra,40(sp)
   2d80c:	df000917 	ldw	fp,36(sp)
   2d810:	ddc00817 	ldw	r23,32(sp)
   2d814:	dd800717 	ldw	r22,28(sp)
   2d818:	dd400617 	ldw	r21,24(sp)
   2d81c:	dd000517 	ldw	r20,20(sp)
   2d820:	dcc00417 	ldw	r19,16(sp)
   2d824:	dc800317 	ldw	r18,12(sp)
   2d828:	dc400217 	ldw	r17,8(sp)
   2d82c:	dc000117 	ldw	r16,4(sp)
   2d830:	dec00b04 	addi	sp,sp,44
   2d834:	f800283a 	ret
   2d838:	00803fc4 	movi	r2,255
   2d83c:	11c0a92e 	bgeu	r2,r7,2dae4 <__udivdi3+0x5b0>
   2d840:	01400204 	movi	r5,8
   2d844:	2811883a 	mov	r8,r5
   2d848:	003f9706 	br	2d6a8 <_gp+0xffff02a8>
   2d84c:	00804034 	movhi	r2,256
   2d850:	10bfffc4 	addi	r2,r2,-1
   2d854:	1180a62e 	bgeu	r2,r6,2daf0 <__udivdi3+0x5bc>
   2d858:	00800604 	movi	r2,24
   2d85c:	1007883a 	mov	r3,r2
   2d860:	003f4c06 	br	2d594 <_gp+0xffff0194>
   2d864:	00803fc4 	movi	r2,255
   2d868:	1480a72e 	bgeu	r2,r18,2db08 <__udivdi3+0x5d4>
   2d86c:	00800204 	movi	r2,8
   2d870:	1007883a 	mov	r3,r2
   2d874:	003fa506 	br	2d70c <_gp+0xffff030c>
   2d878:	3178d83a 	srl	fp,r6,r5
   2d87c:	3dce983a 	sll	r7,r7,r23
   2d880:	8168d83a 	srl	r20,r16,r5
   2d884:	9950d83a 	srl	r8,r19,r5
   2d888:	3f38b03a 	or	fp,r7,fp
   2d88c:	e024d43a 	srli	r18,fp,16
   2d890:	85e0983a 	sll	r16,r16,r23
   2d894:	a009883a 	mov	r4,r20
   2d898:	900b883a 	mov	r5,r18
   2d89c:	8220b03a 	or	r16,r16,r8
   2d8a0:	35ea983a 	sll	r21,r6,r23
   2d8a4:	002e2b40 	call	2e2b4 <__umodsi3>
   2d8a8:	a009883a 	mov	r4,r20
   2d8ac:	900b883a 	mov	r5,r18
   2d8b0:	1023883a 	mov	r17,r2
   2d8b4:	e5bfffcc 	andi	r22,fp,65535
   2d8b8:	002e2ac0 	call	2e2ac <__udivsi3>
   2d8bc:	1009883a 	mov	r4,r2
   2d8c0:	b00b883a 	mov	r5,r22
   2d8c4:	1029883a 	mov	r20,r2
   2d8c8:	002e2bc0 	call	2e2bc <__mulsi3>
   2d8cc:	8806943a 	slli	r3,r17,16
   2d8d0:	8014d43a 	srli	r10,r16,16
   2d8d4:	1a92b03a 	or	r9,r3,r10
   2d8d8:	4880042e 	bgeu	r9,r2,2d8ec <__udivdi3+0x3b8>
   2d8dc:	4f13883a 	add	r9,r9,fp
   2d8e0:	a0ffffc4 	addi	r3,r20,-1
   2d8e4:	4f00952e 	bgeu	r9,fp,2db3c <__udivdi3+0x608>
   2d8e8:	1829883a 	mov	r20,r3
   2d8ec:	48a3c83a 	sub	r17,r9,r2
   2d8f0:	8809883a 	mov	r4,r17
   2d8f4:	900b883a 	mov	r5,r18
   2d8f8:	002e2b40 	call	2e2b4 <__umodsi3>
   2d8fc:	8809883a 	mov	r4,r17
   2d900:	900b883a 	mov	r5,r18
   2d904:	d8800015 	stw	r2,0(sp)
   2d908:	002e2ac0 	call	2e2ac <__udivsi3>
   2d90c:	1009883a 	mov	r4,r2
   2d910:	b00b883a 	mov	r5,r22
   2d914:	1023883a 	mov	r17,r2
   2d918:	002e2bc0 	call	2e2bc <__mulsi3>
   2d91c:	d8c00017 	ldw	r3,0(sp)
   2d920:	823fffcc 	andi	r8,r16,65535
   2d924:	1806943a 	slli	r3,r3,16
   2d928:	1a20b03a 	or	r16,r3,r8
   2d92c:	8080042e 	bgeu	r16,r2,2d940 <__udivdi3+0x40c>
   2d930:	8721883a 	add	r16,r16,fp
   2d934:	88ffffc4 	addi	r3,r17,-1
   2d938:	87007c2e 	bgeu	r16,fp,2db2c <__udivdi3+0x5f8>
   2d93c:	1823883a 	mov	r17,r3
   2d940:	a028943a 	slli	r20,r20,16
   2d944:	acbfffcc 	andi	r18,r21,65535
   2d948:	900b883a 	mov	r5,r18
   2d94c:	8d28b03a 	or	r20,r17,r20
   2d950:	a022d43a 	srli	r17,r20,16
   2d954:	a5bfffcc 	andi	r22,r20,65535
   2d958:	b009883a 	mov	r4,r22
   2d95c:	a82ad43a 	srli	r21,r21,16
   2d960:	80a1c83a 	sub	r16,r16,r2
   2d964:	002e2bc0 	call	2e2bc <__mulsi3>
   2d968:	8809883a 	mov	r4,r17
   2d96c:	900b883a 	mov	r5,r18
   2d970:	1039883a 	mov	fp,r2
   2d974:	002e2bc0 	call	2e2bc <__mulsi3>
   2d978:	8809883a 	mov	r4,r17
   2d97c:	a80b883a 	mov	r5,r21
   2d980:	1025883a 	mov	r18,r2
   2d984:	002e2bc0 	call	2e2bc <__mulsi3>
   2d988:	b009883a 	mov	r4,r22
   2d98c:	a80b883a 	mov	r5,r21
   2d990:	1023883a 	mov	r17,r2
   2d994:	002e2bc0 	call	2e2bc <__mulsi3>
   2d998:	e006d43a 	srli	r3,fp,16
   2d99c:	9085883a 	add	r2,r18,r2
   2d9a0:	10c7883a 	add	r3,r2,r3
   2d9a4:	1c80022e 	bgeu	r3,r18,2d9b0 <__udivdi3+0x47c>
   2d9a8:	00800074 	movhi	r2,1
   2d9ac:	88a3883a 	add	r17,r17,r2
   2d9b0:	1808d43a 	srli	r4,r3,16
   2d9b4:	8909883a 	add	r4,r17,r4
   2d9b8:	81004436 	bltu	r16,r4,2dacc <__udivdi3+0x598>
   2d9bc:	81003e26 	beq	r16,r4,2dab8 <__udivdi3+0x584>
   2d9c0:	a005883a 	mov	r2,r20
   2d9c4:	0007883a 	mov	r3,zero
   2d9c8:	003f8f06 	br	2d808 <_gp+0xffff0408>
   2d9cc:	91e4983a 	sll	r18,r18,r7
   2d9d0:	80eed83a 	srl	r23,r16,r3
   2d9d4:	81cc983a 	sll	r6,r16,r7
   2d9d8:	9028d43a 	srli	r20,r18,16
   2d9dc:	98c6d83a 	srl	r3,r19,r3
   2d9e0:	b809883a 	mov	r4,r23
   2d9e4:	a00b883a 	mov	r5,r20
   2d9e8:	30ecb03a 	or	r22,r6,r3
   2d9ec:	99e2983a 	sll	r17,r19,r7
   2d9f0:	002e2b40 	call	2e2b4 <__umodsi3>
   2d9f4:	b809883a 	mov	r4,r23
   2d9f8:	a00b883a 	mov	r5,r20
   2d9fc:	1021883a 	mov	r16,r2
   2da00:	957fffcc 	andi	r21,r18,65535
   2da04:	002e2ac0 	call	2e2ac <__udivsi3>
   2da08:	a80b883a 	mov	r5,r21
   2da0c:	1009883a 	mov	r4,r2
   2da10:	102f883a 	mov	r23,r2
   2da14:	002e2bc0 	call	2e2bc <__mulsi3>
   2da18:	8020943a 	slli	r16,r16,16
   2da1c:	b00ad43a 	srli	r5,r22,16
   2da20:	814cb03a 	or	r6,r16,r5
   2da24:	3080062e 	bgeu	r6,r2,2da40 <__udivdi3+0x50c>
   2da28:	348d883a 	add	r6,r6,r18
   2da2c:	b8ffffc4 	addi	r3,r23,-1
   2da30:	34804836 	bltu	r6,r18,2db54 <__udivdi3+0x620>
   2da34:	3080472e 	bgeu	r6,r2,2db54 <__udivdi3+0x620>
   2da38:	bdffff84 	addi	r23,r23,-2
   2da3c:	348d883a 	add	r6,r6,r18
   2da40:	30a7c83a 	sub	r19,r6,r2
   2da44:	9809883a 	mov	r4,r19
   2da48:	a00b883a 	mov	r5,r20
   2da4c:	002e2b40 	call	2e2b4 <__umodsi3>
   2da50:	9809883a 	mov	r4,r19
   2da54:	a00b883a 	mov	r5,r20
   2da58:	1039883a 	mov	fp,r2
   2da5c:	002e2ac0 	call	2e2ac <__udivsi3>
   2da60:	1009883a 	mov	r4,r2
   2da64:	a80b883a 	mov	r5,r21
   2da68:	e038943a 	slli	fp,fp,16
   2da6c:	1027883a 	mov	r19,r2
   2da70:	002e2bc0 	call	2e2bc <__mulsi3>
   2da74:	b1bfffcc 	andi	r6,r22,65535
   2da78:	e18cb03a 	or	r6,fp,r6
   2da7c:	3080062e 	bgeu	r6,r2,2da98 <__udivdi3+0x564>
   2da80:	348d883a 	add	r6,r6,r18
   2da84:	98ffffc4 	addi	r3,r19,-1
   2da88:	34803036 	bltu	r6,r18,2db4c <__udivdi3+0x618>
   2da8c:	30802f2e 	bgeu	r6,r2,2db4c <__udivdi3+0x618>
   2da90:	9cffff84 	addi	r19,r19,-2
   2da94:	348d883a 	add	r6,r6,r18
   2da98:	b82e943a 	slli	r23,r23,16
   2da9c:	30a1c83a 	sub	r16,r6,r2
   2daa0:	9dc6b03a 	or	r3,r19,r23
   2daa4:	003f2606 	br	2d740 <_gp+0xffff0340>
   2daa8:	2027883a 	mov	r19,r4
   2daac:	003f5106 	br	2d7f4 <_gp+0xffff03f4>
   2dab0:	1827883a 	mov	r19,r3
   2dab4:	003ef006 	br	2d678 <_gp+0xffff0278>
   2dab8:	1808943a 	slli	r4,r3,16
   2dabc:	9dc6983a 	sll	r3,r19,r23
   2dac0:	e73fffcc 	andi	fp,fp,65535
   2dac4:	2709883a 	add	r4,r4,fp
   2dac8:	193fbd2e 	bgeu	r3,r4,2d9c0 <_gp+0xffff05c0>
   2dacc:	a0bfffc4 	addi	r2,r20,-1
   2dad0:	0007883a 	mov	r3,zero
   2dad4:	003f4c06 	br	2d808 <_gp+0xffff0408>
   2dad8:	01400404 	movi	r5,16
   2dadc:	2811883a 	mov	r8,r5
   2dae0:	003ef106 	br	2d6a8 <_gp+0xffff02a8>
   2dae4:	000b883a 	mov	r5,zero
   2dae8:	0011883a 	mov	r8,zero
   2daec:	003eee06 	br	2d6a8 <_gp+0xffff02a8>
   2daf0:	00800404 	movi	r2,16
   2daf4:	1007883a 	mov	r3,r2
   2daf8:	003ea606 	br	2d594 <_gp+0xffff0194>
   2dafc:	00800404 	movi	r2,16
   2db00:	1007883a 	mov	r3,r2
   2db04:	003f0106 	br	2d70c <_gp+0xffff030c>
   2db08:	0005883a 	mov	r2,zero
   2db0c:	0007883a 	mov	r3,zero
   2db10:	003efe06 	br	2d70c <_gp+0xffff030c>
   2db14:	0005883a 	mov	r2,zero
   2db18:	0007883a 	mov	r3,zero
   2db1c:	003e9d06 	br	2d594 <_gp+0xffff0194>
   2db20:	0007883a 	mov	r3,zero
   2db24:	00800044 	movi	r2,1
   2db28:	003f3706 	br	2d808 <_gp+0xffff0408>
   2db2c:	80bf832e 	bgeu	r16,r2,2d93c <_gp+0xffff053c>
   2db30:	8c7fff84 	addi	r17,r17,-2
   2db34:	8721883a 	add	r16,r16,fp
   2db38:	003f8106 	br	2d940 <_gp+0xffff0540>
   2db3c:	48bf6a2e 	bgeu	r9,r2,2d8e8 <_gp+0xffff04e8>
   2db40:	a53fff84 	addi	r20,r20,-2
   2db44:	4f13883a 	add	r9,r9,fp
   2db48:	003f6806 	br	2d8ec <_gp+0xffff04ec>
   2db4c:	1827883a 	mov	r19,r3
   2db50:	003fd106 	br	2da98 <_gp+0xffff0698>
   2db54:	182f883a 	mov	r23,r3
   2db58:	003fb906 	br	2da40 <_gp+0xffff0640>
   2db5c:	843fff84 	addi	r16,r16,-2
   2db60:	348d883a 	add	r6,r6,r18
   2db64:	003f0c06 	br	2d798 <_gp+0xffff0398>
   2db68:	843fff84 	addi	r16,r16,-2
   2db6c:	1c87883a 	add	r3,r3,r18
   2db70:	003eac06 	br	2d624 <_gp+0xffff0224>

0002db74 <__umoddi3>:
   2db74:	defff404 	addi	sp,sp,-48
   2db78:	dd800815 	stw	r22,32(sp)
   2db7c:	dc400315 	stw	r17,12(sp)
   2db80:	dc000215 	stw	r16,8(sp)
   2db84:	dfc00b15 	stw	ra,44(sp)
   2db88:	df000a15 	stw	fp,40(sp)
   2db8c:	ddc00915 	stw	r23,36(sp)
   2db90:	dd400715 	stw	r21,28(sp)
   2db94:	dd000615 	stw	r20,24(sp)
   2db98:	dcc00515 	stw	r19,20(sp)
   2db9c:	dc800415 	stw	r18,16(sp)
   2dba0:	2021883a 	mov	r16,r4
   2dba4:	2823883a 	mov	r17,r5
   2dba8:	282d883a 	mov	r22,r5
   2dbac:	38003c1e 	bne	r7,zero,2dca0 <__umoddi3+0x12c>
   2dbb0:	3027883a 	mov	r19,r6
   2dbb4:	2029883a 	mov	r20,r4
   2dbb8:	2980522e 	bgeu	r5,r6,2dd04 <__umoddi3+0x190>
   2dbbc:	00bfffd4 	movui	r2,65535
   2dbc0:	1180a436 	bltu	r2,r6,2de54 <__umoddi3+0x2e0>
   2dbc4:	00803fc4 	movi	r2,255
   2dbc8:	11815e2e 	bgeu	r2,r6,2e144 <__umoddi3+0x5d0>
   2dbcc:	01400204 	movi	r5,8
   2dbd0:	2805883a 	mov	r2,r5
   2dbd4:	314ad83a 	srl	r5,r6,r5
   2dbd8:	00c000f4 	movhi	r3,3
   2dbdc:	18ce0a04 	addi	r3,r3,14376
   2dbe0:	194b883a 	add	r5,r3,r5
   2dbe4:	29000003 	ldbu	r4,0(r5)
   2dbe8:	2089883a 	add	r4,r4,r2
   2dbec:	00800804 	movi	r2,32
   2dbf0:	1105c83a 	sub	r2,r2,r4
   2dbf4:	10010c26 	beq	r2,zero,2e028 <__umoddi3+0x4b4>
   2dbf8:	88a2983a 	sll	r17,r17,r2
   2dbfc:	8108d83a 	srl	r4,r16,r4
   2dc00:	30a6983a 	sll	r19,r6,r2
   2dc04:	80a8983a 	sll	r20,r16,r2
   2dc08:	1025883a 	mov	r18,r2
   2dc0c:	892cb03a 	or	r22,r17,r4
   2dc10:	9822d43a 	srli	r17,r19,16
   2dc14:	b009883a 	mov	r4,r22
   2dc18:	9d7fffcc 	andi	r21,r19,65535
   2dc1c:	880b883a 	mov	r5,r17
   2dc20:	002e2b40 	call	2e2b4 <__umodsi3>
   2dc24:	b009883a 	mov	r4,r22
   2dc28:	880b883a 	mov	r5,r17
   2dc2c:	102f883a 	mov	r23,r2
   2dc30:	002e2ac0 	call	2e2ac <__udivsi3>
   2dc34:	1009883a 	mov	r4,r2
   2dc38:	a80b883a 	mov	r5,r21
   2dc3c:	002e2bc0 	call	2e2bc <__mulsi3>
   2dc40:	b82e943a 	slli	r23,r23,16
   2dc44:	a008d43a 	srli	r4,r20,16
   2dc48:	b906b03a 	or	r3,r23,r4
   2dc4c:	1880042e 	bgeu	r3,r2,2dc60 <__umoddi3+0xec>
   2dc50:	1cc7883a 	add	r3,r3,r19
   2dc54:	1cc00236 	bltu	r3,r19,2dc60 <__umoddi3+0xec>
   2dc58:	1880012e 	bgeu	r3,r2,2dc60 <__umoddi3+0xec>
   2dc5c:	1cc7883a 	add	r3,r3,r19
   2dc60:	18a1c83a 	sub	r16,r3,r2
   2dc64:	8009883a 	mov	r4,r16
   2dc68:	880b883a 	mov	r5,r17
   2dc6c:	002e2b40 	call	2e2b4 <__umodsi3>
   2dc70:	8009883a 	mov	r4,r16
   2dc74:	880b883a 	mov	r5,r17
   2dc78:	102d883a 	mov	r22,r2
   2dc7c:	002e2ac0 	call	2e2ac <__udivsi3>
   2dc80:	1009883a 	mov	r4,r2
   2dc84:	a80b883a 	mov	r5,r21
   2dc88:	b02c943a 	slli	r22,r22,16
   2dc8c:	002e2bc0 	call	2e2bc <__mulsi3>
   2dc90:	a13fffcc 	andi	r4,r20,65535
   2dc94:	b106b03a 	or	r3,r22,r4
   2dc98:	1880572e 	bgeu	r3,r2,2ddf8 <__umoddi3+0x284>
   2dc9c:	00005206 	br	2dde8 <__umoddi3+0x274>
   2dca0:	29c05936 	bltu	r5,r7,2de08 <__umoddi3+0x294>
   2dca4:	00bfffd4 	movui	r2,65535
   2dca8:	11c0652e 	bgeu	r2,r7,2de40 <__umoddi3+0x2cc>
   2dcac:	00804034 	movhi	r2,256
   2dcb0:	10bfffc4 	addi	r2,r2,-1
   2dcb4:	11c1172e 	bgeu	r2,r7,2e114 <__umoddi3+0x5a0>
   2dcb8:	01400604 	movi	r5,24
   2dcbc:	282b883a 	mov	r21,r5
   2dcc0:	394ad83a 	srl	r5,r7,r5
   2dcc4:	00c000f4 	movhi	r3,3
   2dcc8:	18ce0a04 	addi	r3,r3,14376
   2dccc:	194b883a 	add	r5,r3,r5
   2dcd0:	28800003 	ldbu	r2,0(r5)
   2dcd4:	00c00804 	movi	r3,32
   2dcd8:	156b883a 	add	r21,r2,r21
   2dcdc:	1d69c83a 	sub	r20,r3,r21
   2dce0:	a000671e 	bne	r20,zero,2de80 <__umoddi3+0x30c>
   2dce4:	3c400136 	bltu	r7,r17,2dcec <__umoddi3+0x178>
   2dce8:	81812336 	bltu	r16,r6,2e178 <__umoddi3+0x604>
   2dcec:	8185c83a 	sub	r2,r16,r6
   2dcf0:	89e3c83a 	sub	r17,r17,r7
   2dcf4:	8087803a 	cmpltu	r3,r16,r2
   2dcf8:	88edc83a 	sub	r22,r17,r3
   2dcfc:	b007883a 	mov	r3,r22
   2dd00:	00004306 	br	2de10 <__umoddi3+0x29c>
   2dd04:	3000041e 	bne	r6,zero,2dd18 <__umoddi3+0x1a4>
   2dd08:	01000044 	movi	r4,1
   2dd0c:	000b883a 	mov	r5,zero
   2dd10:	002e2ac0 	call	2e2ac <__udivsi3>
   2dd14:	1027883a 	mov	r19,r2
   2dd18:	00bfffd4 	movui	r2,65535
   2dd1c:	14c0532e 	bgeu	r2,r19,2de6c <__umoddi3+0x2f8>
   2dd20:	00804034 	movhi	r2,256
   2dd24:	10bfffc4 	addi	r2,r2,-1
   2dd28:	14c1032e 	bgeu	r2,r19,2e138 <__umoddi3+0x5c4>
   2dd2c:	00800604 	movi	r2,24
   2dd30:	1007883a 	mov	r3,r2
   2dd34:	9884d83a 	srl	r2,r19,r2
   2dd38:	010000f4 	movhi	r4,3
   2dd3c:	210e0a04 	addi	r4,r4,14376
   2dd40:	2085883a 	add	r2,r4,r2
   2dd44:	11000003 	ldbu	r4,0(r2)
   2dd48:	00800804 	movi	r2,32
   2dd4c:	20c7883a 	add	r3,r4,r3
   2dd50:	10c5c83a 	sub	r2,r2,r3
   2dd54:	1000b61e 	bne	r2,zero,2e030 <__umoddi3+0x4bc>
   2dd58:	982ad43a 	srli	r21,r19,16
   2dd5c:	8ce3c83a 	sub	r17,r17,r19
   2dd60:	9dbfffcc 	andi	r22,r19,65535
   2dd64:	0025883a 	mov	r18,zero
   2dd68:	8809883a 	mov	r4,r17
   2dd6c:	a80b883a 	mov	r5,r21
   2dd70:	002e2b40 	call	2e2b4 <__umodsi3>
   2dd74:	8809883a 	mov	r4,r17
   2dd78:	a80b883a 	mov	r5,r21
   2dd7c:	102f883a 	mov	r23,r2
   2dd80:	002e2ac0 	call	2e2ac <__udivsi3>
   2dd84:	1009883a 	mov	r4,r2
   2dd88:	b00b883a 	mov	r5,r22
   2dd8c:	002e2bc0 	call	2e2bc <__mulsi3>
   2dd90:	b82e943a 	slli	r23,r23,16
   2dd94:	a008d43a 	srli	r4,r20,16
   2dd98:	b906b03a 	or	r3,r23,r4
   2dd9c:	1880032e 	bgeu	r3,r2,2ddac <__umoddi3+0x238>
   2dda0:	1cc7883a 	add	r3,r3,r19
   2dda4:	1cc00136 	bltu	r3,r19,2ddac <__umoddi3+0x238>
   2dda8:	1880f136 	bltu	r3,r2,2e170 <__umoddi3+0x5fc>
   2ddac:	18a1c83a 	sub	r16,r3,r2
   2ddb0:	8009883a 	mov	r4,r16
   2ddb4:	a80b883a 	mov	r5,r21
   2ddb8:	002e2b40 	call	2e2b4 <__umodsi3>
   2ddbc:	8009883a 	mov	r4,r16
   2ddc0:	a80b883a 	mov	r5,r21
   2ddc4:	1023883a 	mov	r17,r2
   2ddc8:	002e2ac0 	call	2e2ac <__udivsi3>
   2ddcc:	1009883a 	mov	r4,r2
   2ddd0:	b00b883a 	mov	r5,r22
   2ddd4:	8822943a 	slli	r17,r17,16
   2ddd8:	002e2bc0 	call	2e2bc <__mulsi3>
   2dddc:	a13fffcc 	andi	r4,r20,65535
   2dde0:	8906b03a 	or	r3,r17,r4
   2dde4:	1880042e 	bgeu	r3,r2,2ddf8 <__umoddi3+0x284>
   2dde8:	1cc7883a 	add	r3,r3,r19
   2ddec:	1cc00236 	bltu	r3,r19,2ddf8 <__umoddi3+0x284>
   2ddf0:	1880012e 	bgeu	r3,r2,2ddf8 <__umoddi3+0x284>
   2ddf4:	1cc7883a 	add	r3,r3,r19
   2ddf8:	1887c83a 	sub	r3,r3,r2
   2ddfc:	1c84d83a 	srl	r2,r3,r18
   2de00:	0007883a 	mov	r3,zero
   2de04:	00000206 	br	2de10 <__umoddi3+0x29c>
   2de08:	2005883a 	mov	r2,r4
   2de0c:	2807883a 	mov	r3,r5
   2de10:	dfc00b17 	ldw	ra,44(sp)
   2de14:	df000a17 	ldw	fp,40(sp)
   2de18:	ddc00917 	ldw	r23,36(sp)
   2de1c:	dd800817 	ldw	r22,32(sp)
   2de20:	dd400717 	ldw	r21,28(sp)
   2de24:	dd000617 	ldw	r20,24(sp)
   2de28:	dcc00517 	ldw	r19,20(sp)
   2de2c:	dc800417 	ldw	r18,16(sp)
   2de30:	dc400317 	ldw	r17,12(sp)
   2de34:	dc000217 	ldw	r16,8(sp)
   2de38:	dec00c04 	addi	sp,sp,48
   2de3c:	f800283a 	ret
   2de40:	00803fc4 	movi	r2,255
   2de44:	11c0b02e 	bgeu	r2,r7,2e108 <__umoddi3+0x594>
   2de48:	01400204 	movi	r5,8
   2de4c:	282b883a 	mov	r21,r5
   2de50:	003f9b06 	br	2dcc0 <_gp+0xffff08c0>
   2de54:	00804034 	movhi	r2,256
   2de58:	10bfffc4 	addi	r2,r2,-1
   2de5c:	1180b02e 	bgeu	r2,r6,2e120 <__umoddi3+0x5ac>
   2de60:	01400604 	movi	r5,24
   2de64:	2805883a 	mov	r2,r5
   2de68:	003f5a06 	br	2dbd4 <_gp+0xffff07d4>
   2de6c:	00803fc4 	movi	r2,255
   2de70:	14c0ae2e 	bgeu	r2,r19,2e12c <__umoddi3+0x5b8>
   2de74:	00800204 	movi	r2,8
   2de78:	1007883a 	mov	r3,r2
   2de7c:	003fad06 	br	2dd34 <_gp+0xffff0934>
   2de80:	3d0a983a 	sll	r5,r7,r20
   2de84:	356cd83a 	srl	r22,r6,r21
   2de88:	8d78d83a 	srl	fp,r17,r21
   2de8c:	8d10983a 	sll	r8,r17,r20
   2de90:	2dacb03a 	or	r22,r5,r22
   2de94:	b02ed43a 	srli	r23,r22,16
   2de98:	8564d83a 	srl	r18,r16,r21
   2de9c:	e009883a 	mov	r4,fp
   2dea0:	b80b883a 	mov	r5,r23
   2dea4:	44a4b03a 	or	r18,r8,r18
   2dea8:	3526983a 	sll	r19,r6,r20
   2deac:	002e2b40 	call	2e2b4 <__umodsi3>
   2deb0:	e009883a 	mov	r4,fp
   2deb4:	b80b883a 	mov	r5,r23
   2deb8:	b47fffcc 	andi	r17,r22,65535
   2debc:	d8800015 	stw	r2,0(sp)
   2dec0:	002e2ac0 	call	2e2ac <__udivsi3>
   2dec4:	1009883a 	mov	r4,r2
   2dec8:	880b883a 	mov	r5,r17
   2decc:	1039883a 	mov	fp,r2
   2ded0:	002e2bc0 	call	2e2bc <__mulsi3>
   2ded4:	d9800017 	ldw	r6,0(sp)
   2ded8:	9008d43a 	srli	r4,r18,16
   2dedc:	8520983a 	sll	r16,r16,r20
   2dee0:	300c943a 	slli	r6,r6,16
   2dee4:	3106b03a 	or	r3,r6,r4
   2dee8:	1880042e 	bgeu	r3,r2,2defc <__umoddi3+0x388>
   2deec:	1d87883a 	add	r3,r3,r22
   2def0:	e13fffc4 	addi	r4,fp,-1
   2def4:	1d809a2e 	bgeu	r3,r22,2e160 <__umoddi3+0x5ec>
   2def8:	2039883a 	mov	fp,r4
   2defc:	1887c83a 	sub	r3,r3,r2
   2df00:	1809883a 	mov	r4,r3
   2df04:	b80b883a 	mov	r5,r23
   2df08:	d8c00115 	stw	r3,4(sp)
   2df0c:	002e2b40 	call	2e2b4 <__umodsi3>
   2df10:	d8c00117 	ldw	r3,4(sp)
   2df14:	b80b883a 	mov	r5,r23
   2df18:	d8800015 	stw	r2,0(sp)
   2df1c:	1809883a 	mov	r4,r3
   2df20:	002e2ac0 	call	2e2ac <__udivsi3>
   2df24:	880b883a 	mov	r5,r17
   2df28:	1009883a 	mov	r4,r2
   2df2c:	102f883a 	mov	r23,r2
   2df30:	002e2bc0 	call	2e2bc <__mulsi3>
   2df34:	d9800017 	ldw	r6,0(sp)
   2df38:	947fffcc 	andi	r17,r18,65535
   2df3c:	300c943a 	slli	r6,r6,16
   2df40:	3464b03a 	or	r18,r6,r17
   2df44:	9080042e 	bgeu	r18,r2,2df58 <__umoddi3+0x3e4>
   2df48:	95a5883a 	add	r18,r18,r22
   2df4c:	b8ffffc4 	addi	r3,r23,-1
   2df50:	95807f2e 	bgeu	r18,r22,2e150 <__umoddi3+0x5dc>
   2df54:	182f883a 	mov	r23,r3
   2df58:	e038943a 	slli	fp,fp,16
   2df5c:	980cd43a 	srli	r6,r19,16
   2df60:	98ffffcc 	andi	r3,r19,65535
   2df64:	bf38b03a 	or	fp,r23,fp
   2df68:	e02ed43a 	srli	r23,fp,16
   2df6c:	e73fffcc 	andi	fp,fp,65535
   2df70:	180b883a 	mov	r5,r3
   2df74:	e009883a 	mov	r4,fp
   2df78:	d9800015 	stw	r6,0(sp)
   2df7c:	d8c00115 	stw	r3,4(sp)
   2df80:	90a5c83a 	sub	r18,r18,r2
   2df84:	002e2bc0 	call	2e2bc <__mulsi3>
   2df88:	d8c00117 	ldw	r3,4(sp)
   2df8c:	b809883a 	mov	r4,r23
   2df90:	1023883a 	mov	r17,r2
   2df94:	180b883a 	mov	r5,r3
   2df98:	002e2bc0 	call	2e2bc <__mulsi3>
   2df9c:	d9800017 	ldw	r6,0(sp)
   2dfa0:	b809883a 	mov	r4,r23
   2dfa4:	d8800115 	stw	r2,4(sp)
   2dfa8:	300b883a 	mov	r5,r6
   2dfac:	302f883a 	mov	r23,r6
   2dfb0:	002e2bc0 	call	2e2bc <__mulsi3>
   2dfb4:	e009883a 	mov	r4,fp
   2dfb8:	b80b883a 	mov	r5,r23
   2dfbc:	d8800015 	stw	r2,0(sp)
   2dfc0:	002e2bc0 	call	2e2bc <__mulsi3>
   2dfc4:	d8c00117 	ldw	r3,4(sp)
   2dfc8:	880cd43a 	srli	r6,r17,16
   2dfcc:	d9c00017 	ldw	r7,0(sp)
   2dfd0:	1885883a 	add	r2,r3,r2
   2dfd4:	118d883a 	add	r6,r2,r6
   2dfd8:	30c0022e 	bgeu	r6,r3,2dfe4 <__umoddi3+0x470>
   2dfdc:	00800074 	movhi	r2,1
   2dfe0:	388f883a 	add	r7,r7,r2
   2dfe4:	3006d43a 	srli	r3,r6,16
   2dfe8:	300c943a 	slli	r6,r6,16
   2dfec:	8c7fffcc 	andi	r17,r17,65535
   2dff0:	38c7883a 	add	r3,r7,r3
   2dff4:	3463883a 	add	r17,r6,r17
   2dff8:	90c03d36 	bltu	r18,r3,2e0f0 <__umoddi3+0x57c>
   2dffc:	90c06026 	beq	r18,r3,2e180 <__umoddi3+0x60c>
   2e000:	90c9c83a 	sub	r4,r18,r3
   2e004:	880f883a 	mov	r7,r17
   2e008:	81cfc83a 	sub	r7,r16,r7
   2e00c:	81c7803a 	cmpltu	r3,r16,r7
   2e010:	20c7c83a 	sub	r3,r4,r3
   2e014:	1d44983a 	sll	r2,r3,r21
   2e018:	3d0ed83a 	srl	r7,r7,r20
   2e01c:	1d06d83a 	srl	r3,r3,r20
   2e020:	11c4b03a 	or	r2,r2,r7
   2e024:	003f7a06 	br	2de10 <_gp+0xffff0a10>
   2e028:	0025883a 	mov	r18,zero
   2e02c:	003ef806 	br	2dc10 <_gp+0xffff0810>
   2e030:	98a6983a 	sll	r19,r19,r2
   2e034:	88e8d83a 	srl	r20,r17,r3
   2e038:	80c6d83a 	srl	r3,r16,r3
   2e03c:	982ad43a 	srli	r21,r19,16
   2e040:	88a2983a 	sll	r17,r17,r2
   2e044:	a009883a 	mov	r4,r20
   2e048:	a80b883a 	mov	r5,r21
   2e04c:	88eeb03a 	or	r23,r17,r3
   2e050:	1025883a 	mov	r18,r2
   2e054:	002e2b40 	call	2e2b4 <__umodsi3>
   2e058:	a009883a 	mov	r4,r20
   2e05c:	a80b883a 	mov	r5,r21
   2e060:	1023883a 	mov	r17,r2
   2e064:	9dbfffcc 	andi	r22,r19,65535
   2e068:	002e2ac0 	call	2e2ac <__udivsi3>
   2e06c:	1009883a 	mov	r4,r2
   2e070:	b00b883a 	mov	r5,r22
   2e074:	002e2bc0 	call	2e2bc <__mulsi3>
   2e078:	8822943a 	slli	r17,r17,16
   2e07c:	b808d43a 	srli	r4,r23,16
   2e080:	84a8983a 	sll	r20,r16,r18
   2e084:	8906b03a 	or	r3,r17,r4
   2e088:	1880042e 	bgeu	r3,r2,2e09c <__umoddi3+0x528>
   2e08c:	1cc7883a 	add	r3,r3,r19
   2e090:	1cc00236 	bltu	r3,r19,2e09c <__umoddi3+0x528>
   2e094:	1880012e 	bgeu	r3,r2,2e09c <__umoddi3+0x528>
   2e098:	1cc7883a 	add	r3,r3,r19
   2e09c:	18a1c83a 	sub	r16,r3,r2
   2e0a0:	8009883a 	mov	r4,r16
   2e0a4:	a80b883a 	mov	r5,r21
   2e0a8:	002e2b40 	call	2e2b4 <__umodsi3>
   2e0ac:	8009883a 	mov	r4,r16
   2e0b0:	a80b883a 	mov	r5,r21
   2e0b4:	1039883a 	mov	fp,r2
   2e0b8:	002e2ac0 	call	2e2ac <__udivsi3>
   2e0bc:	1009883a 	mov	r4,r2
   2e0c0:	b00b883a 	mov	r5,r22
   2e0c4:	002e2bc0 	call	2e2bc <__mulsi3>
   2e0c8:	e006943a 	slli	r3,fp,16
   2e0cc:	b93fffcc 	andi	r4,r23,65535
   2e0d0:	1906b03a 	or	r3,r3,r4
   2e0d4:	1880042e 	bgeu	r3,r2,2e0e8 <__umoddi3+0x574>
   2e0d8:	1cc7883a 	add	r3,r3,r19
   2e0dc:	1cc00236 	bltu	r3,r19,2e0e8 <__umoddi3+0x574>
   2e0e0:	1880012e 	bgeu	r3,r2,2e0e8 <__umoddi3+0x574>
   2e0e4:	1cc7883a 	add	r3,r3,r19
   2e0e8:	18a3c83a 	sub	r17,r3,r2
   2e0ec:	003f1e06 	br	2dd68 <_gp+0xffff0968>
   2e0f0:	8ccfc83a 	sub	r7,r17,r19
   2e0f4:	1d89c83a 	sub	r4,r3,r22
   2e0f8:	89e3803a 	cmpltu	r17,r17,r7
   2e0fc:	2463c83a 	sub	r17,r4,r17
   2e100:	9449c83a 	sub	r4,r18,r17
   2e104:	003fc006 	br	2e008 <_gp+0xffff0c08>
   2e108:	000b883a 	mov	r5,zero
   2e10c:	002b883a 	mov	r21,zero
   2e110:	003eeb06 	br	2dcc0 <_gp+0xffff08c0>
   2e114:	01400404 	movi	r5,16
   2e118:	282b883a 	mov	r21,r5
   2e11c:	003ee806 	br	2dcc0 <_gp+0xffff08c0>
   2e120:	01400404 	movi	r5,16
   2e124:	2805883a 	mov	r2,r5
   2e128:	003eaa06 	br	2dbd4 <_gp+0xffff07d4>
   2e12c:	0005883a 	mov	r2,zero
   2e130:	0007883a 	mov	r3,zero
   2e134:	003eff06 	br	2dd34 <_gp+0xffff0934>
   2e138:	00800404 	movi	r2,16
   2e13c:	1007883a 	mov	r3,r2
   2e140:	003efc06 	br	2dd34 <_gp+0xffff0934>
   2e144:	000b883a 	mov	r5,zero
   2e148:	0005883a 	mov	r2,zero
   2e14c:	003ea106 	br	2dbd4 <_gp+0xffff07d4>
   2e150:	90bf802e 	bgeu	r18,r2,2df54 <_gp+0xffff0b54>
   2e154:	bdffff84 	addi	r23,r23,-2
   2e158:	95a5883a 	add	r18,r18,r22
   2e15c:	003f7e06 	br	2df58 <_gp+0xffff0b58>
   2e160:	18bf652e 	bgeu	r3,r2,2def8 <_gp+0xffff0af8>
   2e164:	e73fff84 	addi	fp,fp,-2
   2e168:	1d87883a 	add	r3,r3,r22
   2e16c:	003f6306 	br	2defc <_gp+0xffff0afc>
   2e170:	1cc7883a 	add	r3,r3,r19
   2e174:	003f0d06 	br	2ddac <_gp+0xffff09ac>
   2e178:	8005883a 	mov	r2,r16
   2e17c:	003edf06 	br	2dcfc <_gp+0xffff08fc>
   2e180:	847fdb36 	bltu	r16,r17,2e0f0 <_gp+0xffff0cf0>
   2e184:	880f883a 	mov	r7,r17
   2e188:	0009883a 	mov	r4,zero
   2e18c:	003f9e06 	br	2e008 <_gp+0xffff0c08>

0002e190 <udivmodsi4>:
   2e190:	2900182e 	bgeu	r5,r4,2e1f4 <udivmodsi4+0x64>
   2e194:	28001716 	blt	r5,zero,2e1f4 <udivmodsi4+0x64>
   2e198:	00800804 	movi	r2,32
   2e19c:	00c00044 	movi	r3,1
   2e1a0:	00000206 	br	2e1ac <udivmodsi4+0x1c>
   2e1a4:	10001126 	beq	r2,zero,2e1ec <udivmodsi4+0x5c>
   2e1a8:	28000516 	blt	r5,zero,2e1c0 <udivmodsi4+0x30>
   2e1ac:	294b883a 	add	r5,r5,r5
   2e1b0:	10bfffc4 	addi	r2,r2,-1
   2e1b4:	18c7883a 	add	r3,r3,r3
   2e1b8:	293ffa36 	bltu	r5,r4,2e1a4 <_gp+0xffff0da4>
   2e1bc:	18000b26 	beq	r3,zero,2e1ec <udivmodsi4+0x5c>
   2e1c0:	0005883a 	mov	r2,zero
   2e1c4:	21400236 	bltu	r4,r5,2e1d0 <udivmodsi4+0x40>
   2e1c8:	2149c83a 	sub	r4,r4,r5
   2e1cc:	10c4b03a 	or	r2,r2,r3
   2e1d0:	1806d07a 	srli	r3,r3,1
   2e1d4:	280ad07a 	srli	r5,r5,1
   2e1d8:	183ffa1e 	bne	r3,zero,2e1c4 <_gp+0xffff0dc4>
   2e1dc:	3000011e 	bne	r6,zero,2e1e4 <udivmodsi4+0x54>
   2e1e0:	f800283a 	ret
   2e1e4:	2005883a 	mov	r2,r4
   2e1e8:	f800283a 	ret
   2e1ec:	0005883a 	mov	r2,zero
   2e1f0:	003ffa06 	br	2e1dc <_gp+0xffff0ddc>
   2e1f4:	00c00044 	movi	r3,1
   2e1f8:	003ff106 	br	2e1c0 <_gp+0xffff0dc0>

0002e1fc <__divsi3>:
   2e1fc:	defffe04 	addi	sp,sp,-8
   2e200:	dfc00115 	stw	ra,4(sp)
   2e204:	dc000015 	stw	r16,0(sp)
   2e208:	20000b16 	blt	r4,zero,2e238 <__divsi3+0x3c>
   2e20c:	0021883a 	mov	r16,zero
   2e210:	28000c16 	blt	r5,zero,2e244 <__divsi3+0x48>
   2e214:	000d883a 	mov	r6,zero
   2e218:	002e1900 	call	2e190 <udivmodsi4>
   2e21c:	0407c83a 	sub	r3,zero,r16
   2e220:	1884f03a 	xor	r2,r3,r2
   2e224:	1405883a 	add	r2,r2,r16
   2e228:	dfc00117 	ldw	ra,4(sp)
   2e22c:	dc000017 	ldw	r16,0(sp)
   2e230:	dec00204 	addi	sp,sp,8
   2e234:	f800283a 	ret
   2e238:	0109c83a 	sub	r4,zero,r4
   2e23c:	04000044 	movi	r16,1
   2e240:	283ff40e 	bge	r5,zero,2e214 <_gp+0xffff0e14>
   2e244:	014bc83a 	sub	r5,zero,r5
   2e248:	8400005c 	xori	r16,r16,1
   2e24c:	003ff106 	br	2e214 <_gp+0xffff0e14>

0002e250 <__modsi3>:
   2e250:	defffd04 	addi	sp,sp,-12
   2e254:	dfc00215 	stw	ra,8(sp)
   2e258:	dc400115 	stw	r17,4(sp)
   2e25c:	dc000015 	stw	r16,0(sp)
   2e260:	20000c16 	blt	r4,zero,2e294 <__modsi3+0x44>
   2e264:	0023883a 	mov	r17,zero
   2e268:	0021883a 	mov	r16,zero
   2e26c:	28000d16 	blt	r5,zero,2e2a4 <__modsi3+0x54>
   2e270:	01800044 	movi	r6,1
   2e274:	002e1900 	call	2e190 <udivmodsi4>
   2e278:	1404f03a 	xor	r2,r2,r16
   2e27c:	8885883a 	add	r2,r17,r2
   2e280:	dfc00217 	ldw	ra,8(sp)
   2e284:	dc400117 	ldw	r17,4(sp)
   2e288:	dc000017 	ldw	r16,0(sp)
   2e28c:	dec00304 	addi	sp,sp,12
   2e290:	f800283a 	ret
   2e294:	0109c83a 	sub	r4,zero,r4
   2e298:	04400044 	movi	r17,1
   2e29c:	043fffc4 	movi	r16,-1
   2e2a0:	283ff30e 	bge	r5,zero,2e270 <_gp+0xffff0e70>
   2e2a4:	014bc83a 	sub	r5,zero,r5
   2e2a8:	003ff106 	br	2e270 <_gp+0xffff0e70>

0002e2ac <__udivsi3>:
   2e2ac:	000d883a 	mov	r6,zero
   2e2b0:	002e1901 	jmpi	2e190 <udivmodsi4>

0002e2b4 <__umodsi3>:
   2e2b4:	01800044 	movi	r6,1
   2e2b8:	002e1901 	jmpi	2e190 <udivmodsi4>

0002e2bc <__mulsi3>:
   2e2bc:	0005883a 	mov	r2,zero
   2e2c0:	20000726 	beq	r4,zero,2e2e0 <__mulsi3+0x24>
   2e2c4:	20c0004c 	andi	r3,r4,1
   2e2c8:	2008d07a 	srli	r4,r4,1
   2e2cc:	18000126 	beq	r3,zero,2e2d4 <__mulsi3+0x18>
   2e2d0:	1145883a 	add	r2,r2,r5
   2e2d4:	294b883a 	add	r5,r5,r5
   2e2d8:	203ffa1e 	bne	r4,zero,2e2c4 <_gp+0xffff0ec4>
   2e2dc:	f800283a 	ret
   2e2e0:	f800283a 	ret

0002e2e4 <__adddf3>:
   2e2e4:	02000434 	movhi	r8,16
   2e2e8:	423fffc4 	addi	r8,r8,-1
   2e2ec:	defffb04 	addi	sp,sp,-20
   2e2f0:	2a12703a 	and	r9,r5,r8
   2e2f4:	2806d7fa 	srli	r3,r5,31
   2e2f8:	3a10703a 	and	r8,r7,r8
   2e2fc:	3804d53a 	srli	r2,r7,20
   2e300:	3014d77a 	srli	r10,r6,29
   2e304:	dc000015 	stw	r16,0(sp)
   2e308:	481290fa 	slli	r9,r9,3
   2e30c:	2820d53a 	srli	r16,r5,20
   2e310:	401090fa 	slli	r8,r8,3
   2e314:	200ad77a 	srli	r5,r4,29
   2e318:	380ed7fa 	srli	r7,r7,31
   2e31c:	dc800215 	stw	r18,8(sp)
   2e320:	dc400115 	stw	r17,4(sp)
   2e324:	dfc00415 	stw	ra,16(sp)
   2e328:	dcc00315 	stw	r19,12(sp)
   2e32c:	1c803fcc 	andi	r18,r3,255
   2e330:	8401ffcc 	andi	r16,r16,2047
   2e334:	494ab03a 	or	r5,r9,r5
   2e338:	202290fa 	slli	r17,r4,3
   2e33c:	1081ffcc 	andi	r2,r2,2047
   2e340:	4290b03a 	or	r8,r8,r10
   2e344:	300c90fa 	slli	r6,r6,3
   2e348:	91c07026 	beq	r18,r7,2e50c <__adddf3+0x228>
   2e34c:	8087c83a 	sub	r3,r16,r2
   2e350:	00c0b30e 	bge	zero,r3,2e620 <__adddf3+0x33c>
   2e354:	10002a1e 	bne	r2,zero,2e400 <__adddf3+0x11c>
   2e358:	4184b03a 	or	r2,r8,r6
   2e35c:	1000991e 	bne	r2,zero,2e5c4 <__adddf3+0x2e0>
   2e360:	888001cc 	andi	r2,r17,7
   2e364:	10005b26 	beq	r2,zero,2e4d4 <__adddf3+0x1f0>
   2e368:	88c003cc 	andi	r3,r17,15
   2e36c:	00800104 	movi	r2,4
   2e370:	18805826 	beq	r3,r2,2e4d4 <__adddf3+0x1f0>
   2e374:	89800104 	addi	r6,r17,4
   2e378:	3463803a 	cmpltu	r17,r6,r17
   2e37c:	2c4b883a 	add	r5,r5,r17
   2e380:	2880202c 	andhi	r2,r5,128
   2e384:	9007883a 	mov	r3,r18
   2e388:	3023883a 	mov	r17,r6
   2e38c:	10005426 	beq	r2,zero,2e4e0 <__adddf3+0x1fc>
   2e390:	84000044 	addi	r16,r16,1
   2e394:	0081ffc4 	movi	r2,2047
   2e398:	8080c126 	beq	r16,r2,2e6a0 <__adddf3+0x3bc>
   2e39c:	013fe034 	movhi	r4,65408
   2e3a0:	213fffc4 	addi	r4,r4,-1
   2e3a4:	290a703a 	and	r5,r5,r4
   2e3a8:	2804977a 	slli	r2,r5,29
   2e3ac:	280a927a 	slli	r5,r5,9
   2e3b0:	8822d0fa 	srli	r17,r17,3
   2e3b4:	8401ffcc 	andi	r16,r16,2047
   2e3b8:	2808d33a 	srli	r4,r5,12
   2e3bc:	1444b03a 	or	r2,r2,r17
   2e3c0:	8401ffcc 	andi	r16,r16,2047
   2e3c4:	800a953a 	slli	r5,r16,20
   2e3c8:	18c03fcc 	andi	r3,r3,255
   2e3cc:	04000434 	movhi	r16,16
   2e3d0:	180697fa 	slli	r3,r3,31
   2e3d4:	843fffc4 	addi	r16,r16,-1
   2e3d8:	2420703a 	and	r16,r4,r16
   2e3dc:	8160b03a 	or	r16,r16,r5
   2e3e0:	80c6b03a 	or	r3,r16,r3
   2e3e4:	dfc00417 	ldw	ra,16(sp)
   2e3e8:	dcc00317 	ldw	r19,12(sp)
   2e3ec:	dc800217 	ldw	r18,8(sp)
   2e3f0:	dc400117 	ldw	r17,4(sp)
   2e3f4:	dc000017 	ldw	r16,0(sp)
   2e3f8:	dec00504 	addi	sp,sp,20
   2e3fc:	f800283a 	ret
   2e400:	0081ffc4 	movi	r2,2047
   2e404:	80bfd626 	beq	r16,r2,2e360 <_gp+0xffff0f60>
   2e408:	42002034 	orhi	r8,r8,128
   2e40c:	00800e04 	movi	r2,56
   2e410:	10c0a616 	blt	r2,r3,2e6ac <__adddf3+0x3c8>
   2e414:	008007c4 	movi	r2,31
   2e418:	10c0c916 	blt	r2,r3,2e740 <__adddf3+0x45c>
   2e41c:	00800804 	movi	r2,32
   2e420:	10c5c83a 	sub	r2,r2,r3
   2e424:	408e983a 	sll	r7,r8,r2
   2e428:	30c8d83a 	srl	r4,r6,r3
   2e42c:	3084983a 	sll	r2,r6,r2
   2e430:	40c6d83a 	srl	r3,r8,r3
   2e434:	390cb03a 	or	r6,r7,r4
   2e438:	1004c03a 	cmpne	r2,r2,zero
   2e43c:	308cb03a 	or	r6,r6,r2
   2e440:	898dc83a 	sub	r6,r17,r6
   2e444:	89a3803a 	cmpltu	r17,r17,r6
   2e448:	28cbc83a 	sub	r5,r5,r3
   2e44c:	2c4bc83a 	sub	r5,r5,r17
   2e450:	3023883a 	mov	r17,r6
   2e454:	2880202c 	andhi	r2,r5,128
   2e458:	10006d26 	beq	r2,zero,2e610 <__adddf3+0x32c>
   2e45c:	04c02034 	movhi	r19,128
   2e460:	9cffffc4 	addi	r19,r19,-1
   2e464:	2ce6703a 	and	r19,r5,r19
   2e468:	98007e26 	beq	r19,zero,2e664 <__adddf3+0x380>
   2e46c:	9809883a 	mov	r4,r19
   2e470:	0030a7c0 	call	30a7c <__clzsi2>
   2e474:	10fffe04 	addi	r3,r2,-8
   2e478:	010007c4 	movi	r4,31
   2e47c:	20c07f16 	blt	r4,r3,2e67c <__adddf3+0x398>
   2e480:	01400a04 	movi	r5,40
   2e484:	2885c83a 	sub	r2,r5,r2
   2e488:	888ad83a 	srl	r5,r17,r2
   2e48c:	98e6983a 	sll	r19,r19,r3
   2e490:	88e2983a 	sll	r17,r17,r3
   2e494:	2ce6b03a 	or	r19,r5,r19
   2e498:	1c007c16 	blt	r3,r16,2e68c <__adddf3+0x3a8>
   2e49c:	1c21c83a 	sub	r16,r3,r16
   2e4a0:	81400044 	addi	r5,r16,1
   2e4a4:	00c007c4 	movi	r3,31
   2e4a8:	19409816 	blt	r3,r5,2e70c <__adddf3+0x428>
   2e4ac:	1c21c83a 	sub	r16,r3,r16
   2e4b0:	8c08983a 	sll	r4,r17,r16
   2e4b4:	8946d83a 	srl	r3,r17,r5
   2e4b8:	9c20983a 	sll	r16,r19,r16
   2e4bc:	2008c03a 	cmpne	r4,r4,zero
   2e4c0:	994ad83a 	srl	r5,r19,r5
   2e4c4:	1c06b03a 	or	r3,r3,r16
   2e4c8:	1922b03a 	or	r17,r3,r4
   2e4cc:	0021883a 	mov	r16,zero
   2e4d0:	003fa306 	br	2e360 <_gp+0xffff0f60>
   2e4d4:	2880202c 	andhi	r2,r5,128
   2e4d8:	9007883a 	mov	r3,r18
   2e4dc:	103fac1e 	bne	r2,zero,2e390 <_gp+0xffff0f90>
   2e4e0:	2804977a 	slli	r2,r5,29
   2e4e4:	8822d0fa 	srli	r17,r17,3
   2e4e8:	0101ffc4 	movi	r4,2047
   2e4ec:	280ad0fa 	srli	r5,r5,3
   2e4f0:	1444b03a 	or	r2,r2,r17
   2e4f4:	81002c26 	beq	r16,r4,2e5a8 <__adddf3+0x2c4>
   2e4f8:	8120703a 	and	r16,r16,r4
   2e4fc:	01000434 	movhi	r4,16
   2e500:	213fffc4 	addi	r4,r4,-1
   2e504:	2908703a 	and	r4,r5,r4
   2e508:	003fad06 	br	2e3c0 <_gp+0xffff0fc0>
   2e50c:	8089c83a 	sub	r4,r16,r2
   2e510:	01006a0e 	bge	zero,r4,2e6bc <__adddf3+0x3d8>
   2e514:	10003326 	beq	r2,zero,2e5e4 <__adddf3+0x300>
   2e518:	0081ffc4 	movi	r2,2047
   2e51c:	80bf9026 	beq	r16,r2,2e360 <_gp+0xffff0f60>
   2e520:	42002034 	orhi	r8,r8,128
   2e524:	00800e04 	movi	r2,56
   2e528:	1100b116 	blt	r2,r4,2e7f0 <__adddf3+0x50c>
   2e52c:	008007c4 	movi	r2,31
   2e530:	1100e216 	blt	r2,r4,2e8bc <__adddf3+0x5d8>
   2e534:	00800804 	movi	r2,32
   2e538:	1105c83a 	sub	r2,r2,r4
   2e53c:	4092983a 	sll	r9,r8,r2
   2e540:	310ed83a 	srl	r7,r6,r4
   2e544:	3084983a 	sll	r2,r6,r2
   2e548:	4110d83a 	srl	r8,r8,r4
   2e54c:	49ccb03a 	or	r6,r9,r7
   2e550:	1004c03a 	cmpne	r2,r2,zero
   2e554:	308cb03a 	or	r6,r6,r2
   2e558:	344d883a 	add	r6,r6,r17
   2e55c:	3463803a 	cmpltu	r17,r6,r17
   2e560:	414b883a 	add	r5,r8,r5
   2e564:	2c4b883a 	add	r5,r5,r17
   2e568:	3023883a 	mov	r17,r6
   2e56c:	2880202c 	andhi	r2,r5,128
   2e570:	10002726 	beq	r2,zero,2e610 <__adddf3+0x32c>
   2e574:	84000044 	addi	r16,r16,1
   2e578:	0081ffc4 	movi	r2,2047
   2e57c:	8080ae26 	beq	r16,r2,2e838 <__adddf3+0x554>
   2e580:	00bfe034 	movhi	r2,65408
   2e584:	10bfffc4 	addi	r2,r2,-1
   2e588:	288a703a 	and	r5,r5,r2
   2e58c:	880cd07a 	srli	r6,r17,1
   2e590:	280897fa 	slli	r4,r5,31
   2e594:	88c0004c 	andi	r3,r17,1
   2e598:	30e2b03a 	or	r17,r6,r3
   2e59c:	280ad07a 	srli	r5,r5,1
   2e5a0:	8922b03a 	or	r17,r17,r4
   2e5a4:	003f6e06 	br	2e360 <_gp+0xffff0f60>
   2e5a8:	1148b03a 	or	r4,r2,r5
   2e5ac:	20003c26 	beq	r4,zero,2e6a0 <__adddf3+0x3bc>
   2e5b0:	29000234 	orhi	r4,r5,8
   2e5b4:	01400434 	movhi	r5,16
   2e5b8:	297fffc4 	addi	r5,r5,-1
   2e5bc:	2148703a 	and	r4,r4,r5
   2e5c0:	003f7f06 	br	2e3c0 <_gp+0xffff0fc0>
   2e5c4:	18ffffc4 	addi	r3,r3,-1
   2e5c8:	18004d1e 	bne	r3,zero,2e700 <__adddf3+0x41c>
   2e5cc:	898dc83a 	sub	r6,r17,r6
   2e5d0:	89a3803a 	cmpltu	r17,r17,r6
   2e5d4:	2a0bc83a 	sub	r5,r5,r8
   2e5d8:	2c4bc83a 	sub	r5,r5,r17
   2e5dc:	3023883a 	mov	r17,r6
   2e5e0:	003f9c06 	br	2e454 <_gp+0xffff1054>
   2e5e4:	4184b03a 	or	r2,r8,r6
   2e5e8:	103f5d26 	beq	r2,zero,2e360 <_gp+0xffff0f60>
   2e5ec:	213fffc4 	addi	r4,r4,-1
   2e5f0:	203fd926 	beq	r4,zero,2e558 <_gp+0xffff1158>
   2e5f4:	0081ffc4 	movi	r2,2047
   2e5f8:	80bfca1e 	bne	r16,r2,2e524 <_gp+0xffff1124>
   2e5fc:	003f5806 	br	2e360 <_gp+0xffff0f60>
   2e600:	10c8b03a 	or	r4,r2,r3
   2e604:	20008b26 	beq	r4,zero,2e834 <__adddf3+0x550>
   2e608:	100b883a 	mov	r5,r2
   2e60c:	1823883a 	mov	r17,r3
   2e610:	888001cc 	andi	r2,r17,7
   2e614:	103f541e 	bne	r2,zero,2e368 <_gp+0xffff0f68>
   2e618:	9007883a 	mov	r3,r18
   2e61c:	003fb006 	br	2e4e0 <_gp+0xffff10e0>
   2e620:	1800531e 	bne	r3,zero,2e770 <__adddf3+0x48c>
   2e624:	80800044 	addi	r2,r16,1
   2e628:	1081ffcc 	andi	r2,r2,2047
   2e62c:	00c00044 	movi	r3,1
   2e630:	1880990e 	bge	r3,r2,2e898 <__adddf3+0x5b4>
   2e634:	8985c83a 	sub	r2,r17,r6
   2e638:	8887803a 	cmpltu	r3,r17,r2
   2e63c:	2a27c83a 	sub	r19,r5,r8
   2e640:	98e7c83a 	sub	r19,r19,r3
   2e644:	98c0202c 	andhi	r3,r19,128
   2e648:	18006226 	beq	r3,zero,2e7d4 <__adddf3+0x4f0>
   2e64c:	3463c83a 	sub	r17,r6,r17
   2e650:	4151c83a 	sub	r8,r8,r5
   2e654:	344d803a 	cmpltu	r6,r6,r17
   2e658:	41a7c83a 	sub	r19,r8,r6
   2e65c:	3825883a 	mov	r18,r7
   2e660:	983f821e 	bne	r19,zero,2e46c <_gp+0xffff106c>
   2e664:	8809883a 	mov	r4,r17
   2e668:	0030a7c0 	call	30a7c <__clzsi2>
   2e66c:	10800804 	addi	r2,r2,32
   2e670:	10fffe04 	addi	r3,r2,-8
   2e674:	010007c4 	movi	r4,31
   2e678:	20ff810e 	bge	r4,r3,2e480 <_gp+0xffff1080>
   2e67c:	14fff604 	addi	r19,r2,-40
   2e680:	8ce6983a 	sll	r19,r17,r19
   2e684:	0023883a 	mov	r17,zero
   2e688:	1c3f840e 	bge	r3,r16,2e49c <_gp+0xffff109c>
   2e68c:	017fe034 	movhi	r5,65408
   2e690:	297fffc4 	addi	r5,r5,-1
   2e694:	80e1c83a 	sub	r16,r16,r3
   2e698:	994a703a 	and	r5,r19,r5
   2e69c:	003f3006 	br	2e360 <_gp+0xffff0f60>
   2e6a0:	0009883a 	mov	r4,zero
   2e6a4:	0005883a 	mov	r2,zero
   2e6a8:	003f4506 	br	2e3c0 <_gp+0xffff0fc0>
   2e6ac:	418cb03a 	or	r6,r8,r6
   2e6b0:	300cc03a 	cmpne	r6,r6,zero
   2e6b4:	0007883a 	mov	r3,zero
   2e6b8:	003f6106 	br	2e440 <_gp+0xffff1040>
   2e6bc:	2000921e 	bne	r4,zero,2e908 <__adddf3+0x624>
   2e6c0:	80800044 	addi	r2,r16,1
   2e6c4:	11c1ffcc 	andi	r7,r2,2047
   2e6c8:	01000044 	movi	r4,1
   2e6cc:	21c0610e 	bge	r4,r7,2e854 <__adddf3+0x570>
   2e6d0:	0101ffc4 	movi	r4,2047
   2e6d4:	1100a326 	beq	r2,r4,2e964 <__adddf3+0x680>
   2e6d8:	344d883a 	add	r6,r6,r17
   2e6dc:	3463803a 	cmpltu	r17,r6,r17
   2e6e0:	414b883a 	add	r5,r8,r5
   2e6e4:	2c4b883a 	add	r5,r5,r17
   2e6e8:	282297fa 	slli	r17,r5,31
   2e6ec:	300cd07a 	srli	r6,r6,1
   2e6f0:	280ad07a 	srli	r5,r5,1
   2e6f4:	1021883a 	mov	r16,r2
   2e6f8:	89a2b03a 	or	r17,r17,r6
   2e6fc:	003f1806 	br	2e360 <_gp+0xffff0f60>
   2e700:	0081ffc4 	movi	r2,2047
   2e704:	80bf411e 	bne	r16,r2,2e40c <_gp+0xffff100c>
   2e708:	003f1506 	br	2e360 <_gp+0xffff0f60>
   2e70c:	80bff844 	addi	r2,r16,-31
   2e710:	00c00804 	movi	r3,32
   2e714:	9884d83a 	srl	r2,r19,r2
   2e718:	28c04a26 	beq	r5,r3,2e844 <__adddf3+0x560>
   2e71c:	00c00fc4 	movi	r3,63
   2e720:	1c21c83a 	sub	r16,r3,r16
   2e724:	9c26983a 	sll	r19,r19,r16
   2e728:	9c62b03a 	or	r17,r19,r17
   2e72c:	8822c03a 	cmpne	r17,r17,zero
   2e730:	88a2b03a 	or	r17,r17,r2
   2e734:	000b883a 	mov	r5,zero
   2e738:	0021883a 	mov	r16,zero
   2e73c:	003fb406 	br	2e610 <_gp+0xffff1210>
   2e740:	18bff804 	addi	r2,r3,-32
   2e744:	01000804 	movi	r4,32
   2e748:	4084d83a 	srl	r2,r8,r2
   2e74c:	19003f26 	beq	r3,r4,2e84c <__adddf3+0x568>
   2e750:	01001004 	movi	r4,64
   2e754:	20c7c83a 	sub	r3,r4,r3
   2e758:	40d0983a 	sll	r8,r8,r3
   2e75c:	418cb03a 	or	r6,r8,r6
   2e760:	300cc03a 	cmpne	r6,r6,zero
   2e764:	308cb03a 	or	r6,r6,r2
   2e768:	0007883a 	mov	r3,zero
   2e76c:	003f3406 	br	2e440 <_gp+0xffff1040>
   2e770:	80002326 	beq	r16,zero,2e800 <__adddf3+0x51c>
   2e774:	0101ffc4 	movi	r4,2047
   2e778:	11005e26 	beq	r2,r4,2e8f4 <__adddf3+0x610>
   2e77c:	00c7c83a 	sub	r3,zero,r3
   2e780:	29402034 	orhi	r5,r5,128
   2e784:	01000e04 	movi	r4,56
   2e788:	20c07216 	blt	r4,r3,2e954 <__adddf3+0x670>
   2e78c:	010007c4 	movi	r4,31
   2e790:	20c0ce16 	blt	r4,r3,2eacc <__adddf3+0x7e8>
   2e794:	01000804 	movi	r4,32
   2e798:	20c9c83a 	sub	r4,r4,r3
   2e79c:	2914983a 	sll	r10,r5,r4
   2e7a0:	88d2d83a 	srl	r9,r17,r3
   2e7a4:	8908983a 	sll	r4,r17,r4
   2e7a8:	28c6d83a 	srl	r3,r5,r3
   2e7ac:	5262b03a 	or	r17,r10,r9
   2e7b0:	2008c03a 	cmpne	r4,r4,zero
   2e7b4:	8922b03a 	or	r17,r17,r4
   2e7b8:	3463c83a 	sub	r17,r6,r17
   2e7bc:	40c7c83a 	sub	r3,r8,r3
   2e7c0:	344d803a 	cmpltu	r6,r6,r17
   2e7c4:	198bc83a 	sub	r5,r3,r6
   2e7c8:	1021883a 	mov	r16,r2
   2e7cc:	3825883a 	mov	r18,r7
   2e7d0:	003f2006 	br	2e454 <_gp+0xffff1054>
   2e7d4:	9886b03a 	or	r3,r19,r2
   2e7d8:	1800141e 	bne	r3,zero,2e82c <__adddf3+0x548>
   2e7dc:	0007883a 	mov	r3,zero
   2e7e0:	000b883a 	mov	r5,zero
   2e7e4:	0023883a 	mov	r17,zero
   2e7e8:	0021883a 	mov	r16,zero
   2e7ec:	003f3c06 	br	2e4e0 <_gp+0xffff10e0>
   2e7f0:	418cb03a 	or	r6,r8,r6
   2e7f4:	300cc03a 	cmpne	r6,r6,zero
   2e7f8:	0011883a 	mov	r8,zero
   2e7fc:	003f5606 	br	2e558 <_gp+0xffff1158>
   2e800:	2c48b03a 	or	r4,r5,r17
   2e804:	20003b26 	beq	r4,zero,2e8f4 <__adddf3+0x610>
   2e808:	00c6303a 	nor	r3,zero,r3
   2e80c:	1800371e 	bne	r3,zero,2e8ec <__adddf3+0x608>
   2e810:	3463c83a 	sub	r17,r6,r17
   2e814:	414bc83a 	sub	r5,r8,r5
   2e818:	344d803a 	cmpltu	r6,r6,r17
   2e81c:	298bc83a 	sub	r5,r5,r6
   2e820:	1021883a 	mov	r16,r2
   2e824:	3825883a 	mov	r18,r7
   2e828:	003f0a06 	br	2e454 <_gp+0xffff1054>
   2e82c:	1023883a 	mov	r17,r2
   2e830:	003f0d06 	br	2e468 <_gp+0xffff1068>
   2e834:	0007883a 	mov	r3,zero
   2e838:	000b883a 	mov	r5,zero
   2e83c:	0023883a 	mov	r17,zero
   2e840:	003f2706 	br	2e4e0 <_gp+0xffff10e0>
   2e844:	0027883a 	mov	r19,zero
   2e848:	003fb706 	br	2e728 <_gp+0xffff1328>
   2e84c:	0011883a 	mov	r8,zero
   2e850:	003fc206 	br	2e75c <_gp+0xffff135c>
   2e854:	2c44b03a 	or	r2,r5,r17
   2e858:	8000871e 	bne	r16,zero,2ea78 <__adddf3+0x794>
   2e85c:	1000b126 	beq	r2,zero,2eb24 <__adddf3+0x840>
   2e860:	4184b03a 	or	r2,r8,r6
   2e864:	103ebe26 	beq	r2,zero,2e360 <_gp+0xffff0f60>
   2e868:	3445883a 	add	r2,r6,r17
   2e86c:	1463803a 	cmpltu	r17,r2,r17
   2e870:	414b883a 	add	r5,r8,r5
   2e874:	2c4b883a 	add	r5,r5,r17
   2e878:	28c0202c 	andhi	r3,r5,128
   2e87c:	1023883a 	mov	r17,r2
   2e880:	183f6326 	beq	r3,zero,2e610 <_gp+0xffff1210>
   2e884:	00bfe034 	movhi	r2,65408
   2e888:	10bfffc4 	addi	r2,r2,-1
   2e88c:	2021883a 	mov	r16,r4
   2e890:	288a703a 	and	r5,r5,r2
   2e894:	003eb206 	br	2e360 <_gp+0xffff0f60>
   2e898:	2c44b03a 	or	r2,r5,r17
   2e89c:	8000251e 	bne	r16,zero,2e934 <__adddf3+0x650>
   2e8a0:	10004b1e 	bne	r2,zero,2e9d0 <__adddf3+0x6ec>
   2e8a4:	4184b03a 	or	r2,r8,r6
   2e8a8:	103fe226 	beq	r2,zero,2e834 <_gp+0xffff1434>
   2e8ac:	400b883a 	mov	r5,r8
   2e8b0:	3023883a 	mov	r17,r6
   2e8b4:	3825883a 	mov	r18,r7
   2e8b8:	003ea906 	br	2e360 <_gp+0xffff0f60>
   2e8bc:	20bff804 	addi	r2,r4,-32
   2e8c0:	01c00804 	movi	r7,32
   2e8c4:	4084d83a 	srl	r2,r8,r2
   2e8c8:	21c07e26 	beq	r4,r7,2eac4 <__adddf3+0x7e0>
   2e8cc:	01c01004 	movi	r7,64
   2e8d0:	3909c83a 	sub	r4,r7,r4
   2e8d4:	4110983a 	sll	r8,r8,r4
   2e8d8:	418cb03a 	or	r6,r8,r6
   2e8dc:	300cc03a 	cmpne	r6,r6,zero
   2e8e0:	308cb03a 	or	r6,r6,r2
   2e8e4:	0011883a 	mov	r8,zero
   2e8e8:	003f1b06 	br	2e558 <_gp+0xffff1158>
   2e8ec:	0101ffc4 	movi	r4,2047
   2e8f0:	113fa41e 	bne	r2,r4,2e784 <_gp+0xffff1384>
   2e8f4:	400b883a 	mov	r5,r8
   2e8f8:	3023883a 	mov	r17,r6
   2e8fc:	1021883a 	mov	r16,r2
   2e900:	3825883a 	mov	r18,r7
   2e904:	003e9606 	br	2e360 <_gp+0xffff0f60>
   2e908:	80001a1e 	bne	r16,zero,2e974 <__adddf3+0x690>
   2e90c:	2c4eb03a 	or	r7,r5,r17
   2e910:	38005526 	beq	r7,zero,2ea68 <__adddf3+0x784>
   2e914:	0108303a 	nor	r4,zero,r4
   2e918:	2000511e 	bne	r4,zero,2ea60 <__adddf3+0x77c>
   2e91c:	89a3883a 	add	r17,r17,r6
   2e920:	414b883a 	add	r5,r8,r5
   2e924:	898d803a 	cmpltu	r6,r17,r6
   2e928:	298b883a 	add	r5,r5,r6
   2e92c:	1021883a 	mov	r16,r2
   2e930:	003f0e06 	br	2e56c <_gp+0xffff116c>
   2e934:	1000341e 	bne	r2,zero,2ea08 <__adddf3+0x724>
   2e938:	4184b03a 	or	r2,r8,r6
   2e93c:	10006f26 	beq	r2,zero,2eafc <__adddf3+0x818>
   2e940:	400b883a 	mov	r5,r8
   2e944:	3023883a 	mov	r17,r6
   2e948:	3825883a 	mov	r18,r7
   2e94c:	0401ffc4 	movi	r16,2047
   2e950:	003e8306 	br	2e360 <_gp+0xffff0f60>
   2e954:	2c62b03a 	or	r17,r5,r17
   2e958:	8822c03a 	cmpne	r17,r17,zero
   2e95c:	0007883a 	mov	r3,zero
   2e960:	003f9506 	br	2e7b8 <_gp+0xffff13b8>
   2e964:	1021883a 	mov	r16,r2
   2e968:	000b883a 	mov	r5,zero
   2e96c:	0023883a 	mov	r17,zero
   2e970:	003edb06 	br	2e4e0 <_gp+0xffff10e0>
   2e974:	01c1ffc4 	movi	r7,2047
   2e978:	11c03b26 	beq	r2,r7,2ea68 <__adddf3+0x784>
   2e97c:	0109c83a 	sub	r4,zero,r4
   2e980:	29402034 	orhi	r5,r5,128
   2e984:	01c00e04 	movi	r7,56
   2e988:	39006216 	blt	r7,r4,2eb14 <__adddf3+0x830>
   2e98c:	01c007c4 	movi	r7,31
   2e990:	39006b16 	blt	r7,r4,2eb40 <__adddf3+0x85c>
   2e994:	01c00804 	movi	r7,32
   2e998:	390fc83a 	sub	r7,r7,r4
   2e99c:	29d4983a 	sll	r10,r5,r7
   2e9a0:	8912d83a 	srl	r9,r17,r4
   2e9a4:	89ce983a 	sll	r7,r17,r7
   2e9a8:	2908d83a 	srl	r4,r5,r4
   2e9ac:	5262b03a 	or	r17,r10,r9
   2e9b0:	380ac03a 	cmpne	r5,r7,zero
   2e9b4:	8962b03a 	or	r17,r17,r5
   2e9b8:	89a3883a 	add	r17,r17,r6
   2e9bc:	2211883a 	add	r8,r4,r8
   2e9c0:	898d803a 	cmpltu	r6,r17,r6
   2e9c4:	418b883a 	add	r5,r8,r6
   2e9c8:	1021883a 	mov	r16,r2
   2e9cc:	003ee706 	br	2e56c <_gp+0xffff116c>
   2e9d0:	4184b03a 	or	r2,r8,r6
   2e9d4:	103e6226 	beq	r2,zero,2e360 <_gp+0xffff0f60>
   2e9d8:	8987c83a 	sub	r3,r17,r6
   2e9dc:	88c9803a 	cmpltu	r4,r17,r3
   2e9e0:	2a05c83a 	sub	r2,r5,r8
   2e9e4:	1105c83a 	sub	r2,r2,r4
   2e9e8:	1100202c 	andhi	r4,r2,128
   2e9ec:	203f0426 	beq	r4,zero,2e600 <_gp+0xffff1200>
   2e9f0:	3463c83a 	sub	r17,r6,r17
   2e9f4:	414bc83a 	sub	r5,r8,r5
   2e9f8:	344d803a 	cmpltu	r6,r6,r17
   2e9fc:	298bc83a 	sub	r5,r5,r6
   2ea00:	3825883a 	mov	r18,r7
   2ea04:	003e5606 	br	2e360 <_gp+0xffff0f60>
   2ea08:	4184b03a 	or	r2,r8,r6
   2ea0c:	10002b26 	beq	r2,zero,2eabc <__adddf3+0x7d8>
   2ea10:	2804d0fa 	srli	r2,r5,3
   2ea14:	8822d0fa 	srli	r17,r17,3
   2ea18:	280a977a 	slli	r5,r5,29
   2ea1c:	10c0022c 	andhi	r3,r2,8
   2ea20:	2c62b03a 	or	r17,r5,r17
   2ea24:	18000826 	beq	r3,zero,2ea48 <__adddf3+0x764>
   2ea28:	4008d0fa 	srli	r4,r8,3
   2ea2c:	20c0022c 	andhi	r3,r4,8
   2ea30:	1800051e 	bne	r3,zero,2ea48 <__adddf3+0x764>
   2ea34:	300cd0fa 	srli	r6,r6,3
   2ea38:	4010977a 	slli	r8,r8,29
   2ea3c:	2005883a 	mov	r2,r4
   2ea40:	3825883a 	mov	r18,r7
   2ea44:	41a2b03a 	or	r17,r8,r6
   2ea48:	880ad77a 	srli	r5,r17,29
   2ea4c:	100490fa 	slli	r2,r2,3
   2ea50:	882290fa 	slli	r17,r17,3
   2ea54:	0401ffc4 	movi	r16,2047
   2ea58:	288ab03a 	or	r5,r5,r2
   2ea5c:	003e4006 	br	2e360 <_gp+0xffff0f60>
   2ea60:	01c1ffc4 	movi	r7,2047
   2ea64:	11ffc71e 	bne	r2,r7,2e984 <_gp+0xffff1584>
   2ea68:	400b883a 	mov	r5,r8
   2ea6c:	3023883a 	mov	r17,r6
   2ea70:	1021883a 	mov	r16,r2
   2ea74:	003e3a06 	br	2e360 <_gp+0xffff0f60>
   2ea78:	10002d26 	beq	r2,zero,2eb30 <__adddf3+0x84c>
   2ea7c:	4184b03a 	or	r2,r8,r6
   2ea80:	10000e26 	beq	r2,zero,2eabc <__adddf3+0x7d8>
   2ea84:	2804d0fa 	srli	r2,r5,3
   2ea88:	8822d0fa 	srli	r17,r17,3
   2ea8c:	280a977a 	slli	r5,r5,29
   2ea90:	10c0022c 	andhi	r3,r2,8
   2ea94:	2c62b03a 	or	r17,r5,r17
   2ea98:	183feb26 	beq	r3,zero,2ea48 <_gp+0xffff1648>
   2ea9c:	4008d0fa 	srli	r4,r8,3
   2eaa0:	20c0022c 	andhi	r3,r4,8
   2eaa4:	183fe81e 	bne	r3,zero,2ea48 <_gp+0xffff1648>
   2eaa8:	300cd0fa 	srli	r6,r6,3
   2eaac:	4010977a 	slli	r8,r8,29
   2eab0:	2005883a 	mov	r2,r4
   2eab4:	41a2b03a 	or	r17,r8,r6
   2eab8:	003fe306 	br	2ea48 <_gp+0xffff1648>
   2eabc:	0401ffc4 	movi	r16,2047
   2eac0:	003e2706 	br	2e360 <_gp+0xffff0f60>
   2eac4:	0011883a 	mov	r8,zero
   2eac8:	003f8306 	br	2e8d8 <_gp+0xffff14d8>
   2eacc:	193ff804 	addi	r4,r3,-32
   2ead0:	02400804 	movi	r9,32
   2ead4:	2908d83a 	srl	r4,r5,r4
   2ead8:	1a402526 	beq	r3,r9,2eb70 <__adddf3+0x88c>
   2eadc:	02401004 	movi	r9,64
   2eae0:	48c7c83a 	sub	r3,r9,r3
   2eae4:	28ca983a 	sll	r5,r5,r3
   2eae8:	2c62b03a 	or	r17,r5,r17
   2eaec:	8822c03a 	cmpne	r17,r17,zero
   2eaf0:	8922b03a 	or	r17,r17,r4
   2eaf4:	0007883a 	mov	r3,zero
   2eaf8:	003f2f06 	br	2e7b8 <_gp+0xffff13b8>
   2eafc:	01402034 	movhi	r5,128
   2eb00:	0007883a 	mov	r3,zero
   2eb04:	297fffc4 	addi	r5,r5,-1
   2eb08:	047ffe04 	movi	r17,-8
   2eb0c:	0401ffc4 	movi	r16,2047
   2eb10:	003e7306 	br	2e4e0 <_gp+0xffff10e0>
   2eb14:	2c62b03a 	or	r17,r5,r17
   2eb18:	8822c03a 	cmpne	r17,r17,zero
   2eb1c:	0009883a 	mov	r4,zero
   2eb20:	003fa506 	br	2e9b8 <_gp+0xffff15b8>
   2eb24:	400b883a 	mov	r5,r8
   2eb28:	3023883a 	mov	r17,r6
   2eb2c:	003e0c06 	br	2e360 <_gp+0xffff0f60>
   2eb30:	400b883a 	mov	r5,r8
   2eb34:	3023883a 	mov	r17,r6
   2eb38:	0401ffc4 	movi	r16,2047
   2eb3c:	003e0806 	br	2e360 <_gp+0xffff0f60>
   2eb40:	21fff804 	addi	r7,r4,-32
   2eb44:	02400804 	movi	r9,32
   2eb48:	29ced83a 	srl	r7,r5,r7
   2eb4c:	22400a26 	beq	r4,r9,2eb78 <__adddf3+0x894>
   2eb50:	02401004 	movi	r9,64
   2eb54:	4909c83a 	sub	r4,r9,r4
   2eb58:	290a983a 	sll	r5,r5,r4
   2eb5c:	2c62b03a 	or	r17,r5,r17
   2eb60:	8822c03a 	cmpne	r17,r17,zero
   2eb64:	89e2b03a 	or	r17,r17,r7
   2eb68:	0009883a 	mov	r4,zero
   2eb6c:	003f9206 	br	2e9b8 <_gp+0xffff15b8>
   2eb70:	000b883a 	mov	r5,zero
   2eb74:	003fdc06 	br	2eae8 <_gp+0xffff16e8>
   2eb78:	000b883a 	mov	r5,zero
   2eb7c:	003ff706 	br	2eb5c <_gp+0xffff175c>

0002eb80 <__divdf3>:
   2eb80:	defff004 	addi	sp,sp,-64
   2eb84:	dc800815 	stw	r18,32(sp)
   2eb88:	2824d53a 	srli	r18,r5,20
   2eb8c:	dd800c15 	stw	r22,48(sp)
   2eb90:	282cd7fa 	srli	r22,r5,31
   2eb94:	dc000615 	stw	r16,24(sp)
   2eb98:	04000434 	movhi	r16,16
   2eb9c:	df000e15 	stw	fp,56(sp)
   2eba0:	dd000a15 	stw	r20,40(sp)
   2eba4:	dcc00915 	stw	r19,36(sp)
   2eba8:	dc400715 	stw	r17,28(sp)
   2ebac:	843fffc4 	addi	r16,r16,-1
   2ebb0:	dfc00f15 	stw	ra,60(sp)
   2ebb4:	ddc00d15 	stw	r23,52(sp)
   2ebb8:	dd400b15 	stw	r21,44(sp)
   2ebbc:	9481ffcc 	andi	r18,r18,2047
   2ebc0:	2029883a 	mov	r20,r4
   2ebc4:	2027883a 	mov	r19,r4
   2ebc8:	2c22703a 	and	r17,r5,r16
   2ebcc:	b7003fcc 	andi	fp,r22,255
   2ebd0:	90005e26 	beq	r18,zero,2ed4c <__divdf3+0x1cc>
   2ebd4:	0081ffc4 	movi	r2,2047
   2ebd8:	90803526 	beq	r18,r2,2ecb0 <__divdf3+0x130>
   2ebdc:	8c000434 	orhi	r16,r17,16
   2ebe0:	2004d77a 	srli	r2,r4,29
   2ebe4:	802090fa 	slli	r16,r16,3
   2ebe8:	202690fa 	slli	r19,r4,3
   2ebec:	94bf0044 	addi	r18,r18,-1023
   2ebf0:	80a2b03a 	or	r17,r16,r2
   2ebf4:	0029883a 	mov	r20,zero
   2ebf8:	0011883a 	mov	r8,zero
   2ebfc:	380ad53a 	srli	r5,r7,20
   2ec00:	382ed7fa 	srli	r23,r7,31
   2ec04:	04000434 	movhi	r16,16
   2ec08:	843fffc4 	addi	r16,r16,-1
   2ec0c:	2941ffcc 	andi	r5,r5,2047
   2ec10:	302b883a 	mov	r21,r6
   2ec14:	3c20703a 	and	r16,r7,r16
   2ec18:	ba403fcc 	andi	r9,r23,255
   2ec1c:	28006726 	beq	r5,zero,2edbc <__divdf3+0x23c>
   2ec20:	0081ffc4 	movi	r2,2047
   2ec24:	28805f26 	beq	r5,r2,2eda4 <__divdf3+0x224>
   2ec28:	84000434 	orhi	r16,r16,16
   2ec2c:	3004d77a 	srli	r2,r6,29
   2ec30:	802090fa 	slli	r16,r16,3
   2ec34:	302a90fa 	slli	r21,r6,3
   2ec38:	297f0044 	addi	r5,r5,-1023
   2ec3c:	80a0b03a 	or	r16,r16,r2
   2ec40:	000f883a 	mov	r7,zero
   2ec44:	3d06b03a 	or	r3,r7,r20
   2ec48:	180690ba 	slli	r3,r3,2
   2ec4c:	008000f4 	movhi	r2,3
   2ec50:	10bb1c04 	addi	r2,r2,-5008
   2ec54:	1885883a 	add	r2,r3,r2
   2ec58:	10800017 	ldw	r2,0(r2)
   2ec5c:	b5c8f03a 	xor	r4,r22,r23
   2ec60:	200d883a 	mov	r6,r4
   2ec64:	25003fcc 	andi	r20,r4,255
   2ec68:	9165c83a 	sub	r18,r18,r5
   2ec6c:	1000683a 	jmp	r2
   2ec70:	0002eeb8 	rdprs	zero,zero,3002
   2ec74:	0002ece8 	cmpgeui	zero,zero,2995
   2ec78:	0002ee7c 	xorhi	zero,zero,3001
   2ec7c:	0002eccc 	andi	zero,zero,2995
   2ec80:	0002ee7c 	xorhi	zero,zero,3001
   2ec84:	0002ee50 	cmplti	zero,zero,3001
   2ec88:	0002ee7c 	xorhi	zero,zero,3001
   2ec8c:	0002eccc 	andi	zero,zero,2995
   2ec90:	0002ece8 	cmpgeui	zero,zero,2995
   2ec94:	0002ece8 	cmpgeui	zero,zero,2995
   2ec98:	0002ee50 	cmplti	zero,zero,3001
   2ec9c:	0002eccc 	andi	zero,zero,2995
   2eca0:	0002ecdc 	xori	zero,zero,2995
   2eca4:	0002ecdc 	xori	zero,zero,2995
   2eca8:	0002ecdc 	xori	zero,zero,2995
   2ecac:	0002ee8c 	andi	zero,zero,3002
   2ecb0:	8904b03a 	or	r2,r17,r4
   2ecb4:	1000631e 	bne	r2,zero,2ee44 <__divdf3+0x2c4>
   2ecb8:	05000204 	movi	r20,8
   2ecbc:	0023883a 	mov	r17,zero
   2ecc0:	0027883a 	mov	r19,zero
   2ecc4:	02000084 	movi	r8,2
   2ecc8:	003fcc06 	br	2ebfc <_gp+0xffff17fc>
   2eccc:	8023883a 	mov	r17,r16
   2ecd0:	a827883a 	mov	r19,r21
   2ecd4:	4839883a 	mov	fp,r9
   2ecd8:	3811883a 	mov	r8,r7
   2ecdc:	00800084 	movi	r2,2
   2ece0:	4081531e 	bne	r8,r2,2f230 <__divdf3+0x6b0>
   2ece4:	e029883a 	mov	r20,fp
   2ece8:	a180004c 	andi	r6,r20,1
   2ecec:	0201ffc4 	movi	r8,2047
   2ecf0:	000b883a 	mov	r5,zero
   2ecf4:	0027883a 	mov	r19,zero
   2ecf8:	4010953a 	slli	r8,r8,20
   2ecfc:	30c03fcc 	andi	r3,r6,255
   2ed00:	04000434 	movhi	r16,16
   2ed04:	180697fa 	slli	r3,r3,31
   2ed08:	843fffc4 	addi	r16,r16,-1
   2ed0c:	2c20703a 	and	r16,r5,r16
   2ed10:	8220b03a 	or	r16,r16,r8
   2ed14:	80c6b03a 	or	r3,r16,r3
   2ed18:	9805883a 	mov	r2,r19
   2ed1c:	dfc00f17 	ldw	ra,60(sp)
   2ed20:	df000e17 	ldw	fp,56(sp)
   2ed24:	ddc00d17 	ldw	r23,52(sp)
   2ed28:	dd800c17 	ldw	r22,48(sp)
   2ed2c:	dd400b17 	ldw	r21,44(sp)
   2ed30:	dd000a17 	ldw	r20,40(sp)
   2ed34:	dcc00917 	ldw	r19,36(sp)
   2ed38:	dc800817 	ldw	r18,32(sp)
   2ed3c:	dc400717 	ldw	r17,28(sp)
   2ed40:	dc000617 	ldw	r16,24(sp)
   2ed44:	dec01004 	addi	sp,sp,64
   2ed48:	f800283a 	ret
   2ed4c:	8904b03a 	or	r2,r17,r4
   2ed50:	10003726 	beq	r2,zero,2ee30 <__divdf3+0x2b0>
   2ed54:	88014d26 	beq	r17,zero,2f28c <__divdf3+0x70c>
   2ed58:	8809883a 	mov	r4,r17
   2ed5c:	d9800215 	stw	r6,8(sp)
   2ed60:	d9c00515 	stw	r7,20(sp)
   2ed64:	0030a7c0 	call	30a7c <__clzsi2>
   2ed68:	d9800217 	ldw	r6,8(sp)
   2ed6c:	d9c00517 	ldw	r7,20(sp)
   2ed70:	1007883a 	mov	r3,r2
   2ed74:	01000a04 	movi	r4,40
   2ed78:	1cfffe04 	addi	r19,r3,-8
   2ed7c:	20c9c83a 	sub	r4,r4,r3
   2ed80:	8cca983a 	sll	r5,r17,r19
   2ed84:	a108d83a 	srl	r4,r20,r4
   2ed88:	a4e6983a 	sll	r19,r20,r19
   2ed8c:	2162b03a 	or	r17,r4,r5
   2ed90:	04bf0344 	movi	r18,-1011
   2ed94:	90e5c83a 	sub	r18,r18,r3
   2ed98:	0029883a 	mov	r20,zero
   2ed9c:	0011883a 	mov	r8,zero
   2eda0:	003f9606 	br	2ebfc <_gp+0xffff17fc>
   2eda4:	8184b03a 	or	r2,r16,r6
   2eda8:	10001f1e 	bne	r2,zero,2ee28 <__divdf3+0x2a8>
   2edac:	0021883a 	mov	r16,zero
   2edb0:	002b883a 	mov	r21,zero
   2edb4:	01c00084 	movi	r7,2
   2edb8:	003fa206 	br	2ec44 <_gp+0xffff1844>
   2edbc:	8184b03a 	or	r2,r16,r6
   2edc0:	10001526 	beq	r2,zero,2ee18 <__divdf3+0x298>
   2edc4:	80013d26 	beq	r16,zero,2f2bc <__divdf3+0x73c>
   2edc8:	8009883a 	mov	r4,r16
   2edcc:	d9800215 	stw	r6,8(sp)
   2edd0:	da000315 	stw	r8,12(sp)
   2edd4:	da400415 	stw	r9,16(sp)
   2edd8:	0030a7c0 	call	30a7c <__clzsi2>
   2eddc:	d9800217 	ldw	r6,8(sp)
   2ede0:	da000317 	ldw	r8,12(sp)
   2ede4:	da400417 	ldw	r9,16(sp)
   2ede8:	1007883a 	mov	r3,r2
   2edec:	01000a04 	movi	r4,40
   2edf0:	1d7ffe04 	addi	r21,r3,-8
   2edf4:	20c9c83a 	sub	r4,r4,r3
   2edf8:	8560983a 	sll	r16,r16,r21
   2edfc:	3108d83a 	srl	r4,r6,r4
   2ee00:	356a983a 	sll	r21,r6,r21
   2ee04:	2420b03a 	or	r16,r4,r16
   2ee08:	017f0344 	movi	r5,-1011
   2ee0c:	28cbc83a 	sub	r5,r5,r3
   2ee10:	000f883a 	mov	r7,zero
   2ee14:	003f8b06 	br	2ec44 <_gp+0xffff1844>
   2ee18:	0021883a 	mov	r16,zero
   2ee1c:	002b883a 	mov	r21,zero
   2ee20:	01c00044 	movi	r7,1
   2ee24:	003f8706 	br	2ec44 <_gp+0xffff1844>
   2ee28:	01c000c4 	movi	r7,3
   2ee2c:	003f8506 	br	2ec44 <_gp+0xffff1844>
   2ee30:	05000104 	movi	r20,4
   2ee34:	0023883a 	mov	r17,zero
   2ee38:	0027883a 	mov	r19,zero
   2ee3c:	02000044 	movi	r8,1
   2ee40:	003f6e06 	br	2ebfc <_gp+0xffff17fc>
   2ee44:	05000304 	movi	r20,12
   2ee48:	020000c4 	movi	r8,3
   2ee4c:	003f6b06 	br	2ebfc <_gp+0xffff17fc>
   2ee50:	01400434 	movhi	r5,16
   2ee54:	000d883a 	mov	r6,zero
   2ee58:	297fffc4 	addi	r5,r5,-1
   2ee5c:	04ffffc4 	movi	r19,-1
   2ee60:	0201ffc4 	movi	r8,2047
   2ee64:	003fa406 	br	2ecf8 <_gp+0xffff18f8>
   2ee68:	043f0084 	movi	r16,-1022
   2ee6c:	84a1c83a 	sub	r16,r16,r18
   2ee70:	00800e04 	movi	r2,56
   2ee74:	14014d0e 	bge	r2,r16,2f3ac <__divdf3+0x82c>
   2ee78:	a180004c 	andi	r6,r20,1
   2ee7c:	0011883a 	mov	r8,zero
   2ee80:	000b883a 	mov	r5,zero
   2ee84:	0027883a 	mov	r19,zero
   2ee88:	003f9b06 	br	2ecf8 <_gp+0xffff18f8>
   2ee8c:	8880022c 	andhi	r2,r17,8
   2ee90:	1000f026 	beq	r2,zero,2f254 <__divdf3+0x6d4>
   2ee94:	8080022c 	andhi	r2,r16,8
   2ee98:	1000ee1e 	bne	r2,zero,2f254 <__divdf3+0x6d4>
   2ee9c:	00800434 	movhi	r2,16
   2eea0:	81400234 	orhi	r5,r16,8
   2eea4:	10bfffc4 	addi	r2,r2,-1
   2eea8:	b80d883a 	mov	r6,r23
   2eeac:	288a703a 	and	r5,r5,r2
   2eeb0:	a827883a 	mov	r19,r21
   2eeb4:	003fea06 	br	2ee60 <_gp+0xffff1a60>
   2eeb8:	84411c36 	bltu	r16,r17,2f32c <__divdf3+0x7ac>
   2eebc:	8c011a26 	beq	r17,r16,2f328 <__divdf3+0x7a8>
   2eec0:	94bfffc4 	addi	r18,r18,-1
   2eec4:	dcc00015 	stw	r19,0(sp)
   2eec8:	8811883a 	mov	r8,r17
   2eecc:	002d883a 	mov	r22,zero
   2eed0:	a80cd63a 	srli	r6,r21,24
   2eed4:	8020923a 	slli	r16,r16,8
   2eed8:	a82a923a 	slli	r21,r21,8
   2eedc:	4009883a 	mov	r4,r8
   2eee0:	342eb03a 	or	r23,r6,r16
   2eee4:	dd400115 	stw	r21,4(sp)
   2eee8:	b82ad43a 	srli	r21,r23,16
   2eeec:	da000315 	stw	r8,12(sp)
   2eef0:	bcffffcc 	andi	r19,r23,65535
   2eef4:	a80b883a 	mov	r5,r21
   2eef8:	002e2ac0 	call	2e2ac <__udivsi3>
   2eefc:	1009883a 	mov	r4,r2
   2ef00:	980b883a 	mov	r5,r19
   2ef04:	1023883a 	mov	r17,r2
   2ef08:	002e2bc0 	call	2e2bc <__mulsi3>
   2ef0c:	da000317 	ldw	r8,12(sp)
   2ef10:	a80b883a 	mov	r5,r21
   2ef14:	1039883a 	mov	fp,r2
   2ef18:	4009883a 	mov	r4,r8
   2ef1c:	002e2b40 	call	2e2b4 <__umodsi3>
   2ef20:	d8c00017 	ldw	r3,0(sp)
   2ef24:	1004943a 	slli	r2,r2,16
   2ef28:	1810d43a 	srli	r8,r3,16
   2ef2c:	120eb03a 	or	r7,r2,r8
   2ef30:	3f00062e 	bgeu	r7,fp,2ef4c <__divdf3+0x3cc>
   2ef34:	3dcf883a 	add	r7,r7,r23
   2ef38:	88bfffc4 	addi	r2,r17,-1
   2ef3c:	3dc10a36 	bltu	r7,r23,2f368 <__divdf3+0x7e8>
   2ef40:	3f01092e 	bgeu	r7,fp,2f368 <__divdf3+0x7e8>
   2ef44:	8c7fff84 	addi	r17,r17,-2
   2ef48:	3dcf883a 	add	r7,r7,r23
   2ef4c:	3f39c83a 	sub	fp,r7,fp
   2ef50:	e009883a 	mov	r4,fp
   2ef54:	a80b883a 	mov	r5,r21
   2ef58:	002e2ac0 	call	2e2ac <__udivsi3>
   2ef5c:	1009883a 	mov	r4,r2
   2ef60:	980b883a 	mov	r5,r19
   2ef64:	1021883a 	mov	r16,r2
   2ef68:	002e2bc0 	call	2e2bc <__mulsi3>
   2ef6c:	e009883a 	mov	r4,fp
   2ef70:	a80b883a 	mov	r5,r21
   2ef74:	d8800315 	stw	r2,12(sp)
   2ef78:	002e2b40 	call	2e2b4 <__umodsi3>
   2ef7c:	d9000017 	ldw	r4,0(sp)
   2ef80:	1004943a 	slli	r2,r2,16
   2ef84:	da000317 	ldw	r8,12(sp)
   2ef88:	20ffffcc 	andi	r3,r4,65535
   2ef8c:	10ceb03a 	or	r7,r2,r3
   2ef90:	3a00062e 	bgeu	r7,r8,2efac <__divdf3+0x42c>
   2ef94:	3dcf883a 	add	r7,r7,r23
   2ef98:	80bfffc4 	addi	r2,r16,-1
   2ef9c:	3dc0f036 	bltu	r7,r23,2f360 <__divdf3+0x7e0>
   2efa0:	3a00ef2e 	bgeu	r7,r8,2f360 <__divdf3+0x7e0>
   2efa4:	843fff84 	addi	r16,r16,-2
   2efa8:	3dcf883a 	add	r7,r7,r23
   2efac:	d8c00117 	ldw	r3,4(sp)
   2efb0:	8822943a 	slli	r17,r17,16
   2efb4:	3a0fc83a 	sub	r7,r7,r8
   2efb8:	1806d43a 	srli	r3,r3,16
   2efbc:	8462b03a 	or	r17,r16,r17
   2efc0:	8affffcc 	andi	r11,r17,65535
   2efc4:	d8c00015 	stw	r3,0(sp)
   2efc8:	d8c00117 	ldw	r3,4(sp)
   2efcc:	8820d43a 	srli	r16,r17,16
   2efd0:	5809883a 	mov	r4,r11
   2efd4:	1f3fffcc 	andi	fp,r3,65535
   2efd8:	e00b883a 	mov	r5,fp
   2efdc:	d9c00515 	stw	r7,20(sp)
   2efe0:	dac00215 	stw	r11,8(sp)
   2efe4:	002e2bc0 	call	2e2bc <__mulsi3>
   2efe8:	8009883a 	mov	r4,r16
   2efec:	e00b883a 	mov	r5,fp
   2eff0:	d8800415 	stw	r2,16(sp)
   2eff4:	002e2bc0 	call	2e2bc <__mulsi3>
   2eff8:	d9400017 	ldw	r5,0(sp)
   2effc:	8009883a 	mov	r4,r16
   2f000:	d8800315 	stw	r2,12(sp)
   2f004:	002e2bc0 	call	2e2bc <__mulsi3>
   2f008:	dac00217 	ldw	r11,8(sp)
   2f00c:	d9400017 	ldw	r5,0(sp)
   2f010:	d8800215 	stw	r2,8(sp)
   2f014:	5809883a 	mov	r4,r11
   2f018:	002e2bc0 	call	2e2bc <__mulsi3>
   2f01c:	da400417 	ldw	r9,16(sp)
   2f020:	da800317 	ldw	r10,12(sp)
   2f024:	d9c00517 	ldw	r7,20(sp)
   2f028:	480ad43a 	srli	r5,r9,16
   2f02c:	5085883a 	add	r2,r10,r2
   2f030:	db000217 	ldw	r12,8(sp)
   2f034:	1151883a 	add	r8,r2,r5
   2f038:	4280022e 	bgeu	r8,r10,2f044 <__divdf3+0x4c4>
   2f03c:	00800074 	movhi	r2,1
   2f040:	6099883a 	add	r12,r12,r2
   2f044:	400ad43a 	srli	r5,r8,16
   2f048:	4010943a 	slli	r8,r8,16
   2f04c:	4c3fffcc 	andi	r16,r9,65535
   2f050:	6149883a 	add	r4,r12,r5
   2f054:	4411883a 	add	r8,r8,r16
   2f058:	3900a736 	bltu	r7,r4,2f2f8 <__divdf3+0x778>
   2f05c:	3900c426 	beq	r7,r4,2f370 <__divdf3+0x7f0>
   2f060:	3909c83a 	sub	r4,r7,r4
   2f064:	b221c83a 	sub	r16,r22,r8
   2f068:	b42d803a 	cmpltu	r22,r22,r16
   2f06c:	25adc83a 	sub	r22,r4,r22
   2f070:	b5c0c626 	beq	r22,r23,2f38c <__divdf3+0x80c>
   2f074:	b009883a 	mov	r4,r22
   2f078:	a80b883a 	mov	r5,r21
   2f07c:	002e2ac0 	call	2e2ac <__udivsi3>
   2f080:	1009883a 	mov	r4,r2
   2f084:	980b883a 	mov	r5,r19
   2f088:	d8800315 	stw	r2,12(sp)
   2f08c:	002e2bc0 	call	2e2bc <__mulsi3>
   2f090:	a80b883a 	mov	r5,r21
   2f094:	b009883a 	mov	r4,r22
   2f098:	d8800415 	stw	r2,16(sp)
   2f09c:	002e2b40 	call	2e2b4 <__umodsi3>
   2f0a0:	1004943a 	slli	r2,r2,16
   2f0a4:	800ed43a 	srli	r7,r16,16
   2f0a8:	da400417 	ldw	r9,16(sp)
   2f0ac:	da000317 	ldw	r8,12(sp)
   2f0b0:	11cab03a 	or	r5,r2,r7
   2f0b4:	2a40062e 	bgeu	r5,r9,2f0d0 <__divdf3+0x550>
   2f0b8:	2dcb883a 	add	r5,r5,r23
   2f0bc:	40bfffc4 	addi	r2,r8,-1
   2f0c0:	2dc0b436 	bltu	r5,r23,2f394 <__divdf3+0x814>
   2f0c4:	2a40b32e 	bgeu	r5,r9,2f394 <__divdf3+0x814>
   2f0c8:	423fff84 	addi	r8,r8,-2
   2f0cc:	2dcb883a 	add	r5,r5,r23
   2f0d0:	2a6dc83a 	sub	r22,r5,r9
   2f0d4:	b009883a 	mov	r4,r22
   2f0d8:	a80b883a 	mov	r5,r21
   2f0dc:	da000315 	stw	r8,12(sp)
   2f0e0:	002e2ac0 	call	2e2ac <__udivsi3>
   2f0e4:	980b883a 	mov	r5,r19
   2f0e8:	1009883a 	mov	r4,r2
   2f0ec:	d8800415 	stw	r2,16(sp)
   2f0f0:	002e2bc0 	call	2e2bc <__mulsi3>
   2f0f4:	b009883a 	mov	r4,r22
   2f0f8:	a80b883a 	mov	r5,r21
   2f0fc:	1027883a 	mov	r19,r2
   2f100:	002e2b40 	call	2e2b4 <__umodsi3>
   2f104:	1004943a 	slli	r2,r2,16
   2f108:	843fffcc 	andi	r16,r16,65535
   2f10c:	da000317 	ldw	r8,12(sp)
   2f110:	140eb03a 	or	r7,r2,r16
   2f114:	da400417 	ldw	r9,16(sp)
   2f118:	3cc0062e 	bgeu	r7,r19,2f134 <__divdf3+0x5b4>
   2f11c:	3dcf883a 	add	r7,r7,r23
   2f120:	48bfffc4 	addi	r2,r9,-1
   2f124:	3dc09d36 	bltu	r7,r23,2f39c <__divdf3+0x81c>
   2f128:	3cc09c2e 	bgeu	r7,r19,2f39c <__divdf3+0x81c>
   2f12c:	4a7fff84 	addi	r9,r9,-2
   2f130:	3dcf883a 	add	r7,r7,r23
   2f134:	4010943a 	slli	r8,r8,16
   2f138:	3cebc83a 	sub	r21,r7,r19
   2f13c:	e00b883a 	mov	r5,fp
   2f140:	4a26b03a 	or	r19,r9,r8
   2f144:	99ffffcc 	andi	r7,r19,65535
   2f148:	9820d43a 	srli	r16,r19,16
   2f14c:	3809883a 	mov	r4,r7
   2f150:	d9c00515 	stw	r7,20(sp)
   2f154:	002e2bc0 	call	2e2bc <__mulsi3>
   2f158:	8009883a 	mov	r4,r16
   2f15c:	e00b883a 	mov	r5,fp
   2f160:	102d883a 	mov	r22,r2
   2f164:	002e2bc0 	call	2e2bc <__mulsi3>
   2f168:	d9400017 	ldw	r5,0(sp)
   2f16c:	8009883a 	mov	r4,r16
   2f170:	1039883a 	mov	fp,r2
   2f174:	002e2bc0 	call	2e2bc <__mulsi3>
   2f178:	d9c00517 	ldw	r7,20(sp)
   2f17c:	d9400017 	ldw	r5,0(sp)
   2f180:	1021883a 	mov	r16,r2
   2f184:	3809883a 	mov	r4,r7
   2f188:	002e2bc0 	call	2e2bc <__mulsi3>
   2f18c:	b008d43a 	srli	r4,r22,16
   2f190:	e085883a 	add	r2,fp,r2
   2f194:	1109883a 	add	r4,r2,r4
   2f198:	2700022e 	bgeu	r4,fp,2f1a4 <__divdf3+0x624>
   2f19c:	00800074 	movhi	r2,1
   2f1a0:	80a1883a 	add	r16,r16,r2
   2f1a4:	200ad43a 	srli	r5,r4,16
   2f1a8:	2008943a 	slli	r4,r4,16
   2f1ac:	b5bfffcc 	andi	r22,r22,65535
   2f1b0:	8145883a 	add	r2,r16,r5
   2f1b4:	2589883a 	add	r4,r4,r22
   2f1b8:	a8802c36 	bltu	r21,r2,2f26c <__divdf3+0x6ec>
   2f1bc:	a880a426 	beq	r21,r2,2f450 <__divdf3+0x8d0>
   2f1c0:	9cc00054 	ori	r19,r19,1
   2f1c4:	9200ffc4 	addi	r8,r18,1023
   2f1c8:	023f270e 	bge	zero,r8,2ee68 <_gp+0xffff1a68>
   2f1cc:	988001cc 	andi	r2,r19,7
   2f1d0:	10000726 	beq	r2,zero,2f1f0 <__divdf3+0x670>
   2f1d4:	990003cc 	andi	r4,r19,15
   2f1d8:	00800104 	movi	r2,4
   2f1dc:	20800426 	beq	r4,r2,2f1f0 <__divdf3+0x670>
   2f1e0:	9885883a 	add	r2,r19,r2
   2f1e4:	14e7803a 	cmpltu	r19,r2,r19
   2f1e8:	8ce3883a 	add	r17,r17,r19
   2f1ec:	1027883a 	mov	r19,r2
   2f1f0:	8880402c 	andhi	r2,r17,256
   2f1f4:	10000426 	beq	r2,zero,2f208 <__divdf3+0x688>
   2f1f8:	00bfc034 	movhi	r2,65280
   2f1fc:	10bfffc4 	addi	r2,r2,-1
   2f200:	92010004 	addi	r8,r18,1024
   2f204:	88a2703a 	and	r17,r17,r2
   2f208:	0081ff84 	movi	r2,2046
   2f20c:	123eb616 	blt	r2,r8,2ece8 <_gp+0xffff18e8>
   2f210:	9826d0fa 	srli	r19,r19,3
   2f214:	8804977a 	slli	r2,r17,29
   2f218:	8820927a 	slli	r16,r17,9
   2f21c:	4201ffcc 	andi	r8,r8,2047
   2f220:	14e6b03a 	or	r19,r2,r19
   2f224:	800ad33a 	srli	r5,r16,12
   2f228:	a180004c 	andi	r6,r20,1
   2f22c:	003eb206 	br	2ecf8 <_gp+0xffff18f8>
   2f230:	008000c4 	movi	r2,3
   2f234:	4080ac26 	beq	r8,r2,2f4e8 <__divdf3+0x968>
   2f238:	00800044 	movi	r2,1
   2f23c:	4080591e 	bne	r8,r2,2f3a4 <__divdf3+0x824>
   2f240:	e00d883a 	mov	r6,fp
   2f244:	0011883a 	mov	r8,zero
   2f248:	000b883a 	mov	r5,zero
   2f24c:	0027883a 	mov	r19,zero
   2f250:	003ea906 	br	2ecf8 <_gp+0xffff18f8>
   2f254:	00800434 	movhi	r2,16
   2f258:	89400234 	orhi	r5,r17,8
   2f25c:	10bfffc4 	addi	r2,r2,-1
   2f260:	b00d883a 	mov	r6,r22
   2f264:	288a703a 	and	r5,r5,r2
   2f268:	003efd06 	br	2ee60 <_gp+0xffff1a60>
   2f26c:	adcf883a 	add	r7,r21,r23
   2f270:	997fffc4 	addi	r5,r19,-1
   2f274:	3dc0412e 	bgeu	r7,r23,2f37c <__divdf3+0x7fc>
   2f278:	2827883a 	mov	r19,r5
   2f27c:	38bfd01e 	bne	r7,r2,2f1c0 <_gp+0xffff1dc0>
   2f280:	d8c00117 	ldw	r3,4(sp)
   2f284:	193fce1e 	bne	r3,r4,2f1c0 <_gp+0xffff1dc0>
   2f288:	003fce06 	br	2f1c4 <_gp+0xffff1dc4>
   2f28c:	d9800215 	stw	r6,8(sp)
   2f290:	d9c00515 	stw	r7,20(sp)
   2f294:	0030a7c0 	call	30a7c <__clzsi2>
   2f298:	10c00804 	addi	r3,r2,32
   2f29c:	010009c4 	movi	r4,39
   2f2a0:	d9800217 	ldw	r6,8(sp)
   2f2a4:	d9c00517 	ldw	r7,20(sp)
   2f2a8:	20feb20e 	bge	r4,r3,2ed74 <_gp+0xffff1974>
   2f2ac:	117ffe04 	addi	r5,r2,-8
   2f2b0:	a162983a 	sll	r17,r20,r5
   2f2b4:	0027883a 	mov	r19,zero
   2f2b8:	003eb506 	br	2ed90 <_gp+0xffff1990>
   2f2bc:	3009883a 	mov	r4,r6
   2f2c0:	d9800215 	stw	r6,8(sp)
   2f2c4:	da000315 	stw	r8,12(sp)
   2f2c8:	da400415 	stw	r9,16(sp)
   2f2cc:	0030a7c0 	call	30a7c <__clzsi2>
   2f2d0:	10c00804 	addi	r3,r2,32
   2f2d4:	010009c4 	movi	r4,39
   2f2d8:	d9800217 	ldw	r6,8(sp)
   2f2dc:	da000317 	ldw	r8,12(sp)
   2f2e0:	da400417 	ldw	r9,16(sp)
   2f2e4:	20fec10e 	bge	r4,r3,2edec <_gp+0xffff19ec>
   2f2e8:	10bffe04 	addi	r2,r2,-8
   2f2ec:	a8a0983a 	sll	r16,r21,r2
   2f2f0:	002b883a 	mov	r21,zero
   2f2f4:	003ec406 	br	2ee08 <_gp+0xffff1a08>
   2f2f8:	d8c00117 	ldw	r3,4(sp)
   2f2fc:	b0ed883a 	add	r22,r22,r3
   2f300:	b0c5803a 	cmpltu	r2,r22,r3
   2f304:	15c5883a 	add	r2,r2,r23
   2f308:	11cf883a 	add	r7,r2,r7
   2f30c:	88bfffc4 	addi	r2,r17,-1
   2f310:	b9c00d2e 	bgeu	r23,r7,2f348 <__divdf3+0x7c8>
   2f314:	39003f36 	bltu	r7,r4,2f414 <__divdf3+0x894>
   2f318:	21c06a26 	beq	r4,r7,2f4c4 <__divdf3+0x944>
   2f31c:	3909c83a 	sub	r4,r7,r4
   2f320:	1023883a 	mov	r17,r2
   2f324:	003f4f06 	br	2f064 <_gp+0xffff1c64>
   2f328:	9d7ee536 	bltu	r19,r21,2eec0 <_gp+0xffff1ac0>
   2f32c:	982ed07a 	srli	r23,r19,1
   2f330:	880497fa 	slli	r2,r17,31
   2f334:	8810d07a 	srli	r8,r17,1
   2f338:	982c97fa 	slli	r22,r19,31
   2f33c:	b884b03a 	or	r2,r23,r2
   2f340:	d8800015 	stw	r2,0(sp)
   2f344:	003ee206 	br	2eed0 <_gp+0xffff1ad0>
   2f348:	3dfff41e 	bne	r7,r23,2f31c <_gp+0xffff1f1c>
   2f34c:	d8c00117 	ldw	r3,4(sp)
   2f350:	b0fff02e 	bgeu	r22,r3,2f314 <_gp+0xffff1f14>
   2f354:	b909c83a 	sub	r4,r23,r4
   2f358:	1023883a 	mov	r17,r2
   2f35c:	003f4106 	br	2f064 <_gp+0xffff1c64>
   2f360:	1021883a 	mov	r16,r2
   2f364:	003f1106 	br	2efac <_gp+0xffff1bac>
   2f368:	1023883a 	mov	r17,r2
   2f36c:	003ef706 	br	2ef4c <_gp+0xffff1b4c>
   2f370:	b23fe136 	bltu	r22,r8,2f2f8 <_gp+0xffff1ef8>
   2f374:	0009883a 	mov	r4,zero
   2f378:	003f3a06 	br	2f064 <_gp+0xffff1c64>
   2f37c:	38802c36 	bltu	r7,r2,2f430 <__divdf3+0x8b0>
   2f380:	11c05326 	beq	r2,r7,2f4d0 <__divdf3+0x950>
   2f384:	2827883a 	mov	r19,r5
   2f388:	003f8d06 	br	2f1c0 <_gp+0xffff1dc0>
   2f38c:	04ffffc4 	movi	r19,-1
   2f390:	003f8c06 	br	2f1c4 <_gp+0xffff1dc4>
   2f394:	1011883a 	mov	r8,r2
   2f398:	003f4d06 	br	2f0d0 <_gp+0xffff1cd0>
   2f39c:	1013883a 	mov	r9,r2
   2f3a0:	003f6406 	br	2f134 <_gp+0xffff1d34>
   2f3a4:	e029883a 	mov	r20,fp
   2f3a8:	003f8606 	br	2f1c4 <_gp+0xffff1dc4>
   2f3ac:	008007c4 	movi	r2,31
   2f3b0:	14002a16 	blt	r2,r16,2f45c <__divdf3+0x8dc>
   2f3b4:	91410784 	addi	r5,r18,1054
   2f3b8:	9c0cd83a 	srl	r6,r19,r16
   2f3bc:	8948983a 	sll	r4,r17,r5
   2f3c0:	9944983a 	sll	r2,r19,r5
   2f3c4:	8c20d83a 	srl	r16,r17,r16
   2f3c8:	3108b03a 	or	r4,r6,r4
   2f3cc:	1004c03a 	cmpne	r2,r2,zero
   2f3d0:	2084b03a 	or	r2,r4,r2
   2f3d4:	110001cc 	andi	r4,r2,7
   2f3d8:	20000726 	beq	r4,zero,2f3f8 <__divdf3+0x878>
   2f3dc:	114003cc 	andi	r5,r2,15
   2f3e0:	01000104 	movi	r4,4
   2f3e4:	29000426 	beq	r5,r4,2f3f8 <__divdf3+0x878>
   2f3e8:	11000104 	addi	r4,r2,4
   2f3ec:	2085803a 	cmpltu	r2,r4,r2
   2f3f0:	80a1883a 	add	r16,r16,r2
   2f3f4:	2005883a 	mov	r2,r4
   2f3f8:	8100202c 	andhi	r4,r16,128
   2f3fc:	20002d26 	beq	r4,zero,2f4b4 <__divdf3+0x934>
   2f400:	a180004c 	andi	r6,r20,1
   2f404:	02000044 	movi	r8,1
   2f408:	000b883a 	mov	r5,zero
   2f40c:	0027883a 	mov	r19,zero
   2f410:	003e3906 	br	2ecf8 <_gp+0xffff18f8>
   2f414:	d8c00117 	ldw	r3,4(sp)
   2f418:	8c7fff84 	addi	r17,r17,-2
   2f41c:	b0ed883a 	add	r22,r22,r3
   2f420:	b0c5803a 	cmpltu	r2,r22,r3
   2f424:	15c5883a 	add	r2,r2,r23
   2f428:	11cf883a 	add	r7,r2,r7
   2f42c:	003f0c06 	br	2f060 <_gp+0xffff1c60>
   2f430:	d8c00117 	ldw	r3,4(sp)
   2f434:	997fff84 	addi	r5,r19,-2
   2f438:	18d1883a 	add	r8,r3,r3
   2f43c:	40c7803a 	cmpltu	r3,r8,r3
   2f440:	1dcd883a 	add	r6,r3,r23
   2f444:	398f883a 	add	r7,r7,r6
   2f448:	da000115 	stw	r8,4(sp)
   2f44c:	003f8a06 	br	2f278 <_gp+0xffff1e78>
   2f450:	203f861e 	bne	r4,zero,2f26c <_gp+0xffff1e6c>
   2f454:	d8000115 	stw	zero,4(sp)
   2f458:	003f8906 	br	2f280 <_gp+0xffff1e80>
   2f45c:	00bef884 	movi	r2,-1054
   2f460:	1485c83a 	sub	r2,r2,r18
   2f464:	01000804 	movi	r4,32
   2f468:	8884d83a 	srl	r2,r17,r2
   2f46c:	81001c26 	beq	r16,r4,2f4e0 <__divdf3+0x960>
   2f470:	91010f84 	addi	r4,r18,1086
   2f474:	8908983a 	sll	r4,r17,r4
   2f478:	24c8b03a 	or	r4,r4,r19
   2f47c:	2008c03a 	cmpne	r4,r4,zero
   2f480:	2084b03a 	or	r2,r4,r2
   2f484:	140001cc 	andi	r16,r2,7
   2f488:	8000061e 	bne	r16,zero,2f4a4 <__divdf3+0x924>
   2f48c:	000b883a 	mov	r5,zero
   2f490:	1004d0fa 	srli	r2,r2,3
   2f494:	a180004c 	andi	r6,r20,1
   2f498:	0011883a 	mov	r8,zero
   2f49c:	1426b03a 	or	r19,r2,r16
   2f4a0:	003e1506 	br	2ecf8 <_gp+0xffff18f8>
   2f4a4:	114003cc 	andi	r5,r2,15
   2f4a8:	01000104 	movi	r4,4
   2f4ac:	0021883a 	mov	r16,zero
   2f4b0:	293fcd1e 	bne	r5,r4,2f3e8 <_gp+0xffff1fe8>
   2f4b4:	800a927a 	slli	r5,r16,9
   2f4b8:	8020977a 	slli	r16,r16,29
   2f4bc:	280ad33a 	srli	r5,r5,12
   2f4c0:	003ff306 	br	2f490 <_gp+0xffff2090>
   2f4c4:	b23fd336 	bltu	r22,r8,2f414 <_gp+0xffff2014>
   2f4c8:	1023883a 	mov	r17,r2
   2f4cc:	003fa906 	br	2f374 <_gp+0xffff1f74>
   2f4d0:	d8c00117 	ldw	r3,4(sp)
   2f4d4:	193fd636 	bltu	r3,r4,2f430 <_gp+0xffff2030>
   2f4d8:	2827883a 	mov	r19,r5
   2f4dc:	003f6806 	br	2f280 <_gp+0xffff1e80>
   2f4e0:	0009883a 	mov	r4,zero
   2f4e4:	003fe406 	br	2f478 <_gp+0xffff2078>
   2f4e8:	00800434 	movhi	r2,16
   2f4ec:	89400234 	orhi	r5,r17,8
   2f4f0:	10bfffc4 	addi	r2,r2,-1
   2f4f4:	e00d883a 	mov	r6,fp
   2f4f8:	288a703a 	and	r5,r5,r2
   2f4fc:	003e5806 	br	2ee60 <_gp+0xffff1a60>

0002f500 <__eqdf2>:
   2f500:	2804d53a 	srli	r2,r5,20
   2f504:	3806d53a 	srli	r3,r7,20
   2f508:	02000434 	movhi	r8,16
   2f50c:	423fffc4 	addi	r8,r8,-1
   2f510:	1081ffcc 	andi	r2,r2,2047
   2f514:	0241ffc4 	movi	r9,2047
   2f518:	2a14703a 	and	r10,r5,r8
   2f51c:	18c1ffcc 	andi	r3,r3,2047
   2f520:	3a10703a 	and	r8,r7,r8
   2f524:	280ad7fa 	srli	r5,r5,31
   2f528:	380ed7fa 	srli	r7,r7,31
   2f52c:	12400f26 	beq	r2,r9,2f56c <__eqdf2+0x6c>
   2f530:	0241ffc4 	movi	r9,2047
   2f534:	1a400326 	beq	r3,r9,2f544 <__eqdf2+0x44>
   2f538:	10c00526 	beq	r2,r3,2f550 <__eqdf2+0x50>
   2f53c:	00800044 	movi	r2,1
   2f540:	f800283a 	ret
   2f544:	4192b03a 	or	r9,r8,r6
   2f548:	483ffc1e 	bne	r9,zero,2f53c <_gp+0xffff213c>
   2f54c:	10fffb1e 	bne	r2,r3,2f53c <_gp+0xffff213c>
   2f550:	523ffa1e 	bne	r10,r8,2f53c <_gp+0xffff213c>
   2f554:	21bff91e 	bne	r4,r6,2f53c <_gp+0xffff213c>
   2f558:	29c00826 	beq	r5,r7,2f57c <__eqdf2+0x7c>
   2f55c:	103ff71e 	bne	r2,zero,2f53c <_gp+0xffff213c>
   2f560:	5104b03a 	or	r2,r10,r4
   2f564:	1004c03a 	cmpne	r2,r2,zero
   2f568:	f800283a 	ret
   2f56c:	5112b03a 	or	r9,r10,r4
   2f570:	483fef26 	beq	r9,zero,2f530 <_gp+0xffff2130>
   2f574:	00800044 	movi	r2,1
   2f578:	f800283a 	ret
   2f57c:	0005883a 	mov	r2,zero
   2f580:	f800283a 	ret

0002f584 <__gedf2>:
   2f584:	2804d53a 	srli	r2,r5,20
   2f588:	3806d53a 	srli	r3,r7,20
   2f58c:	02000434 	movhi	r8,16
   2f590:	423fffc4 	addi	r8,r8,-1
   2f594:	0241ffc4 	movi	r9,2047
   2f598:	1081ffcc 	andi	r2,r2,2047
   2f59c:	2a14703a 	and	r10,r5,r8
   2f5a0:	1a46703a 	and	r3,r3,r9
   2f5a4:	3a10703a 	and	r8,r7,r8
   2f5a8:	280ad7fa 	srli	r5,r5,31
   2f5ac:	380ed7fa 	srli	r7,r7,31
   2f5b0:	12400b26 	beq	r2,r9,2f5e0 <__gedf2+0x5c>
   2f5b4:	1a401626 	beq	r3,r9,2f610 <__gedf2+0x8c>
   2f5b8:	10000c1e 	bne	r2,zero,2f5ec <__gedf2+0x68>
   2f5bc:	5112b03a 	or	r9,r10,r4
   2f5c0:	4813003a 	cmpeq	r9,r9,zero
   2f5c4:	4817883a 	mov	r11,r9
   2f5c8:	18000c1e 	bne	r3,zero,2f5fc <__gedf2+0x78>
   2f5cc:	4198b03a 	or	r12,r8,r6
   2f5d0:	60000a1e 	bne	r12,zero,2f5fc <__gedf2+0x78>
   2f5d4:	48001326 	beq	r9,zero,2f624 <__gedf2+0xa0>
   2f5d8:	0005883a 	mov	r2,zero
   2f5dc:	f800283a 	ret
   2f5e0:	5112b03a 	or	r9,r10,r4
   2f5e4:	4800191e 	bne	r9,zero,2f64c <__gedf2+0xc8>
   2f5e8:	18800926 	beq	r3,r2,2f610 <__gedf2+0x8c>
   2f5ec:	18000b1e 	bne	r3,zero,2f61c <__gedf2+0x98>
   2f5f0:	4192b03a 	or	r9,r8,r6
   2f5f4:	0017883a 	mov	r11,zero
   2f5f8:	48000a26 	beq	r9,zero,2f624 <__gedf2+0xa0>
   2f5fc:	39c03fcc 	andi	r7,r7,255
   2f600:	58000726 	beq	r11,zero,2f620 <__gedf2+0x9c>
   2f604:	3800081e 	bne	r7,zero,2f628 <__gedf2+0xa4>
   2f608:	00bfffc4 	movi	r2,-1
   2f60c:	f800283a 	ret
   2f610:	4192b03a 	or	r9,r8,r6
   2f614:	48000d1e 	bne	r9,zero,2f64c <__gedf2+0xc8>
   2f618:	103fe826 	beq	r2,zero,2f5bc <_gp+0xffff21bc>
   2f61c:	39c03fcc 	andi	r7,r7,255
   2f620:	29c00326 	beq	r5,r7,2f630 <__gedf2+0xac>
   2f624:	283ff81e 	bne	r5,zero,2f608 <_gp+0xffff2208>
   2f628:	00800044 	movi	r2,1
   2f62c:	f800283a 	ret
   2f630:	18bffc16 	blt	r3,r2,2f624 <_gp+0xffff2224>
   2f634:	10c00316 	blt	r2,r3,2f644 <__gedf2+0xc0>
   2f638:	42bffa36 	bltu	r8,r10,2f624 <_gp+0xffff2224>
   2f63c:	52000526 	beq	r10,r8,2f654 <__gedf2+0xd0>
   2f640:	523fe52e 	bgeu	r10,r8,2f5d8 <_gp+0xffff21d8>
   2f644:	283ff026 	beq	r5,zero,2f608 <_gp+0xffff2208>
   2f648:	003ff706 	br	2f628 <_gp+0xffff2228>
   2f64c:	00bfff84 	movi	r2,-2
   2f650:	f800283a 	ret
   2f654:	313ff336 	bltu	r6,r4,2f624 <_gp+0xffff2224>
   2f658:	21bfdf2e 	bgeu	r4,r6,2f5d8 <_gp+0xffff21d8>
   2f65c:	283fea26 	beq	r5,zero,2f608 <_gp+0xffff2208>
   2f660:	003ff106 	br	2f628 <_gp+0xffff2228>

0002f664 <__ledf2>:
   2f664:	2804d53a 	srli	r2,r5,20
   2f668:	3810d53a 	srli	r8,r7,20
   2f66c:	00c00434 	movhi	r3,16
   2f670:	18ffffc4 	addi	r3,r3,-1
   2f674:	0241ffc4 	movi	r9,2047
   2f678:	1081ffcc 	andi	r2,r2,2047
   2f67c:	28d4703a 	and	r10,r5,r3
   2f680:	4250703a 	and	r8,r8,r9
   2f684:	38c6703a 	and	r3,r7,r3
   2f688:	280ad7fa 	srli	r5,r5,31
   2f68c:	380ed7fa 	srli	r7,r7,31
   2f690:	12400b26 	beq	r2,r9,2f6c0 <__ledf2+0x5c>
   2f694:	42401926 	beq	r8,r9,2f6fc <__ledf2+0x98>
   2f698:	10000c1e 	bne	r2,zero,2f6cc <__ledf2+0x68>
   2f69c:	5112b03a 	or	r9,r10,r4
   2f6a0:	4813003a 	cmpeq	r9,r9,zero
   2f6a4:	4817883a 	mov	r11,r9
   2f6a8:	40000f26 	beq	r8,zero,2f6e8 <__ledf2+0x84>
   2f6ac:	39c03fcc 	andi	r7,r7,255
   2f6b0:	58001826 	beq	r11,zero,2f714 <__ledf2+0xb0>
   2f6b4:	38000a1e 	bne	r7,zero,2f6e0 <__ledf2+0x7c>
   2f6b8:	00bfffc4 	movi	r2,-1
   2f6bc:	f800283a 	ret
   2f6c0:	5112b03a 	or	r9,r10,r4
   2f6c4:	48000f1e 	bne	r9,zero,2f704 <__ledf2+0xa0>
   2f6c8:	40800c26 	beq	r8,r2,2f6fc <__ledf2+0x98>
   2f6cc:	4000101e 	bne	r8,zero,2f710 <__ledf2+0xac>
   2f6d0:	1992b03a 	or	r9,r3,r6
   2f6d4:	0017883a 	mov	r11,zero
   2f6d8:	483ff41e 	bne	r9,zero,2f6ac <_gp+0xffff22ac>
   2f6dc:	283ff61e 	bne	r5,zero,2f6b8 <_gp+0xffff22b8>
   2f6e0:	00800044 	movi	r2,1
   2f6e4:	f800283a 	ret
   2f6e8:	1998b03a 	or	r12,r3,r6
   2f6ec:	603fef1e 	bne	r12,zero,2f6ac <_gp+0xffff22ac>
   2f6f0:	483ffa26 	beq	r9,zero,2f6dc <_gp+0xffff22dc>
   2f6f4:	0005883a 	mov	r2,zero
   2f6f8:	f800283a 	ret
   2f6fc:	1992b03a 	or	r9,r3,r6
   2f700:	48000226 	beq	r9,zero,2f70c <__ledf2+0xa8>
   2f704:	00800084 	movi	r2,2
   2f708:	f800283a 	ret
   2f70c:	103fe326 	beq	r2,zero,2f69c <_gp+0xffff229c>
   2f710:	39c03fcc 	andi	r7,r7,255
   2f714:	29fff11e 	bne	r5,r7,2f6dc <_gp+0xffff22dc>
   2f718:	40bff016 	blt	r8,r2,2f6dc <_gp+0xffff22dc>
   2f71c:	12000316 	blt	r2,r8,2f72c <__ledf2+0xc8>
   2f720:	1abfee36 	bltu	r3,r10,2f6dc <_gp+0xffff22dc>
   2f724:	50c00326 	beq	r10,r3,2f734 <__ledf2+0xd0>
   2f728:	50fff22e 	bgeu	r10,r3,2f6f4 <_gp+0xffff22f4>
   2f72c:	283fe226 	beq	r5,zero,2f6b8 <_gp+0xffff22b8>
   2f730:	003feb06 	br	2f6e0 <_gp+0xffff22e0>
   2f734:	313fe936 	bltu	r6,r4,2f6dc <_gp+0xffff22dc>
   2f738:	21bfee2e 	bgeu	r4,r6,2f6f4 <_gp+0xffff22f4>
   2f73c:	283fde26 	beq	r5,zero,2f6b8 <_gp+0xffff22b8>
   2f740:	003fe706 	br	2f6e0 <_gp+0xffff22e0>

0002f744 <__muldf3>:
   2f744:	deffee04 	addi	sp,sp,-72
   2f748:	dd000c15 	stw	r20,48(sp)
   2f74c:	2828d53a 	srli	r20,r5,20
   2f750:	dd400d15 	stw	r21,52(sp)
   2f754:	282ad7fa 	srli	r21,r5,31
   2f758:	dc000815 	stw	r16,32(sp)
   2f75c:	04000434 	movhi	r16,16
   2f760:	ddc00f15 	stw	r23,60(sp)
   2f764:	dcc00b15 	stw	r19,44(sp)
   2f768:	dc800a15 	stw	r18,40(sp)
   2f76c:	843fffc4 	addi	r16,r16,-1
   2f770:	dfc01115 	stw	ra,68(sp)
   2f774:	df001015 	stw	fp,64(sp)
   2f778:	dd800e15 	stw	r22,56(sp)
   2f77c:	dc400915 	stw	r17,36(sp)
   2f780:	a501ffcc 	andi	r20,r20,2047
   2f784:	2025883a 	mov	r18,r4
   2f788:	202f883a 	mov	r23,r4
   2f78c:	2c20703a 	and	r16,r5,r16
   2f790:	a827883a 	mov	r19,r21
   2f794:	aa403fcc 	andi	r9,r21,255
   2f798:	a0005926 	beq	r20,zero,2f900 <__muldf3+0x1bc>
   2f79c:	0081ffc4 	movi	r2,2047
   2f7a0:	a0803426 	beq	r20,r2,2f874 <__muldf3+0x130>
   2f7a4:	84000434 	orhi	r16,r16,16
   2f7a8:	2004d77a 	srli	r2,r4,29
   2f7ac:	802090fa 	slli	r16,r16,3
   2f7b0:	202e90fa 	slli	r23,r4,3
   2f7b4:	a53f0044 	addi	r20,r20,-1023
   2f7b8:	80a0b03a 	or	r16,r16,r2
   2f7bc:	000b883a 	mov	r5,zero
   2f7c0:	0039883a 	mov	fp,zero
   2f7c4:	3806d53a 	srli	r3,r7,20
   2f7c8:	382cd7fa 	srli	r22,r7,31
   2f7cc:	00800434 	movhi	r2,16
   2f7d0:	10bfffc4 	addi	r2,r2,-1
   2f7d4:	18c1ffcc 	andi	r3,r3,2047
   2f7d8:	3025883a 	mov	r18,r6
   2f7dc:	38a2703a 	and	r17,r7,r2
   2f7e0:	b2803fcc 	andi	r10,r22,255
   2f7e4:	18006426 	beq	r3,zero,2f978 <__muldf3+0x234>
   2f7e8:	0081ffc4 	movi	r2,2047
   2f7ec:	18805c26 	beq	r3,r2,2f960 <__muldf3+0x21c>
   2f7f0:	8c400434 	orhi	r17,r17,16
   2f7f4:	3004d77a 	srli	r2,r6,29
   2f7f8:	882290fa 	slli	r17,r17,3
   2f7fc:	302490fa 	slli	r18,r6,3
   2f800:	18ff0044 	addi	r3,r3,-1023
   2f804:	88a2b03a 	or	r17,r17,r2
   2f808:	000f883a 	mov	r7,zero
   2f80c:	394ab03a 	or	r5,r7,r5
   2f810:	280a90ba 	slli	r5,r5,2
   2f814:	008000f4 	movhi	r2,3
   2f818:	10be0d04 	addi	r2,r2,-1996
   2f81c:	288b883a 	add	r5,r5,r2
   2f820:	28800017 	ldw	r2,0(r5)
   2f824:	a0c7883a 	add	r3,r20,r3
   2f828:	b54cf03a 	xor	r6,r22,r21
   2f82c:	1a000044 	addi	r8,r3,1
   2f830:	1000683a 	jmp	r2
   2f834:	0002fa78 	rdprs	zero,zero,3049
   2f838:	0002fa64 	muli	zero,zero,3049
   2f83c:	0002fa64 	muli	zero,zero,3049
   2f840:	0002fa50 	cmplti	zero,zero,3049
   2f844:	0002f890 	cmplti	zero,zero,3042
   2f848:	0002f890 	cmplti	zero,zero,3042
   2f84c:	0002fa38 	rdprs	zero,zero,3048
   2f850:	0002fa50 	cmplti	zero,zero,3049
   2f854:	0002f890 	cmplti	zero,zero,3042
   2f858:	0002fa38 	rdprs	zero,zero,3048
   2f85c:	0002f890 	cmplti	zero,zero,3042
   2f860:	0002fa50 	cmplti	zero,zero,3049
   2f864:	0002f894 	movui	zero,3042
   2f868:	0002f894 	movui	zero,3042
   2f86c:	0002f894 	movui	zero,3042
   2f870:	0002fdb4 	movhi	zero,3062
   2f874:	8104b03a 	or	r2,r16,r4
   2f878:	10006c1e 	bne	r2,zero,2fa2c <__muldf3+0x2e8>
   2f87c:	01400204 	movi	r5,8
   2f880:	0021883a 	mov	r16,zero
   2f884:	002f883a 	mov	r23,zero
   2f888:	07000084 	movi	fp,2
   2f88c:	003fcd06 	br	2f7c4 <_gp+0xffff23c4>
   2f890:	3013883a 	mov	r9,r6
   2f894:	00800084 	movi	r2,2
   2f898:	e080501e 	bne	fp,r2,2f9dc <__muldf3+0x298>
   2f89c:	4cc0004c 	andi	r19,r9,1
   2f8a0:	0101ffc4 	movi	r4,2047
   2f8a4:	0021883a 	mov	r16,zero
   2f8a8:	002f883a 	mov	r23,zero
   2f8ac:	2008953a 	slli	r4,r4,20
   2f8b0:	98c03fcc 	andi	r3,r19,255
   2f8b4:	04400434 	movhi	r17,16
   2f8b8:	8c7fffc4 	addi	r17,r17,-1
   2f8bc:	180697fa 	slli	r3,r3,31
   2f8c0:	8460703a 	and	r16,r16,r17
   2f8c4:	8120b03a 	or	r16,r16,r4
   2f8c8:	80c6b03a 	or	r3,r16,r3
   2f8cc:	b805883a 	mov	r2,r23
   2f8d0:	dfc01117 	ldw	ra,68(sp)
   2f8d4:	df001017 	ldw	fp,64(sp)
   2f8d8:	ddc00f17 	ldw	r23,60(sp)
   2f8dc:	dd800e17 	ldw	r22,56(sp)
   2f8e0:	dd400d17 	ldw	r21,52(sp)
   2f8e4:	dd000c17 	ldw	r20,48(sp)
   2f8e8:	dcc00b17 	ldw	r19,44(sp)
   2f8ec:	dc800a17 	ldw	r18,40(sp)
   2f8f0:	dc400917 	ldw	r17,36(sp)
   2f8f4:	dc000817 	ldw	r16,32(sp)
   2f8f8:	dec01204 	addi	sp,sp,72
   2f8fc:	f800283a 	ret
   2f900:	8104b03a 	or	r2,r16,r4
   2f904:	10004426 	beq	r2,zero,2fa18 <__muldf3+0x2d4>
   2f908:	80014b26 	beq	r16,zero,2fe38 <__muldf3+0x6f4>
   2f90c:	8009883a 	mov	r4,r16
   2f910:	d9800715 	stw	r6,28(sp)
   2f914:	d9c00215 	stw	r7,8(sp)
   2f918:	da400415 	stw	r9,16(sp)
   2f91c:	0030a7c0 	call	30a7c <__clzsi2>
   2f920:	d9800717 	ldw	r6,28(sp)
   2f924:	d9c00217 	ldw	r7,8(sp)
   2f928:	da400417 	ldw	r9,16(sp)
   2f92c:	1007883a 	mov	r3,r2
   2f930:	01000a04 	movi	r4,40
   2f934:	1dfffe04 	addi	r23,r3,-8
   2f938:	20c9c83a 	sub	r4,r4,r3
   2f93c:	85e0983a 	sll	r16,r16,r23
   2f940:	9108d83a 	srl	r4,r18,r4
   2f944:	95ee983a 	sll	r23,r18,r23
   2f948:	2420b03a 	or	r16,r4,r16
   2f94c:	053f0344 	movi	r20,-1011
   2f950:	a0e9c83a 	sub	r20,r20,r3
   2f954:	000b883a 	mov	r5,zero
   2f958:	0039883a 	mov	fp,zero
   2f95c:	003f9906 	br	2f7c4 <_gp+0xffff23c4>
   2f960:	8984b03a 	or	r2,r17,r6
   2f964:	10002a1e 	bne	r2,zero,2fa10 <__muldf3+0x2cc>
   2f968:	0023883a 	mov	r17,zero
   2f96c:	0025883a 	mov	r18,zero
   2f970:	01c00084 	movi	r7,2
   2f974:	003fa506 	br	2f80c <_gp+0xffff240c>
   2f978:	8984b03a 	or	r2,r17,r6
   2f97c:	10002026 	beq	r2,zero,2fa00 <__muldf3+0x2bc>
   2f980:	88011c26 	beq	r17,zero,2fdf4 <__muldf3+0x6b0>
   2f984:	8809883a 	mov	r4,r17
   2f988:	d9400215 	stw	r5,8(sp)
   2f98c:	d9800715 	stw	r6,28(sp)
   2f990:	da400415 	stw	r9,16(sp)
   2f994:	da800315 	stw	r10,12(sp)
   2f998:	0030a7c0 	call	30a7c <__clzsi2>
   2f99c:	d9400217 	ldw	r5,8(sp)
   2f9a0:	d9800717 	ldw	r6,28(sp)
   2f9a4:	da400417 	ldw	r9,16(sp)
   2f9a8:	da800317 	ldw	r10,12(sp)
   2f9ac:	1007883a 	mov	r3,r2
   2f9b0:	01000a04 	movi	r4,40
   2f9b4:	1cbffe04 	addi	r18,r3,-8
   2f9b8:	20c9c83a 	sub	r4,r4,r3
   2f9bc:	8ca2983a 	sll	r17,r17,r18
   2f9c0:	3108d83a 	srl	r4,r6,r4
   2f9c4:	34a4983a 	sll	r18,r6,r18
   2f9c8:	2462b03a 	or	r17,r4,r17
   2f9cc:	00bf0344 	movi	r2,-1011
   2f9d0:	10c7c83a 	sub	r3,r2,r3
   2f9d4:	000f883a 	mov	r7,zero
   2f9d8:	003f8c06 	br	2f80c <_gp+0xffff240c>
   2f9dc:	008000c4 	movi	r2,3
   2f9e0:	e0816d26 	beq	fp,r2,2ff98 <__muldf3+0x854>
   2f9e4:	00800044 	movi	r2,1
   2f9e8:	e081321e 	bne	fp,r2,2feb4 <__muldf3+0x770>
   2f9ec:	48a6703a 	and	r19,r9,r2
   2f9f0:	0009883a 	mov	r4,zero
   2f9f4:	0021883a 	mov	r16,zero
   2f9f8:	002f883a 	mov	r23,zero
   2f9fc:	003fab06 	br	2f8ac <_gp+0xffff24ac>
   2fa00:	0023883a 	mov	r17,zero
   2fa04:	0025883a 	mov	r18,zero
   2fa08:	01c00044 	movi	r7,1
   2fa0c:	003f7f06 	br	2f80c <_gp+0xffff240c>
   2fa10:	01c000c4 	movi	r7,3
   2fa14:	003f7d06 	br	2f80c <_gp+0xffff240c>
   2fa18:	01400104 	movi	r5,4
   2fa1c:	0021883a 	mov	r16,zero
   2fa20:	002f883a 	mov	r23,zero
   2fa24:	07000044 	movi	fp,1
   2fa28:	003f6606 	br	2f7c4 <_gp+0xffff23c4>
   2fa2c:	01400304 	movi	r5,12
   2fa30:	070000c4 	movi	fp,3
   2fa34:	003f6306 	br	2f7c4 <_gp+0xffff23c4>
   2fa38:	04000434 	movhi	r16,16
   2fa3c:	0027883a 	mov	r19,zero
   2fa40:	843fffc4 	addi	r16,r16,-1
   2fa44:	05ffffc4 	movi	r23,-1
   2fa48:	0101ffc4 	movi	r4,2047
   2fa4c:	003f9706 	br	2f8ac <_gp+0xffff24ac>
   2fa50:	8821883a 	mov	r16,r17
   2fa54:	902f883a 	mov	r23,r18
   2fa58:	5013883a 	mov	r9,r10
   2fa5c:	3839883a 	mov	fp,r7
   2fa60:	003f8c06 	br	2f894 <_gp+0xffff2494>
   2fa64:	8821883a 	mov	r16,r17
   2fa68:	902f883a 	mov	r23,r18
   2fa6c:	3013883a 	mov	r9,r6
   2fa70:	3839883a 	mov	fp,r7
   2fa74:	003f8706 	br	2f894 <_gp+0xffff2494>
   2fa78:	b82ad43a 	srli	r21,r23,16
   2fa7c:	9038d43a 	srli	fp,r18,16
   2fa80:	bdffffcc 	andi	r23,r23,65535
   2fa84:	94bfffcc 	andi	r18,r18,65535
   2fa88:	9009883a 	mov	r4,r18
   2fa8c:	b80b883a 	mov	r5,r23
   2fa90:	d8c00515 	stw	r3,20(sp)
   2fa94:	d9800715 	stw	r6,28(sp)
   2fa98:	da000615 	stw	r8,24(sp)
   2fa9c:	002e2bc0 	call	2e2bc <__mulsi3>
   2faa0:	9009883a 	mov	r4,r18
   2faa4:	a80b883a 	mov	r5,r21
   2faa8:	1029883a 	mov	r20,r2
   2faac:	002e2bc0 	call	2e2bc <__mulsi3>
   2fab0:	e009883a 	mov	r4,fp
   2fab4:	a80b883a 	mov	r5,r21
   2fab8:	102d883a 	mov	r22,r2
   2fabc:	002e2bc0 	call	2e2bc <__mulsi3>
   2fac0:	e009883a 	mov	r4,fp
   2fac4:	b80b883a 	mov	r5,r23
   2fac8:	1027883a 	mov	r19,r2
   2facc:	002e2bc0 	call	2e2bc <__mulsi3>
   2fad0:	a008d43a 	srli	r4,r20,16
   2fad4:	b085883a 	add	r2,r22,r2
   2fad8:	d8c00517 	ldw	r3,20(sp)
   2fadc:	110f883a 	add	r7,r2,r4
   2fae0:	d9800717 	ldw	r6,28(sp)
   2fae4:	da000617 	ldw	r8,24(sp)
   2fae8:	3d80022e 	bgeu	r7,r22,2faf4 <__muldf3+0x3b0>
   2faec:	00800074 	movhi	r2,1
   2faf0:	98a7883a 	add	r19,r19,r2
   2faf4:	3804943a 	slli	r2,r7,16
   2faf8:	380ed43a 	srli	r7,r7,16
   2fafc:	882cd43a 	srli	r22,r17,16
   2fb00:	a53fffcc 	andi	r20,r20,65535
   2fb04:	8c7fffcc 	andi	r17,r17,65535
   2fb08:	1529883a 	add	r20,r2,r20
   2fb0c:	8809883a 	mov	r4,r17
   2fb10:	b80b883a 	mov	r5,r23
   2fb14:	d8c00515 	stw	r3,20(sp)
   2fb18:	d9800715 	stw	r6,28(sp)
   2fb1c:	da000615 	stw	r8,24(sp)
   2fb20:	d9c00015 	stw	r7,0(sp)
   2fb24:	dd000115 	stw	r20,4(sp)
   2fb28:	002e2bc0 	call	2e2bc <__mulsi3>
   2fb2c:	a80b883a 	mov	r5,r21
   2fb30:	8809883a 	mov	r4,r17
   2fb34:	d8800415 	stw	r2,16(sp)
   2fb38:	002e2bc0 	call	2e2bc <__mulsi3>
   2fb3c:	a80b883a 	mov	r5,r21
   2fb40:	b009883a 	mov	r4,r22
   2fb44:	1029883a 	mov	r20,r2
   2fb48:	002e2bc0 	call	2e2bc <__mulsi3>
   2fb4c:	b009883a 	mov	r4,r22
   2fb50:	b80b883a 	mov	r5,r23
   2fb54:	102b883a 	mov	r21,r2
   2fb58:	002e2bc0 	call	2e2bc <__mulsi3>
   2fb5c:	da400417 	ldw	r9,16(sp)
   2fb60:	a085883a 	add	r2,r20,r2
   2fb64:	d8c00517 	ldw	r3,20(sp)
   2fb68:	4808d43a 	srli	r4,r9,16
   2fb6c:	d9800717 	ldw	r6,28(sp)
   2fb70:	da000617 	ldw	r8,24(sp)
   2fb74:	1109883a 	add	r4,r2,r4
   2fb78:	2500022e 	bgeu	r4,r20,2fb84 <__muldf3+0x440>
   2fb7c:	00800074 	movhi	r2,1
   2fb80:	a8ab883a 	add	r21,r21,r2
   2fb84:	200e943a 	slli	r7,r4,16
   2fb88:	2004d43a 	srli	r2,r4,16
   2fb8c:	802ed43a 	srli	r23,r16,16
   2fb90:	843fffcc 	andi	r16,r16,65535
   2fb94:	4d3fffcc 	andi	r20,r9,65535
   2fb98:	9009883a 	mov	r4,r18
   2fb9c:	800b883a 	mov	r5,r16
   2fba0:	3d29883a 	add	r20,r7,r20
   2fba4:	d8c00515 	stw	r3,20(sp)
   2fba8:	d9800715 	stw	r6,28(sp)
   2fbac:	da000615 	stw	r8,24(sp)
   2fbb0:	a8ab883a 	add	r21,r21,r2
   2fbb4:	002e2bc0 	call	2e2bc <__mulsi3>
   2fbb8:	9009883a 	mov	r4,r18
   2fbbc:	b80b883a 	mov	r5,r23
   2fbc0:	d8800315 	stw	r2,12(sp)
   2fbc4:	002e2bc0 	call	2e2bc <__mulsi3>
   2fbc8:	e009883a 	mov	r4,fp
   2fbcc:	b80b883a 	mov	r5,r23
   2fbd0:	1025883a 	mov	r18,r2
   2fbd4:	002e2bc0 	call	2e2bc <__mulsi3>
   2fbd8:	e009883a 	mov	r4,fp
   2fbdc:	800b883a 	mov	r5,r16
   2fbe0:	d8800215 	stw	r2,8(sp)
   2fbe4:	002e2bc0 	call	2e2bc <__mulsi3>
   2fbe8:	da800317 	ldw	r10,12(sp)
   2fbec:	d9400017 	ldw	r5,0(sp)
   2fbf0:	9085883a 	add	r2,r18,r2
   2fbf4:	5008d43a 	srli	r4,r10,16
   2fbf8:	a153883a 	add	r9,r20,r5
   2fbfc:	d8c00517 	ldw	r3,20(sp)
   2fc00:	1109883a 	add	r4,r2,r4
   2fc04:	d9800717 	ldw	r6,28(sp)
   2fc08:	da000617 	ldw	r8,24(sp)
   2fc0c:	dac00217 	ldw	r11,8(sp)
   2fc10:	2480022e 	bgeu	r4,r18,2fc1c <__muldf3+0x4d8>
   2fc14:	00800074 	movhi	r2,1
   2fc18:	5897883a 	add	r11,r11,r2
   2fc1c:	200e943a 	slli	r7,r4,16
   2fc20:	2038d43a 	srli	fp,r4,16
   2fc24:	52bfffcc 	andi	r10,r10,65535
   2fc28:	3a8f883a 	add	r7,r7,r10
   2fc2c:	8809883a 	mov	r4,r17
   2fc30:	800b883a 	mov	r5,r16
   2fc34:	d8c00515 	stw	r3,20(sp)
   2fc38:	d9800715 	stw	r6,28(sp)
   2fc3c:	d9c00215 	stw	r7,8(sp)
   2fc40:	da000615 	stw	r8,24(sp)
   2fc44:	da400415 	stw	r9,16(sp)
   2fc48:	5f39883a 	add	fp,r11,fp
   2fc4c:	002e2bc0 	call	2e2bc <__mulsi3>
   2fc50:	8809883a 	mov	r4,r17
   2fc54:	b80b883a 	mov	r5,r23
   2fc58:	1025883a 	mov	r18,r2
   2fc5c:	002e2bc0 	call	2e2bc <__mulsi3>
   2fc60:	b009883a 	mov	r4,r22
   2fc64:	b80b883a 	mov	r5,r23
   2fc68:	d8800315 	stw	r2,12(sp)
   2fc6c:	002e2bc0 	call	2e2bc <__mulsi3>
   2fc70:	b009883a 	mov	r4,r22
   2fc74:	800b883a 	mov	r5,r16
   2fc78:	1023883a 	mov	r17,r2
   2fc7c:	002e2bc0 	call	2e2bc <__mulsi3>
   2fc80:	da800317 	ldw	r10,12(sp)
   2fc84:	9008d43a 	srli	r4,r18,16
   2fc88:	d8c00517 	ldw	r3,20(sp)
   2fc8c:	5085883a 	add	r2,r10,r2
   2fc90:	1109883a 	add	r4,r2,r4
   2fc94:	d9800717 	ldw	r6,28(sp)
   2fc98:	d9c00217 	ldw	r7,8(sp)
   2fc9c:	da000617 	ldw	r8,24(sp)
   2fca0:	da400417 	ldw	r9,16(sp)
   2fca4:	2280022e 	bgeu	r4,r10,2fcb0 <__muldf3+0x56c>
   2fca8:	00800074 	movhi	r2,1
   2fcac:	88a3883a 	add	r17,r17,r2
   2fcb0:	2004943a 	slli	r2,r4,16
   2fcb4:	94bfffcc 	andi	r18,r18,65535
   2fcb8:	4ce7883a 	add	r19,r9,r19
   2fcbc:	14a5883a 	add	r18,r2,r18
   2fcc0:	9d29803a 	cmpltu	r20,r19,r20
   2fcc4:	9565883a 	add	r18,r18,r21
   2fcc8:	9505883a 	add	r2,r18,r20
   2fccc:	99e7883a 	add	r19,r19,r7
   2fcd0:	99cf803a 	cmpltu	r7,r19,r7
   2fcd4:	e08b883a 	add	r5,fp,r2
   2fcd8:	2008d43a 	srli	r4,r4,16
   2fcdc:	29ef883a 	add	r23,r5,r7
   2fce0:	1529803a 	cmpltu	r20,r2,r20
   2fce4:	956b803a 	cmpltu	r21,r18,r21
   2fce8:	b9cf803a 	cmpltu	r7,r23,r7
   2fcec:	a564b03a 	or	r18,r20,r21
   2fcf0:	2f39803a 	cmpltu	fp,r5,fp
   2fcf4:	9125883a 	add	r18,r18,r4
   2fcf8:	3f38b03a 	or	fp,r7,fp
   2fcfc:	9725883a 	add	r18,r18,fp
   2fd00:	9804927a 	slli	r2,r19,9
   2fd04:	9463883a 	add	r17,r18,r17
   2fd08:	d9000117 	ldw	r4,4(sp)
   2fd0c:	b820d5fa 	srli	r16,r23,23
   2fd10:	8822927a 	slli	r17,r17,9
   2fd14:	9826d5fa 	srli	r19,r19,23
   2fd18:	1104b03a 	or	r2,r2,r4
   2fd1c:	b82e927a 	slli	r23,r23,9
   2fd20:	1004c03a 	cmpne	r2,r2,zero
   2fd24:	8c20b03a 	or	r16,r17,r16
   2fd28:	14e6b03a 	or	r19,r2,r19
   2fd2c:	8080402c 	andhi	r2,r16,256
   2fd30:	9deeb03a 	or	r23,r19,r23
   2fd34:	10000726 	beq	r2,zero,2fd54 <__muldf3+0x610>
   2fd38:	b804d07a 	srli	r2,r23,1
   2fd3c:	800697fa 	slli	r3,r16,31
   2fd40:	bdc0004c 	andi	r23,r23,1
   2fd44:	8020d07a 	srli	r16,r16,1
   2fd48:	b8aeb03a 	or	r23,r23,r2
   2fd4c:	b8eeb03a 	or	r23,r23,r3
   2fd50:	4007883a 	mov	r3,r8
   2fd54:	1900ffc4 	addi	r4,r3,1023
   2fd58:	01004d0e 	bge	zero,r4,2fe90 <__muldf3+0x74c>
   2fd5c:	b88001cc 	andi	r2,r23,7
   2fd60:	10000726 	beq	r2,zero,2fd80 <__muldf3+0x63c>
   2fd64:	b94003cc 	andi	r5,r23,15
   2fd68:	00800104 	movi	r2,4
   2fd6c:	28800426 	beq	r5,r2,2fd80 <__muldf3+0x63c>
   2fd70:	b885883a 	add	r2,r23,r2
   2fd74:	15ef803a 	cmpltu	r23,r2,r23
   2fd78:	85e1883a 	add	r16,r16,r23
   2fd7c:	102f883a 	mov	r23,r2
   2fd80:	8080402c 	andhi	r2,r16,256
   2fd84:	10000426 	beq	r2,zero,2fd98 <__muldf3+0x654>
   2fd88:	00bfc034 	movhi	r2,65280
   2fd8c:	10bfffc4 	addi	r2,r2,-1
   2fd90:	19010004 	addi	r4,r3,1024
   2fd94:	80a0703a 	and	r16,r16,r2
   2fd98:	0081ff84 	movi	r2,2046
   2fd9c:	1100340e 	bge	r2,r4,2fe70 <__muldf3+0x72c>
   2fda0:	34c0004c 	andi	r19,r6,1
   2fda4:	0101ffc4 	movi	r4,2047
   2fda8:	0021883a 	mov	r16,zero
   2fdac:	002f883a 	mov	r23,zero
   2fdb0:	003ebe06 	br	2f8ac <_gp+0xffff24ac>
   2fdb4:	8080022c 	andhi	r2,r16,8
   2fdb8:	10000926 	beq	r2,zero,2fde0 <__muldf3+0x69c>
   2fdbc:	8880022c 	andhi	r2,r17,8
   2fdc0:	1000071e 	bne	r2,zero,2fde0 <__muldf3+0x69c>
   2fdc4:	00800434 	movhi	r2,16
   2fdc8:	8c000234 	orhi	r16,r17,8
   2fdcc:	10bfffc4 	addi	r2,r2,-1
   2fdd0:	b027883a 	mov	r19,r22
   2fdd4:	80a0703a 	and	r16,r16,r2
   2fdd8:	902f883a 	mov	r23,r18
   2fddc:	003f1a06 	br	2fa48 <_gp+0xffff2648>
   2fde0:	00800434 	movhi	r2,16
   2fde4:	84000234 	orhi	r16,r16,8
   2fde8:	10bfffc4 	addi	r2,r2,-1
   2fdec:	80a0703a 	and	r16,r16,r2
   2fdf0:	003f1506 	br	2fa48 <_gp+0xffff2648>
   2fdf4:	3009883a 	mov	r4,r6
   2fdf8:	d9400215 	stw	r5,8(sp)
   2fdfc:	d9800715 	stw	r6,28(sp)
   2fe00:	da400415 	stw	r9,16(sp)
   2fe04:	da800315 	stw	r10,12(sp)
   2fe08:	0030a7c0 	call	30a7c <__clzsi2>
   2fe0c:	10c00804 	addi	r3,r2,32
   2fe10:	010009c4 	movi	r4,39
   2fe14:	d9400217 	ldw	r5,8(sp)
   2fe18:	d9800717 	ldw	r6,28(sp)
   2fe1c:	da400417 	ldw	r9,16(sp)
   2fe20:	da800317 	ldw	r10,12(sp)
   2fe24:	20fee20e 	bge	r4,r3,2f9b0 <_gp+0xffff25b0>
   2fe28:	147ffe04 	addi	r17,r2,-8
   2fe2c:	9462983a 	sll	r17,r18,r17
   2fe30:	0025883a 	mov	r18,zero
   2fe34:	003ee506 	br	2f9cc <_gp+0xffff25cc>
   2fe38:	d9800715 	stw	r6,28(sp)
   2fe3c:	d9c00215 	stw	r7,8(sp)
   2fe40:	da400415 	stw	r9,16(sp)
   2fe44:	0030a7c0 	call	30a7c <__clzsi2>
   2fe48:	10c00804 	addi	r3,r2,32
   2fe4c:	010009c4 	movi	r4,39
   2fe50:	d9800717 	ldw	r6,28(sp)
   2fe54:	d9c00217 	ldw	r7,8(sp)
   2fe58:	da400417 	ldw	r9,16(sp)
   2fe5c:	20feb40e 	bge	r4,r3,2f930 <_gp+0xffff2530>
   2fe60:	143ffe04 	addi	r16,r2,-8
   2fe64:	9420983a 	sll	r16,r18,r16
   2fe68:	002f883a 	mov	r23,zero
   2fe6c:	003eb706 	br	2f94c <_gp+0xffff254c>
   2fe70:	8004977a 	slli	r2,r16,29
   2fe74:	b82ed0fa 	srli	r23,r23,3
   2fe78:	8020927a 	slli	r16,r16,9
   2fe7c:	2101ffcc 	andi	r4,r4,2047
   2fe80:	15eeb03a 	or	r23,r2,r23
   2fe84:	8020d33a 	srli	r16,r16,12
   2fe88:	34c0004c 	andi	r19,r6,1
   2fe8c:	003e8706 	br	2f8ac <_gp+0xffff24ac>
   2fe90:	00bf0084 	movi	r2,-1022
   2fe94:	10c5c83a 	sub	r2,r2,r3
   2fe98:	01000e04 	movi	r4,56
   2fe9c:	2080080e 	bge	r4,r2,2fec0 <__muldf3+0x77c>
   2fea0:	34c0004c 	andi	r19,r6,1
   2fea4:	0009883a 	mov	r4,zero
   2fea8:	0021883a 	mov	r16,zero
   2feac:	002f883a 	mov	r23,zero
   2feb0:	003e7e06 	br	2f8ac <_gp+0xffff24ac>
   2feb4:	4007883a 	mov	r3,r8
   2feb8:	480d883a 	mov	r6,r9
   2febc:	003fa506 	br	2fd54 <_gp+0xffff2954>
   2fec0:	010007c4 	movi	r4,31
   2fec4:	20801816 	blt	r4,r2,2ff28 <__muldf3+0x7e4>
   2fec8:	18c10784 	addi	r3,r3,1054
   2fecc:	80c8983a 	sll	r4,r16,r3
   2fed0:	b88ad83a 	srl	r5,r23,r2
   2fed4:	b8c6983a 	sll	r3,r23,r3
   2fed8:	80a0d83a 	srl	r16,r16,r2
   2fedc:	2908b03a 	or	r4,r5,r4
   2fee0:	1804c03a 	cmpne	r2,r3,zero
   2fee4:	2088b03a 	or	r4,r4,r2
   2fee8:	208001cc 	andi	r2,r4,7
   2feec:	10000726 	beq	r2,zero,2ff0c <__muldf3+0x7c8>
   2fef0:	20c003cc 	andi	r3,r4,15
   2fef4:	00800104 	movi	r2,4
   2fef8:	18800426 	beq	r3,r2,2ff0c <__muldf3+0x7c8>
   2fefc:	20c00104 	addi	r3,r4,4
   2ff00:	1905803a 	cmpltu	r2,r3,r4
   2ff04:	80a1883a 	add	r16,r16,r2
   2ff08:	1809883a 	mov	r4,r3
   2ff0c:	8080202c 	andhi	r2,r16,128
   2ff10:	10001b26 	beq	r2,zero,2ff80 <__muldf3+0x83c>
   2ff14:	34c0004c 	andi	r19,r6,1
   2ff18:	01000044 	movi	r4,1
   2ff1c:	0021883a 	mov	r16,zero
   2ff20:	002f883a 	mov	r23,zero
   2ff24:	003e6106 	br	2f8ac <_gp+0xffff24ac>
   2ff28:	013ef884 	movi	r4,-1054
   2ff2c:	20c9c83a 	sub	r4,r4,r3
   2ff30:	01400804 	movi	r5,32
   2ff34:	8108d83a 	srl	r4,r16,r4
   2ff38:	11401526 	beq	r2,r5,2ff90 <__muldf3+0x84c>
   2ff3c:	18c10f84 	addi	r3,r3,1086
   2ff40:	80e0983a 	sll	r16,r16,r3
   2ff44:	85eeb03a 	or	r23,r16,r23
   2ff48:	b804c03a 	cmpne	r2,r23,zero
   2ff4c:	1108b03a 	or	r4,r2,r4
   2ff50:	20c001cc 	andi	r3,r4,7
   2ff54:	1800061e 	bne	r3,zero,2ff70 <__muldf3+0x82c>
   2ff58:	0021883a 	mov	r16,zero
   2ff5c:	202ed0fa 	srli	r23,r4,3
   2ff60:	34c0004c 	andi	r19,r6,1
   2ff64:	0009883a 	mov	r4,zero
   2ff68:	b8eeb03a 	or	r23,r23,r3
   2ff6c:	003e4f06 	br	2f8ac <_gp+0xffff24ac>
   2ff70:	20c003cc 	andi	r3,r4,15
   2ff74:	00800104 	movi	r2,4
   2ff78:	0021883a 	mov	r16,zero
   2ff7c:	18bfdf1e 	bne	r3,r2,2fefc <_gp+0xffff2afc>
   2ff80:	8004927a 	slli	r2,r16,9
   2ff84:	8006977a 	slli	r3,r16,29
   2ff88:	1020d33a 	srli	r16,r2,12
   2ff8c:	003ff306 	br	2ff5c <_gp+0xffff2b5c>
   2ff90:	0021883a 	mov	r16,zero
   2ff94:	003feb06 	br	2ff44 <_gp+0xffff2b44>
   2ff98:	00800434 	movhi	r2,16
   2ff9c:	84000234 	orhi	r16,r16,8
   2ffa0:	10bfffc4 	addi	r2,r2,-1
   2ffa4:	4cc0004c 	andi	r19,r9,1
   2ffa8:	80a0703a 	and	r16,r16,r2
   2ffac:	003ea606 	br	2fa48 <_gp+0xffff2648>

0002ffb0 <__subdf3>:
   2ffb0:	00c00434 	movhi	r3,16
   2ffb4:	18ffffc4 	addi	r3,r3,-1
   2ffb8:	defffb04 	addi	sp,sp,-20
   2ffbc:	28d2703a 	and	r9,r5,r3
   2ffc0:	3814d53a 	srli	r10,r7,20
   2ffc4:	38c6703a 	and	r3,r7,r3
   2ffc8:	3004d77a 	srli	r2,r6,29
   2ffcc:	dc800215 	stw	r18,8(sp)
   2ffd0:	dc000015 	stw	r16,0(sp)
   2ffd4:	2824d7fa 	srli	r18,r5,31
   2ffd8:	2820d53a 	srli	r16,r5,20
   2ffdc:	481290fa 	slli	r9,r9,3
   2ffe0:	200ad77a 	srli	r5,r4,29
   2ffe4:	180690fa 	slli	r3,r3,3
   2ffe8:	dc400115 	stw	r17,4(sp)
   2ffec:	dfc00415 	stw	ra,16(sp)
   2fff0:	202290fa 	slli	r17,r4,3
   2fff4:	dcc00315 	stw	r19,12(sp)
   2fff8:	5281ffcc 	andi	r10,r10,2047
   2fffc:	0101ffc4 	movi	r4,2047
   30000:	9011883a 	mov	r8,r18
   30004:	8401ffcc 	andi	r16,r16,2047
   30008:	94803fcc 	andi	r18,r18,255
   3000c:	494ab03a 	or	r5,r9,r5
   30010:	380ed7fa 	srli	r7,r7,31
   30014:	1886b03a 	or	r3,r3,r2
   30018:	300c90fa 	slli	r6,r6,3
   3001c:	51009026 	beq	r10,r4,30260 <__subdf3+0x2b0>
   30020:	39c0005c 	xori	r7,r7,1
   30024:	8285c83a 	sub	r2,r16,r10
   30028:	91c06f26 	beq	r18,r7,301e8 <__subdf3+0x238>
   3002c:	0080b10e 	bge	zero,r2,302f4 <__subdf3+0x344>
   30030:	50002a1e 	bne	r10,zero,300dc <__subdf3+0x12c>
   30034:	1988b03a 	or	r4,r3,r6
   30038:	2000941e 	bne	r4,zero,3028c <__subdf3+0x2dc>
   3003c:	888001cc 	andi	r2,r17,7
   30040:	10005b26 	beq	r2,zero,301b0 <__subdf3+0x200>
   30044:	88c003cc 	andi	r3,r17,15
   30048:	00800104 	movi	r2,4
   3004c:	18805826 	beq	r3,r2,301b0 <__subdf3+0x200>
   30050:	88c00104 	addi	r3,r17,4
   30054:	1c63803a 	cmpltu	r17,r3,r17
   30058:	2c4b883a 	add	r5,r5,r17
   3005c:	2880202c 	andhi	r2,r5,128
   30060:	9200004c 	andi	r8,r18,1
   30064:	1823883a 	mov	r17,r3
   30068:	10005426 	beq	r2,zero,301bc <__subdf3+0x20c>
   3006c:	84000044 	addi	r16,r16,1
   30070:	0081ffc4 	movi	r2,2047
   30074:	8080bf26 	beq	r16,r2,30374 <__subdf3+0x3c4>
   30078:	013fe034 	movhi	r4,65408
   3007c:	213fffc4 	addi	r4,r4,-1
   30080:	290a703a 	and	r5,r5,r4
   30084:	2804977a 	slli	r2,r5,29
   30088:	280a927a 	slli	r5,r5,9
   3008c:	8822d0fa 	srli	r17,r17,3
   30090:	8401ffcc 	andi	r16,r16,2047
   30094:	2808d33a 	srli	r4,r5,12
   30098:	1444b03a 	or	r2,r2,r17
   3009c:	8401ffcc 	andi	r16,r16,2047
   300a0:	800a953a 	slli	r5,r16,20
   300a4:	40c03fcc 	andi	r3,r8,255
   300a8:	04000434 	movhi	r16,16
   300ac:	180697fa 	slli	r3,r3,31
   300b0:	843fffc4 	addi	r16,r16,-1
   300b4:	2420703a 	and	r16,r4,r16
   300b8:	8160b03a 	or	r16,r16,r5
   300bc:	80c6b03a 	or	r3,r16,r3
   300c0:	dfc00417 	ldw	ra,16(sp)
   300c4:	dcc00317 	ldw	r19,12(sp)
   300c8:	dc800217 	ldw	r18,8(sp)
   300cc:	dc400117 	ldw	r17,4(sp)
   300d0:	dc000017 	ldw	r16,0(sp)
   300d4:	dec00504 	addi	sp,sp,20
   300d8:	f800283a 	ret
   300dc:	0101ffc4 	movi	r4,2047
   300e0:	813fd626 	beq	r16,r4,3003c <_gp+0xffff2c3c>
   300e4:	18c02034 	orhi	r3,r3,128
   300e8:	01000e04 	movi	r4,56
   300ec:	2080a416 	blt	r4,r2,30380 <__subdf3+0x3d0>
   300f0:	010007c4 	movi	r4,31
   300f4:	2080c716 	blt	r4,r2,30414 <__subdf3+0x464>
   300f8:	01000804 	movi	r4,32
   300fc:	2089c83a 	sub	r4,r4,r2
   30100:	1910983a 	sll	r8,r3,r4
   30104:	308ed83a 	srl	r7,r6,r2
   30108:	3108983a 	sll	r4,r6,r4
   3010c:	1884d83a 	srl	r2,r3,r2
   30110:	41ccb03a 	or	r6,r8,r7
   30114:	2008c03a 	cmpne	r4,r4,zero
   30118:	310cb03a 	or	r6,r6,r4
   3011c:	898dc83a 	sub	r6,r17,r6
   30120:	89a3803a 	cmpltu	r17,r17,r6
   30124:	288bc83a 	sub	r5,r5,r2
   30128:	2c4bc83a 	sub	r5,r5,r17
   3012c:	3023883a 	mov	r17,r6
   30130:	2880202c 	andhi	r2,r5,128
   30134:	10006b26 	beq	r2,zero,302e4 <__subdf3+0x334>
   30138:	04c02034 	movhi	r19,128
   3013c:	9cffffc4 	addi	r19,r19,-1
   30140:	2ce6703a 	and	r19,r5,r19
   30144:	98007c26 	beq	r19,zero,30338 <__subdf3+0x388>
   30148:	9809883a 	mov	r4,r19
   3014c:	0030a7c0 	call	30a7c <__clzsi2>
   30150:	10fffe04 	addi	r3,r2,-8
   30154:	010007c4 	movi	r4,31
   30158:	20c07d16 	blt	r4,r3,30350 <__subdf3+0x3a0>
   3015c:	01400a04 	movi	r5,40
   30160:	2885c83a 	sub	r2,r5,r2
   30164:	888ad83a 	srl	r5,r17,r2
   30168:	98e6983a 	sll	r19,r19,r3
   3016c:	88e2983a 	sll	r17,r17,r3
   30170:	2ce6b03a 	or	r19,r5,r19
   30174:	1c007a16 	blt	r3,r16,30360 <__subdf3+0x3b0>
   30178:	1c21c83a 	sub	r16,r3,r16
   3017c:	81400044 	addi	r5,r16,1
   30180:	00c007c4 	movi	r3,31
   30184:	19409616 	blt	r3,r5,303e0 <__subdf3+0x430>
   30188:	1c21c83a 	sub	r16,r3,r16
   3018c:	8c08983a 	sll	r4,r17,r16
   30190:	8946d83a 	srl	r3,r17,r5
   30194:	9c20983a 	sll	r16,r19,r16
   30198:	2008c03a 	cmpne	r4,r4,zero
   3019c:	994ad83a 	srl	r5,r19,r5
   301a0:	1c06b03a 	or	r3,r3,r16
   301a4:	1922b03a 	or	r17,r3,r4
   301a8:	0021883a 	mov	r16,zero
   301ac:	003fa306 	br	3003c <_gp+0xffff2c3c>
   301b0:	2880202c 	andhi	r2,r5,128
   301b4:	9200004c 	andi	r8,r18,1
   301b8:	103fac1e 	bne	r2,zero,3006c <_gp+0xffff2c6c>
   301bc:	2804977a 	slli	r2,r5,29
   301c0:	8822d0fa 	srli	r17,r17,3
   301c4:	00c1ffc4 	movi	r3,2047
   301c8:	280ad0fa 	srli	r5,r5,3
   301cc:	1444b03a 	or	r2,r2,r17
   301d0:	80c02726 	beq	r16,r3,30270 <__subdf3+0x2c0>
   301d4:	01000434 	movhi	r4,16
   301d8:	213fffc4 	addi	r4,r4,-1
   301dc:	80e0703a 	and	r16,r16,r3
   301e0:	2908703a 	and	r4,r5,r4
   301e4:	003fad06 	br	3009c <_gp+0xffff2c9c>
   301e8:	0080690e 	bge	zero,r2,30390 <__subdf3+0x3e0>
   301ec:	50002f26 	beq	r10,zero,302ac <__subdf3+0x2fc>
   301f0:	0101ffc4 	movi	r4,2047
   301f4:	813f9126 	beq	r16,r4,3003c <_gp+0xffff2c3c>
   301f8:	18c02034 	orhi	r3,r3,128
   301fc:	01000e04 	movi	r4,56
   30200:	2080b00e 	bge	r4,r2,304c4 <__subdf3+0x514>
   30204:	198cb03a 	or	r6,r3,r6
   30208:	300ec03a 	cmpne	r7,r6,zero
   3020c:	0005883a 	mov	r2,zero
   30210:	3c4f883a 	add	r7,r7,r17
   30214:	3c63803a 	cmpltu	r17,r7,r17
   30218:	114b883a 	add	r5,r2,r5
   3021c:	2c4b883a 	add	r5,r5,r17
   30220:	3823883a 	mov	r17,r7
   30224:	2880202c 	andhi	r2,r5,128
   30228:	10002e26 	beq	r2,zero,302e4 <__subdf3+0x334>
   3022c:	84000044 	addi	r16,r16,1
   30230:	0081ffc4 	movi	r2,2047
   30234:	8080de26 	beq	r16,r2,305b0 <__subdf3+0x600>
   30238:	00bfe034 	movhi	r2,65408
   3023c:	10bfffc4 	addi	r2,r2,-1
   30240:	288a703a 	and	r5,r5,r2
   30244:	880cd07a 	srli	r6,r17,1
   30248:	280897fa 	slli	r4,r5,31
   3024c:	88c0004c 	andi	r3,r17,1
   30250:	30e2b03a 	or	r17,r6,r3
   30254:	280ad07a 	srli	r5,r5,1
   30258:	8922b03a 	or	r17,r17,r4
   3025c:	003f7706 	br	3003c <_gp+0xffff2c3c>
   30260:	1984b03a 	or	r2,r3,r6
   30264:	103f6e26 	beq	r2,zero,30020 <_gp+0xffff2c20>
   30268:	39c03fcc 	andi	r7,r7,255
   3026c:	003f6d06 	br	30024 <_gp+0xffff2c24>
   30270:	1146b03a 	or	r3,r2,r5
   30274:	18003f26 	beq	r3,zero,30374 <__subdf3+0x3c4>
   30278:	00c00434 	movhi	r3,16
   3027c:	29000234 	orhi	r4,r5,8
   30280:	18ffffc4 	addi	r3,r3,-1
   30284:	20c8703a 	and	r4,r4,r3
   30288:	003f8406 	br	3009c <_gp+0xffff2c9c>
   3028c:	10bfffc4 	addi	r2,r2,-1
   30290:	1000501e 	bne	r2,zero,303d4 <__subdf3+0x424>
   30294:	898fc83a 	sub	r7,r17,r6
   30298:	89e3803a 	cmpltu	r17,r17,r7
   3029c:	28cbc83a 	sub	r5,r5,r3
   302a0:	2c4bc83a 	sub	r5,r5,r17
   302a4:	3823883a 	mov	r17,r7
   302a8:	003fa106 	br	30130 <_gp+0xffff2d30>
   302ac:	1988b03a 	or	r4,r3,r6
   302b0:	203f6226 	beq	r4,zero,3003c <_gp+0xffff2c3c>
   302b4:	10bfffc4 	addi	r2,r2,-1
   302b8:	10009b1e 	bne	r2,zero,30528 <__subdf3+0x578>
   302bc:	344d883a 	add	r6,r6,r17
   302c0:	3463803a 	cmpltu	r17,r6,r17
   302c4:	194b883a 	add	r5,r3,r5
   302c8:	2c4b883a 	add	r5,r5,r17
   302cc:	3023883a 	mov	r17,r6
   302d0:	003fd406 	br	30224 <_gp+0xffff2e24>
   302d4:	1106b03a 	or	r3,r2,r4
   302d8:	1800b426 	beq	r3,zero,305ac <__subdf3+0x5fc>
   302dc:	100b883a 	mov	r5,r2
   302e0:	2023883a 	mov	r17,r4
   302e4:	888001cc 	andi	r2,r17,7
   302e8:	103f561e 	bne	r2,zero,30044 <_gp+0xffff2c44>
   302ec:	9200004c 	andi	r8,r18,1
   302f0:	003fb206 	br	301bc <_gp+0xffff2dbc>
   302f4:	1000531e 	bne	r2,zero,30444 <__subdf3+0x494>
   302f8:	80800044 	addi	r2,r16,1
   302fc:	1081ffcc 	andi	r2,r2,2047
   30300:	01000044 	movi	r4,1
   30304:	2080a00e 	bge	r4,r2,30588 <__subdf3+0x5d8>
   30308:	8985c83a 	sub	r2,r17,r6
   3030c:	8889803a 	cmpltu	r4,r17,r2
   30310:	28e7c83a 	sub	r19,r5,r3
   30314:	9927c83a 	sub	r19,r19,r4
   30318:	9900202c 	andhi	r4,r19,128
   3031c:	20006226 	beq	r4,zero,304a8 <__subdf3+0x4f8>
   30320:	3463c83a 	sub	r17,r6,r17
   30324:	194bc83a 	sub	r5,r3,r5
   30328:	344d803a 	cmpltu	r6,r6,r17
   3032c:	29a7c83a 	sub	r19,r5,r6
   30330:	3825883a 	mov	r18,r7
   30334:	983f841e 	bne	r19,zero,30148 <_gp+0xffff2d48>
   30338:	8809883a 	mov	r4,r17
   3033c:	0030a7c0 	call	30a7c <__clzsi2>
   30340:	10800804 	addi	r2,r2,32
   30344:	10fffe04 	addi	r3,r2,-8
   30348:	010007c4 	movi	r4,31
   3034c:	20ff830e 	bge	r4,r3,3015c <_gp+0xffff2d5c>
   30350:	14fff604 	addi	r19,r2,-40
   30354:	8ce6983a 	sll	r19,r17,r19
   30358:	0023883a 	mov	r17,zero
   3035c:	1c3f860e 	bge	r3,r16,30178 <_gp+0xffff2d78>
   30360:	017fe034 	movhi	r5,65408
   30364:	297fffc4 	addi	r5,r5,-1
   30368:	80e1c83a 	sub	r16,r16,r3
   3036c:	994a703a 	and	r5,r19,r5
   30370:	003f3206 	br	3003c <_gp+0xffff2c3c>
   30374:	0009883a 	mov	r4,zero
   30378:	0005883a 	mov	r2,zero
   3037c:	003f4706 	br	3009c <_gp+0xffff2c9c>
   30380:	198cb03a 	or	r6,r3,r6
   30384:	300cc03a 	cmpne	r6,r6,zero
   30388:	0005883a 	mov	r2,zero
   3038c:	003f6306 	br	3011c <_gp+0xffff2d1c>
   30390:	10009d1e 	bne	r2,zero,30608 <__subdf3+0x658>
   30394:	81c00044 	addi	r7,r16,1
   30398:	3881ffcc 	andi	r2,r7,2047
   3039c:	02400044 	movi	r9,1
   303a0:	4880680e 	bge	r9,r2,30544 <__subdf3+0x594>
   303a4:	0081ffc4 	movi	r2,2047
   303a8:	3880ae26 	beq	r7,r2,30664 <__subdf3+0x6b4>
   303ac:	344d883a 	add	r6,r6,r17
   303b0:	3463803a 	cmpltu	r17,r6,r17
   303b4:	194b883a 	add	r5,r3,r5
   303b8:	2c4b883a 	add	r5,r5,r17
   303bc:	282297fa 	slli	r17,r5,31
   303c0:	300cd07a 	srli	r6,r6,1
   303c4:	280ad07a 	srli	r5,r5,1
   303c8:	3821883a 	mov	r16,r7
   303cc:	89a2b03a 	or	r17,r17,r6
   303d0:	003f1a06 	br	3003c <_gp+0xffff2c3c>
   303d4:	0101ffc4 	movi	r4,2047
   303d8:	813f431e 	bne	r16,r4,300e8 <_gp+0xffff2ce8>
   303dc:	003f1706 	br	3003c <_gp+0xffff2c3c>
   303e0:	80bff844 	addi	r2,r16,-31
   303e4:	00c00804 	movi	r3,32
   303e8:	9884d83a 	srl	r2,r19,r2
   303ec:	28c05126 	beq	r5,r3,30534 <__subdf3+0x584>
   303f0:	00c00fc4 	movi	r3,63
   303f4:	1c21c83a 	sub	r16,r3,r16
   303f8:	9c26983a 	sll	r19,r19,r16
   303fc:	9c62b03a 	or	r17,r19,r17
   30400:	8822c03a 	cmpne	r17,r17,zero
   30404:	88a2b03a 	or	r17,r17,r2
   30408:	000b883a 	mov	r5,zero
   3040c:	0021883a 	mov	r16,zero
   30410:	003fb406 	br	302e4 <_gp+0xffff2ee4>
   30414:	113ff804 	addi	r4,r2,-32
   30418:	01c00804 	movi	r7,32
   3041c:	1908d83a 	srl	r4,r3,r4
   30420:	11c04626 	beq	r2,r7,3053c <__subdf3+0x58c>
   30424:	01c01004 	movi	r7,64
   30428:	3885c83a 	sub	r2,r7,r2
   3042c:	1884983a 	sll	r2,r3,r2
   30430:	118cb03a 	or	r6,r2,r6
   30434:	300cc03a 	cmpne	r6,r6,zero
   30438:	310cb03a 	or	r6,r6,r4
   3043c:	0005883a 	mov	r2,zero
   30440:	003f3606 	br	3011c <_gp+0xffff2d1c>
   30444:	80002b26 	beq	r16,zero,304f4 <__subdf3+0x544>
   30448:	0101ffc4 	movi	r4,2047
   3044c:	51006926 	beq	r10,r4,305f4 <__subdf3+0x644>
   30450:	0085c83a 	sub	r2,zero,r2
   30454:	29402034 	orhi	r5,r5,128
   30458:	01000e04 	movi	r4,56
   3045c:	20807d16 	blt	r4,r2,30654 <__subdf3+0x6a4>
   30460:	010007c4 	movi	r4,31
   30464:	2080d916 	blt	r4,r2,307cc <__subdf3+0x81c>
   30468:	01000804 	movi	r4,32
   3046c:	2089c83a 	sub	r4,r4,r2
   30470:	2912983a 	sll	r9,r5,r4
   30474:	8890d83a 	srl	r8,r17,r2
   30478:	8908983a 	sll	r4,r17,r4
   3047c:	2884d83a 	srl	r2,r5,r2
   30480:	4a22b03a 	or	r17,r9,r8
   30484:	2008c03a 	cmpne	r4,r4,zero
   30488:	8922b03a 	or	r17,r17,r4
   3048c:	3463c83a 	sub	r17,r6,r17
   30490:	1885c83a 	sub	r2,r3,r2
   30494:	344d803a 	cmpltu	r6,r6,r17
   30498:	118bc83a 	sub	r5,r2,r6
   3049c:	5021883a 	mov	r16,r10
   304a0:	3825883a 	mov	r18,r7
   304a4:	003f2206 	br	30130 <_gp+0xffff2d30>
   304a8:	9886b03a 	or	r3,r19,r2
   304ac:	18001c1e 	bne	r3,zero,30520 <__subdf3+0x570>
   304b0:	0011883a 	mov	r8,zero
   304b4:	000b883a 	mov	r5,zero
   304b8:	0023883a 	mov	r17,zero
   304bc:	0021883a 	mov	r16,zero
   304c0:	003f3e06 	br	301bc <_gp+0xffff2dbc>
   304c4:	010007c4 	movi	r4,31
   304c8:	20803c16 	blt	r4,r2,305bc <__subdf3+0x60c>
   304cc:	01000804 	movi	r4,32
   304d0:	2089c83a 	sub	r4,r4,r2
   304d4:	1912983a 	sll	r9,r3,r4
   304d8:	308ed83a 	srl	r7,r6,r2
   304dc:	3108983a 	sll	r4,r6,r4
   304e0:	1884d83a 	srl	r2,r3,r2
   304e4:	49ceb03a 	or	r7,r9,r7
   304e8:	2008c03a 	cmpne	r4,r4,zero
   304ec:	390eb03a 	or	r7,r7,r4
   304f0:	003f4706 	br	30210 <_gp+0xffff2e10>
   304f4:	2c48b03a 	or	r4,r5,r17
   304f8:	20003e26 	beq	r4,zero,305f4 <__subdf3+0x644>
   304fc:	0084303a 	nor	r2,zero,r2
   30500:	10003a1e 	bne	r2,zero,305ec <__subdf3+0x63c>
   30504:	3463c83a 	sub	r17,r6,r17
   30508:	194bc83a 	sub	r5,r3,r5
   3050c:	344d803a 	cmpltu	r6,r6,r17
   30510:	298bc83a 	sub	r5,r5,r6
   30514:	5021883a 	mov	r16,r10
   30518:	3825883a 	mov	r18,r7
   3051c:	003f0406 	br	30130 <_gp+0xffff2d30>
   30520:	1023883a 	mov	r17,r2
   30524:	003f0706 	br	30144 <_gp+0xffff2d44>
   30528:	0101ffc4 	movi	r4,2047
   3052c:	813f331e 	bne	r16,r4,301fc <_gp+0xffff2dfc>
   30530:	003ec206 	br	3003c <_gp+0xffff2c3c>
   30534:	0027883a 	mov	r19,zero
   30538:	003fb006 	br	303fc <_gp+0xffff2ffc>
   3053c:	0005883a 	mov	r2,zero
   30540:	003fbb06 	br	30430 <_gp+0xffff3030>
   30544:	2c44b03a 	or	r2,r5,r17
   30548:	80008b1e 	bne	r16,zero,30778 <__subdf3+0x7c8>
   3054c:	1000b526 	beq	r2,zero,30824 <__subdf3+0x874>
   30550:	1984b03a 	or	r2,r3,r6
   30554:	103eb926 	beq	r2,zero,3003c <_gp+0xffff2c3c>
   30558:	3449883a 	add	r4,r6,r17
   3055c:	2463803a 	cmpltu	r17,r4,r17
   30560:	194b883a 	add	r5,r3,r5
   30564:	2c4b883a 	add	r5,r5,r17
   30568:	2880202c 	andhi	r2,r5,128
   3056c:	2023883a 	mov	r17,r4
   30570:	103f5c26 	beq	r2,zero,302e4 <_gp+0xffff2ee4>
   30574:	00bfe034 	movhi	r2,65408
   30578:	10bfffc4 	addi	r2,r2,-1
   3057c:	4821883a 	mov	r16,r9
   30580:	288a703a 	and	r5,r5,r2
   30584:	003ead06 	br	3003c <_gp+0xffff2c3c>
   30588:	2c44b03a 	or	r2,r5,r17
   3058c:	8000291e 	bne	r16,zero,30634 <__subdf3+0x684>
   30590:	10004f1e 	bne	r2,zero,306d0 <__subdf3+0x720>
   30594:	1984b03a 	or	r2,r3,r6
   30598:	10000426 	beq	r2,zero,305ac <__subdf3+0x5fc>
   3059c:	180b883a 	mov	r5,r3
   305a0:	3023883a 	mov	r17,r6
   305a4:	3825883a 	mov	r18,r7
   305a8:	003ea406 	br	3003c <_gp+0xffff2c3c>
   305ac:	0011883a 	mov	r8,zero
   305b0:	000b883a 	mov	r5,zero
   305b4:	0023883a 	mov	r17,zero
   305b8:	003f0006 	br	301bc <_gp+0xffff2dbc>
   305bc:	11fff804 	addi	r7,r2,-32
   305c0:	19c8d83a 	srl	r4,r3,r7
   305c4:	01c00804 	movi	r7,32
   305c8:	11c07e26 	beq	r2,r7,307c4 <__subdf3+0x814>
   305cc:	01c01004 	movi	r7,64
   305d0:	3885c83a 	sub	r2,r7,r2
   305d4:	1884983a 	sll	r2,r3,r2
   305d8:	118cb03a 	or	r6,r2,r6
   305dc:	300ec03a 	cmpne	r7,r6,zero
   305e0:	390eb03a 	or	r7,r7,r4
   305e4:	0005883a 	mov	r2,zero
   305e8:	003f0906 	br	30210 <_gp+0xffff2e10>
   305ec:	0101ffc4 	movi	r4,2047
   305f0:	513f991e 	bne	r10,r4,30458 <_gp+0xffff3058>
   305f4:	180b883a 	mov	r5,r3
   305f8:	3023883a 	mov	r17,r6
   305fc:	5021883a 	mov	r16,r10
   30600:	3825883a 	mov	r18,r7
   30604:	003e8d06 	br	3003c <_gp+0xffff2c3c>
   30608:	80001a1e 	bne	r16,zero,30674 <__subdf3+0x6c4>
   3060c:	2c48b03a 	or	r4,r5,r17
   30610:	20005526 	beq	r4,zero,30768 <__subdf3+0x7b8>
   30614:	0084303a 	nor	r2,zero,r2
   30618:	1000511e 	bne	r2,zero,30760 <__subdf3+0x7b0>
   3061c:	89a3883a 	add	r17,r17,r6
   30620:	194b883a 	add	r5,r3,r5
   30624:	898d803a 	cmpltu	r6,r17,r6
   30628:	298b883a 	add	r5,r5,r6
   3062c:	5021883a 	mov	r16,r10
   30630:	003efc06 	br	30224 <_gp+0xffff2e24>
   30634:	1000341e 	bne	r2,zero,30708 <__subdf3+0x758>
   30638:	1984b03a 	or	r2,r3,r6
   3063c:	10006f26 	beq	r2,zero,307fc <__subdf3+0x84c>
   30640:	180b883a 	mov	r5,r3
   30644:	3023883a 	mov	r17,r6
   30648:	3825883a 	mov	r18,r7
   3064c:	0401ffc4 	movi	r16,2047
   30650:	003e7a06 	br	3003c <_gp+0xffff2c3c>
   30654:	2c62b03a 	or	r17,r5,r17
   30658:	8822c03a 	cmpne	r17,r17,zero
   3065c:	0005883a 	mov	r2,zero
   30660:	003f8a06 	br	3048c <_gp+0xffff308c>
   30664:	3821883a 	mov	r16,r7
   30668:	000b883a 	mov	r5,zero
   3066c:	0023883a 	mov	r17,zero
   30670:	003ed206 	br	301bc <_gp+0xffff2dbc>
   30674:	0101ffc4 	movi	r4,2047
   30678:	51003b26 	beq	r10,r4,30768 <__subdf3+0x7b8>
   3067c:	0085c83a 	sub	r2,zero,r2
   30680:	29402034 	orhi	r5,r5,128
   30684:	01000e04 	movi	r4,56
   30688:	20806216 	blt	r4,r2,30814 <__subdf3+0x864>
   3068c:	010007c4 	movi	r4,31
   30690:	20806b16 	blt	r4,r2,30840 <__subdf3+0x890>
   30694:	01000804 	movi	r4,32
   30698:	2089c83a 	sub	r4,r4,r2
   3069c:	2912983a 	sll	r9,r5,r4
   306a0:	888ed83a 	srl	r7,r17,r2
   306a4:	8908983a 	sll	r4,r17,r4
   306a8:	2884d83a 	srl	r2,r5,r2
   306ac:	49e2b03a 	or	r17,r9,r7
   306b0:	2008c03a 	cmpne	r4,r4,zero
   306b4:	8922b03a 	or	r17,r17,r4
   306b8:	89a3883a 	add	r17,r17,r6
   306bc:	10c5883a 	add	r2,r2,r3
   306c0:	898d803a 	cmpltu	r6,r17,r6
   306c4:	118b883a 	add	r5,r2,r6
   306c8:	5021883a 	mov	r16,r10
   306cc:	003ed506 	br	30224 <_gp+0xffff2e24>
   306d0:	1984b03a 	or	r2,r3,r6
   306d4:	103e5926 	beq	r2,zero,3003c <_gp+0xffff2c3c>
   306d8:	8989c83a 	sub	r4,r17,r6
   306dc:	8911803a 	cmpltu	r8,r17,r4
   306e0:	28c5c83a 	sub	r2,r5,r3
   306e4:	1205c83a 	sub	r2,r2,r8
   306e8:	1200202c 	andhi	r8,r2,128
   306ec:	403ef926 	beq	r8,zero,302d4 <_gp+0xffff2ed4>
   306f0:	3463c83a 	sub	r17,r6,r17
   306f4:	194bc83a 	sub	r5,r3,r5
   306f8:	344d803a 	cmpltu	r6,r6,r17
   306fc:	298bc83a 	sub	r5,r5,r6
   30700:	3825883a 	mov	r18,r7
   30704:	003e4d06 	br	3003c <_gp+0xffff2c3c>
   30708:	1984b03a 	or	r2,r3,r6
   3070c:	10002b26 	beq	r2,zero,307bc <__subdf3+0x80c>
   30710:	2808d0fa 	srli	r4,r5,3
   30714:	8822d0fa 	srli	r17,r17,3
   30718:	280a977a 	slli	r5,r5,29
   3071c:	2080022c 	andhi	r2,r4,8
   30720:	2c62b03a 	or	r17,r5,r17
   30724:	10000826 	beq	r2,zero,30748 <__subdf3+0x798>
   30728:	1810d0fa 	srli	r8,r3,3
   3072c:	4080022c 	andhi	r2,r8,8
   30730:	1000051e 	bne	r2,zero,30748 <__subdf3+0x798>
   30734:	300cd0fa 	srli	r6,r6,3
   30738:	1804977a 	slli	r2,r3,29
   3073c:	4009883a 	mov	r4,r8
   30740:	3825883a 	mov	r18,r7
   30744:	11a2b03a 	or	r17,r2,r6
   30748:	880ad77a 	srli	r5,r17,29
   3074c:	200890fa 	slli	r4,r4,3
   30750:	882290fa 	slli	r17,r17,3
   30754:	0401ffc4 	movi	r16,2047
   30758:	290ab03a 	or	r5,r5,r4
   3075c:	003e3706 	br	3003c <_gp+0xffff2c3c>
   30760:	0101ffc4 	movi	r4,2047
   30764:	513fc71e 	bne	r10,r4,30684 <_gp+0xffff3284>
   30768:	180b883a 	mov	r5,r3
   3076c:	3023883a 	mov	r17,r6
   30770:	5021883a 	mov	r16,r10
   30774:	003e3106 	br	3003c <_gp+0xffff2c3c>
   30778:	10002d26 	beq	r2,zero,30830 <__subdf3+0x880>
   3077c:	1984b03a 	or	r2,r3,r6
   30780:	10000e26 	beq	r2,zero,307bc <__subdf3+0x80c>
   30784:	2808d0fa 	srli	r4,r5,3
   30788:	8822d0fa 	srli	r17,r17,3
   3078c:	280a977a 	slli	r5,r5,29
   30790:	2080022c 	andhi	r2,r4,8
   30794:	2c62b03a 	or	r17,r5,r17
   30798:	103feb26 	beq	r2,zero,30748 <_gp+0xffff3348>
   3079c:	180ed0fa 	srli	r7,r3,3
   307a0:	3880022c 	andhi	r2,r7,8
   307a4:	103fe81e 	bne	r2,zero,30748 <_gp+0xffff3348>
   307a8:	300cd0fa 	srli	r6,r6,3
   307ac:	1804977a 	slli	r2,r3,29
   307b0:	3809883a 	mov	r4,r7
   307b4:	11a2b03a 	or	r17,r2,r6
   307b8:	003fe306 	br	30748 <_gp+0xffff3348>
   307bc:	0401ffc4 	movi	r16,2047
   307c0:	003e1e06 	br	3003c <_gp+0xffff2c3c>
   307c4:	0005883a 	mov	r2,zero
   307c8:	003f8306 	br	305d8 <_gp+0xffff31d8>
   307cc:	113ff804 	addi	r4,r2,-32
   307d0:	02000804 	movi	r8,32
   307d4:	2908d83a 	srl	r4,r5,r4
   307d8:	12002526 	beq	r2,r8,30870 <__subdf3+0x8c0>
   307dc:	02001004 	movi	r8,64
   307e0:	4085c83a 	sub	r2,r8,r2
   307e4:	288a983a 	sll	r5,r5,r2
   307e8:	2c62b03a 	or	r17,r5,r17
   307ec:	8822c03a 	cmpne	r17,r17,zero
   307f0:	8922b03a 	or	r17,r17,r4
   307f4:	0005883a 	mov	r2,zero
   307f8:	003f2406 	br	3048c <_gp+0xffff308c>
   307fc:	01402034 	movhi	r5,128
   30800:	0011883a 	mov	r8,zero
   30804:	297fffc4 	addi	r5,r5,-1
   30808:	047ffe04 	movi	r17,-8
   3080c:	0401ffc4 	movi	r16,2047
   30810:	003e6a06 	br	301bc <_gp+0xffff2dbc>
   30814:	2c62b03a 	or	r17,r5,r17
   30818:	8822c03a 	cmpne	r17,r17,zero
   3081c:	0005883a 	mov	r2,zero
   30820:	003fa506 	br	306b8 <_gp+0xffff32b8>
   30824:	180b883a 	mov	r5,r3
   30828:	3023883a 	mov	r17,r6
   3082c:	003e0306 	br	3003c <_gp+0xffff2c3c>
   30830:	180b883a 	mov	r5,r3
   30834:	3023883a 	mov	r17,r6
   30838:	0401ffc4 	movi	r16,2047
   3083c:	003dff06 	br	3003c <_gp+0xffff2c3c>
   30840:	113ff804 	addi	r4,r2,-32
   30844:	01c00804 	movi	r7,32
   30848:	2908d83a 	srl	r4,r5,r4
   3084c:	11c00a26 	beq	r2,r7,30878 <__subdf3+0x8c8>
   30850:	01c01004 	movi	r7,64
   30854:	3885c83a 	sub	r2,r7,r2
   30858:	288a983a 	sll	r5,r5,r2
   3085c:	2c62b03a 	or	r17,r5,r17
   30860:	8822c03a 	cmpne	r17,r17,zero
   30864:	8922b03a 	or	r17,r17,r4
   30868:	0005883a 	mov	r2,zero
   3086c:	003f9206 	br	306b8 <_gp+0xffff32b8>
   30870:	000b883a 	mov	r5,zero
   30874:	003fdc06 	br	307e8 <_gp+0xffff33e8>
   30878:	000b883a 	mov	r5,zero
   3087c:	003ff706 	br	3085c <_gp+0xffff345c>

00030880 <__fixdfsi>:
   30880:	2806d53a 	srli	r3,r5,20
   30884:	00800434 	movhi	r2,16
   30888:	10bfffc4 	addi	r2,r2,-1
   3088c:	18c1ffcc 	andi	r3,r3,2047
   30890:	0180ff84 	movi	r6,1022
   30894:	2884703a 	and	r2,r5,r2
   30898:	280ad7fa 	srli	r5,r5,31
   3089c:	30c0130e 	bge	r6,r3,308ec <__fixdfsi+0x6c>
   308a0:	01810744 	movi	r6,1053
   308a4:	30c00d16 	blt	r6,r3,308dc <__fixdfsi+0x5c>
   308a8:	01810cc4 	movi	r6,1075
   308ac:	30cdc83a 	sub	r6,r6,r3
   308b0:	01c007c4 	movi	r7,31
   308b4:	10800434 	orhi	r2,r2,16
   308b8:	39800e0e 	bge	r7,r6,308f4 <__fixdfsi+0x74>
   308bc:	010104c4 	movi	r4,1043
   308c0:	20c7c83a 	sub	r3,r4,r3
   308c4:	10c6d83a 	srl	r3,r2,r3
   308c8:	29403fcc 	andi	r5,r5,255
   308cc:	0145c83a 	sub	r2,zero,r5
   308d0:	1884f03a 	xor	r2,r3,r2
   308d4:	1145883a 	add	r2,r2,r5
   308d8:	f800283a 	ret
   308dc:	00a00034 	movhi	r2,32768
   308e0:	10bfffc4 	addi	r2,r2,-1
   308e4:	2885883a 	add	r2,r5,r2
   308e8:	f800283a 	ret
   308ec:	0005883a 	mov	r2,zero
   308f0:	f800283a 	ret
   308f4:	18fefb44 	addi	r3,r3,-1043
   308f8:	2188d83a 	srl	r4,r4,r6
   308fc:	10c6983a 	sll	r3,r2,r3
   30900:	20c6b03a 	or	r3,r4,r3
   30904:	003ff006 	br	308c8 <_gp+0xffff34c8>

00030908 <__floatsidf>:
   30908:	defffd04 	addi	sp,sp,-12
   3090c:	dc400115 	stw	r17,4(sp)
   30910:	dfc00215 	stw	ra,8(sp)
   30914:	dc000015 	stw	r16,0(sp)
   30918:	2023883a 	mov	r17,r4
   3091c:	20001426 	beq	r4,zero,30970 <__floatsidf+0x68>
   30920:	2020d7fa 	srli	r16,r4,31
   30924:	80000126 	beq	r16,zero,3092c <__floatsidf+0x24>
   30928:	0123c83a 	sub	r17,zero,r4
   3092c:	8809883a 	mov	r4,r17
   30930:	0030a7c0 	call	30a7c <__clzsi2>
   30934:	01410784 	movi	r5,1054
   30938:	00c00284 	movi	r3,10
   3093c:	288bc83a 	sub	r5,r5,r2
   30940:	18801c16 	blt	r3,r2,309b4 <__floatsidf+0xac>
   30944:	00c002c4 	movi	r3,11
   30948:	1887c83a 	sub	r3,r3,r2
   3094c:	88c8d83a 	srl	r4,r17,r3
   30950:	00c00434 	movhi	r3,16
   30954:	18ffffc4 	addi	r3,r3,-1
   30958:	10800544 	addi	r2,r2,21
   3095c:	20c8703a 	and	r4,r4,r3
   30960:	8884983a 	sll	r2,r17,r2
   30964:	28c1ffcc 	andi	r3,r5,2047
   30968:	800d883a 	mov	r6,r16
   3096c:	00000406 	br	30980 <__floatsidf+0x78>
   30970:	000d883a 	mov	r6,zero
   30974:	0007883a 	mov	r3,zero
   30978:	0009883a 	mov	r4,zero
   3097c:	0005883a 	mov	r2,zero
   30980:	180a953a 	slli	r5,r3,20
   30984:	31803fcc 	andi	r6,r6,255
   30988:	00c00434 	movhi	r3,16
   3098c:	300c97fa 	slli	r6,r6,31
   30990:	18ffffc4 	addi	r3,r3,-1
   30994:	20c6703a 	and	r3,r4,r3
   30998:	1946b03a 	or	r3,r3,r5
   3099c:	1986b03a 	or	r3,r3,r6
   309a0:	dfc00217 	ldw	ra,8(sp)
   309a4:	dc400117 	ldw	r17,4(sp)
   309a8:	dc000017 	ldw	r16,0(sp)
   309ac:	dec00304 	addi	sp,sp,12
   309b0:	f800283a 	ret
   309b4:	10fffd44 	addi	r3,r2,-11
   309b8:	88c8983a 	sll	r4,r17,r3
   309bc:	00800434 	movhi	r2,16
   309c0:	10bfffc4 	addi	r2,r2,-1
   309c4:	2088703a 	and	r4,r4,r2
   309c8:	28c1ffcc 	andi	r3,r5,2047
   309cc:	800d883a 	mov	r6,r16
   309d0:	0005883a 	mov	r2,zero
   309d4:	003fea06 	br	30980 <_gp+0xffff3580>

000309d8 <__floatunsidf>:
   309d8:	defffe04 	addi	sp,sp,-8
   309dc:	dc000015 	stw	r16,0(sp)
   309e0:	dfc00115 	stw	ra,4(sp)
   309e4:	2021883a 	mov	r16,r4
   309e8:	20001026 	beq	r4,zero,30a2c <__floatunsidf+0x54>
   309ec:	0030a7c0 	call	30a7c <__clzsi2>
   309f0:	01410784 	movi	r5,1054
   309f4:	100d883a 	mov	r6,r2
   309f8:	288bc83a 	sub	r5,r5,r2
   309fc:	00800284 	movi	r2,10
   30a00:	11801616 	blt	r2,r6,30a5c <__floatunsidf+0x84>
   30a04:	008002c4 	movi	r2,11
   30a08:	1185c83a 	sub	r2,r2,r6
   30a0c:	8084d83a 	srl	r2,r16,r2
   30a10:	00c00434 	movhi	r3,16
   30a14:	31c00544 	addi	r7,r6,21
   30a18:	18ffffc4 	addi	r3,r3,-1
   30a1c:	81e0983a 	sll	r16,r16,r7
   30a20:	10cc703a 	and	r6,r2,r3
   30a24:	2941ffcc 	andi	r5,r5,2047
   30a28:	00000206 	br	30a34 <__floatunsidf+0x5c>
   30a2c:	000b883a 	mov	r5,zero
   30a30:	000d883a 	mov	r6,zero
   30a34:	280a953a 	slli	r5,r5,20
   30a38:	00c00434 	movhi	r3,16
   30a3c:	18ffffc4 	addi	r3,r3,-1
   30a40:	30c6703a 	and	r3,r6,r3
   30a44:	8005883a 	mov	r2,r16
   30a48:	1946b03a 	or	r3,r3,r5
   30a4c:	dfc00117 	ldw	ra,4(sp)
   30a50:	dc000017 	ldw	r16,0(sp)
   30a54:	dec00204 	addi	sp,sp,8
   30a58:	f800283a 	ret
   30a5c:	31bffd44 	addi	r6,r6,-11
   30a60:	818c983a 	sll	r6,r16,r6
   30a64:	00800434 	movhi	r2,16
   30a68:	10bfffc4 	addi	r2,r2,-1
   30a6c:	2941ffcc 	andi	r5,r5,2047
   30a70:	0021883a 	mov	r16,zero
   30a74:	308c703a 	and	r6,r6,r2
   30a78:	003fee06 	br	30a34 <_gp+0xffff3634>

00030a7c <__clzsi2>:
   30a7c:	00bfffd4 	movui	r2,65535
   30a80:	11000b36 	bltu	r2,r4,30ab0 <__clzsi2+0x34>
   30a84:	00803fc4 	movi	r2,255
   30a88:	1100122e 	bgeu	r2,r4,30ad4 <__clzsi2+0x58>
   30a8c:	00c00204 	movi	r3,8
   30a90:	01400604 	movi	r5,24
   30a94:	20c8d83a 	srl	r4,r4,r3
   30a98:	008000f4 	movhi	r2,3
   30a9c:	108e0a04 	addi	r2,r2,14376
   30aa0:	1109883a 	add	r4,r2,r4
   30aa4:	20800003 	ldbu	r2,0(r4)
   30aa8:	2885c83a 	sub	r2,r5,r2
   30aac:	f800283a 	ret
   30ab0:	00804034 	movhi	r2,256
   30ab4:	10bfffc4 	addi	r2,r2,-1
   30ab8:	11000336 	bltu	r2,r4,30ac8 <__clzsi2+0x4c>
   30abc:	00c00404 	movi	r3,16
   30ac0:	180b883a 	mov	r5,r3
   30ac4:	003ff306 	br	30a94 <_gp+0xffff3694>
   30ac8:	00c00604 	movi	r3,24
   30acc:	01400204 	movi	r5,8
   30ad0:	003ff006 	br	30a94 <_gp+0xffff3694>
   30ad4:	0007883a 	mov	r3,zero
   30ad8:	01400804 	movi	r5,32
   30adc:	003fed06 	br	30a94 <_gp+0xffff3694>

00030ae0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30ae0:	defffe04 	addi	sp,sp,-8
   30ae4:	dfc00115 	stw	ra,4(sp)
   30ae8:	df000015 	stw	fp,0(sp)
   30aec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30af0:	008000f4 	movhi	r2,3
   30af4:	10950b04 	addi	r2,r2,21548
   30af8:	10800017 	ldw	r2,0(r2)
   30afc:	10000526 	beq	r2,zero,30b14 <alt_get_errno+0x34>
   30b00:	008000f4 	movhi	r2,3
   30b04:	10950b04 	addi	r2,r2,21548
   30b08:	10800017 	ldw	r2,0(r2)
   30b0c:	103ee83a 	callr	r2
   30b10:	00000206 	br	30b1c <alt_get_errno+0x3c>
   30b14:	008000f4 	movhi	r2,3
   30b18:	109bd104 	addi	r2,r2,28484
}
   30b1c:	e037883a 	mov	sp,fp
   30b20:	dfc00117 	ldw	ra,4(sp)
   30b24:	df000017 	ldw	fp,0(sp)
   30b28:	dec00204 	addi	sp,sp,8
   30b2c:	f800283a 	ret

00030b30 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   30b30:	defffb04 	addi	sp,sp,-20
   30b34:	dfc00415 	stw	ra,16(sp)
   30b38:	df000315 	stw	fp,12(sp)
   30b3c:	df000304 	addi	fp,sp,12
   30b40:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   30b44:	e0bfff17 	ldw	r2,-4(fp)
   30b48:	10000816 	blt	r2,zero,30b6c <close+0x3c>
   30b4c:	e13fff17 	ldw	r4,-4(fp)
   30b50:	01400304 	movi	r5,12
   30b54:	002e2bc0 	call	2e2bc <__mulsi3>
   30b58:	1007883a 	mov	r3,r2
   30b5c:	008000f4 	movhi	r2,3
   30b60:	10908804 	addi	r2,r2,16928
   30b64:	1885883a 	add	r2,r3,r2
   30b68:	00000106 	br	30b70 <close+0x40>
   30b6c:	0005883a 	mov	r2,zero
   30b70:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   30b74:	e0bffd17 	ldw	r2,-12(fp)
   30b78:	10001926 	beq	r2,zero,30be0 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   30b7c:	e0bffd17 	ldw	r2,-12(fp)
   30b80:	10800017 	ldw	r2,0(r2)
   30b84:	10800417 	ldw	r2,16(r2)
   30b88:	10000626 	beq	r2,zero,30ba4 <close+0x74>
   30b8c:	e0bffd17 	ldw	r2,-12(fp)
   30b90:	10800017 	ldw	r2,0(r2)
   30b94:	10800417 	ldw	r2,16(r2)
   30b98:	e13ffd17 	ldw	r4,-12(fp)
   30b9c:	103ee83a 	callr	r2
   30ba0:	00000106 	br	30ba8 <close+0x78>
   30ba4:	0005883a 	mov	r2,zero
   30ba8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   30bac:	e13fff17 	ldw	r4,-4(fp)
   30bb0:	00312540 	call	31254 <alt_release_fd>
    if (rval < 0)
   30bb4:	e0bffe17 	ldw	r2,-8(fp)
   30bb8:	1000070e 	bge	r2,zero,30bd8 <close+0xa8>
    {
      ALT_ERRNO = -rval;
   30bbc:	0030ae00 	call	30ae0 <alt_get_errno>
   30bc0:	1007883a 	mov	r3,r2
   30bc4:	e0bffe17 	ldw	r2,-8(fp)
   30bc8:	0085c83a 	sub	r2,zero,r2
   30bcc:	18800015 	stw	r2,0(r3)
      return -1;
   30bd0:	00bfffc4 	movi	r2,-1
   30bd4:	00000706 	br	30bf4 <close+0xc4>
    }
    return 0;
   30bd8:	0005883a 	mov	r2,zero
   30bdc:	00000506 	br	30bf4 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   30be0:	0030ae00 	call	30ae0 <alt_get_errno>
   30be4:	1007883a 	mov	r3,r2
   30be8:	00801444 	movi	r2,81
   30bec:	18800015 	stw	r2,0(r3)
    return -1;
   30bf0:	00bfffc4 	movi	r2,-1
  }
}
   30bf4:	e037883a 	mov	sp,fp
   30bf8:	dfc00117 	ldw	ra,4(sp)
   30bfc:	df000017 	ldw	fp,0(sp)
   30c00:	dec00204 	addi	sp,sp,8
   30c04:	f800283a 	ret

00030c08 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   30c08:	defffc04 	addi	sp,sp,-16
   30c0c:	df000315 	stw	fp,12(sp)
   30c10:	df000304 	addi	fp,sp,12
   30c14:	e13ffd15 	stw	r4,-12(fp)
   30c18:	e17ffe15 	stw	r5,-8(fp)
   30c1c:	e1bfff15 	stw	r6,-4(fp)
  return len;
   30c20:	e0bfff17 	ldw	r2,-4(fp)
}
   30c24:	e037883a 	mov	sp,fp
   30c28:	df000017 	ldw	fp,0(sp)
   30c2c:	dec00104 	addi	sp,sp,4
   30c30:	f800283a 	ret

00030c34 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30c34:	defffe04 	addi	sp,sp,-8
   30c38:	dfc00115 	stw	ra,4(sp)
   30c3c:	df000015 	stw	fp,0(sp)
   30c40:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30c44:	008000f4 	movhi	r2,3
   30c48:	10950b04 	addi	r2,r2,21548
   30c4c:	10800017 	ldw	r2,0(r2)
   30c50:	10000526 	beq	r2,zero,30c68 <alt_get_errno+0x34>
   30c54:	008000f4 	movhi	r2,3
   30c58:	10950b04 	addi	r2,r2,21548
   30c5c:	10800017 	ldw	r2,0(r2)
   30c60:	103ee83a 	callr	r2
   30c64:	00000206 	br	30c70 <alt_get_errno+0x3c>
   30c68:	008000f4 	movhi	r2,3
   30c6c:	109bd104 	addi	r2,r2,28484
}
   30c70:	e037883a 	mov	sp,fp
   30c74:	dfc00117 	ldw	ra,4(sp)
   30c78:	df000017 	ldw	fp,0(sp)
   30c7c:	dec00204 	addi	sp,sp,8
   30c80:	f800283a 	ret

00030c84 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   30c84:	defffb04 	addi	sp,sp,-20
   30c88:	dfc00415 	stw	ra,16(sp)
   30c8c:	df000315 	stw	fp,12(sp)
   30c90:	df000304 	addi	fp,sp,12
   30c94:	e13ffe15 	stw	r4,-8(fp)
   30c98:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   30c9c:	e0bffe17 	ldw	r2,-8(fp)
   30ca0:	10000816 	blt	r2,zero,30cc4 <fstat+0x40>
   30ca4:	e13ffe17 	ldw	r4,-8(fp)
   30ca8:	01400304 	movi	r5,12
   30cac:	002e2bc0 	call	2e2bc <__mulsi3>
   30cb0:	1007883a 	mov	r3,r2
   30cb4:	008000f4 	movhi	r2,3
   30cb8:	10908804 	addi	r2,r2,16928
   30cbc:	1885883a 	add	r2,r3,r2
   30cc0:	00000106 	br	30cc8 <fstat+0x44>
   30cc4:	0005883a 	mov	r2,zero
   30cc8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   30ccc:	e0bffd17 	ldw	r2,-12(fp)
   30cd0:	10001026 	beq	r2,zero,30d14 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   30cd4:	e0bffd17 	ldw	r2,-12(fp)
   30cd8:	10800017 	ldw	r2,0(r2)
   30cdc:	10800817 	ldw	r2,32(r2)
   30ce0:	10000726 	beq	r2,zero,30d00 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   30ce4:	e0bffd17 	ldw	r2,-12(fp)
   30ce8:	10800017 	ldw	r2,0(r2)
   30cec:	10800817 	ldw	r2,32(r2)
   30cf0:	e13ffd17 	ldw	r4,-12(fp)
   30cf4:	e17fff17 	ldw	r5,-4(fp)
   30cf8:	103ee83a 	callr	r2
   30cfc:	00000a06 	br	30d28 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   30d00:	e0bfff17 	ldw	r2,-4(fp)
   30d04:	00c80004 	movi	r3,8192
   30d08:	10c00115 	stw	r3,4(r2)
      return 0;
   30d0c:	0005883a 	mov	r2,zero
   30d10:	00000506 	br	30d28 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   30d14:	0030c340 	call	30c34 <alt_get_errno>
   30d18:	1007883a 	mov	r3,r2
   30d1c:	00801444 	movi	r2,81
   30d20:	18800015 	stw	r2,0(r3)
    return -1;
   30d24:	00bfffc4 	movi	r2,-1
  }
}
   30d28:	e037883a 	mov	sp,fp
   30d2c:	dfc00117 	ldw	ra,4(sp)
   30d30:	df000017 	ldw	fp,0(sp)
   30d34:	dec00204 	addi	sp,sp,8
   30d38:	f800283a 	ret

00030d3c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30d3c:	defffe04 	addi	sp,sp,-8
   30d40:	dfc00115 	stw	ra,4(sp)
   30d44:	df000015 	stw	fp,0(sp)
   30d48:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30d4c:	008000f4 	movhi	r2,3
   30d50:	10950b04 	addi	r2,r2,21548
   30d54:	10800017 	ldw	r2,0(r2)
   30d58:	10000526 	beq	r2,zero,30d70 <alt_get_errno+0x34>
   30d5c:	008000f4 	movhi	r2,3
   30d60:	10950b04 	addi	r2,r2,21548
   30d64:	10800017 	ldw	r2,0(r2)
   30d68:	103ee83a 	callr	r2
   30d6c:	00000206 	br	30d78 <alt_get_errno+0x3c>
   30d70:	008000f4 	movhi	r2,3
   30d74:	109bd104 	addi	r2,r2,28484
}
   30d78:	e037883a 	mov	sp,fp
   30d7c:	dfc00117 	ldw	ra,4(sp)
   30d80:	df000017 	ldw	fp,0(sp)
   30d84:	dec00204 	addi	sp,sp,8
   30d88:	f800283a 	ret

00030d8c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   30d8c:	deffed04 	addi	sp,sp,-76
   30d90:	dfc01215 	stw	ra,72(sp)
   30d94:	df001115 	stw	fp,68(sp)
   30d98:	df001104 	addi	fp,sp,68
   30d9c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   30da0:	e0bfff17 	ldw	r2,-4(fp)
   30da4:	10000816 	blt	r2,zero,30dc8 <isatty+0x3c>
   30da8:	e13fff17 	ldw	r4,-4(fp)
   30dac:	01400304 	movi	r5,12
   30db0:	002e2bc0 	call	2e2bc <__mulsi3>
   30db4:	1007883a 	mov	r3,r2
   30db8:	008000f4 	movhi	r2,3
   30dbc:	10908804 	addi	r2,r2,16928
   30dc0:	1885883a 	add	r2,r3,r2
   30dc4:	00000106 	br	30dcc <isatty+0x40>
   30dc8:	0005883a 	mov	r2,zero
   30dcc:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   30dd0:	e0bfef17 	ldw	r2,-68(fp)
   30dd4:	10000e26 	beq	r2,zero,30e10 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   30dd8:	e0bfef17 	ldw	r2,-68(fp)
   30ddc:	10800017 	ldw	r2,0(r2)
   30de0:	10800817 	ldw	r2,32(r2)
   30de4:	1000021e 	bne	r2,zero,30df0 <isatty+0x64>
    {
      return 1;
   30de8:	00800044 	movi	r2,1
   30dec:	00000d06 	br	30e24 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   30df0:	e0bff004 	addi	r2,fp,-64
   30df4:	e13fff17 	ldw	r4,-4(fp)
   30df8:	100b883a 	mov	r5,r2
   30dfc:	0030c840 	call	30c84 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   30e00:	e0bff117 	ldw	r2,-60(fp)
   30e04:	10880020 	cmpeqi	r2,r2,8192
   30e08:	10803fcc 	andi	r2,r2,255
   30e0c:	00000506 	br	30e24 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   30e10:	0030d3c0 	call	30d3c <alt_get_errno>
   30e14:	1007883a 	mov	r3,r2
   30e18:	00801444 	movi	r2,81
   30e1c:	18800015 	stw	r2,0(r3)
    return 0;
   30e20:	0005883a 	mov	r2,zero
  }
}
   30e24:	e037883a 	mov	sp,fp
   30e28:	dfc00117 	ldw	ra,4(sp)
   30e2c:	df000017 	ldw	fp,0(sp)
   30e30:	dec00204 	addi	sp,sp,8
   30e34:	f800283a 	ret

00030e38 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   30e38:	defffc04 	addi	sp,sp,-16
   30e3c:	df000315 	stw	fp,12(sp)
   30e40:	df000304 	addi	fp,sp,12
   30e44:	e13ffd15 	stw	r4,-12(fp)
   30e48:	e17ffe15 	stw	r5,-8(fp)
   30e4c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   30e50:	e0fffe17 	ldw	r3,-8(fp)
   30e54:	e0bffd17 	ldw	r2,-12(fp)
   30e58:	18800c26 	beq	r3,r2,30e8c <alt_load_section+0x54>
  {
    while( to != end )
   30e5c:	00000806 	br	30e80 <alt_load_section+0x48>
    {
      *to++ = *from++;
   30e60:	e0bffe17 	ldw	r2,-8(fp)
   30e64:	10c00104 	addi	r3,r2,4
   30e68:	e0fffe15 	stw	r3,-8(fp)
   30e6c:	e0fffd17 	ldw	r3,-12(fp)
   30e70:	19000104 	addi	r4,r3,4
   30e74:	e13ffd15 	stw	r4,-12(fp)
   30e78:	18c00017 	ldw	r3,0(r3)
   30e7c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   30e80:	e0fffe17 	ldw	r3,-8(fp)
   30e84:	e0bfff17 	ldw	r2,-4(fp)
   30e88:	18bff51e 	bne	r3,r2,30e60 <_gp+0xffff3a60>
    {
      *to++ = *from++;
    }
  }
}
   30e8c:	e037883a 	mov	sp,fp
   30e90:	df000017 	ldw	fp,0(sp)
   30e94:	dec00104 	addi	sp,sp,4
   30e98:	f800283a 	ret

00030e9c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   30e9c:	defffe04 	addi	sp,sp,-8
   30ea0:	dfc00115 	stw	ra,4(sp)
   30ea4:	df000015 	stw	fp,0(sp)
   30ea8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   30eac:	010000f4 	movhi	r4,3
   30eb0:	21151004 	addi	r4,r4,21568
   30eb4:	014000f4 	movhi	r5,3
   30eb8:	294e5504 	addi	r5,r5,14676
   30ebc:	018000f4 	movhi	r6,3
   30ec0:	31951004 	addi	r6,r6,21568
   30ec4:	0030e380 	call	30e38 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   30ec8:	010000b4 	movhi	r4,2
   30ecc:	21000804 	addi	r4,r4,32
   30ed0:	014000b4 	movhi	r5,2
   30ed4:	29400804 	addi	r5,r5,32
   30ed8:	018000b4 	movhi	r6,2
   30edc:	31808b04 	addi	r6,r6,556
   30ee0:	0030e380 	call	30e38 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   30ee4:	010000f4 	movhi	r4,3
   30ee8:	210d3504 	addi	r4,r4,13524
   30eec:	014000f4 	movhi	r5,3
   30ef0:	294d3504 	addi	r5,r5,13524
   30ef4:	018000f4 	movhi	r6,3
   30ef8:	318e5504 	addi	r6,r6,14676
   30efc:	0030e380 	call	30e38 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   30f00:	003254c0 	call	3254c <alt_dcache_flush_all>
  alt_icache_flush_all();
   30f04:	00327140 	call	32714 <alt_icache_flush_all>
}
   30f08:	e037883a 	mov	sp,fp
   30f0c:	dfc00117 	ldw	ra,4(sp)
   30f10:	df000017 	ldw	fp,0(sp)
   30f14:	dec00204 	addi	sp,sp,8
   30f18:	f800283a 	ret

00030f1c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   30f1c:	defffe04 	addi	sp,sp,-8
   30f20:	dfc00115 	stw	ra,4(sp)
   30f24:	df000015 	stw	fp,0(sp)
   30f28:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   30f2c:	008000f4 	movhi	r2,3
   30f30:	10950b04 	addi	r2,r2,21548
   30f34:	10800017 	ldw	r2,0(r2)
   30f38:	10000526 	beq	r2,zero,30f50 <alt_get_errno+0x34>
   30f3c:	008000f4 	movhi	r2,3
   30f40:	10950b04 	addi	r2,r2,21548
   30f44:	10800017 	ldw	r2,0(r2)
   30f48:	103ee83a 	callr	r2
   30f4c:	00000206 	br	30f58 <alt_get_errno+0x3c>
   30f50:	008000f4 	movhi	r2,3
   30f54:	109bd104 	addi	r2,r2,28484
}
   30f58:	e037883a 	mov	sp,fp
   30f5c:	dfc00117 	ldw	ra,4(sp)
   30f60:	df000017 	ldw	fp,0(sp)
   30f64:	dec00204 	addi	sp,sp,8
   30f68:	f800283a 	ret

00030f6c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   30f6c:	defff904 	addi	sp,sp,-28
   30f70:	dfc00615 	stw	ra,24(sp)
   30f74:	df000515 	stw	fp,20(sp)
   30f78:	df000504 	addi	fp,sp,20
   30f7c:	e13ffd15 	stw	r4,-12(fp)
   30f80:	e17ffe15 	stw	r5,-8(fp)
   30f84:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   30f88:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   30f8c:	e0bffd17 	ldw	r2,-12(fp)
   30f90:	10000816 	blt	r2,zero,30fb4 <lseek+0x48>
   30f94:	e13ffd17 	ldw	r4,-12(fp)
   30f98:	01400304 	movi	r5,12
   30f9c:	002e2bc0 	call	2e2bc <__mulsi3>
   30fa0:	1007883a 	mov	r3,r2
   30fa4:	008000f4 	movhi	r2,3
   30fa8:	10908804 	addi	r2,r2,16928
   30fac:	1885883a 	add	r2,r3,r2
   30fb0:	00000106 	br	30fb8 <lseek+0x4c>
   30fb4:	0005883a 	mov	r2,zero
   30fb8:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   30fbc:	e0bffc17 	ldw	r2,-16(fp)
   30fc0:	10001026 	beq	r2,zero,31004 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   30fc4:	e0bffc17 	ldw	r2,-16(fp)
   30fc8:	10800017 	ldw	r2,0(r2)
   30fcc:	10800717 	ldw	r2,28(r2)
   30fd0:	10000926 	beq	r2,zero,30ff8 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   30fd4:	e0bffc17 	ldw	r2,-16(fp)
   30fd8:	10800017 	ldw	r2,0(r2)
   30fdc:	10800717 	ldw	r2,28(r2)
   30fe0:	e13ffc17 	ldw	r4,-16(fp)
   30fe4:	e17ffe17 	ldw	r5,-8(fp)
   30fe8:	e1bfff17 	ldw	r6,-4(fp)
   30fec:	103ee83a 	callr	r2
   30ff0:	e0bffb15 	stw	r2,-20(fp)
   30ff4:	00000506 	br	3100c <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   30ff8:	00bfde84 	movi	r2,-134
   30ffc:	e0bffb15 	stw	r2,-20(fp)
   31000:	00000206 	br	3100c <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   31004:	00bfebc4 	movi	r2,-81
   31008:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   3100c:	e0bffb17 	ldw	r2,-20(fp)
   31010:	1000070e 	bge	r2,zero,31030 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   31014:	0030f1c0 	call	30f1c <alt_get_errno>
   31018:	1007883a 	mov	r3,r2
   3101c:	e0bffb17 	ldw	r2,-20(fp)
   31020:	0085c83a 	sub	r2,zero,r2
   31024:	18800015 	stw	r2,0(r3)
    rc = -1;
   31028:	00bfffc4 	movi	r2,-1
   3102c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   31030:	e0bffb17 	ldw	r2,-20(fp)
}
   31034:	e037883a 	mov	sp,fp
   31038:	dfc00117 	ldw	ra,4(sp)
   3103c:	df000017 	ldw	fp,0(sp)
   31040:	dec00204 	addi	sp,sp,8
   31044:	f800283a 	ret

00031048 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   31048:	defffd04 	addi	sp,sp,-12
   3104c:	dfc00215 	stw	ra,8(sp)
   31050:	df000115 	stw	fp,4(sp)
   31054:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   31058:	0009883a 	mov	r4,zero
   3105c:	00316d80 	call	316d8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   31060:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   31064:	003170c0 	call	3170c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   31068:	010000f4 	movhi	r4,3
   3106c:	210e4d04 	addi	r4,r4,14644
   31070:	014000f4 	movhi	r5,3
   31074:	294e4d04 	addi	r5,r5,14644
   31078:	018000f4 	movhi	r6,3
   3107c:	318e4d04 	addi	r6,r6,14644
   31080:	0032ae00 	call	32ae0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   31084:	003265c0 	call	3265c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   31088:	010000f4 	movhi	r4,3
   3108c:	2109ae04 	addi	r4,r4,9912
   31090:	00331300 	call	33130 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   31094:	d126d217 	ldw	r4,-25784(gp)
   31098:	d0e6d317 	ldw	r3,-25780(gp)
   3109c:	d0a6d417 	ldw	r2,-25776(gp)
   310a0:	180b883a 	mov	r5,r3
   310a4:	100d883a 	mov	r6,r2
   310a8:	00202680 	call	20268 <main>
   310ac:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   310b0:	01000044 	movi	r4,1
   310b4:	0030b300 	call	30b30 <close>
  exit (result);
   310b8:	e13fff17 	ldw	r4,-4(fp)
   310bc:	00331440 	call	33144 <exit>

000310c0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   310c0:	defffe04 	addi	sp,sp,-8
   310c4:	df000115 	stw	fp,4(sp)
   310c8:	df000104 	addi	fp,sp,4
   310cc:	e13fff15 	stw	r4,-4(fp)
}
   310d0:	e037883a 	mov	sp,fp
   310d4:	df000017 	ldw	fp,0(sp)
   310d8:	dec00104 	addi	sp,sp,4
   310dc:	f800283a 	ret

000310e0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   310e0:	defffe04 	addi	sp,sp,-8
   310e4:	df000115 	stw	fp,4(sp)
   310e8:	df000104 	addi	fp,sp,4
   310ec:	e13fff15 	stw	r4,-4(fp)
}
   310f0:	e037883a 	mov	sp,fp
   310f4:	df000017 	ldw	fp,0(sp)
   310f8:	dec00104 	addi	sp,sp,4
   310fc:	f800283a 	ret

00031100 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31100:	defffe04 	addi	sp,sp,-8
   31104:	dfc00115 	stw	ra,4(sp)
   31108:	df000015 	stw	fp,0(sp)
   3110c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31110:	008000f4 	movhi	r2,3
   31114:	10950b04 	addi	r2,r2,21548
   31118:	10800017 	ldw	r2,0(r2)
   3111c:	10000526 	beq	r2,zero,31134 <alt_get_errno+0x34>
   31120:	008000f4 	movhi	r2,3
   31124:	10950b04 	addi	r2,r2,21548
   31128:	10800017 	ldw	r2,0(r2)
   3112c:	103ee83a 	callr	r2
   31130:	00000206 	br	3113c <alt_get_errno+0x3c>
   31134:	008000f4 	movhi	r2,3
   31138:	109bd104 	addi	r2,r2,28484
}
   3113c:	e037883a 	mov	sp,fp
   31140:	dfc00117 	ldw	ra,4(sp)
   31144:	df000017 	ldw	fp,0(sp)
   31148:	dec00204 	addi	sp,sp,8
   3114c:	f800283a 	ret

00031150 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   31150:	defff904 	addi	sp,sp,-28
   31154:	dfc00615 	stw	ra,24(sp)
   31158:	df000515 	stw	fp,20(sp)
   3115c:	df000504 	addi	fp,sp,20
   31160:	e13ffd15 	stw	r4,-12(fp)
   31164:	e17ffe15 	stw	r5,-8(fp)
   31168:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   3116c:	e0bffd17 	ldw	r2,-12(fp)
   31170:	10000816 	blt	r2,zero,31194 <read+0x44>
   31174:	e13ffd17 	ldw	r4,-12(fp)
   31178:	01400304 	movi	r5,12
   3117c:	002e2bc0 	call	2e2bc <__mulsi3>
   31180:	1007883a 	mov	r3,r2
   31184:	008000f4 	movhi	r2,3
   31188:	10908804 	addi	r2,r2,16928
   3118c:	1885883a 	add	r2,r3,r2
   31190:	00000106 	br	31198 <read+0x48>
   31194:	0005883a 	mov	r2,zero
   31198:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   3119c:	e0bffb17 	ldw	r2,-20(fp)
   311a0:	10002226 	beq	r2,zero,3122c <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   311a4:	e0bffb17 	ldw	r2,-20(fp)
   311a8:	10800217 	ldw	r2,8(r2)
   311ac:	108000cc 	andi	r2,r2,3
   311b0:	10800060 	cmpeqi	r2,r2,1
   311b4:	1000181e 	bne	r2,zero,31218 <read+0xc8>
        (fd->dev->read))
   311b8:	e0bffb17 	ldw	r2,-20(fp)
   311bc:	10800017 	ldw	r2,0(r2)
   311c0:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   311c4:	10001426 	beq	r2,zero,31218 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   311c8:	e0bffb17 	ldw	r2,-20(fp)
   311cc:	10800017 	ldw	r2,0(r2)
   311d0:	10800517 	ldw	r2,20(r2)
   311d4:	e0ffff17 	ldw	r3,-4(fp)
   311d8:	e13ffb17 	ldw	r4,-20(fp)
   311dc:	e17ffe17 	ldw	r5,-8(fp)
   311e0:	180d883a 	mov	r6,r3
   311e4:	103ee83a 	callr	r2
   311e8:	e0bffc15 	stw	r2,-16(fp)
   311ec:	e0bffc17 	ldw	r2,-16(fp)
   311f0:	1000070e 	bge	r2,zero,31210 <read+0xc0>
        {
          ALT_ERRNO = -rval;
   311f4:	00311000 	call	31100 <alt_get_errno>
   311f8:	1007883a 	mov	r3,r2
   311fc:	e0bffc17 	ldw	r2,-16(fp)
   31200:	0085c83a 	sub	r2,zero,r2
   31204:	18800015 	stw	r2,0(r3)
          return -1;
   31208:	00bfffc4 	movi	r2,-1
   3120c:	00000c06 	br	31240 <read+0xf0>
        }
        return rval;
   31210:	e0bffc17 	ldw	r2,-16(fp)
   31214:	00000a06 	br	31240 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   31218:	00311000 	call	31100 <alt_get_errno>
   3121c:	1007883a 	mov	r3,r2
   31220:	00800344 	movi	r2,13
   31224:	18800015 	stw	r2,0(r3)
   31228:	00000406 	br	3123c <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   3122c:	00311000 	call	31100 <alt_get_errno>
   31230:	1007883a 	mov	r3,r2
   31234:	00801444 	movi	r2,81
   31238:	18800015 	stw	r2,0(r3)
  }
  return -1;
   3123c:	00bfffc4 	movi	r2,-1
}
   31240:	e037883a 	mov	sp,fp
   31244:	dfc00117 	ldw	ra,4(sp)
   31248:	df000017 	ldw	fp,0(sp)
   3124c:	dec00204 	addi	sp,sp,8
   31250:	f800283a 	ret

00031254 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   31254:	defffc04 	addi	sp,sp,-16
   31258:	dfc00315 	stw	ra,12(sp)
   3125c:	df000215 	stw	fp,8(sp)
   31260:	dc000115 	stw	r16,4(sp)
   31264:	df000204 	addi	fp,sp,8
   31268:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   3126c:	e0bffe17 	ldw	r2,-8(fp)
   31270:	108000d0 	cmplti	r2,r2,3
   31274:	1000111e 	bne	r2,zero,312bc <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   31278:	040000f4 	movhi	r16,3
   3127c:	84108804 	addi	r16,r16,16928
   31280:	e0bffe17 	ldw	r2,-8(fp)
   31284:	1009883a 	mov	r4,r2
   31288:	01400304 	movi	r5,12
   3128c:	002e2bc0 	call	2e2bc <__mulsi3>
   31290:	8085883a 	add	r2,r16,r2
   31294:	10800204 	addi	r2,r2,8
   31298:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   3129c:	040000f4 	movhi	r16,3
   312a0:	84108804 	addi	r16,r16,16928
   312a4:	e0bffe17 	ldw	r2,-8(fp)
   312a8:	1009883a 	mov	r4,r2
   312ac:	01400304 	movi	r5,12
   312b0:	002e2bc0 	call	2e2bc <__mulsi3>
   312b4:	8085883a 	add	r2,r16,r2
   312b8:	10000015 	stw	zero,0(r2)
  }
}
   312bc:	e6ffff04 	addi	sp,fp,-4
   312c0:	dfc00217 	ldw	ra,8(sp)
   312c4:	df000117 	ldw	fp,4(sp)
   312c8:	dc000017 	ldw	r16,0(sp)
   312cc:	dec00304 	addi	sp,sp,12
   312d0:	f800283a 	ret

000312d4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   312d4:	defff904 	addi	sp,sp,-28
   312d8:	df000615 	stw	fp,24(sp)
   312dc:	df000604 	addi	fp,sp,24
   312e0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   312e4:	0005303a 	rdctl	r2,status
   312e8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   312ec:	e0fffc17 	ldw	r3,-16(fp)
   312f0:	00bfff84 	movi	r2,-2
   312f4:	1884703a 	and	r2,r3,r2
   312f8:	1001703a 	wrctl	status,r2
  
  return context;
   312fc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   31300:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   31304:	d0a00c17 	ldw	r2,-32720(gp)
   31308:	10c000c4 	addi	r3,r2,3
   3130c:	00bfff04 	movi	r2,-4
   31310:	1884703a 	and	r2,r3,r2
   31314:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   31318:	d0e00c17 	ldw	r3,-32720(gp)
   3131c:	e0bfff17 	ldw	r2,-4(fp)
   31320:	1887883a 	add	r3,r3,r2
   31324:	00800134 	movhi	r2,4
   31328:	10a1a804 	addi	r2,r2,-31072
   3132c:	10c0062e 	bgeu	r2,r3,31348 <sbrk+0x74>
   31330:	e0bffa17 	ldw	r2,-24(fp)
   31334:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   31338:	e0bffd17 	ldw	r2,-12(fp)
   3133c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   31340:	00bfffc4 	movi	r2,-1
   31344:	00000b06 	br	31374 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   31348:	d0a00c17 	ldw	r2,-32720(gp)
   3134c:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
   31350:	d0e00c17 	ldw	r3,-32720(gp)
   31354:	e0bfff17 	ldw	r2,-4(fp)
   31358:	1885883a 	add	r2,r3,r2
   3135c:	d0a00c15 	stw	r2,-32720(gp)
   31360:	e0bffa17 	ldw	r2,-24(fp)
   31364:	e0bffe15 	stw	r2,-8(fp)
   31368:	e0bffe17 	ldw	r2,-8(fp)
   3136c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   31370:	e0bffb17 	ldw	r2,-20(fp)
} 
   31374:	e037883a 	mov	sp,fp
   31378:	df000017 	ldw	fp,0(sp)
   3137c:	dec00104 	addi	sp,sp,4
   31380:	f800283a 	ret

00031384 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   31384:	defffa04 	addi	sp,sp,-24
   31388:	df000515 	stw	fp,20(sp)
   3138c:	df000504 	addi	fp,sp,20
   31390:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   31394:	0005303a 	rdctl	r2,status
   31398:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   3139c:	e0fffc17 	ldw	r3,-16(fp)
   313a0:	00bfff84 	movi	r2,-2
   313a4:	1884703a 	and	r2,r3,r2
   313a8:	1001703a 	wrctl	status,r2
  
  return context;
   313ac:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   313b0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   313b4:	e0bfff17 	ldw	r2,-4(fp)
   313b8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   313bc:	e0bffd17 	ldw	r2,-12(fp)
   313c0:	10800017 	ldw	r2,0(r2)
   313c4:	e0fffd17 	ldw	r3,-12(fp)
   313c8:	18c00117 	ldw	r3,4(r3)
   313cc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   313d0:	e0bffd17 	ldw	r2,-12(fp)
   313d4:	10800117 	ldw	r2,4(r2)
   313d8:	e0fffd17 	ldw	r3,-12(fp)
   313dc:	18c00017 	ldw	r3,0(r3)
   313e0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   313e4:	e0bffd17 	ldw	r2,-12(fp)
   313e8:	e0fffd17 	ldw	r3,-12(fp)
   313ec:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   313f0:	e0bffd17 	ldw	r2,-12(fp)
   313f4:	e0fffd17 	ldw	r3,-12(fp)
   313f8:	10c00015 	stw	r3,0(r2)
   313fc:	e0bffb17 	ldw	r2,-20(fp)
   31400:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   31404:	e0bffe17 	ldw	r2,-8(fp)
   31408:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   3140c:	e037883a 	mov	sp,fp
   31410:	df000017 	ldw	fp,0(sp)
   31414:	dec00104 	addi	sp,sp,4
   31418:	f800283a 	ret

0003141c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   3141c:	defffb04 	addi	sp,sp,-20
   31420:	dfc00415 	stw	ra,16(sp)
   31424:	df000315 	stw	fp,12(sp)
   31428:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   3142c:	d0a00d17 	ldw	r2,-32716(gp)
   31430:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   31434:	d0a6d617 	ldw	r2,-25768(gp)
   31438:	10800044 	addi	r2,r2,1
   3143c:	d0a6d615 	stw	r2,-25768(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   31440:	00002e06 	br	314fc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   31444:	e0bffd17 	ldw	r2,-12(fp)
   31448:	10800017 	ldw	r2,0(r2)
   3144c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   31450:	e0bffd17 	ldw	r2,-12(fp)
   31454:	10800403 	ldbu	r2,16(r2)
   31458:	10803fcc 	andi	r2,r2,255
   3145c:	10000426 	beq	r2,zero,31470 <alt_tick+0x54>
   31460:	d0a6d617 	ldw	r2,-25768(gp)
   31464:	1000021e 	bne	r2,zero,31470 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   31468:	e0bffd17 	ldw	r2,-12(fp)
   3146c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   31470:	e0bffd17 	ldw	r2,-12(fp)
   31474:	10800217 	ldw	r2,8(r2)
   31478:	d0e6d617 	ldw	r3,-25768(gp)
   3147c:	18801d36 	bltu	r3,r2,314f4 <alt_tick+0xd8>
   31480:	e0bffd17 	ldw	r2,-12(fp)
   31484:	10800403 	ldbu	r2,16(r2)
   31488:	10803fcc 	andi	r2,r2,255
   3148c:	1000191e 	bne	r2,zero,314f4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   31490:	e0bffd17 	ldw	r2,-12(fp)
   31494:	10800317 	ldw	r2,12(r2)
   31498:	e0fffd17 	ldw	r3,-12(fp)
   3149c:	18c00517 	ldw	r3,20(r3)
   314a0:	1809883a 	mov	r4,r3
   314a4:	103ee83a 	callr	r2
   314a8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   314ac:	e0bfff17 	ldw	r2,-4(fp)
   314b0:	1000031e 	bne	r2,zero,314c0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   314b4:	e13ffd17 	ldw	r4,-12(fp)
   314b8:	00313840 	call	31384 <alt_alarm_stop>
   314bc:	00000d06 	br	314f4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   314c0:	e0bffd17 	ldw	r2,-12(fp)
   314c4:	10c00217 	ldw	r3,8(r2)
   314c8:	e0bfff17 	ldw	r2,-4(fp)
   314cc:	1887883a 	add	r3,r3,r2
   314d0:	e0bffd17 	ldw	r2,-12(fp)
   314d4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   314d8:	e0bffd17 	ldw	r2,-12(fp)
   314dc:	10c00217 	ldw	r3,8(r2)
   314e0:	d0a6d617 	ldw	r2,-25768(gp)
   314e4:	1880032e 	bgeu	r3,r2,314f4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   314e8:	e0bffd17 	ldw	r2,-12(fp)
   314ec:	00c00044 	movi	r3,1
   314f0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   314f4:	e0bffe17 	ldw	r2,-8(fp)
   314f8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   314fc:	e0fffd17 	ldw	r3,-12(fp)
   31500:	d0a00d04 	addi	r2,gp,-32716
   31504:	18bfcf1e 	bne	r3,r2,31444 <_gp+0xffff4044>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   31508:	0001883a 	nop
}
   3150c:	e037883a 	mov	sp,fp
   31510:	dfc00117 	ldw	ra,4(sp)
   31514:	df000017 	ldw	fp,0(sp)
   31518:	dec00204 	addi	sp,sp,8
   3151c:	f800283a 	ret

00031520 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   31520:	defffd04 	addi	sp,sp,-12
   31524:	dfc00215 	stw	ra,8(sp)
   31528:	df000115 	stw	fp,4(sp)
   3152c:	df000104 	addi	fp,sp,4
   31530:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   31534:	e13fff17 	ldw	r4,-4(fp)
   31538:	00323f40 	call	323f4 <alt_busy_sleep>
}
   3153c:	e037883a 	mov	sp,fp
   31540:	dfc00117 	ldw	ra,4(sp)
   31544:	df000017 	ldw	fp,0(sp)
   31548:	dec00204 	addi	sp,sp,8
   3154c:	f800283a 	ret

00031550 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   31550:	defffe04 	addi	sp,sp,-8
   31554:	dfc00115 	stw	ra,4(sp)
   31558:	df000015 	stw	fp,0(sp)
   3155c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   31560:	008000f4 	movhi	r2,3
   31564:	10950b04 	addi	r2,r2,21548
   31568:	10800017 	ldw	r2,0(r2)
   3156c:	10000526 	beq	r2,zero,31584 <alt_get_errno+0x34>
   31570:	008000f4 	movhi	r2,3
   31574:	10950b04 	addi	r2,r2,21548
   31578:	10800017 	ldw	r2,0(r2)
   3157c:	103ee83a 	callr	r2
   31580:	00000206 	br	3158c <alt_get_errno+0x3c>
   31584:	008000f4 	movhi	r2,3
   31588:	109bd104 	addi	r2,r2,28484
}
   3158c:	e037883a 	mov	sp,fp
   31590:	dfc00117 	ldw	ra,4(sp)
   31594:	df000017 	ldw	fp,0(sp)
   31598:	dec00204 	addi	sp,sp,8
   3159c:	f800283a 	ret

000315a0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   315a0:	defff904 	addi	sp,sp,-28
   315a4:	dfc00615 	stw	ra,24(sp)
   315a8:	df000515 	stw	fp,20(sp)
   315ac:	df000504 	addi	fp,sp,20
   315b0:	e13ffd15 	stw	r4,-12(fp)
   315b4:	e17ffe15 	stw	r5,-8(fp)
   315b8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   315bc:	e0bffd17 	ldw	r2,-12(fp)
   315c0:	10000816 	blt	r2,zero,315e4 <write+0x44>
   315c4:	e13ffd17 	ldw	r4,-12(fp)
   315c8:	01400304 	movi	r5,12
   315cc:	002e2bc0 	call	2e2bc <__mulsi3>
   315d0:	1007883a 	mov	r3,r2
   315d4:	008000f4 	movhi	r2,3
   315d8:	10908804 	addi	r2,r2,16928
   315dc:	1885883a 	add	r2,r3,r2
   315e0:	00000106 	br	315e8 <write+0x48>
   315e4:	0005883a 	mov	r2,zero
   315e8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   315ec:	e0bffb17 	ldw	r2,-20(fp)
   315f0:	10002126 	beq	r2,zero,31678 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   315f4:	e0bffb17 	ldw	r2,-20(fp)
   315f8:	10800217 	ldw	r2,8(r2)
   315fc:	108000cc 	andi	r2,r2,3
   31600:	10001826 	beq	r2,zero,31664 <write+0xc4>
   31604:	e0bffb17 	ldw	r2,-20(fp)
   31608:	10800017 	ldw	r2,0(r2)
   3160c:	10800617 	ldw	r2,24(r2)
   31610:	10001426 	beq	r2,zero,31664 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   31614:	e0bffb17 	ldw	r2,-20(fp)
   31618:	10800017 	ldw	r2,0(r2)
   3161c:	10800617 	ldw	r2,24(r2)
   31620:	e0ffff17 	ldw	r3,-4(fp)
   31624:	e13ffb17 	ldw	r4,-20(fp)
   31628:	e17ffe17 	ldw	r5,-8(fp)
   3162c:	180d883a 	mov	r6,r3
   31630:	103ee83a 	callr	r2
   31634:	e0bffc15 	stw	r2,-16(fp)
   31638:	e0bffc17 	ldw	r2,-16(fp)
   3163c:	1000070e 	bge	r2,zero,3165c <write+0xbc>
      {
        ALT_ERRNO = -rval;
   31640:	00315500 	call	31550 <alt_get_errno>
   31644:	1007883a 	mov	r3,r2
   31648:	e0bffc17 	ldw	r2,-16(fp)
   3164c:	0085c83a 	sub	r2,zero,r2
   31650:	18800015 	stw	r2,0(r3)
        return -1;
   31654:	00bfffc4 	movi	r2,-1
   31658:	00000c06 	br	3168c <write+0xec>
      }
      return rval;
   3165c:	e0bffc17 	ldw	r2,-16(fp)
   31660:	00000a06 	br	3168c <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   31664:	00315500 	call	31550 <alt_get_errno>
   31668:	1007883a 	mov	r3,r2
   3166c:	00800344 	movi	r2,13
   31670:	18800015 	stw	r2,0(r3)
   31674:	00000406 	br	31688 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   31678:	00315500 	call	31550 <alt_get_errno>
   3167c:	1007883a 	mov	r3,r2
   31680:	00801444 	movi	r2,81
   31684:	18800015 	stw	r2,0(r3)
  }
  return -1;
   31688:	00bfffc4 	movi	r2,-1
}
   3168c:	e037883a 	mov	sp,fp
   31690:	dfc00117 	ldw	ra,4(sp)
   31694:	df000017 	ldw	fp,0(sp)
   31698:	dec00204 	addi	sp,sp,8
   3169c:	f800283a 	ret

000316a0 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   316a0:	defffd04 	addi	sp,sp,-12
   316a4:	dfc00215 	stw	ra,8(sp)
   316a8:	df000115 	stw	fp,4(sp)
   316ac:	df000104 	addi	fp,sp,4
   316b0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   316b4:	e13fff17 	ldw	r4,-4(fp)
   316b8:	014000f4 	movhi	r5,3
   316bc:	29550804 	addi	r5,r5,21536
   316c0:	00325b80 	call	325b8 <alt_dev_llist_insert>
}
   316c4:	e037883a 	mov	sp,fp
   316c8:	dfc00117 	ldw	ra,4(sp)
   316cc:	df000017 	ldw	fp,0(sp)
   316d0:	dec00204 	addi	sp,sp,8
   316d4:	f800283a 	ret

000316d8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   316d8:	defffd04 	addi	sp,sp,-12
   316dc:	dfc00215 	stw	ra,8(sp)
   316e0:	df000115 	stw	fp,4(sp)
   316e4:	df000104 	addi	fp,sp,4
   316e8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2, nios2_gen2);
   316ec:	0032dfc0 	call	32dfc <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   316f0:	00800044 	movi	r2,1
   316f4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   316f8:	e037883a 	mov	sp,fp
   316fc:	dfc00117 	ldw	ra,4(sp)
   31700:	df000017 	ldw	fp,0(sp)
   31704:	dec00204 	addi	sp,sp,8
   31708:	f800283a 	ret

0003170c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   3170c:	defffe04 	addi	sp,sp,-8
   31710:	dfc00115 	stw	ra,4(sp)
   31714:	df000015 	stw	fp,0(sp)
   31718:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   3171c:	01000134 	movhi	r4,4
   31720:	21040004 	addi	r4,r4,4096
   31724:	000b883a 	mov	r5,zero
   31728:	000d883a 	mov	r6,zero
   3172c:	01c0fa04 	movi	r7,1000
   31730:	003222c0 	call	3222c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   31734:	010000f4 	movhi	r4,3
   31738:	2110f204 	addi	r4,r4,17352
   3173c:	000b883a 	mov	r5,zero
   31740:	01800044 	movi	r6,1
   31744:	00318d00 	call	318d0 <altera_avalon_jtag_uart_init>
   31748:	010000f4 	movhi	r4,3
   3174c:	2110e804 	addi	r4,r4,17312
   31750:	00316a00 	call	316a0 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
   31754:	0001883a 	nop
}
   31758:	e037883a 	mov	sp,fp
   3175c:	dfc00117 	ldw	ra,4(sp)
   31760:	df000017 	ldw	fp,0(sp)
   31764:	dec00204 	addi	sp,sp,8
   31768:	f800283a 	ret

0003176c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   3176c:	defffa04 	addi	sp,sp,-24
   31770:	dfc00515 	stw	ra,20(sp)
   31774:	df000415 	stw	fp,16(sp)
   31778:	df000404 	addi	fp,sp,16
   3177c:	e13ffd15 	stw	r4,-12(fp)
   31780:	e17ffe15 	stw	r5,-8(fp)
   31784:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   31788:	e0bffd17 	ldw	r2,-12(fp)
   3178c:	10800017 	ldw	r2,0(r2)
   31790:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   31794:	e0bffc17 	ldw	r2,-16(fp)
   31798:	10c00a04 	addi	r3,r2,40
   3179c:	e0bffd17 	ldw	r2,-12(fp)
   317a0:	10800217 	ldw	r2,8(r2)
   317a4:	1809883a 	mov	r4,r3
   317a8:	e17ffe17 	ldw	r5,-8(fp)
   317ac:	e1bfff17 	ldw	r6,-4(fp)
   317b0:	100f883a 	mov	r7,r2
   317b4:	0031d940 	call	31d94 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   317b8:	e037883a 	mov	sp,fp
   317bc:	dfc00117 	ldw	ra,4(sp)
   317c0:	df000017 	ldw	fp,0(sp)
   317c4:	dec00204 	addi	sp,sp,8
   317c8:	f800283a 	ret

000317cc <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   317cc:	defffa04 	addi	sp,sp,-24
   317d0:	dfc00515 	stw	ra,20(sp)
   317d4:	df000415 	stw	fp,16(sp)
   317d8:	df000404 	addi	fp,sp,16
   317dc:	e13ffd15 	stw	r4,-12(fp)
   317e0:	e17ffe15 	stw	r5,-8(fp)
   317e4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   317e8:	e0bffd17 	ldw	r2,-12(fp)
   317ec:	10800017 	ldw	r2,0(r2)
   317f0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   317f4:	e0bffc17 	ldw	r2,-16(fp)
   317f8:	10c00a04 	addi	r3,r2,40
   317fc:	e0bffd17 	ldw	r2,-12(fp)
   31800:	10800217 	ldw	r2,8(r2)
   31804:	1809883a 	mov	r4,r3
   31808:	e17ffe17 	ldw	r5,-8(fp)
   3180c:	e1bfff17 	ldw	r6,-4(fp)
   31810:	100f883a 	mov	r7,r2
   31814:	0031fa00 	call	31fa0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   31818:	e037883a 	mov	sp,fp
   3181c:	dfc00117 	ldw	ra,4(sp)
   31820:	df000017 	ldw	fp,0(sp)
   31824:	dec00204 	addi	sp,sp,8
   31828:	f800283a 	ret

0003182c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   3182c:	defffc04 	addi	sp,sp,-16
   31830:	dfc00315 	stw	ra,12(sp)
   31834:	df000215 	stw	fp,8(sp)
   31838:	df000204 	addi	fp,sp,8
   3183c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   31840:	e0bfff17 	ldw	r2,-4(fp)
   31844:	10800017 	ldw	r2,0(r2)
   31848:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   3184c:	e0bffe17 	ldw	r2,-8(fp)
   31850:	10c00a04 	addi	r3,r2,40
   31854:	e0bfff17 	ldw	r2,-4(fp)
   31858:	10800217 	ldw	r2,8(r2)
   3185c:	1809883a 	mov	r4,r3
   31860:	100b883a 	mov	r5,r2
   31864:	0031c400 	call	31c40 <altera_avalon_jtag_uart_close>
}
   31868:	e037883a 	mov	sp,fp
   3186c:	dfc00117 	ldw	ra,4(sp)
   31870:	df000017 	ldw	fp,0(sp)
   31874:	dec00204 	addi	sp,sp,8
   31878:	f800283a 	ret

0003187c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   3187c:	defffa04 	addi	sp,sp,-24
   31880:	dfc00515 	stw	ra,20(sp)
   31884:	df000415 	stw	fp,16(sp)
   31888:	df000404 	addi	fp,sp,16
   3188c:	e13ffd15 	stw	r4,-12(fp)
   31890:	e17ffe15 	stw	r5,-8(fp)
   31894:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   31898:	e0bffd17 	ldw	r2,-12(fp)
   3189c:	10800017 	ldw	r2,0(r2)
   318a0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   318a4:	e0bffc17 	ldw	r2,-16(fp)
   318a8:	10800a04 	addi	r2,r2,40
   318ac:	1009883a 	mov	r4,r2
   318b0:	e17ffe17 	ldw	r5,-8(fp)
   318b4:	e1bfff17 	ldw	r6,-4(fp)
   318b8:	0031ca80 	call	31ca8 <altera_avalon_jtag_uart_ioctl>
}
   318bc:	e037883a 	mov	sp,fp
   318c0:	dfc00117 	ldw	ra,4(sp)
   318c4:	df000017 	ldw	fp,0(sp)
   318c8:	dec00204 	addi	sp,sp,8
   318cc:	f800283a 	ret

000318d0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   318d0:	defffa04 	addi	sp,sp,-24
   318d4:	dfc00515 	stw	ra,20(sp)
   318d8:	df000415 	stw	fp,16(sp)
   318dc:	df000404 	addi	fp,sp,16
   318e0:	e13ffd15 	stw	r4,-12(fp)
   318e4:	e17ffe15 	stw	r5,-8(fp)
   318e8:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   318ec:	e0bffd17 	ldw	r2,-12(fp)
   318f0:	00c00044 	movi	r3,1
   318f4:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   318f8:	e0bffd17 	ldw	r2,-12(fp)
   318fc:	10800017 	ldw	r2,0(r2)
   31900:	10800104 	addi	r2,r2,4
   31904:	1007883a 	mov	r3,r2
   31908:	e0bffd17 	ldw	r2,-12(fp)
   3190c:	10800817 	ldw	r2,32(r2)
   31910:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   31914:	e0fffe17 	ldw	r3,-8(fp)
   31918:	e0bfff17 	ldw	r2,-4(fp)
   3191c:	d8000015 	stw	zero,0(sp)
   31920:	1809883a 	mov	r4,r3
   31924:	100b883a 	mov	r5,r2
   31928:	018000f4 	movhi	r6,3
   3192c:	31866504 	addi	r6,r6,6548
   31930:	e1fffd17 	ldw	r7,-12(fp)
   31934:	00327300 	call	32730 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   31938:	e0bffd17 	ldw	r2,-12(fp)
   3193c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   31940:	e0bffd17 	ldw	r2,-12(fp)
   31944:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   31948:	008000f4 	movhi	r2,3
   3194c:	109bd504 	addi	r2,r2,28500
   31950:	10800017 	ldw	r2,0(r2)
   31954:	1809883a 	mov	r4,r3
   31958:	100b883a 	mov	r5,r2
   3195c:	018000f4 	movhi	r6,3
   31960:	3186e604 	addi	r6,r6,7064
   31964:	e1fffd17 	ldw	r7,-12(fp)
   31968:	00322b40 	call	322b4 <alt_alarm_start>
   3196c:	1000040e 	bge	r2,zero,31980 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   31970:	e0fffd17 	ldw	r3,-12(fp)
   31974:	00a00034 	movhi	r2,32768
   31978:	10bfffc4 	addi	r2,r2,-1
   3197c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   31980:	e037883a 	mov	sp,fp
   31984:	dfc00117 	ldw	ra,4(sp)
   31988:	df000017 	ldw	fp,0(sp)
   3198c:	dec00204 	addi	sp,sp,8
   31990:	f800283a 	ret

00031994 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   31994:	defff804 	addi	sp,sp,-32
   31998:	df000715 	stw	fp,28(sp)
   3199c:	df000704 	addi	fp,sp,28
   319a0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   319a4:	e0bfff17 	ldw	r2,-4(fp)
   319a8:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   319ac:	e0bffb17 	ldw	r2,-20(fp)
   319b0:	10800017 	ldw	r2,0(r2)
   319b4:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   319b8:	e0bffc17 	ldw	r2,-16(fp)
   319bc:	10800104 	addi	r2,r2,4
   319c0:	10800037 	ldwio	r2,0(r2)
   319c4:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   319c8:	e0bffd17 	ldw	r2,-12(fp)
   319cc:	1080c00c 	andi	r2,r2,768
   319d0:	1000011e 	bne	r2,zero,319d8 <altera_avalon_jtag_uart_irq+0x44>
      break;
   319d4:	00006c06 	br	31b88 <altera_avalon_jtag_uart_irq+0x1f4>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   319d8:	e0bffd17 	ldw	r2,-12(fp)
   319dc:	1080400c 	andi	r2,r2,256
   319e0:	10003426 	beq	r2,zero,31ab4 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   319e4:	00800074 	movhi	r2,1
   319e8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   319ec:	e0bffb17 	ldw	r2,-20(fp)
   319f0:	10800a17 	ldw	r2,40(r2)
   319f4:	10800044 	addi	r2,r2,1
   319f8:	1081ffcc 	andi	r2,r2,2047
   319fc:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   31a00:	e0bffb17 	ldw	r2,-20(fp)
   31a04:	10c00b17 	ldw	r3,44(r2)
   31a08:	e0bffe17 	ldw	r2,-8(fp)
   31a0c:	1880011e 	bne	r3,r2,31a14 <altera_avalon_jtag_uart_irq+0x80>
          break;
   31a10:	00001606 	br	31a6c <altera_avalon_jtag_uart_irq+0xd8>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   31a14:	e0bffc17 	ldw	r2,-16(fp)
   31a18:	10800037 	ldwio	r2,0(r2)
   31a1c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   31a20:	e0bff917 	ldw	r2,-28(fp)
   31a24:	10a0000c 	andi	r2,r2,32768
   31a28:	1000011e 	bne	r2,zero,31a30 <altera_avalon_jtag_uart_irq+0x9c>
          break;
   31a2c:	00000f06 	br	31a6c <altera_avalon_jtag_uart_irq+0xd8>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   31a30:	e0bffb17 	ldw	r2,-20(fp)
   31a34:	10800a17 	ldw	r2,40(r2)
   31a38:	e0fff917 	ldw	r3,-28(fp)
   31a3c:	1809883a 	mov	r4,r3
   31a40:	e0fffb17 	ldw	r3,-20(fp)
   31a44:	1885883a 	add	r2,r3,r2
   31a48:	10800e04 	addi	r2,r2,56
   31a4c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   31a50:	e0bffb17 	ldw	r2,-20(fp)
   31a54:	10800a17 	ldw	r2,40(r2)
   31a58:	10800044 	addi	r2,r2,1
   31a5c:	10c1ffcc 	andi	r3,r2,2047
   31a60:	e0bffb17 	ldw	r2,-20(fp)
   31a64:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   31a68:	003fe006 	br	319ec <_gp+0xffff45ec>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   31a6c:	e0bff917 	ldw	r2,-28(fp)
   31a70:	10bfffec 	andhi	r2,r2,65535
   31a74:	10000f26 	beq	r2,zero,31ab4 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   31a78:	e0bffb17 	ldw	r2,-20(fp)
   31a7c:	10c00817 	ldw	r3,32(r2)
   31a80:	00bfff84 	movi	r2,-2
   31a84:	1886703a 	and	r3,r3,r2
   31a88:	e0bffb17 	ldw	r2,-20(fp)
   31a8c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   31a90:	e0bffc17 	ldw	r2,-16(fp)
   31a94:	10800104 	addi	r2,r2,4
   31a98:	1007883a 	mov	r3,r2
   31a9c:	e0bffb17 	ldw	r2,-20(fp)
   31aa0:	10800817 	ldw	r2,32(r2)
   31aa4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   31aa8:	e0bffc17 	ldw	r2,-16(fp)
   31aac:	10800104 	addi	r2,r2,4
   31ab0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   31ab4:	e0bffd17 	ldw	r2,-12(fp)
   31ab8:	1080800c 	andi	r2,r2,512
   31abc:	10003126 	beq	r2,zero,31b84 <altera_avalon_jtag_uart_irq+0x1f0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   31ac0:	e0bffd17 	ldw	r2,-12(fp)
   31ac4:	1004d43a 	srli	r2,r2,16
   31ac8:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   31acc:	00001406 	br	31b20 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   31ad0:	e0bffc17 	ldw	r2,-16(fp)
   31ad4:	e0fffb17 	ldw	r3,-20(fp)
   31ad8:	18c00d17 	ldw	r3,52(r3)
   31adc:	e13ffb17 	ldw	r4,-20(fp)
   31ae0:	20c7883a 	add	r3,r4,r3
   31ae4:	18c20e04 	addi	r3,r3,2104
   31ae8:	18c00003 	ldbu	r3,0(r3)
   31aec:	18c03fcc 	andi	r3,r3,255
   31af0:	18c0201c 	xori	r3,r3,128
   31af4:	18ffe004 	addi	r3,r3,-128
   31af8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   31afc:	e0bffb17 	ldw	r2,-20(fp)
   31b00:	10800d17 	ldw	r2,52(r2)
   31b04:	10800044 	addi	r2,r2,1
   31b08:	10c1ffcc 	andi	r3,r2,2047
   31b0c:	e0bffb17 	ldw	r2,-20(fp)
   31b10:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   31b14:	e0bffa17 	ldw	r2,-24(fp)
   31b18:	10bfffc4 	addi	r2,r2,-1
   31b1c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   31b20:	e0bffa17 	ldw	r2,-24(fp)
   31b24:	10000526 	beq	r2,zero,31b3c <altera_avalon_jtag_uart_irq+0x1a8>
   31b28:	e0bffb17 	ldw	r2,-20(fp)
   31b2c:	10c00d17 	ldw	r3,52(r2)
   31b30:	e0bffb17 	ldw	r2,-20(fp)
   31b34:	10800c17 	ldw	r2,48(r2)
   31b38:	18bfe51e 	bne	r3,r2,31ad0 <_gp+0xffff46d0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   31b3c:	e0bffa17 	ldw	r2,-24(fp)
   31b40:	10001026 	beq	r2,zero,31b84 <altera_avalon_jtag_uart_irq+0x1f0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   31b44:	e0bffb17 	ldw	r2,-20(fp)
   31b48:	10c00817 	ldw	r3,32(r2)
   31b4c:	00bfff44 	movi	r2,-3
   31b50:	1886703a 	and	r3,r3,r2
   31b54:	e0bffb17 	ldw	r2,-20(fp)
   31b58:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   31b5c:	e0bffb17 	ldw	r2,-20(fp)
   31b60:	10800017 	ldw	r2,0(r2)
   31b64:	10800104 	addi	r2,r2,4
   31b68:	1007883a 	mov	r3,r2
   31b6c:	e0bffb17 	ldw	r2,-20(fp)
   31b70:	10800817 	ldw	r2,32(r2)
   31b74:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   31b78:	e0bffc17 	ldw	r2,-16(fp)
   31b7c:	10800104 	addi	r2,r2,4
   31b80:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   31b84:	003f8c06 	br	319b8 <_gp+0xffff45b8>
}
   31b88:	e037883a 	mov	sp,fp
   31b8c:	df000017 	ldw	fp,0(sp)
   31b90:	dec00104 	addi	sp,sp,4
   31b94:	f800283a 	ret

00031b98 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   31b98:	defff804 	addi	sp,sp,-32
   31b9c:	df000715 	stw	fp,28(sp)
   31ba0:	df000704 	addi	fp,sp,28
   31ba4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   31ba8:	e0bffb17 	ldw	r2,-20(fp)
   31bac:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   31bb0:	e0bff917 	ldw	r2,-28(fp)
   31bb4:	10800017 	ldw	r2,0(r2)
   31bb8:	10800104 	addi	r2,r2,4
   31bbc:	10800037 	ldwio	r2,0(r2)
   31bc0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   31bc4:	e0bffa17 	ldw	r2,-24(fp)
   31bc8:	1081000c 	andi	r2,r2,1024
   31bcc:	10000b26 	beq	r2,zero,31bfc <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   31bd0:	e0bff917 	ldw	r2,-28(fp)
   31bd4:	10800017 	ldw	r2,0(r2)
   31bd8:	10800104 	addi	r2,r2,4
   31bdc:	1007883a 	mov	r3,r2
   31be0:	e0bff917 	ldw	r2,-28(fp)
   31be4:	10800817 	ldw	r2,32(r2)
   31be8:	10810014 	ori	r2,r2,1024
   31bec:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   31bf0:	e0bff917 	ldw	r2,-28(fp)
   31bf4:	10000915 	stw	zero,36(r2)
   31bf8:	00000a06 	br	31c24 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   31bfc:	e0bff917 	ldw	r2,-28(fp)
   31c00:	10c00917 	ldw	r3,36(r2)
   31c04:	00a00034 	movhi	r2,32768
   31c08:	10bfff04 	addi	r2,r2,-4
   31c0c:	10c00536 	bltu	r2,r3,31c24 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   31c10:	e0bff917 	ldw	r2,-28(fp)
   31c14:	10800917 	ldw	r2,36(r2)
   31c18:	10c00044 	addi	r3,r2,1
   31c1c:	e0bff917 	ldw	r2,-28(fp)
   31c20:	10c00915 	stw	r3,36(r2)
   31c24:	008000f4 	movhi	r2,3
   31c28:	109bd504 	addi	r2,r2,28500
   31c2c:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   31c30:	e037883a 	mov	sp,fp
   31c34:	df000017 	ldw	fp,0(sp)
   31c38:	dec00104 	addi	sp,sp,4
   31c3c:	f800283a 	ret

00031c40 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   31c40:	defffd04 	addi	sp,sp,-12
   31c44:	df000215 	stw	fp,8(sp)
   31c48:	df000204 	addi	fp,sp,8
   31c4c:	e13ffe15 	stw	r4,-8(fp)
   31c50:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   31c54:	00000506 	br	31c6c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   31c58:	e0bfff17 	ldw	r2,-4(fp)
   31c5c:	1090000c 	andi	r2,r2,16384
   31c60:	10000226 	beq	r2,zero,31c6c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   31c64:	00bffd44 	movi	r2,-11
   31c68:	00000b06 	br	31c98 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   31c6c:	e0bffe17 	ldw	r2,-8(fp)
   31c70:	10c00d17 	ldw	r3,52(r2)
   31c74:	e0bffe17 	ldw	r2,-8(fp)
   31c78:	10800c17 	ldw	r2,48(r2)
   31c7c:	18800526 	beq	r3,r2,31c94 <altera_avalon_jtag_uart_close+0x54>
   31c80:	e0bffe17 	ldw	r2,-8(fp)
   31c84:	10c00917 	ldw	r3,36(r2)
   31c88:	e0bffe17 	ldw	r2,-8(fp)
   31c8c:	10800117 	ldw	r2,4(r2)
   31c90:	18bff136 	bltu	r3,r2,31c58 <_gp+0xffff4858>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   31c94:	0005883a 	mov	r2,zero
}
   31c98:	e037883a 	mov	sp,fp
   31c9c:	df000017 	ldw	fp,0(sp)
   31ca0:	dec00104 	addi	sp,sp,4
   31ca4:	f800283a 	ret

00031ca8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   31ca8:	defffa04 	addi	sp,sp,-24
   31cac:	df000515 	stw	fp,20(sp)
   31cb0:	df000504 	addi	fp,sp,20
   31cb4:	e13ffd15 	stw	r4,-12(fp)
   31cb8:	e17ffe15 	stw	r5,-8(fp)
   31cbc:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   31cc0:	00bff9c4 	movi	r2,-25
   31cc4:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   31cc8:	e0bffe17 	ldw	r2,-8(fp)
   31ccc:	10da8060 	cmpeqi	r3,r2,27137
   31cd0:	1800031e 	bne	r3,zero,31ce0 <altera_avalon_jtag_uart_ioctl+0x38>
   31cd4:	109a80a0 	cmpeqi	r2,r2,27138
   31cd8:	1000191e 	bne	r2,zero,31d40 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   31cdc:	00002806 	br	31d80 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   31ce0:	e0bffd17 	ldw	r2,-12(fp)
   31ce4:	10c00117 	ldw	r3,4(r2)
   31ce8:	00a00034 	movhi	r2,32768
   31cec:	10bfffc4 	addi	r2,r2,-1
   31cf0:	18801226 	beq	r3,r2,31d3c <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
   31cf4:	e0bfff17 	ldw	r2,-4(fp)
   31cf8:	10800017 	ldw	r2,0(r2)
   31cfc:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   31d00:	e0bffc17 	ldw	r2,-16(fp)
   31d04:	10800090 	cmplti	r2,r2,2
   31d08:	1000061e 	bne	r2,zero,31d24 <altera_avalon_jtag_uart_ioctl+0x7c>
   31d0c:	e0fffc17 	ldw	r3,-16(fp)
   31d10:	00a00034 	movhi	r2,32768
   31d14:	10bfffc4 	addi	r2,r2,-1
   31d18:	18800226 	beq	r3,r2,31d24 <altera_avalon_jtag_uart_ioctl+0x7c>
   31d1c:	e0bffc17 	ldw	r2,-16(fp)
   31d20:	00000206 	br	31d2c <altera_avalon_jtag_uart_ioctl+0x84>
   31d24:	00a00034 	movhi	r2,32768
   31d28:	10bfff84 	addi	r2,r2,-2
   31d2c:	e0fffd17 	ldw	r3,-12(fp)
   31d30:	18800115 	stw	r2,4(r3)
      rc = 0;
   31d34:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   31d38:	00001106 	br	31d80 <altera_avalon_jtag_uart_ioctl+0xd8>
   31d3c:	00001006 	br	31d80 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   31d40:	e0bffd17 	ldw	r2,-12(fp)
   31d44:	10c00117 	ldw	r3,4(r2)
   31d48:	00a00034 	movhi	r2,32768
   31d4c:	10bfffc4 	addi	r2,r2,-1
   31d50:	18800a26 	beq	r3,r2,31d7c <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   31d54:	e0bffd17 	ldw	r2,-12(fp)
   31d58:	10c00917 	ldw	r3,36(r2)
   31d5c:	e0bffd17 	ldw	r2,-12(fp)
   31d60:	10800117 	ldw	r2,4(r2)
   31d64:	1885803a 	cmpltu	r2,r3,r2
   31d68:	10c03fcc 	andi	r3,r2,255
   31d6c:	e0bfff17 	ldw	r2,-4(fp)
   31d70:	10c00015 	stw	r3,0(r2)
      rc = 0;
   31d74:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   31d78:	00000006 	br	31d7c <altera_avalon_jtag_uart_ioctl+0xd4>
   31d7c:	0001883a 	nop

  default:
    break;
  }

  return rc;
   31d80:	e0bffb17 	ldw	r2,-20(fp)
}
   31d84:	e037883a 	mov	sp,fp
   31d88:	df000017 	ldw	fp,0(sp)
   31d8c:	dec00104 	addi	sp,sp,4
   31d90:	f800283a 	ret

00031d94 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   31d94:	defff304 	addi	sp,sp,-52
   31d98:	dfc00c15 	stw	ra,48(sp)
   31d9c:	df000b15 	stw	fp,44(sp)
   31da0:	df000b04 	addi	fp,sp,44
   31da4:	e13ffc15 	stw	r4,-16(fp)
   31da8:	e17ffd15 	stw	r5,-12(fp)
   31dac:	e1bffe15 	stw	r6,-8(fp)
   31db0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   31db4:	e0bffd17 	ldw	r2,-12(fp)
   31db8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   31dbc:	00004906 	br	31ee4 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   31dc0:	e0bffc17 	ldw	r2,-16(fp)
   31dc4:	10800a17 	ldw	r2,40(r2)
   31dc8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   31dcc:	e0bffc17 	ldw	r2,-16(fp)
   31dd0:	10800b17 	ldw	r2,44(r2)
   31dd4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   31dd8:	e0fff717 	ldw	r3,-36(fp)
   31ddc:	e0bff817 	ldw	r2,-32(fp)
   31de0:	18800536 	bltu	r3,r2,31df8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   31de4:	e0fff717 	ldw	r3,-36(fp)
   31de8:	e0bff817 	ldw	r2,-32(fp)
   31dec:	1885c83a 	sub	r2,r3,r2
   31df0:	e0bff615 	stw	r2,-40(fp)
   31df4:	00000406 	br	31e08 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   31df8:	00c20004 	movi	r3,2048
   31dfc:	e0bff817 	ldw	r2,-32(fp)
   31e00:	1885c83a 	sub	r2,r3,r2
   31e04:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   31e08:	e0bff617 	ldw	r2,-40(fp)
   31e0c:	1000011e 	bne	r2,zero,31e14 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
   31e10:	00001d06 	br	31e88 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
   31e14:	e0fffe17 	ldw	r3,-8(fp)
   31e18:	e0bff617 	ldw	r2,-40(fp)
   31e1c:	1880022e 	bgeu	r3,r2,31e28 <altera_avalon_jtag_uart_read+0x94>
        n = space;
   31e20:	e0bffe17 	ldw	r2,-8(fp)
   31e24:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   31e28:	e0bff817 	ldw	r2,-32(fp)
   31e2c:	10800e04 	addi	r2,r2,56
   31e30:	e0fffc17 	ldw	r3,-16(fp)
   31e34:	1885883a 	add	r2,r3,r2
   31e38:	e13ff517 	ldw	r4,-44(fp)
   31e3c:	100b883a 	mov	r5,r2
   31e40:	e1bff617 	ldw	r6,-40(fp)
   31e44:	00286ac0 	call	286ac <memcpy>
      ptr   += n;
   31e48:	e0fff517 	ldw	r3,-44(fp)
   31e4c:	e0bff617 	ldw	r2,-40(fp)
   31e50:	1885883a 	add	r2,r3,r2
   31e54:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   31e58:	e0fffe17 	ldw	r3,-8(fp)
   31e5c:	e0bff617 	ldw	r2,-40(fp)
   31e60:	1885c83a 	sub	r2,r3,r2
   31e64:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   31e68:	e0fff817 	ldw	r3,-32(fp)
   31e6c:	e0bff617 	ldw	r2,-40(fp)
   31e70:	1885883a 	add	r2,r3,r2
   31e74:	10c1ffcc 	andi	r3,r2,2047
   31e78:	e0bffc17 	ldw	r2,-16(fp)
   31e7c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   31e80:	e0bffe17 	ldw	r2,-8(fp)
   31e84:	00bfce16 	blt	zero,r2,31dc0 <_gp+0xffff49c0>

    /* If we read any data then return it */
    if (ptr != buffer)
   31e88:	e0fff517 	ldw	r3,-44(fp)
   31e8c:	e0bffd17 	ldw	r2,-12(fp)
   31e90:	18800126 	beq	r3,r2,31e98 <altera_avalon_jtag_uart_read+0x104>
      break;
   31e94:	00001506 	br	31eec <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   31e98:	e0bfff17 	ldw	r2,-4(fp)
   31e9c:	1090000c 	andi	r2,r2,16384
   31ea0:	10000126 	beq	r2,zero,31ea8 <altera_avalon_jtag_uart_read+0x114>
      break;
   31ea4:	00001106 	br	31eec <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   31ea8:	0001883a 	nop
   31eac:	e0bffc17 	ldw	r2,-16(fp)
   31eb0:	10c00a17 	ldw	r3,40(r2)
   31eb4:	e0bff717 	ldw	r2,-36(fp)
   31eb8:	1880051e 	bne	r3,r2,31ed0 <altera_avalon_jtag_uart_read+0x13c>
   31ebc:	e0bffc17 	ldw	r2,-16(fp)
   31ec0:	10c00917 	ldw	r3,36(r2)
   31ec4:	e0bffc17 	ldw	r2,-16(fp)
   31ec8:	10800117 	ldw	r2,4(r2)
   31ecc:	18bff736 	bltu	r3,r2,31eac <_gp+0xffff4aac>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   31ed0:	e0bffc17 	ldw	r2,-16(fp)
   31ed4:	10c00a17 	ldw	r3,40(r2)
   31ed8:	e0bff717 	ldw	r2,-36(fp)
   31edc:	1880011e 	bne	r3,r2,31ee4 <altera_avalon_jtag_uart_read+0x150>
      break;
   31ee0:	00000206 	br	31eec <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   31ee4:	e0bffe17 	ldw	r2,-8(fp)
   31ee8:	00bfb516 	blt	zero,r2,31dc0 <_gp+0xffff49c0>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   31eec:	e0fff517 	ldw	r3,-44(fp)
   31ef0:	e0bffd17 	ldw	r2,-12(fp)
   31ef4:	18801826 	beq	r3,r2,31f58 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   31ef8:	0005303a 	rdctl	r2,status
   31efc:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   31f00:	e0fffa17 	ldw	r3,-24(fp)
   31f04:	00bfff84 	movi	r2,-2
   31f08:	1884703a 	and	r2,r3,r2
   31f0c:	1001703a 	wrctl	status,r2
  
  return context;
   31f10:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   31f14:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   31f18:	e0bffc17 	ldw	r2,-16(fp)
   31f1c:	10800817 	ldw	r2,32(r2)
   31f20:	10c00054 	ori	r3,r2,1
   31f24:	e0bffc17 	ldw	r2,-16(fp)
   31f28:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   31f2c:	e0bffc17 	ldw	r2,-16(fp)
   31f30:	10800017 	ldw	r2,0(r2)
   31f34:	10800104 	addi	r2,r2,4
   31f38:	1007883a 	mov	r3,r2
   31f3c:	e0bffc17 	ldw	r2,-16(fp)
   31f40:	10800817 	ldw	r2,32(r2)
   31f44:	18800035 	stwio	r2,0(r3)
   31f48:	e0bff917 	ldw	r2,-28(fp)
   31f4c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   31f50:	e0bffb17 	ldw	r2,-20(fp)
   31f54:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   31f58:	e0fff517 	ldw	r3,-44(fp)
   31f5c:	e0bffd17 	ldw	r2,-12(fp)
   31f60:	18800426 	beq	r3,r2,31f74 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
   31f64:	e0fff517 	ldw	r3,-44(fp)
   31f68:	e0bffd17 	ldw	r2,-12(fp)
   31f6c:	1885c83a 	sub	r2,r3,r2
   31f70:	00000606 	br	31f8c <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
   31f74:	e0bfff17 	ldw	r2,-4(fp)
   31f78:	1090000c 	andi	r2,r2,16384
   31f7c:	10000226 	beq	r2,zero,31f88 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
   31f80:	00bffd44 	movi	r2,-11
   31f84:	00000106 	br	31f8c <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
   31f88:	00bffec4 	movi	r2,-5
}
   31f8c:	e037883a 	mov	sp,fp
   31f90:	dfc00117 	ldw	ra,4(sp)
   31f94:	df000017 	ldw	fp,0(sp)
   31f98:	dec00204 	addi	sp,sp,8
   31f9c:	f800283a 	ret

00031fa0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   31fa0:	defff304 	addi	sp,sp,-52
   31fa4:	dfc00c15 	stw	ra,48(sp)
   31fa8:	df000b15 	stw	fp,44(sp)
   31fac:	df000b04 	addi	fp,sp,44
   31fb0:	e13ffc15 	stw	r4,-16(fp)
   31fb4:	e17ffd15 	stw	r5,-12(fp)
   31fb8:	e1bffe15 	stw	r6,-8(fp)
   31fbc:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   31fc0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   31fc4:	e0bffd17 	ldw	r2,-12(fp)
   31fc8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   31fcc:	00003806 	br	320b0 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   31fd0:	e0bffc17 	ldw	r2,-16(fp)
   31fd4:	10800c17 	ldw	r2,48(r2)
   31fd8:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
   31fdc:	e0bffc17 	ldw	r2,-16(fp)
   31fe0:	10800d17 	ldw	r2,52(r2)
   31fe4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   31fe8:	e0fff817 	ldw	r3,-32(fp)
   31fec:	e0bff517 	ldw	r2,-44(fp)
   31ff0:	1880062e 	bgeu	r3,r2,3200c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   31ff4:	e0fff517 	ldw	r3,-44(fp)
   31ff8:	e0bff817 	ldw	r2,-32(fp)
   31ffc:	1885c83a 	sub	r2,r3,r2
   32000:	10bfffc4 	addi	r2,r2,-1
   32004:	e0bff615 	stw	r2,-40(fp)
   32008:	00000b06 	br	32038 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   3200c:	e0bff517 	ldw	r2,-44(fp)
   32010:	10000526 	beq	r2,zero,32028 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   32014:	00c20004 	movi	r3,2048
   32018:	e0bff817 	ldw	r2,-32(fp)
   3201c:	1885c83a 	sub	r2,r3,r2
   32020:	e0bff615 	stw	r2,-40(fp)
   32024:	00000406 	br	32038 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   32028:	00c1ffc4 	movi	r3,2047
   3202c:	e0bff817 	ldw	r2,-32(fp)
   32030:	1885c83a 	sub	r2,r3,r2
   32034:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   32038:	e0bff617 	ldw	r2,-40(fp)
   3203c:	1000011e 	bne	r2,zero,32044 <altera_avalon_jtag_uart_write+0xa4>
        break;
   32040:	00001d06 	br	320b8 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
   32044:	e0fffe17 	ldw	r3,-8(fp)
   32048:	e0bff617 	ldw	r2,-40(fp)
   3204c:	1880022e 	bgeu	r3,r2,32058 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
   32050:	e0bffe17 	ldw	r2,-8(fp)
   32054:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   32058:	e0bff817 	ldw	r2,-32(fp)
   3205c:	10820e04 	addi	r2,r2,2104
   32060:	e0fffc17 	ldw	r3,-16(fp)
   32064:	1885883a 	add	r2,r3,r2
   32068:	1009883a 	mov	r4,r2
   3206c:	e17ffd17 	ldw	r5,-12(fp)
   32070:	e1bff617 	ldw	r6,-40(fp)
   32074:	00286ac0 	call	286ac <memcpy>
      ptr   += n;
   32078:	e0fffd17 	ldw	r3,-12(fp)
   3207c:	e0bff617 	ldw	r2,-40(fp)
   32080:	1885883a 	add	r2,r3,r2
   32084:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   32088:	e0fffe17 	ldw	r3,-8(fp)
   3208c:	e0bff617 	ldw	r2,-40(fp)
   32090:	1885c83a 	sub	r2,r3,r2
   32094:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   32098:	e0fff817 	ldw	r3,-32(fp)
   3209c:	e0bff617 	ldw	r2,-40(fp)
   320a0:	1885883a 	add	r2,r3,r2
   320a4:	10c1ffcc 	andi	r3,r2,2047
   320a8:	e0bffc17 	ldw	r2,-16(fp)
   320ac:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   320b0:	e0bffe17 	ldw	r2,-8(fp)
   320b4:	00bfc616 	blt	zero,r2,31fd0 <_gp+0xffff4bd0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   320b8:	0005303a 	rdctl	r2,status
   320bc:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   320c0:	e0fffa17 	ldw	r3,-24(fp)
   320c4:	00bfff84 	movi	r2,-2
   320c8:	1884703a 	and	r2,r3,r2
   320cc:	1001703a 	wrctl	status,r2
  
  return context;
   320d0:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   320d4:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   320d8:	e0bffc17 	ldw	r2,-16(fp)
   320dc:	10800817 	ldw	r2,32(r2)
   320e0:	10c00094 	ori	r3,r2,2
   320e4:	e0bffc17 	ldw	r2,-16(fp)
   320e8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   320ec:	e0bffc17 	ldw	r2,-16(fp)
   320f0:	10800017 	ldw	r2,0(r2)
   320f4:	10800104 	addi	r2,r2,4
   320f8:	1007883a 	mov	r3,r2
   320fc:	e0bffc17 	ldw	r2,-16(fp)
   32100:	10800817 	ldw	r2,32(r2)
   32104:	18800035 	stwio	r2,0(r3)
   32108:	e0bff917 	ldw	r2,-28(fp)
   3210c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   32110:	e0bffb17 	ldw	r2,-20(fp)
   32114:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   32118:	e0bffe17 	ldw	r2,-8(fp)
   3211c:	0080120e 	bge	zero,r2,32168 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   32120:	e0bfff17 	ldw	r2,-4(fp)
   32124:	1090000c 	andi	r2,r2,16384
   32128:	10000126 	beq	r2,zero,32130 <altera_avalon_jtag_uart_write+0x190>
        break;
   3212c:	00001006 	br	32170 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   32130:	0001883a 	nop
   32134:	e0bffc17 	ldw	r2,-16(fp)
   32138:	10c00d17 	ldw	r3,52(r2)
   3213c:	e0bff517 	ldw	r2,-44(fp)
   32140:	1880051e 	bne	r3,r2,32158 <altera_avalon_jtag_uart_write+0x1b8>
   32144:	e0bffc17 	ldw	r2,-16(fp)
   32148:	10c00917 	ldw	r3,36(r2)
   3214c:	e0bffc17 	ldw	r2,-16(fp)
   32150:	10800117 	ldw	r2,4(r2)
   32154:	18bff736 	bltu	r3,r2,32134 <_gp+0xffff4d34>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   32158:	e0bffc17 	ldw	r2,-16(fp)
   3215c:	10800917 	ldw	r2,36(r2)
   32160:	10000126 	beq	r2,zero,32168 <altera_avalon_jtag_uart_write+0x1c8>
         break;
   32164:	00000206 	br	32170 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
   32168:	e0bffe17 	ldw	r2,-8(fp)
   3216c:	00bf9716 	blt	zero,r2,31fcc <_gp+0xffff4bcc>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   32170:	e0fffd17 	ldw	r3,-12(fp)
   32174:	e0bff717 	ldw	r2,-36(fp)
   32178:	18800426 	beq	r3,r2,3218c <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
   3217c:	e0fffd17 	ldw	r3,-12(fp)
   32180:	e0bff717 	ldw	r2,-36(fp)
   32184:	1885c83a 	sub	r2,r3,r2
   32188:	00000606 	br	321a4 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
   3218c:	e0bfff17 	ldw	r2,-4(fp)
   32190:	1090000c 	andi	r2,r2,16384
   32194:	10000226 	beq	r2,zero,321a0 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
   32198:	00bffd44 	movi	r2,-11
   3219c:	00000106 	br	321a4 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   321a0:	00bffec4 	movi	r2,-5
}
   321a4:	e037883a 	mov	sp,fp
   321a8:	dfc00117 	ldw	ra,4(sp)
   321ac:	df000017 	ldw	fp,0(sp)
   321b0:	dec00204 	addi	sp,sp,8
   321b4:	f800283a 	ret

000321b8 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   321b8:	defffa04 	addi	sp,sp,-24
   321bc:	dfc00515 	stw	ra,20(sp)
   321c0:	df000415 	stw	fp,16(sp)
   321c4:	df000404 	addi	fp,sp,16
   321c8:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   321cc:	0007883a 	mov	r3,zero
   321d0:	e0bfff17 	ldw	r2,-4(fp)
   321d4:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   321d8:	e0bfff17 	ldw	r2,-4(fp)
   321dc:	10800104 	addi	r2,r2,4
   321e0:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   321e4:	0005303a 	rdctl	r2,status
   321e8:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   321ec:	e0fffd17 	ldw	r3,-12(fp)
   321f0:	00bfff84 	movi	r2,-2
   321f4:	1884703a 	and	r2,r3,r2
   321f8:	1001703a 	wrctl	status,r2
  
  return context;
   321fc:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   32200:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   32204:	003141c0 	call	3141c <alt_tick>
   32208:	e0bffc17 	ldw	r2,-16(fp)
   3220c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   32210:	e0bffe17 	ldw	r2,-8(fp)
   32214:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   32218:	e037883a 	mov	sp,fp
   3221c:	dfc00117 	ldw	ra,4(sp)
   32220:	df000017 	ldw	fp,0(sp)
   32224:	dec00204 	addi	sp,sp,8
   32228:	f800283a 	ret

0003222c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   3222c:	defff804 	addi	sp,sp,-32
   32230:	dfc00715 	stw	ra,28(sp)
   32234:	df000615 	stw	fp,24(sp)
   32238:	df000604 	addi	fp,sp,24
   3223c:	e13ffc15 	stw	r4,-16(fp)
   32240:	e17ffd15 	stw	r5,-12(fp)
   32244:	e1bffe15 	stw	r6,-8(fp)
   32248:	e1ffff15 	stw	r7,-4(fp)
   3224c:	e0bfff17 	ldw	r2,-4(fp)
   32250:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   32254:	008000f4 	movhi	r2,3
   32258:	109bd504 	addi	r2,r2,28500
   3225c:	10800017 	ldw	r2,0(r2)
   32260:	1000041e 	bne	r2,zero,32274 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
   32264:	008000f4 	movhi	r2,3
   32268:	109bd504 	addi	r2,r2,28500
   3226c:	e0fffb17 	ldw	r3,-20(fp)
   32270:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   32274:	e0bffc17 	ldw	r2,-16(fp)
   32278:	10800104 	addi	r2,r2,4
   3227c:	00c001c4 	movi	r3,7
   32280:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   32284:	d8000015 	stw	zero,0(sp)
   32288:	e13ffd17 	ldw	r4,-12(fp)
   3228c:	e17ffe17 	ldw	r5,-8(fp)
   32290:	018000f4 	movhi	r6,3
   32294:	31886e04 	addi	r6,r6,8632
   32298:	e1fffc17 	ldw	r7,-16(fp)
   3229c:	00327300 	call	32730 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   322a0:	e037883a 	mov	sp,fp
   322a4:	dfc00117 	ldw	ra,4(sp)
   322a8:	df000017 	ldw	fp,0(sp)
   322ac:	dec00204 	addi	sp,sp,8
   322b0:	f800283a 	ret

000322b4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   322b4:	defff504 	addi	sp,sp,-44
   322b8:	df000a15 	stw	fp,40(sp)
   322bc:	df000a04 	addi	fp,sp,40
   322c0:	e13ffc15 	stw	r4,-16(fp)
   322c4:	e17ffd15 	stw	r5,-12(fp)
   322c8:	e1bffe15 	stw	r6,-8(fp)
   322cc:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   322d0:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   322d4:	008000f4 	movhi	r2,3
   322d8:	109bd504 	addi	r2,r2,28500
   322dc:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   322e0:	10003f26 	beq	r2,zero,323e0 <alt_alarm_start+0x12c>
  {
    if (alarm)
   322e4:	e0bffc17 	ldw	r2,-16(fp)
   322e8:	10003b26 	beq	r2,zero,323d8 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
   322ec:	e0bffc17 	ldw	r2,-16(fp)
   322f0:	e0fffe17 	ldw	r3,-8(fp)
   322f4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   322f8:	e0bffc17 	ldw	r2,-16(fp)
   322fc:	e0ffff17 	ldw	r3,-4(fp)
   32300:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   32304:	0005303a 	rdctl	r2,status
   32308:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   3230c:	e0fff817 	ldw	r3,-32(fp)
   32310:	00bfff84 	movi	r2,-2
   32314:	1884703a 	and	r2,r3,r2
   32318:	1001703a 	wrctl	status,r2
  
  return context;
   3231c:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
   32320:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   32324:	008000f4 	movhi	r2,3
   32328:	109bd604 	addi	r2,r2,28504
   3232c:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   32330:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   32334:	e0fffd17 	ldw	r3,-12(fp)
   32338:	e0bff617 	ldw	r2,-40(fp)
   3233c:	1885883a 	add	r2,r3,r2
   32340:	10c00044 	addi	r3,r2,1
   32344:	e0bffc17 	ldw	r2,-16(fp)
   32348:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   3234c:	e0bffc17 	ldw	r2,-16(fp)
   32350:	10c00217 	ldw	r3,8(r2)
   32354:	e0bff617 	ldw	r2,-40(fp)
   32358:	1880042e 	bgeu	r3,r2,3236c <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
   3235c:	e0bffc17 	ldw	r2,-16(fp)
   32360:	00c00044 	movi	r3,1
   32364:	10c00405 	stb	r3,16(r2)
   32368:	00000206 	br	32374 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
   3236c:	e0bffc17 	ldw	r2,-16(fp)
   32370:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   32374:	e0fffc17 	ldw	r3,-16(fp)
   32378:	008000f4 	movhi	r2,3
   3237c:	10950d04 	addi	r2,r2,21556
   32380:	e0bff915 	stw	r2,-28(fp)
   32384:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   32388:	e0bffa17 	ldw	r2,-24(fp)
   3238c:	e0fff917 	ldw	r3,-28(fp)
   32390:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   32394:	e0bff917 	ldw	r2,-28(fp)
   32398:	10c00017 	ldw	r3,0(r2)
   3239c:	e0bffa17 	ldw	r2,-24(fp)
   323a0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   323a4:	e0bff917 	ldw	r2,-28(fp)
   323a8:	10800017 	ldw	r2,0(r2)
   323ac:	e0fffa17 	ldw	r3,-24(fp)
   323b0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   323b4:	e0bff917 	ldw	r2,-28(fp)
   323b8:	e0fffa17 	ldw	r3,-24(fp)
   323bc:	10c00015 	stw	r3,0(r2)
   323c0:	e0bff717 	ldw	r2,-36(fp)
   323c4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   323c8:	e0bffb17 	ldw	r2,-20(fp)
   323cc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   323d0:	0005883a 	mov	r2,zero
   323d4:	00000306 	br	323e4 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
   323d8:	00bffa84 	movi	r2,-22
   323dc:	00000106 	br	323e4 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
   323e0:	00bfde84 	movi	r2,-134
  }
}
   323e4:	e037883a 	mov	sp,fp
   323e8:	df000017 	ldw	fp,0(sp)
   323ec:	dec00104 	addi	sp,sp,4
   323f0:	f800283a 	ret

000323f4 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   323f4:	defffa04 	addi	sp,sp,-24
   323f8:	dfc00515 	stw	ra,20(sp)
   323fc:	df000415 	stw	fp,16(sp)
   32400:	df000404 	addi	fp,sp,16
   32404:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
   32408:	00800244 	movi	r2,9
   3240c:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   32410:	e13ffd17 	ldw	r4,-12(fp)
   32414:	014003f4 	movhi	r5,15
   32418:	29509004 	addi	r5,r5,16960
   3241c:	002e2bc0 	call	2e2bc <__mulsi3>
   32420:	0100bef4 	movhi	r4,763
   32424:	213c2004 	addi	r4,r4,-3968
   32428:	100b883a 	mov	r5,r2
   3242c:	002e2ac0 	call	2e2ac <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   32430:	01200034 	movhi	r4,32768
   32434:	213fffc4 	addi	r4,r4,-1
   32438:	100b883a 	mov	r5,r2
   3243c:	002e2ac0 	call	2e2ac <__udivsi3>
   32440:	e13fff17 	ldw	r4,-4(fp)
   32444:	100b883a 	mov	r5,r2
   32448:	002e2ac0 	call	2e2ac <__udivsi3>
   3244c:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   32450:	e0bffe17 	ldw	r2,-8(fp)
   32454:	10002a26 	beq	r2,zero,32500 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   32458:	e03ffc15 	stw	zero,-16(fp)
   3245c:	00001706 	br	324bc <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   32460:	00a00034 	movhi	r2,32768
   32464:	10bfffc4 	addi	r2,r2,-1
   32468:	10bfffc4 	addi	r2,r2,-1
   3246c:	103ffe1e 	bne	r2,zero,32468 <_gp+0xffff5068>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   32470:	e13ffd17 	ldw	r4,-12(fp)
   32474:	014003f4 	movhi	r5,15
   32478:	29509004 	addi	r5,r5,16960
   3247c:	002e2bc0 	call	2e2bc <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   32480:	0100bef4 	movhi	r4,763
   32484:	213c2004 	addi	r4,r4,-3968
   32488:	100b883a 	mov	r5,r2
   3248c:	002e2ac0 	call	2e2ac <__udivsi3>
   32490:	01200034 	movhi	r4,32768
   32494:	213fffc4 	addi	r4,r4,-1
   32498:	100b883a 	mov	r5,r2
   3249c:	002e2ac0 	call	2e2ac <__udivsi3>
   324a0:	1007883a 	mov	r3,r2
   324a4:	e0bfff17 	ldw	r2,-4(fp)
   324a8:	10c5c83a 	sub	r2,r2,r3
   324ac:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   324b0:	e0bffc17 	ldw	r2,-16(fp)
   324b4:	10800044 	addi	r2,r2,1
   324b8:	e0bffc15 	stw	r2,-16(fp)
   324bc:	e0fffc17 	ldw	r3,-16(fp)
   324c0:	e0bffe17 	ldw	r2,-8(fp)
   324c4:	18bfe616 	blt	r3,r2,32460 <_gp+0xffff5060>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   324c8:	e13ffd17 	ldw	r4,-12(fp)
   324cc:	014003f4 	movhi	r5,15
   324d0:	29509004 	addi	r5,r5,16960
   324d4:	002e2bc0 	call	2e2bc <__mulsi3>
   324d8:	0100bef4 	movhi	r4,763
   324dc:	213c2004 	addi	r4,r4,-3968
   324e0:	100b883a 	mov	r5,r2
   324e4:	002e2ac0 	call	2e2ac <__udivsi3>
   324e8:	1009883a 	mov	r4,r2
   324ec:	e17fff17 	ldw	r5,-4(fp)
   324f0:	002e2bc0 	call	2e2bc <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   324f4:	10bfffc4 	addi	r2,r2,-1
   324f8:	103ffe1e 	bne	r2,zero,324f4 <_gp+0xffff50f4>
   324fc:	00000d06 	br	32534 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   32500:	e13ffd17 	ldw	r4,-12(fp)
   32504:	014003f4 	movhi	r5,15
   32508:	29509004 	addi	r5,r5,16960
   3250c:	002e2bc0 	call	2e2bc <__mulsi3>
   32510:	0100bef4 	movhi	r4,763
   32514:	213c2004 	addi	r4,r4,-3968
   32518:	100b883a 	mov	r5,r2
   3251c:	002e2ac0 	call	2e2ac <__udivsi3>
   32520:	1009883a 	mov	r4,r2
   32524:	e17fff17 	ldw	r5,-4(fp)
   32528:	002e2bc0 	call	2e2bc <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   3252c:	10bfffc4 	addi	r2,r2,-1
   32530:	00bffe16 	blt	zero,r2,3252c <_gp+0xffff512c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   32534:	0005883a 	mov	r2,zero
}
   32538:	e037883a 	mov	sp,fp
   3253c:	dfc00117 	ldw	ra,4(sp)
   32540:	df000017 	ldw	fp,0(sp)
   32544:	dec00204 	addi	sp,sp,8
   32548:	f800283a 	ret

0003254c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   3254c:	deffff04 	addi	sp,sp,-4
   32550:	df000015 	stw	fp,0(sp)
   32554:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   32558:	e037883a 	mov	sp,fp
   3255c:	df000017 	ldw	fp,0(sp)
   32560:	dec00104 	addi	sp,sp,4
   32564:	f800283a 	ret

00032568 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   32568:	defffe04 	addi	sp,sp,-8
   3256c:	dfc00115 	stw	ra,4(sp)
   32570:	df000015 	stw	fp,0(sp)
   32574:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   32578:	008000f4 	movhi	r2,3
   3257c:	10950b04 	addi	r2,r2,21548
   32580:	10800017 	ldw	r2,0(r2)
   32584:	10000526 	beq	r2,zero,3259c <alt_get_errno+0x34>
   32588:	008000f4 	movhi	r2,3
   3258c:	10950b04 	addi	r2,r2,21548
   32590:	10800017 	ldw	r2,0(r2)
   32594:	103ee83a 	callr	r2
   32598:	00000206 	br	325a4 <alt_get_errno+0x3c>
   3259c:	008000f4 	movhi	r2,3
   325a0:	109bd104 	addi	r2,r2,28484
}
   325a4:	e037883a 	mov	sp,fp
   325a8:	dfc00117 	ldw	ra,4(sp)
   325ac:	df000017 	ldw	fp,0(sp)
   325b0:	dec00204 	addi	sp,sp,8
   325b4:	f800283a 	ret

000325b8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   325b8:	defffa04 	addi	sp,sp,-24
   325bc:	dfc00515 	stw	ra,20(sp)
   325c0:	df000415 	stw	fp,16(sp)
   325c4:	df000404 	addi	fp,sp,16
   325c8:	e13ffe15 	stw	r4,-8(fp)
   325cc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   325d0:	e0bffe17 	ldw	r2,-8(fp)
   325d4:	10000326 	beq	r2,zero,325e4 <alt_dev_llist_insert+0x2c>
   325d8:	e0bffe17 	ldw	r2,-8(fp)
   325dc:	10800217 	ldw	r2,8(r2)
   325e0:	1000061e 	bne	r2,zero,325fc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   325e4:	00325680 	call	32568 <alt_get_errno>
   325e8:	1007883a 	mov	r3,r2
   325ec:	00800584 	movi	r2,22
   325f0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   325f4:	00bffa84 	movi	r2,-22
   325f8:	00001306 	br	32648 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   325fc:	e0bffe17 	ldw	r2,-8(fp)
   32600:	e0ffff17 	ldw	r3,-4(fp)
   32604:	e0fffc15 	stw	r3,-16(fp)
   32608:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   3260c:	e0bffd17 	ldw	r2,-12(fp)
   32610:	e0fffc17 	ldw	r3,-16(fp)
   32614:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   32618:	e0bffc17 	ldw	r2,-16(fp)
   3261c:	10c00017 	ldw	r3,0(r2)
   32620:	e0bffd17 	ldw	r2,-12(fp)
   32624:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   32628:	e0bffc17 	ldw	r2,-16(fp)
   3262c:	10800017 	ldw	r2,0(r2)
   32630:	e0fffd17 	ldw	r3,-12(fp)
   32634:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   32638:	e0bffc17 	ldw	r2,-16(fp)
   3263c:	e0fffd17 	ldw	r3,-12(fp)
   32640:	10c00015 	stw	r3,0(r2)

  return 0;  
   32644:	0005883a 	mov	r2,zero
}
   32648:	e037883a 	mov	sp,fp
   3264c:	dfc00117 	ldw	ra,4(sp)
   32650:	df000017 	ldw	fp,0(sp)
   32654:	dec00204 	addi	sp,sp,8
   32658:	f800283a 	ret

0003265c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   3265c:	defffd04 	addi	sp,sp,-12
   32660:	dfc00215 	stw	ra,8(sp)
   32664:	df000115 	stw	fp,4(sp)
   32668:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   3266c:	008000f4 	movhi	r2,3
   32670:	108d3404 	addi	r2,r2,13520
   32674:	e0bfff15 	stw	r2,-4(fp)
   32678:	00000606 	br	32694 <_do_ctors+0x38>
        (*ctor) (); 
   3267c:	e0bfff17 	ldw	r2,-4(fp)
   32680:	10800017 	ldw	r2,0(r2)
   32684:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   32688:	e0bfff17 	ldw	r2,-4(fp)
   3268c:	10bfff04 	addi	r2,r2,-4
   32690:	e0bfff15 	stw	r2,-4(fp)
   32694:	e0ffff17 	ldw	r3,-4(fp)
   32698:	008000f4 	movhi	r2,3
   3269c:	108d3504 	addi	r2,r2,13524
   326a0:	18bff62e 	bgeu	r3,r2,3267c <_gp+0xffff527c>
        (*ctor) (); 
}
   326a4:	e037883a 	mov	sp,fp
   326a8:	dfc00117 	ldw	ra,4(sp)
   326ac:	df000017 	ldw	fp,0(sp)
   326b0:	dec00204 	addi	sp,sp,8
   326b4:	f800283a 	ret

000326b8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   326b8:	defffd04 	addi	sp,sp,-12
   326bc:	dfc00215 	stw	ra,8(sp)
   326c0:	df000115 	stw	fp,4(sp)
   326c4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   326c8:	008000f4 	movhi	r2,3
   326cc:	108d3404 	addi	r2,r2,13520
   326d0:	e0bfff15 	stw	r2,-4(fp)
   326d4:	00000606 	br	326f0 <_do_dtors+0x38>
        (*dtor) (); 
   326d8:	e0bfff17 	ldw	r2,-4(fp)
   326dc:	10800017 	ldw	r2,0(r2)
   326e0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   326e4:	e0bfff17 	ldw	r2,-4(fp)
   326e8:	10bfff04 	addi	r2,r2,-4
   326ec:	e0bfff15 	stw	r2,-4(fp)
   326f0:	e0ffff17 	ldw	r3,-4(fp)
   326f4:	008000f4 	movhi	r2,3
   326f8:	108d3504 	addi	r2,r2,13524
   326fc:	18bff62e 	bgeu	r3,r2,326d8 <_gp+0xffff52d8>
        (*dtor) (); 
}
   32700:	e037883a 	mov	sp,fp
   32704:	dfc00117 	ldw	ra,4(sp)
   32708:	df000017 	ldw	fp,0(sp)
   3270c:	dec00204 	addi	sp,sp,8
   32710:	f800283a 	ret

00032714 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   32714:	deffff04 	addi	sp,sp,-4
   32718:	df000015 	stw	fp,0(sp)
   3271c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   32720:	e037883a 	mov	sp,fp
   32724:	df000017 	ldw	fp,0(sp)
   32728:	dec00104 	addi	sp,sp,4
   3272c:	f800283a 	ret

00032730 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   32730:	defff904 	addi	sp,sp,-28
   32734:	dfc00615 	stw	ra,24(sp)
   32738:	df000515 	stw	fp,20(sp)
   3273c:	df000504 	addi	fp,sp,20
   32740:	e13ffc15 	stw	r4,-16(fp)
   32744:	e17ffd15 	stw	r5,-12(fp)
   32748:	e1bffe15 	stw	r6,-8(fp)
   3274c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   32750:	e0800217 	ldw	r2,8(fp)
   32754:	d8800015 	stw	r2,0(sp)
   32758:	e13ffc17 	ldw	r4,-16(fp)
   3275c:	e17ffd17 	ldw	r5,-12(fp)
   32760:	e1bffe17 	ldw	r6,-8(fp)
   32764:	e1ffff17 	ldw	r7,-4(fp)
   32768:	00329100 	call	32910 <alt_iic_isr_register>
}  
   3276c:	e037883a 	mov	sp,fp
   32770:	dfc00117 	ldw	ra,4(sp)
   32774:	df000017 	ldw	fp,0(sp)
   32778:	dec00204 	addi	sp,sp,8
   3277c:	f800283a 	ret

00032780 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   32780:	defff904 	addi	sp,sp,-28
   32784:	df000615 	stw	fp,24(sp)
   32788:	df000604 	addi	fp,sp,24
   3278c:	e13ffe15 	stw	r4,-8(fp)
   32790:	e17fff15 	stw	r5,-4(fp)
   32794:	e0bfff17 	ldw	r2,-4(fp)
   32798:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   3279c:	0005303a 	rdctl	r2,status
   327a0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   327a4:	e0fffb17 	ldw	r3,-20(fp)
   327a8:	00bfff84 	movi	r2,-2
   327ac:	1884703a 	and	r2,r3,r2
   327b0:	1001703a 	wrctl	status,r2
  
  return context;
   327b4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   327b8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   327bc:	e0bffa17 	ldw	r2,-24(fp)
   327c0:	00c00044 	movi	r3,1
   327c4:	1884983a 	sll	r2,r3,r2
   327c8:	1007883a 	mov	r3,r2
   327cc:	008000f4 	movhi	r2,3
   327d0:	109bd704 	addi	r2,r2,28508
   327d4:	10800017 	ldw	r2,0(r2)
   327d8:	1886b03a 	or	r3,r3,r2
   327dc:	008000f4 	movhi	r2,3
   327e0:	109bd704 	addi	r2,r2,28508
   327e4:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   327e8:	008000f4 	movhi	r2,3
   327ec:	109bd704 	addi	r2,r2,28508
   327f0:	10800017 	ldw	r2,0(r2)
   327f4:	100170fa 	wrctl	ienable,r2
   327f8:	e0bffc17 	ldw	r2,-16(fp)
   327fc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   32800:	e0bffd17 	ldw	r2,-12(fp)
   32804:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   32808:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   3280c:	0001883a 	nop
}
   32810:	e037883a 	mov	sp,fp
   32814:	df000017 	ldw	fp,0(sp)
   32818:	dec00104 	addi	sp,sp,4
   3281c:	f800283a 	ret

00032820 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   32820:	defff904 	addi	sp,sp,-28
   32824:	df000615 	stw	fp,24(sp)
   32828:	df000604 	addi	fp,sp,24
   3282c:	e13ffe15 	stw	r4,-8(fp)
   32830:	e17fff15 	stw	r5,-4(fp)
   32834:	e0bfff17 	ldw	r2,-4(fp)
   32838:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   3283c:	0005303a 	rdctl	r2,status
   32840:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   32844:	e0fffb17 	ldw	r3,-20(fp)
   32848:	00bfff84 	movi	r2,-2
   3284c:	1884703a 	and	r2,r3,r2
   32850:	1001703a 	wrctl	status,r2
  
  return context;
   32854:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   32858:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   3285c:	e0bffa17 	ldw	r2,-24(fp)
   32860:	00c00044 	movi	r3,1
   32864:	1884983a 	sll	r2,r3,r2
   32868:	0084303a 	nor	r2,zero,r2
   3286c:	1007883a 	mov	r3,r2
   32870:	008000f4 	movhi	r2,3
   32874:	109bd704 	addi	r2,r2,28508
   32878:	10800017 	ldw	r2,0(r2)
   3287c:	1886703a 	and	r3,r3,r2
   32880:	008000f4 	movhi	r2,3
   32884:	109bd704 	addi	r2,r2,28508
   32888:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   3288c:	008000f4 	movhi	r2,3
   32890:	109bd704 	addi	r2,r2,28508
   32894:	10800017 	ldw	r2,0(r2)
   32898:	100170fa 	wrctl	ienable,r2
   3289c:	e0bffc17 	ldw	r2,-16(fp)
   328a0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   328a4:	e0bffd17 	ldw	r2,-12(fp)
   328a8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   328ac:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   328b0:	0001883a 	nop
}
   328b4:	e037883a 	mov	sp,fp
   328b8:	df000017 	ldw	fp,0(sp)
   328bc:	dec00104 	addi	sp,sp,4
   328c0:	f800283a 	ret

000328c4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   328c4:	defffc04 	addi	sp,sp,-16
   328c8:	df000315 	stw	fp,12(sp)
   328cc:	df000304 	addi	fp,sp,12
   328d0:	e13ffe15 	stw	r4,-8(fp)
   328d4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   328d8:	000530fa 	rdctl	r2,ienable
   328dc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   328e0:	e0bfff17 	ldw	r2,-4(fp)
   328e4:	00c00044 	movi	r3,1
   328e8:	1884983a 	sll	r2,r3,r2
   328ec:	1007883a 	mov	r3,r2
   328f0:	e0bffd17 	ldw	r2,-12(fp)
   328f4:	1884703a 	and	r2,r3,r2
   328f8:	1004c03a 	cmpne	r2,r2,zero
   328fc:	10803fcc 	andi	r2,r2,255
}
   32900:	e037883a 	mov	sp,fp
   32904:	df000017 	ldw	fp,0(sp)
   32908:	dec00104 	addi	sp,sp,4
   3290c:	f800283a 	ret

00032910 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   32910:	defff504 	addi	sp,sp,-44
   32914:	dfc00a15 	stw	ra,40(sp)
   32918:	df000915 	stw	fp,36(sp)
   3291c:	df000904 	addi	fp,sp,36
   32920:	e13ffc15 	stw	r4,-16(fp)
   32924:	e17ffd15 	stw	r5,-12(fp)
   32928:	e1bffe15 	stw	r6,-8(fp)
   3292c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   32930:	00bffa84 	movi	r2,-22
   32934:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   32938:	e0bffd17 	ldw	r2,-12(fp)
   3293c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   32940:	e0bff817 	ldw	r2,-32(fp)
   32944:	10800808 	cmpgei	r2,r2,32
   32948:	1000271e 	bne	r2,zero,329e8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   3294c:	0005303a 	rdctl	r2,status
   32950:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   32954:	e0fffa17 	ldw	r3,-24(fp)
   32958:	00bfff84 	movi	r2,-2
   3295c:	1884703a 	and	r2,r3,r2
   32960:	1001703a 	wrctl	status,r2
  
  return context;
   32964:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   32968:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
   3296c:	008000f4 	movhi	r2,3
   32970:	109be304 	addi	r2,r2,28556
   32974:	e0fff817 	ldw	r3,-32(fp)
   32978:	180690fa 	slli	r3,r3,3
   3297c:	10c5883a 	add	r2,r2,r3
   32980:	e0fffe17 	ldw	r3,-8(fp)
   32984:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   32988:	008000f4 	movhi	r2,3
   3298c:	109be304 	addi	r2,r2,28556
   32990:	e0fff817 	ldw	r3,-32(fp)
   32994:	180690fa 	slli	r3,r3,3
   32998:	10c5883a 	add	r2,r2,r3
   3299c:	10800104 	addi	r2,r2,4
   329a0:	e0ffff17 	ldw	r3,-4(fp)
   329a4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   329a8:	e0bffe17 	ldw	r2,-8(fp)
   329ac:	10000526 	beq	r2,zero,329c4 <alt_iic_isr_register+0xb4>
   329b0:	e0bff817 	ldw	r2,-32(fp)
   329b4:	e13ffc17 	ldw	r4,-16(fp)
   329b8:	100b883a 	mov	r5,r2
   329bc:	00327800 	call	32780 <alt_ic_irq_enable>
   329c0:	00000406 	br	329d4 <alt_iic_isr_register+0xc4>
   329c4:	e0bff817 	ldw	r2,-32(fp)
   329c8:	e13ffc17 	ldw	r4,-16(fp)
   329cc:	100b883a 	mov	r5,r2
   329d0:	00328200 	call	32820 <alt_ic_irq_disable>
   329d4:	e0bff715 	stw	r2,-36(fp)
   329d8:	e0bff917 	ldw	r2,-28(fp)
   329dc:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   329e0:	e0bffb17 	ldw	r2,-20(fp)
   329e4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   329e8:	e0bff717 	ldw	r2,-36(fp)
}
   329ec:	e037883a 	mov	sp,fp
   329f0:	dfc00117 	ldw	ra,4(sp)
   329f4:	df000017 	ldw	fp,0(sp)
   329f8:	dec00204 	addi	sp,sp,8
   329fc:	f800283a 	ret

00032a00 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   32a00:	defff804 	addi	sp,sp,-32
   32a04:	dfc00715 	stw	ra,28(sp)
   32a08:	df000615 	stw	fp,24(sp)
   32a0c:	dc000515 	stw	r16,20(sp)
   32a10:	df000604 	addi	fp,sp,24
   32a14:	e13ffb15 	stw	r4,-20(fp)
   32a18:	e17ffc15 	stw	r5,-16(fp)
   32a1c:	e1bffd15 	stw	r6,-12(fp)
   32a20:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   32a24:	e13ffc17 	ldw	r4,-16(fp)
   32a28:	e17ffd17 	ldw	r5,-12(fp)
   32a2c:	e1bffe17 	ldw	r6,-8(fp)
   32a30:	0032c9c0 	call	32c9c <open>
   32a34:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   32a38:	e0bffa17 	ldw	r2,-24(fp)
   32a3c:	10002216 	blt	r2,zero,32ac8 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   32a40:	040000f4 	movhi	r16,3
   32a44:	84108804 	addi	r16,r16,16928
   32a48:	e0bffa17 	ldw	r2,-24(fp)
   32a4c:	1009883a 	mov	r4,r2
   32a50:	01400304 	movi	r5,12
   32a54:	002e2bc0 	call	2e2bc <__mulsi3>
   32a58:	8085883a 	add	r2,r16,r2
   32a5c:	10c00017 	ldw	r3,0(r2)
   32a60:	e0bffb17 	ldw	r2,-20(fp)
   32a64:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   32a68:	040000f4 	movhi	r16,3
   32a6c:	84108804 	addi	r16,r16,16928
   32a70:	e0bffa17 	ldw	r2,-24(fp)
   32a74:	1009883a 	mov	r4,r2
   32a78:	01400304 	movi	r5,12
   32a7c:	002e2bc0 	call	2e2bc <__mulsi3>
   32a80:	8085883a 	add	r2,r16,r2
   32a84:	10800104 	addi	r2,r2,4
   32a88:	10c00017 	ldw	r3,0(r2)
   32a8c:	e0bffb17 	ldw	r2,-20(fp)
   32a90:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   32a94:	040000f4 	movhi	r16,3
   32a98:	84108804 	addi	r16,r16,16928
   32a9c:	e0bffa17 	ldw	r2,-24(fp)
   32aa0:	1009883a 	mov	r4,r2
   32aa4:	01400304 	movi	r5,12
   32aa8:	002e2bc0 	call	2e2bc <__mulsi3>
   32aac:	8085883a 	add	r2,r16,r2
   32ab0:	10800204 	addi	r2,r2,8
   32ab4:	10c00017 	ldw	r3,0(r2)
   32ab8:	e0bffb17 	ldw	r2,-20(fp)
   32abc:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   32ac0:	e13ffa17 	ldw	r4,-24(fp)
   32ac4:	00312540 	call	31254 <alt_release_fd>
  }
} 
   32ac8:	e6ffff04 	addi	sp,fp,-4
   32acc:	dfc00217 	ldw	ra,8(sp)
   32ad0:	df000117 	ldw	fp,4(sp)
   32ad4:	dc000017 	ldw	r16,0(sp)
   32ad8:	dec00304 	addi	sp,sp,12
   32adc:	f800283a 	ret

00032ae0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   32ae0:	defffb04 	addi	sp,sp,-20
   32ae4:	dfc00415 	stw	ra,16(sp)
   32ae8:	df000315 	stw	fp,12(sp)
   32aec:	df000304 	addi	fp,sp,12
   32af0:	e13ffd15 	stw	r4,-12(fp)
   32af4:	e17ffe15 	stw	r5,-8(fp)
   32af8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   32afc:	010000f4 	movhi	r4,3
   32b00:	21108b04 	addi	r4,r4,16940
   32b04:	e17ffd17 	ldw	r5,-12(fp)
   32b08:	01800044 	movi	r6,1
   32b0c:	01c07fc4 	movi	r7,511
   32b10:	0032a000 	call	32a00 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   32b14:	010000f4 	movhi	r4,3
   32b18:	21108804 	addi	r4,r4,16928
   32b1c:	e17ffe17 	ldw	r5,-8(fp)
   32b20:	000d883a 	mov	r6,zero
   32b24:	01c07fc4 	movi	r7,511
   32b28:	0032a000 	call	32a00 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   32b2c:	010000f4 	movhi	r4,3
   32b30:	21108e04 	addi	r4,r4,16952
   32b34:	e17fff17 	ldw	r5,-4(fp)
   32b38:	01800044 	movi	r6,1
   32b3c:	01c07fc4 	movi	r7,511
   32b40:	0032a000 	call	32a00 <alt_open_fd>
}  
   32b44:	e037883a 	mov	sp,fp
   32b48:	dfc00117 	ldw	ra,4(sp)
   32b4c:	df000017 	ldw	fp,0(sp)
   32b50:	dec00204 	addi	sp,sp,8
   32b54:	f800283a 	ret

00032b58 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   32b58:	defffe04 	addi	sp,sp,-8
   32b5c:	dfc00115 	stw	ra,4(sp)
   32b60:	df000015 	stw	fp,0(sp)
   32b64:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   32b68:	008000f4 	movhi	r2,3
   32b6c:	10950b04 	addi	r2,r2,21548
   32b70:	10800017 	ldw	r2,0(r2)
   32b74:	10000526 	beq	r2,zero,32b8c <alt_get_errno+0x34>
   32b78:	008000f4 	movhi	r2,3
   32b7c:	10950b04 	addi	r2,r2,21548
   32b80:	10800017 	ldw	r2,0(r2)
   32b84:	103ee83a 	callr	r2
   32b88:	00000206 	br	32b94 <alt_get_errno+0x3c>
   32b8c:	008000f4 	movhi	r2,3
   32b90:	109bd104 	addi	r2,r2,28484
}
   32b94:	e037883a 	mov	sp,fp
   32b98:	dfc00117 	ldw	ra,4(sp)
   32b9c:	df000017 	ldw	fp,0(sp)
   32ba0:	dec00204 	addi	sp,sp,8
   32ba4:	f800283a 	ret

00032ba8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   32ba8:	defffb04 	addi	sp,sp,-20
   32bac:	dfc00415 	stw	ra,16(sp)
   32bb0:	df000315 	stw	fp,12(sp)
   32bb4:	dc000215 	stw	r16,8(sp)
   32bb8:	df000304 	addi	fp,sp,12
   32bbc:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   32bc0:	e0bffe17 	ldw	r2,-8(fp)
   32bc4:	10800217 	ldw	r2,8(r2)
   32bc8:	10d00034 	orhi	r3,r2,16384
   32bcc:	e0bffe17 	ldw	r2,-8(fp)
   32bd0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   32bd4:	e03ffd15 	stw	zero,-12(fp)
   32bd8:	00002306 	br	32c68 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   32bdc:	040000f4 	movhi	r16,3
   32be0:	84108804 	addi	r16,r16,16928
   32be4:	e0bffd17 	ldw	r2,-12(fp)
   32be8:	1009883a 	mov	r4,r2
   32bec:	01400304 	movi	r5,12
   32bf0:	002e2bc0 	call	2e2bc <__mulsi3>
   32bf4:	8085883a 	add	r2,r16,r2
   32bf8:	10c00017 	ldw	r3,0(r2)
   32bfc:	e0bffe17 	ldw	r2,-8(fp)
   32c00:	10800017 	ldw	r2,0(r2)
   32c04:	1880151e 	bne	r3,r2,32c5c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   32c08:	040000f4 	movhi	r16,3
   32c0c:	84108804 	addi	r16,r16,16928
   32c10:	e0bffd17 	ldw	r2,-12(fp)
   32c14:	1009883a 	mov	r4,r2
   32c18:	01400304 	movi	r5,12
   32c1c:	002e2bc0 	call	2e2bc <__mulsi3>
   32c20:	8085883a 	add	r2,r16,r2
   32c24:	10800204 	addi	r2,r2,8
   32c28:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   32c2c:	10000b0e 	bge	r2,zero,32c5c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   32c30:	e13ffd17 	ldw	r4,-12(fp)
   32c34:	01400304 	movi	r5,12
   32c38:	002e2bc0 	call	2e2bc <__mulsi3>
   32c3c:	1007883a 	mov	r3,r2
   32c40:	008000f4 	movhi	r2,3
   32c44:	10908804 	addi	r2,r2,16928
   32c48:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   32c4c:	e0bffe17 	ldw	r2,-8(fp)
   32c50:	18800226 	beq	r3,r2,32c5c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   32c54:	00bffcc4 	movi	r2,-13
   32c58:	00000a06 	br	32c84 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   32c5c:	e0bffd17 	ldw	r2,-12(fp)
   32c60:	10800044 	addi	r2,r2,1
   32c64:	e0bffd15 	stw	r2,-12(fp)
   32c68:	008000f4 	movhi	r2,3
   32c6c:	10950a04 	addi	r2,r2,21544
   32c70:	10800017 	ldw	r2,0(r2)
   32c74:	1007883a 	mov	r3,r2
   32c78:	e0bffd17 	ldw	r2,-12(fp)
   32c7c:	18bfd72e 	bgeu	r3,r2,32bdc <_gp+0xffff57dc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   32c80:	0005883a 	mov	r2,zero
}
   32c84:	e6ffff04 	addi	sp,fp,-4
   32c88:	dfc00217 	ldw	ra,8(sp)
   32c8c:	df000117 	ldw	fp,4(sp)
   32c90:	dc000017 	ldw	r16,0(sp)
   32c94:	dec00304 	addi	sp,sp,12
   32c98:	f800283a 	ret

00032c9c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   32c9c:	defff604 	addi	sp,sp,-40
   32ca0:	dfc00915 	stw	ra,36(sp)
   32ca4:	df000815 	stw	fp,32(sp)
   32ca8:	df000804 	addi	fp,sp,32
   32cac:	e13ffd15 	stw	r4,-12(fp)
   32cb0:	e17ffe15 	stw	r5,-8(fp)
   32cb4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   32cb8:	00bfffc4 	movi	r2,-1
   32cbc:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   32cc0:	00bffb44 	movi	r2,-19
   32cc4:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   32cc8:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   32ccc:	e13ffd17 	ldw	r4,-12(fp)
   32cd0:	014000f4 	movhi	r5,3
   32cd4:	29550804 	addi	r5,r5,21536
   32cd8:	0032e1c0 	call	32e1c <alt_find_dev>
   32cdc:	e0bff815 	stw	r2,-32(fp)
   32ce0:	e0bff817 	ldw	r2,-32(fp)
   32ce4:	1000051e 	bne	r2,zero,32cfc <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   32ce8:	e13ffd17 	ldw	r4,-12(fp)
   32cec:	0032eac0 	call	32eac <alt_find_file>
   32cf0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   32cf4:	00800044 	movi	r2,1
   32cf8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   32cfc:	e0bff817 	ldw	r2,-32(fp)
   32d00:	10002b26 	beq	r2,zero,32db0 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
   32d04:	e13ff817 	ldw	r4,-32(fp)
   32d08:	0032fc00 	call	32fc0 <alt_get_fd>
   32d0c:	e0bff915 	stw	r2,-28(fp)
   32d10:	e0bff917 	ldw	r2,-28(fp)
   32d14:	1000030e 	bge	r2,zero,32d24 <open+0x88>
    {
      status = index;
   32d18:	e0bff917 	ldw	r2,-28(fp)
   32d1c:	e0bffa15 	stw	r2,-24(fp)
   32d20:	00002506 	br	32db8 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
   32d24:	e13ff917 	ldw	r4,-28(fp)
   32d28:	01400304 	movi	r5,12
   32d2c:	002e2bc0 	call	2e2bc <__mulsi3>
   32d30:	1007883a 	mov	r3,r2
   32d34:	008000f4 	movhi	r2,3
   32d38:	10908804 	addi	r2,r2,16928
   32d3c:	1885883a 	add	r2,r3,r2
   32d40:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   32d44:	e0fffe17 	ldw	r3,-8(fp)
   32d48:	00900034 	movhi	r2,16384
   32d4c:	10bfffc4 	addi	r2,r2,-1
   32d50:	1886703a 	and	r3,r3,r2
   32d54:	e0bffc17 	ldw	r2,-16(fp)
   32d58:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   32d5c:	e0bffb17 	ldw	r2,-20(fp)
   32d60:	1000051e 	bne	r2,zero,32d78 <open+0xdc>
   32d64:	e13ffc17 	ldw	r4,-16(fp)
   32d68:	0032ba80 	call	32ba8 <alt_file_locked>
   32d6c:	e0bffa15 	stw	r2,-24(fp)
   32d70:	e0bffa17 	ldw	r2,-24(fp)
   32d74:	10001016 	blt	r2,zero,32db8 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   32d78:	e0bff817 	ldw	r2,-32(fp)
   32d7c:	10800317 	ldw	r2,12(r2)
   32d80:	10000826 	beq	r2,zero,32da4 <open+0x108>
   32d84:	e0bff817 	ldw	r2,-32(fp)
   32d88:	10800317 	ldw	r2,12(r2)
   32d8c:	e13ffc17 	ldw	r4,-16(fp)
   32d90:	e17ffd17 	ldw	r5,-12(fp)
   32d94:	e1bffe17 	ldw	r6,-8(fp)
   32d98:	e1ffff17 	ldw	r7,-4(fp)
   32d9c:	103ee83a 	callr	r2
   32da0:	00000106 	br	32da8 <open+0x10c>
   32da4:	0005883a 	mov	r2,zero
   32da8:	e0bffa15 	stw	r2,-24(fp)
   32dac:	00000206 	br	32db8 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
   32db0:	00bffb44 	movi	r2,-19
   32db4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   32db8:	e0bffa17 	ldw	r2,-24(fp)
   32dbc:	1000090e 	bge	r2,zero,32de4 <open+0x148>
  {
    alt_release_fd (index);  
   32dc0:	e13ff917 	ldw	r4,-28(fp)
   32dc4:	00312540 	call	31254 <alt_release_fd>
    ALT_ERRNO = -status;
   32dc8:	0032b580 	call	32b58 <alt_get_errno>
   32dcc:	1007883a 	mov	r3,r2
   32dd0:	e0bffa17 	ldw	r2,-24(fp)
   32dd4:	0085c83a 	sub	r2,zero,r2
   32dd8:	18800015 	stw	r2,0(r3)
    return -1;
   32ddc:	00bfffc4 	movi	r2,-1
   32de0:	00000106 	br	32de8 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
   32de4:	e0bff917 	ldw	r2,-28(fp)
}
   32de8:	e037883a 	mov	sp,fp
   32dec:	dfc00117 	ldw	ra,4(sp)
   32df0:	df000017 	ldw	fp,0(sp)
   32df4:	dec00204 	addi	sp,sp,8
   32df8:	f800283a 	ret

00032dfc <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   32dfc:	deffff04 	addi	sp,sp,-4
   32e00:	df000015 	stw	fp,0(sp)
   32e04:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   32e08:	000170fa 	wrctl	ienable,zero
}
   32e0c:	e037883a 	mov	sp,fp
   32e10:	df000017 	ldw	fp,0(sp)
   32e14:	dec00104 	addi	sp,sp,4
   32e18:	f800283a 	ret

00032e1c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   32e1c:	defffa04 	addi	sp,sp,-24
   32e20:	dfc00515 	stw	ra,20(sp)
   32e24:	df000415 	stw	fp,16(sp)
   32e28:	df000404 	addi	fp,sp,16
   32e2c:	e13ffe15 	stw	r4,-8(fp)
   32e30:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   32e34:	e0bfff17 	ldw	r2,-4(fp)
   32e38:	10800017 	ldw	r2,0(r2)
   32e3c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   32e40:	e13ffe17 	ldw	r4,-8(fp)
   32e44:	0020d780 	call	20d78 <strlen>
   32e48:	10800044 	addi	r2,r2,1
   32e4c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   32e50:	00000d06 	br	32e88 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   32e54:	e0bffc17 	ldw	r2,-16(fp)
   32e58:	10c00217 	ldw	r3,8(r2)
   32e5c:	e0bffd17 	ldw	r2,-12(fp)
   32e60:	1809883a 	mov	r4,r3
   32e64:	e17ffe17 	ldw	r5,-8(fp)
   32e68:	100d883a 	mov	r6,r2
   32e6c:	003317c0 	call	3317c <memcmp>
   32e70:	1000021e 	bne	r2,zero,32e7c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   32e74:	e0bffc17 	ldw	r2,-16(fp)
   32e78:	00000706 	br	32e98 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   32e7c:	e0bffc17 	ldw	r2,-16(fp)
   32e80:	10800017 	ldw	r2,0(r2)
   32e84:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   32e88:	e0fffc17 	ldw	r3,-16(fp)
   32e8c:	e0bfff17 	ldw	r2,-4(fp)
   32e90:	18bff01e 	bne	r3,r2,32e54 <_gp+0xffff5a54>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   32e94:	0005883a 	mov	r2,zero
}
   32e98:	e037883a 	mov	sp,fp
   32e9c:	dfc00117 	ldw	ra,4(sp)
   32ea0:	df000017 	ldw	fp,0(sp)
   32ea4:	dec00204 	addi	sp,sp,8
   32ea8:	f800283a 	ret

00032eac <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   32eac:	defffb04 	addi	sp,sp,-20
   32eb0:	dfc00415 	stw	ra,16(sp)
   32eb4:	df000315 	stw	fp,12(sp)
   32eb8:	df000304 	addi	fp,sp,12
   32ebc:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   32ec0:	008000f4 	movhi	r2,3
   32ec4:	10950604 	addi	r2,r2,21528
   32ec8:	10800017 	ldw	r2,0(r2)
   32ecc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   32ed0:	00003106 	br	32f98 <alt_find_file+0xec>
  {
    len = strlen(next->name);
   32ed4:	e0bffd17 	ldw	r2,-12(fp)
   32ed8:	10800217 	ldw	r2,8(r2)
   32edc:	1009883a 	mov	r4,r2
   32ee0:	0020d780 	call	20d78 <strlen>
   32ee4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   32ee8:	e0bffd17 	ldw	r2,-12(fp)
   32eec:	10c00217 	ldw	r3,8(r2)
   32ef0:	e0bffe17 	ldw	r2,-8(fp)
   32ef4:	10bfffc4 	addi	r2,r2,-1
   32ef8:	1885883a 	add	r2,r3,r2
   32efc:	10800003 	ldbu	r2,0(r2)
   32f00:	10803fcc 	andi	r2,r2,255
   32f04:	1080201c 	xori	r2,r2,128
   32f08:	10bfe004 	addi	r2,r2,-128
   32f0c:	10800bd8 	cmpnei	r2,r2,47
   32f10:	1000031e 	bne	r2,zero,32f20 <alt_find_file+0x74>
    {
      len -= 1;
   32f14:	e0bffe17 	ldw	r2,-8(fp)
   32f18:	10bfffc4 	addi	r2,r2,-1
   32f1c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   32f20:	e0bffe17 	ldw	r2,-8(fp)
   32f24:	e0ffff17 	ldw	r3,-4(fp)
   32f28:	1885883a 	add	r2,r3,r2
   32f2c:	10800003 	ldbu	r2,0(r2)
   32f30:	10803fcc 	andi	r2,r2,255
   32f34:	1080201c 	xori	r2,r2,128
   32f38:	10bfe004 	addi	r2,r2,-128
   32f3c:	10800be0 	cmpeqi	r2,r2,47
   32f40:	1000081e 	bne	r2,zero,32f64 <alt_find_file+0xb8>
   32f44:	e0bffe17 	ldw	r2,-8(fp)
   32f48:	e0ffff17 	ldw	r3,-4(fp)
   32f4c:	1885883a 	add	r2,r3,r2
   32f50:	10800003 	ldbu	r2,0(r2)
   32f54:	10803fcc 	andi	r2,r2,255
   32f58:	1080201c 	xori	r2,r2,128
   32f5c:	10bfe004 	addi	r2,r2,-128
   32f60:	10000a1e 	bne	r2,zero,32f8c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
   32f64:	e0bffd17 	ldw	r2,-12(fp)
   32f68:	10c00217 	ldw	r3,8(r2)
   32f6c:	e0bffe17 	ldw	r2,-8(fp)
   32f70:	1809883a 	mov	r4,r3
   32f74:	e17fff17 	ldw	r5,-4(fp)
   32f78:	100d883a 	mov	r6,r2
   32f7c:	003317c0 	call	3317c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   32f80:	1000021e 	bne	r2,zero,32f8c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   32f84:	e0bffd17 	ldw	r2,-12(fp)
   32f88:	00000806 	br	32fac <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
   32f8c:	e0bffd17 	ldw	r2,-12(fp)
   32f90:	10800017 	ldw	r2,0(r2)
   32f94:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   32f98:	e0fffd17 	ldw	r3,-12(fp)
   32f9c:	008000f4 	movhi	r2,3
   32fa0:	10950604 	addi	r2,r2,21528
   32fa4:	18bfcb1e 	bne	r3,r2,32ed4 <_gp+0xffff5ad4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   32fa8:	0005883a 	mov	r2,zero
}
   32fac:	e037883a 	mov	sp,fp
   32fb0:	dfc00117 	ldw	ra,4(sp)
   32fb4:	df000017 	ldw	fp,0(sp)
   32fb8:	dec00204 	addi	sp,sp,8
   32fbc:	f800283a 	ret

00032fc0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   32fc0:	defffa04 	addi	sp,sp,-24
   32fc4:	dfc00515 	stw	ra,20(sp)
   32fc8:	df000415 	stw	fp,16(sp)
   32fcc:	dc000315 	stw	r16,12(sp)
   32fd0:	df000404 	addi	fp,sp,16
   32fd4:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   32fd8:	00bffa04 	movi	r2,-24
   32fdc:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   32fe0:	e03ffc15 	stw	zero,-16(fp)
   32fe4:	00002106 	br	3306c <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
   32fe8:	040000f4 	movhi	r16,3
   32fec:	84108804 	addi	r16,r16,16928
   32ff0:	e0bffc17 	ldw	r2,-16(fp)
   32ff4:	1009883a 	mov	r4,r2
   32ff8:	01400304 	movi	r5,12
   32ffc:	002e2bc0 	call	2e2bc <__mulsi3>
   33000:	8085883a 	add	r2,r16,r2
   33004:	10800017 	ldw	r2,0(r2)
   33008:	1000151e 	bne	r2,zero,33060 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
   3300c:	040000f4 	movhi	r16,3
   33010:	84108804 	addi	r16,r16,16928
   33014:	e0bffc17 	ldw	r2,-16(fp)
   33018:	1009883a 	mov	r4,r2
   3301c:	01400304 	movi	r5,12
   33020:	002e2bc0 	call	2e2bc <__mulsi3>
   33024:	8085883a 	add	r2,r16,r2
   33028:	e0fffe17 	ldw	r3,-8(fp)
   3302c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   33030:	008000f4 	movhi	r2,3
   33034:	10950a04 	addi	r2,r2,21544
   33038:	10c00017 	ldw	r3,0(r2)
   3303c:	e0bffc17 	ldw	r2,-16(fp)
   33040:	1880040e 	bge	r3,r2,33054 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
   33044:	008000f4 	movhi	r2,3
   33048:	10950a04 	addi	r2,r2,21544
   3304c:	e0fffc17 	ldw	r3,-16(fp)
   33050:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
   33054:	e0bffc17 	ldw	r2,-16(fp)
   33058:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   3305c:	00000606 	br	33078 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   33060:	e0bffc17 	ldw	r2,-16(fp)
   33064:	10800044 	addi	r2,r2,1
   33068:	e0bffc15 	stw	r2,-16(fp)
   3306c:	e0bffc17 	ldw	r2,-16(fp)
   33070:	10800810 	cmplti	r2,r2,32
   33074:	103fdc1e 	bne	r2,zero,32fe8 <_gp+0xffff5be8>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   33078:	e0bffd17 	ldw	r2,-12(fp)
}
   3307c:	e6ffff04 	addi	sp,fp,-4
   33080:	dfc00217 	ldw	ra,8(sp)
   33084:	df000117 	ldw	fp,4(sp)
   33088:	dc000017 	ldw	r16,0(sp)
   3308c:	dec00304 	addi	sp,sp,12
   33090:	f800283a 	ret

00033094 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   33094:	defffe04 	addi	sp,sp,-8
   33098:	df000115 	stw	fp,4(sp)
   3309c:	df000104 	addi	fp,sp,4
   330a0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   330a4:	e0bfff17 	ldw	r2,-4(fp)
   330a8:	10bffe84 	addi	r2,r2,-6
   330ac:	10c00428 	cmpgeui	r3,r2,16
   330b0:	18001a1e 	bne	r3,zero,3311c <alt_exception_cause_generated_bad_addr+0x88>
   330b4:	100690ba 	slli	r3,r2,2
   330b8:	008000f4 	movhi	r2,3
   330bc:	108c3304 	addi	r2,r2,12492
   330c0:	1885883a 	add	r2,r3,r2
   330c4:	10800017 	ldw	r2,0(r2)
   330c8:	1000683a 	jmp	r2
   330cc:	0003310c 	andi	zero,zero,3268
   330d0:	0003310c 	andi	zero,zero,3268
   330d4:	0003311c 	xori	zero,zero,3268
   330d8:	0003311c 	xori	zero,zero,3268
   330dc:	0003311c 	xori	zero,zero,3268
   330e0:	0003310c 	andi	zero,zero,3268
   330e4:	00033114 	movui	zero,3268
   330e8:	0003311c 	xori	zero,zero,3268
   330ec:	0003310c 	andi	zero,zero,3268
   330f0:	0003310c 	andi	zero,zero,3268
   330f4:	0003311c 	xori	zero,zero,3268
   330f8:	0003310c 	andi	zero,zero,3268
   330fc:	00033114 	movui	zero,3268
   33100:	0003311c 	xori	zero,zero,3268
   33104:	0003311c 	xori	zero,zero,3268
   33108:	0003310c 	andi	zero,zero,3268
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   3310c:	00800044 	movi	r2,1
   33110:	00000306 	br	33120 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   33114:	0005883a 	mov	r2,zero
   33118:	00000106 	br	33120 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   3311c:	0005883a 	mov	r2,zero
  }
}
   33120:	e037883a 	mov	sp,fp
   33124:	df000017 	ldw	fp,0(sp)
   33128:	dec00104 	addi	sp,sp,4
   3312c:	f800283a 	ret

00033130 <atexit>:
   33130:	200b883a 	mov	r5,r4
   33134:	000d883a 	mov	r6,zero
   33138:	0009883a 	mov	r4,zero
   3313c:	000f883a 	mov	r7,zero
   33140:	00331f81 	jmpi	331f8 <__register_exitproc>

00033144 <exit>:
   33144:	defffe04 	addi	sp,sp,-8
   33148:	000b883a 	mov	r5,zero
   3314c:	dc000015 	stw	r16,0(sp)
   33150:	dfc00115 	stw	ra,4(sp)
   33154:	2021883a 	mov	r16,r4
   33158:	003330c0 	call	3330c <__call_exitprocs>
   3315c:	008000f4 	movhi	r2,3
   33160:	10950004 	addi	r2,r2,21504
   33164:	11000017 	ldw	r4,0(r2)
   33168:	20800f17 	ldw	r2,60(r4)
   3316c:	10000126 	beq	r2,zero,33174 <exit+0x30>
   33170:	103ee83a 	callr	r2
   33174:	8009883a 	mov	r4,r16
   33178:	00334a00 	call	334a0 <_exit>

0003317c <memcmp>:
   3317c:	01c000c4 	movi	r7,3
   33180:	3980192e 	bgeu	r7,r6,331e8 <memcmp+0x6c>
   33184:	2144b03a 	or	r2,r4,r5
   33188:	11c4703a 	and	r2,r2,r7
   3318c:	10000f26 	beq	r2,zero,331cc <memcmp+0x50>
   33190:	20800003 	ldbu	r2,0(r4)
   33194:	28c00003 	ldbu	r3,0(r5)
   33198:	10c0151e 	bne	r2,r3,331f0 <memcmp+0x74>
   3319c:	31bfff84 	addi	r6,r6,-2
   331a0:	01ffffc4 	movi	r7,-1
   331a4:	00000406 	br	331b8 <memcmp+0x3c>
   331a8:	20800003 	ldbu	r2,0(r4)
   331ac:	28c00003 	ldbu	r3,0(r5)
   331b0:	31bfffc4 	addi	r6,r6,-1
   331b4:	10c00e1e 	bne	r2,r3,331f0 <memcmp+0x74>
   331b8:	21000044 	addi	r4,r4,1
   331bc:	29400044 	addi	r5,r5,1
   331c0:	31fff91e 	bne	r6,r7,331a8 <_gp+0xffff5da8>
   331c4:	0005883a 	mov	r2,zero
   331c8:	f800283a 	ret
   331cc:	20c00017 	ldw	r3,0(r4)
   331d0:	28800017 	ldw	r2,0(r5)
   331d4:	1880041e 	bne	r3,r2,331e8 <memcmp+0x6c>
   331d8:	31bfff04 	addi	r6,r6,-4
   331dc:	21000104 	addi	r4,r4,4
   331e0:	29400104 	addi	r5,r5,4
   331e4:	39bff936 	bltu	r7,r6,331cc <_gp+0xffff5dcc>
   331e8:	303fe91e 	bne	r6,zero,33190 <_gp+0xffff5d90>
   331ec:	003ff506 	br	331c4 <_gp+0xffff5dc4>
   331f0:	10c5c83a 	sub	r2,r2,r3
   331f4:	f800283a 	ret

000331f8 <__register_exitproc>:
   331f8:	008000f4 	movhi	r2,3
   331fc:	defffa04 	addi	sp,sp,-24
   33200:	10950004 	addi	r2,r2,21504
   33204:	dc000315 	stw	r16,12(sp)
   33208:	14000017 	ldw	r16,0(r2)
   3320c:	dc400415 	stw	r17,16(sp)
   33210:	dfc00515 	stw	ra,20(sp)
   33214:	80805217 	ldw	r2,328(r16)
   33218:	2023883a 	mov	r17,r4
   3321c:	10003626 	beq	r2,zero,332f8 <__register_exitproc+0x100>
   33220:	10c00117 	ldw	r3,4(r2)
   33224:	010007c4 	movi	r4,31
   33228:	20c00e16 	blt	r4,r3,33264 <__register_exitproc+0x6c>
   3322c:	1a400044 	addi	r9,r3,1
   33230:	8800211e 	bne	r17,zero,332b8 <__register_exitproc+0xc0>
   33234:	18c00084 	addi	r3,r3,2
   33238:	18c7883a 	add	r3,r3,r3
   3323c:	18c7883a 	add	r3,r3,r3
   33240:	12400115 	stw	r9,4(r2)
   33244:	10c7883a 	add	r3,r2,r3
   33248:	19400015 	stw	r5,0(r3)
   3324c:	0005883a 	mov	r2,zero
   33250:	dfc00517 	ldw	ra,20(sp)
   33254:	dc400417 	ldw	r17,16(sp)
   33258:	dc000317 	ldw	r16,12(sp)
   3325c:	dec00604 	addi	sp,sp,24
   33260:	f800283a 	ret
   33264:	00800034 	movhi	r2,0
   33268:	10800004 	addi	r2,r2,0
   3326c:	10002526 	beq	r2,zero,33304 <__register_exitproc+0x10c>
   33270:	01006404 	movi	r4,400
   33274:	d9400015 	stw	r5,0(sp)
   33278:	d9800115 	stw	r6,4(sp)
   3327c:	d9c00215 	stw	r7,8(sp)
   33280:	00000000 	call	0 <__reset-0x20000>
   33284:	d9400017 	ldw	r5,0(sp)
   33288:	d9800117 	ldw	r6,4(sp)
   3328c:	d9c00217 	ldw	r7,8(sp)
   33290:	10001c26 	beq	r2,zero,33304 <__register_exitproc+0x10c>
   33294:	80c05217 	ldw	r3,328(r16)
   33298:	10000115 	stw	zero,4(r2)
   3329c:	02400044 	movi	r9,1
   332a0:	10c00015 	stw	r3,0(r2)
   332a4:	80805215 	stw	r2,328(r16)
   332a8:	10006215 	stw	zero,392(r2)
   332ac:	10006315 	stw	zero,396(r2)
   332b0:	0007883a 	mov	r3,zero
   332b4:	883fdf26 	beq	r17,zero,33234 <_gp+0xffff5e34>
   332b8:	18d1883a 	add	r8,r3,r3
   332bc:	4211883a 	add	r8,r8,r8
   332c0:	1211883a 	add	r8,r2,r8
   332c4:	41802215 	stw	r6,136(r8)
   332c8:	01000044 	movi	r4,1
   332cc:	11806217 	ldw	r6,392(r2)
   332d0:	20c8983a 	sll	r4,r4,r3
   332d4:	310cb03a 	or	r6,r6,r4
   332d8:	11806215 	stw	r6,392(r2)
   332dc:	41c04215 	stw	r7,264(r8)
   332e0:	01800084 	movi	r6,2
   332e4:	89bfd31e 	bne	r17,r6,33234 <_gp+0xffff5e34>
   332e8:	11806317 	ldw	r6,396(r2)
   332ec:	3108b03a 	or	r4,r6,r4
   332f0:	11006315 	stw	r4,396(r2)
   332f4:	003fcf06 	br	33234 <_gp+0xffff5e34>
   332f8:	80805304 	addi	r2,r16,332
   332fc:	80805215 	stw	r2,328(r16)
   33300:	003fc706 	br	33220 <_gp+0xffff5e20>
   33304:	00bfffc4 	movi	r2,-1
   33308:	003fd106 	br	33250 <_gp+0xffff5e50>

0003330c <__call_exitprocs>:
   3330c:	008000f4 	movhi	r2,3
   33310:	10950004 	addi	r2,r2,21504
   33314:	10800017 	ldw	r2,0(r2)
   33318:	defff404 	addi	sp,sp,-48
   3331c:	dd800815 	stw	r22,32(sp)
   33320:	d8800015 	stw	r2,0(sp)
   33324:	10805204 	addi	r2,r2,328
   33328:	dd000615 	stw	r20,24(sp)
   3332c:	dc800415 	stw	r18,16(sp)
   33330:	dfc00b15 	stw	ra,44(sp)
   33334:	df000a15 	stw	fp,40(sp)
   33338:	ddc00915 	stw	r23,36(sp)
   3333c:	dd400715 	stw	r21,28(sp)
   33340:	dcc00515 	stw	r19,20(sp)
   33344:	dc400315 	stw	r17,12(sp)
   33348:	dc000215 	stw	r16,8(sp)
   3334c:	2025883a 	mov	r18,r4
   33350:	2829883a 	mov	r20,r5
   33354:	d8800115 	stw	r2,4(sp)
   33358:	05bfffc4 	movi	r22,-1
   3335c:	d8800017 	ldw	r2,0(sp)
   33360:	14c05217 	ldw	r19,328(r2)
   33364:	98001d26 	beq	r19,zero,333dc <__call_exitprocs+0xd0>
   33368:	dd400117 	ldw	r21,4(sp)
   3336c:	98800117 	ldw	r2,4(r19)
   33370:	173fffc4 	addi	fp,r2,-1
   33374:	e0000d16 	blt	fp,zero,333ac <__call_exitprocs+0xa0>
   33378:	14000044 	addi	r16,r2,1
   3337c:	8421883a 	add	r16,r16,r16
   33380:	8421883a 	add	r16,r16,r16
   33384:	84402004 	addi	r17,r16,128
   33388:	9c63883a 	add	r17,r19,r17
   3338c:	9c21883a 	add	r16,r19,r16
   33390:	a0001e26 	beq	r20,zero,3340c <__call_exitprocs+0x100>
   33394:	80804017 	ldw	r2,256(r16)
   33398:	15001c26 	beq	r2,r20,3340c <__call_exitprocs+0x100>
   3339c:	e73fffc4 	addi	fp,fp,-1
   333a0:	843fff04 	addi	r16,r16,-4
   333a4:	8c7fff04 	addi	r17,r17,-4
   333a8:	e5bff91e 	bne	fp,r22,33390 <_gp+0xffff5f90>
   333ac:	00800034 	movhi	r2,0
   333b0:	10800004 	addi	r2,r2,0
   333b4:	10000926 	beq	r2,zero,333dc <__call_exitprocs+0xd0>
   333b8:	98800117 	ldw	r2,4(r19)
   333bc:	1000311e 	bne	r2,zero,33484 <__call_exitprocs+0x178>
   333c0:	98800017 	ldw	r2,0(r19)
   333c4:	10003426 	beq	r2,zero,33498 <__call_exitprocs+0x18c>
   333c8:	9809883a 	mov	r4,r19
   333cc:	a8800015 	stw	r2,0(r21)
   333d0:	00000000 	call	0 <__reset-0x20000>
   333d4:	acc00017 	ldw	r19,0(r21)
   333d8:	983fe41e 	bne	r19,zero,3336c <_gp+0xffff5f6c>
   333dc:	dfc00b17 	ldw	ra,44(sp)
   333e0:	df000a17 	ldw	fp,40(sp)
   333e4:	ddc00917 	ldw	r23,36(sp)
   333e8:	dd800817 	ldw	r22,32(sp)
   333ec:	dd400717 	ldw	r21,28(sp)
   333f0:	dd000617 	ldw	r20,24(sp)
   333f4:	dcc00517 	ldw	r19,20(sp)
   333f8:	dc800417 	ldw	r18,16(sp)
   333fc:	dc400317 	ldw	r17,12(sp)
   33400:	dc000217 	ldw	r16,8(sp)
   33404:	dec00c04 	addi	sp,sp,48
   33408:	f800283a 	ret
   3340c:	98800117 	ldw	r2,4(r19)
   33410:	80c00017 	ldw	r3,0(r16)
   33414:	10bfffc4 	addi	r2,r2,-1
   33418:	17001526 	beq	r2,fp,33470 <__call_exitprocs+0x164>
   3341c:	80000015 	stw	zero,0(r16)
   33420:	183fde26 	beq	r3,zero,3339c <_gp+0xffff5f9c>
   33424:	00800044 	movi	r2,1
   33428:	1708983a 	sll	r4,r2,fp
   3342c:	98806217 	ldw	r2,392(r19)
   33430:	9dc00117 	ldw	r23,4(r19)
   33434:	2084703a 	and	r2,r4,r2
   33438:	1000061e 	bne	r2,zero,33454 <__call_exitprocs+0x148>
   3343c:	183ee83a 	callr	r3
   33440:	98800117 	ldw	r2,4(r19)
   33444:	15ffc51e 	bne	r2,r23,3335c <_gp+0xffff5f5c>
   33448:	a8800017 	ldw	r2,0(r21)
   3344c:	14ffd326 	beq	r2,r19,3339c <_gp+0xffff5f9c>
   33450:	003fc206 	br	3335c <_gp+0xffff5f5c>
   33454:	98806317 	ldw	r2,396(r19)
   33458:	2084703a 	and	r2,r4,r2
   3345c:	1000061e 	bne	r2,zero,33478 <__call_exitprocs+0x16c>
   33460:	89400017 	ldw	r5,0(r17)
   33464:	9009883a 	mov	r4,r18
   33468:	183ee83a 	callr	r3
   3346c:	003ff406 	br	33440 <_gp+0xffff6040>
   33470:	9f000115 	stw	fp,4(r19)
   33474:	003fea06 	br	33420 <_gp+0xffff6020>
   33478:	89000017 	ldw	r4,0(r17)
   3347c:	183ee83a 	callr	r3
   33480:	003fef06 	br	33440 <_gp+0xffff6040>
   33484:	98800017 	ldw	r2,0(r19)
   33488:	982b883a 	mov	r21,r19
   3348c:	1027883a 	mov	r19,r2
   33490:	983fb61e 	bne	r19,zero,3336c <_gp+0xffff5f6c>
   33494:	003fd106 	br	333dc <_gp+0xffff5fdc>
   33498:	0005883a 	mov	r2,zero
   3349c:	003ffa06 	br	33488 <_gp+0xffff6088>

000334a0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   334a0:	defffd04 	addi	sp,sp,-12
   334a4:	df000215 	stw	fp,8(sp)
   334a8:	df000204 	addi	fp,sp,8
   334ac:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   334b0:	0001883a 	nop
   334b4:	e0bfff17 	ldw	r2,-4(fp)
   334b8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   334bc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   334c0:	10000226 	beq	r2,zero,334cc <_exit+0x2c>
    ALT_SIM_FAIL();
   334c4:	002af070 	cmpltui	zero,zero,43969
   334c8:	00000106 	br	334d0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   334cc:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   334d0:	003fff06 	br	334d0 <_gp+0xffff60d0>
