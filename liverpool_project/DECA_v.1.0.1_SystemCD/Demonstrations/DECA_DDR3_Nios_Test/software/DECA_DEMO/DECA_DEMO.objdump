
DECA_DEMO.elf:     file format elf32-littlenios2
DECA_DEMO.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x22020240

Program Header:
    LOAD off    0x00001000 vaddr 0x22020000 paddr 0x22020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x22020020 paddr 0x22020020 align 2**12
         filesz 0x0000ff40 memsz 0x0000ff40 flags r-x
    LOAD off    0x00010f60 vaddr 0x2202ff60 paddr 0x22031a4c align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00013538 vaddr 0x22033538 paddr 0x22033538 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  22020000  22020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000220  22020020  22020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f8c8  22020240  22020240  00001240  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000458  2202fb08  2202fb08  00010b08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  2202ff60  22031a4c  00010f60  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  22033538  22033538  00013538  2**2
                  ALLOC, SMALL_DATA
  6 .mem_if_ddr3_emif 00000000  00000000  00000000  00012a4c  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  22033698  22033698  00012a4c  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012a4c  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000dd0  00000000  00000000  00012a70  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00025822  00000000  00000000  00013840  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 000097ee  00000000  00000000  00039062  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b866  00000000  00000000  00042850  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000021f4  00000000  00000000  0004e0b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000037bf  00000000  00000000  000502ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001709d  00000000  00000000  00053a6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  0006ab08  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001398  00000000  00000000  0006ab68  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006f282  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000a  00000000  00000000  0006f285  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006f28f  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006f290  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0006f291  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0006f295  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0006f299  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  0006f29d  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  0006f2a6  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  0006f2af  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000009  00000000  00000000  0006f2b8  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000036  00000000  00000000  0006f2c1  2**0
                  CONTENTS, READONLY
 30 .jdi          00003ee1  00000000  00000000  0006f2f7  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000be0ac  00000000  00000000  000731d8  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
22020000 l    d  .entry	00000000 .entry
22020020 l    d  .exceptions	00000000 .exceptions
22020240 l    d  .text	00000000 .text
2202fb08 l    d  .rodata	00000000 .rodata
2202ff60 l    d  .rwdata	00000000 .rwdata
22033538 l    d  .bss	00000000 .bss
00000000 l    d  .mem_if_ddr3_emif	00000000 .mem_if_ddr3_emif
22033698 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../DECA_DEMO_bsp//obj/HAL/src/crt0.o
22020288 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 mem_verify.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
22020b4c l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
2202fcae l     O .rodata	00000010 zeroes.4181
2202fcbe l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
22023168 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
22024ce8 l     F .text	00000008 __fp_lock
22024cf0 l     F .text	00000008 __fp_unlock
22024d04 l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
2202ff60 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
220303a4 l     O .rwdata	00000020 lc_ctype_charset
22030384 l     O .rwdata	00000020 lc_message_charset
220303c4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
2202fcf0 l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
22028194 l     F .text	000000fc __sprint_r.part.0
2202fe24 l     O .rodata	00000010 blanks.4125
2202fe14 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
2202d110 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
2202d274 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
2202d2a0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
2202d3a0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
2202d494 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
2202d578 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
2202d754 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
22031a3c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
2202db7c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
2202dcc4 l     F .text	00000038 alt_dev_reg
220309ac l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
2202dfb4 l     F .text	00000204 altera_avalon_jtag_uart_irq
2202e1b8 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
2202e7d8 l     F .text	00000074 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
2202eb6c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
2202f018 l     F .text	000000c0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
2202f150 l     F .text	00000050 alt_get_errno
2202f1a0 l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
2203356c g     O .bss	00000004 alt_instruction_exception_handler
22020e20 g     F .text	00000018 putchar
2202766c g     F .text	00000074 _mprec_log10
22027758 g     F .text	0000008c __any_on
22029c54 g     F .text	00000054 _isatty_r
2202fcfc g     O .rodata	00000028 __mprec_tinytens
2202d69c g     F .text	00000078 alt_main
22020e38 g     F .text	000000b8 _puts_r
22033598 g     O .bss	00000100 alt_irq
22029ca8 g     F .text	0000005c _lseek_r
22031a4c g       *ABS*	00000000 __flash_rwdata_start
2202bc78 g     F .text	00000084 .hidden __eqdf2
22033698 g       *ABS*	00000000 __alt_heap_start
22020ddc g     F .text	0000003c printf
22029d60 g     F .text	0000009c _wcrtomb_r
2202808c g     F .text	0000005c __sseek
22025038 g     F .text	00000010 __sinit
22029628 g     F .text	00000154 __swbuf_r
22025ab0 g     F .text	0000007c _setlocale_r
22024ea4 g     F .text	00000064 __sfmoreglue
2202d734 g     F .text	00000020 __malloc_unlock
220265d8 g     F .text	0000015c memmove
22025020 g     F .text	00000018 _cleanup
22026858 g     F .text	000000a8 _Balloc
2202bcfc g     F .text	000000e0 .hidden __gtdf2
2202f3c4 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
22020000 g     F .entry	0000001c __reset
22020020 g       *ABS*	00000000 __flash_exceptions_start
22029bfc g     F .text	00000058 _fstat_r
22033550 g     O .bss	00000004 errno
22028008 g     F .text	00000008 __seofread
22033558 g     O .bss	00000004 alt_argv
22039a0c g       *ABS*	00000000 _gp
2202db4c g     F .text	00000030 usleep
00000000 g       *ABS*	00000000 __alt_mem_mem_if_ddr3_emif
2203082c g     O .rwdata	00000180 alt_fd_list
22020e18 g     F .text	00000008 _putchar_r
2202f3e4 g     F .text	00000090 alt_find_dev
22020c78 g     F .text	00000138 memcpy
2202043c g     F .text	000004cc TMEM_Verify
22024cf8 g     F .text	0000000c _cleanup_r
2202cf38 g     F .text	000000d0 .hidden __floatsidf
2202f0d8 g     F .text	00000078 alt_io_redirect
2202bddc g     F .text	000000e0 .hidden __ltdf2
2202fb08 g       *ABS*	00000000 __DTOR_END__
22020ef0 g     F .text	00000014 puts
2202f6c8 g     F .text	0000009c alt_exception_cause_generated_bad_addr
22027eec g     F .text	00000074 __fpclassifyd
220275c8 g     F .text	000000a4 __ratio
22029604 g     F .text	00000024 __vfiprintf_internal
2202e3b4 g     F .text	0000020c altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
22020db0 g     F .text	0000002c _printf_r
22020c68 g     F .text	00000008 .hidden __udivsi3
2202d3f0 g     F .text	000000a4 isatty
2202fd4c g     O .rodata	000000c8 __mprec_tens
22025b2c g     F .text	0000000c __locale_charset
2202f63c g     F .text	0000008c alt_icache_flush
2203354c g     O .bss	00000004 __malloc_top_pad
22031a14 g     O .rwdata	00000004 __mb_cur_max
22025b5c g     F .text	0000000c _localeconv_r
22026c58 g     F .text	0000003c __i2b
2202549c g     F .text	000004a4 __sfvwrite_r
22027f60 g     F .text	00000054 _sbrk_r
22029d04 g     F .text	0000005c _read_r
22031a34 g     O .rwdata	00000004 alt_max_fd
2202990c g     F .text	00000100 _fclose_r
22024cb8 g     F .text	00000030 fflush
22033548 g     O .bss	00000004 __malloc_max_sbrked_mem
2202ab10 g     F .text	0000089c .hidden __adddf3
22027370 g     F .text	0000011c __b2d
2202a580 g     F .text	00000590 .hidden __umoddi3
2202d5c8 g     F .text	000000d4 lseek
22031a0c g     O .rwdata	00000004 _global_impure_ptr
2202794c g     F .text	000005a0 _realloc_r
22033698 g       *ABS*	00000000 __bss_end
2202ef28 g     F .text	000000f0 alt_iic_isr_register
2202da48 g     F .text	00000104 alt_tick
22029fc0 g     F .text	000005c0 .hidden __udivdi3
22029a20 g     F .text	00000184 _fputwc_r
2202fd24 g     O .rodata	00000028 __mprec_bigtens
22026a3c g     F .text	00000104 __s2b
2202d008 g     F .text	000000a4 .hidden __floatunsidf
22027118 g     F .text	00000060 __mcmp
22025058 g     F .text	00000018 __fp_lock_all
2202eedc g     F .text	0000004c alt_ic_irq_enabled
2202d9b0 g     F .text	00000098 alt_alarm_stop
22033568 g     O .bss	00000004 alt_irq_active
220200fc g     F .exceptions	000000d0 alt_irq_handler
22030804 g     O .rwdata	00000028 alt_dev_null
2202d230 g     F .text	00000044 alt_dcache_flush_all
22026b40 g     F .text	00000068 __hi0bits
2202ceb0 g     F .text	00000088 .hidden __fixdfsi
22031a4c g       *ABS*	00000000 __ram_rwdata_end
22031a2c g     O .rwdata	00000008 alt_dev_list
2202dbcc g     F .text	000000f8 write
220277e4 g     F .text	000000a0 _putc_r
2202ff60 g       *ABS*	00000000 __ram_rodata_end
2202d2f0 g     F .text	000000b0 fstat
2202bddc g     F .text	000000e0 .hidden __ledf2
22026e90 g     F .text	00000140 __pow5mult
220282a8 g     F .text	0000135c ___vfiprintf_internal_r
22033540 g     O .bss	00000004 __nlocale_changed
22020c70 g     F .text	00000008 .hidden __umodsi3
22033698 g       *ABS*	00000000 end
2202def0 g     F .text	000000c4 altera_avalon_jtag_uart_init
220201cc g     F .exceptions	00000074 alt_instruction_exception_entry
2202fb08 g       *ABS*	00000000 __CTOR_LIST__
2203f400 g       *ABS*	00000000 __alt_stack_pointer
2202e84c g     F .text	00000088 alt_avalon_timer_sc_init
2202d0ac g     F .text	00000064 .hidden __clzsi2
2202e5c0 g     F .text	00000218 altera_avalon_jtag_uart_write
22025048 g     F .text	00000004 __sfp_lock_acquire
220264f0 g     F .text	000000e8 memchr
22021018 g     F .text	00001ffc ___vfprintf_internal_r
220251ac g     F .text	000002f0 _free_r
22025b38 g     F .text	00000010 __locale_mb_cur_max
2202f940 g     F .text	00000194 __call_exitprocs
2203353c g     O .bss	00000004 __mlocale_changed
22031a18 g     O .rwdata	00000004 __malloc_sbrk_base
22020240 g     F .text	0000004c _start
22033560 g     O .bss	00000004 _alt_tick_rate
22020f1c g     F .text	00000064 rand
22026fd0 g     F .text	00000148 __lshift
22033564 g     O .bss	00000004 _alt_nticks
2202d7a4 g     F .text	000000fc read
2202dd30 g     F .text	0000005c alt_sys_init
2202f82c g     F .text	00000114 __register_exitproc
22026c94 g     F .text	000001fc __multiply
2202e260 g     F .text	00000068 altera_avalon_jtag_uart_close
2202ff60 g       *ABS*	00000000 __ram_rwdata_start
2202fb08 g       *ABS*	00000000 __ram_rodata_start
22033570 g     O .bss	00000028 __malloc_current_mallinfo
2202748c g     F .text	0000013c __d2b
2202dd8c g     F .text	00000060 altera_avalon_jtag_uart_read_fd
2202f588 g     F .text	000000b4 alt_get_fd
2202ea14 g     F .text	00000158 alt_busy_sleep
220297f4 g     F .text	00000054 _close_r
2202f7b0 g     F .text	0000007c memcmp
2202de4c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
22033698 g       *ABS*	00000000 __alt_stack_base
2202de9c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
22023038 g     F .text	00000130 __swsetup_r
2202b3ac g     F .text	000008cc .hidden __divdf3
22024f08 g     F .text	00000118 __sfp
220276e0 g     F .text	00000078 __copybits
220303fc g     O .rwdata	00000408 __malloc_av_
22025054 g     F .text	00000004 __sinit_lock_release
2202bebc g     F .text	00000724 .hidden __muldf3
22027fb4 g     F .text	00000054 __sread
2202f474 g     F .text	00000114 alt_find_file
2202ebbc g     F .text	000000a4 alt_dev_llist_insert
2202d714 g     F .text	00000020 __malloc_lock
2202d900 g     F .text	000000b0 sbrk
22024a90 g     F .text	00000228 _fflush_r
22029848 g     F .text	000000c4 _calloc_r
22033538 g       *ABS*	00000000 __bss_start
22026734 g     F .text	00000124 memset
2202028c g     F .text	000001b0 main
2203355c g     O .bss	00000004 alt_envp
22033544 g     O .bss	00000004 __malloc_max_total_mem
2202ddec g     F .text	00000060 altera_avalon_jtag_uart_write_fd
2202977c g     F .text	0000001c __swbuf
22020f04 g     F .text	00000018 srand
220280e8 g     F .text	00000008 __sclose
2203f400 g       *ABS*	00000000 __alt_heap_limit
22029a0c g     F .text	00000014 fclose
22023368 g     F .text	00001728 _dtoa_r
22025d48 g     F .text	000007a8 _malloc_r
22029ed4 g     F .text	00000030 __ascii_wctomb
22031a38 g     O .rwdata	00000004 alt_errno
22025940 g     F .text	000000b8 _fwalk
22027884 g     F .text	000000c8 putc
22020bb8 g     F .text	00000054 .hidden __divsi3
22025088 g     F .text	00000124 _malloc_trim_r
2202fb08 g       *ABS*	00000000 __CTOR_END__
220280f0 g     F .text	000000a4 strcmp
2202fb08 g       *ABS*	00000000 __flash_rodata_start
2202fb08 g       *ABS*	00000000 __DTOR_LIST__
2202bc78 g     F .text	00000084 .hidden __nedf2
2202dcfc g     F .text	00000034 alt_irq_init
2202d8a0 g     F .text	00000060 alt_release_fd
2202fe34 g     O .rodata	00000100 .hidden __clz_tab
22033538 g     O .bss	00000004 _PathLocale
2202f764 g     F .text	00000014 atexit
22029798 g     F .text	0000005c _write_r
22025b68 g     F .text	0000001c setlocale
22031a10 g     O .rwdata	00000004 _impure_ptr
22033554 g     O .bss	00000004 alt_argc
2202ecbc g     F .text	0000005c _do_dtors
22025b54 g     F .text	00000008 __locale_cjk_lang
22020020 g       .exceptions	00000000 alt_irq_entry
22027310 g     F .text	00000060 __ulp
22025070 g     F .text	00000018 __fp_unlock_all
22031a24 g     O .rwdata	00000008 alt_fs_list
22020020 g       *ABS*	00000000 __ram_exceptions_start
22025b84 g     F .text	0000000c localeconv
22020000 g       *ABS*	00000000 __alt_mem_onchip_memory2
2202ed48 g     F .text	00000050 alt_ic_isr_register
22031a4c g       *ABS*	00000000 _edata
22033698 g       *ABS*	00000000 _end
22020240 g       *ABS*	00000000 __ram_exceptions_end
2202e2c8 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
2202ee38 g     F .text	000000a4 alt_ic_irq_disable
22028010 g     F .text	0000007c __swrite
22031a1c g     O .rwdata	00000004 __malloc_trim_threshold
22025b48 g     F .text	0000000c __locale_msgcharset
2202f778 g     F .text	00000038 exit
220259f8 g     F .text	000000b8 _fwalk_reent
22027178 g     F .text	00000198 __mdiff
22020c0c g     F .text	0000005c .hidden __modsi3
22020908 g     F .text	00000244 TMEM_QuickVerify
2203f400 g       *ABS*	00000000 __alt_data_end
22020020 g     F .exceptions	00000000 alt_exception
2202504c g     F .text	00000004 __sfp_lock_release
2202fad4 g     F .text	00000034 _exit
2202e8d4 g     F .text	00000140 alt_alarm_start
22029f60 g     F .text	00000060 .hidden __muldi3
22025b90 g     F .text	000001b8 __smakebuf_r
22020f80 g     F .text	00000098 strlen
2202f26c g     F .text	00000158 open
2202bcfc g     F .text	000000e0 .hidden __gedf2
22031a20 g     O .rwdata	00000004 __wctomb
22028290 g     F .text	00000018 __sprint_r
2202ed18 g     F .text	00000030 alt_icache_flush_all
22031a48 g     O .rwdata	00000004 alt_priority_mask
2202ed98 g     F .text	000000a0 alt_ic_irq_enable
22023014 g     F .text	00000024 __vfprintf_internal
22029f04 g     F .text	0000005c _wctomb_r
2202c5e0 g     F .text	000008d0 .hidden __subdf3
22026ba8 g     F .text	000000b0 __lo0bits
22031a40 g     O .rwdata	00000008 alt_alarm_list
2202ec60 g     F .text	0000005c _do_ctors
22029dfc g     F .text	000000d8 wcrtomb
2202d160 g     F .text	000000d0 close
2202d4f8 g     F .text	00000080 alt_load
22029ba4 g     F .text	00000058 fputwc
00000000  w      *UND*	00000000 free
22025050 g     F .text	00000004 __sinit_lock_acquire
22026928 g     F .text	00000114 __multadd
22026900 g     F .text	00000028 _Bfree



Disassembly of section .entry:

22020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
22020000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
22020004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
22020008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
2202000c:	00bffd16 	blt	zero,r2,22020004 <__alt_data_end+0xfffe0c04>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
22020010:	004880b4 	movhi	at,8706
    ori r1, r1, %lo(_start)
22020014:	08409014 	ori	at,at,576
    jmp r1
22020018:	0800683a 	jmp	at
2202001c:	00000000 	call	20000000 <__alt_mem_mem_if_ddr3_emif+0x20000000>

Disassembly of section .exceptions:

22020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
22020020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
22020024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
22020028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
2202002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
22020030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
22020034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
22020038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
2202003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
22020040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
22020044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
22020048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
2202004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
22020050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
22020054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
22020058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
2202005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
22020060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
22020064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
22020068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
2202006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
22020070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
22020074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
22020078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
2202007c:	10000326 	beq	r2,zero,2202008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
22020080:	20000226 	beq	r4,zero,2202008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
22020084:	20200fc0 	call	220200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
22020088:	00000706 	br	220200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
2202008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
22020090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
22020094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
22020098:	20201cc0 	call	220201cc <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
2202009c:	1000021e 	bne	r2,zero,220200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
220200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
220200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
220200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
220200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
220200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
220200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
220200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
220200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
220200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
220200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
220200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
220200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
220200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
220200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
220200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
220200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
220200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
220200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
220200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
220200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
220200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
220200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
220200f8:	ef80083a 	eret

220200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
220200fc:	defff904 	addi	sp,sp,-28
22020100:	dfc00615 	stw	ra,24(sp)
22020104:	df000515 	stw	fp,20(sp)
22020108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
2202010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
22020110:	0005313a 	rdctl	r2,ipending
22020114:	e0bffe15 	stw	r2,-8(fp)

  return active;
22020118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
2202011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
22020120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
22020124:	00800044 	movi	r2,1
22020128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
2202012c:	e0fffb17 	ldw	r3,-20(fp)
22020130:	e0bffc17 	ldw	r2,-16(fp)
22020134:	1884703a 	and	r2,r3,r2
22020138:	10001426 	beq	r2,zero,2202018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
2202013c:	008880f4 	movhi	r2,8707
22020140:	108d6604 	addi	r2,r2,13720
22020144:	e0fffd17 	ldw	r3,-12(fp)
22020148:	180690fa 	slli	r3,r3,3
2202014c:	10c5883a 	add	r2,r2,r3
22020150:	10c00017 	ldw	r3,0(r2)
22020154:	008880f4 	movhi	r2,8707
22020158:	108d6604 	addi	r2,r2,13720
2202015c:	e13ffd17 	ldw	r4,-12(fp)
22020160:	200890fa 	slli	r4,r4,3
22020164:	1105883a 	add	r2,r2,r4
22020168:	10800104 	addi	r2,r2,4
2202016c:	10800017 	ldw	r2,0(r2)
22020170:	1009883a 	mov	r4,r2
22020174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
22020178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
2202017c:	0005313a 	rdctl	r2,ipending
22020180:	e0bfff15 	stw	r2,-4(fp)

  return active;
22020184:	e0bfff17 	ldw	r2,-4(fp)
22020188:	00000706 	br	220201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
2202018c:	e0bffc17 	ldw	r2,-16(fp)
22020190:	1085883a 	add	r2,r2,r2
22020194:	e0bffc15 	stw	r2,-16(fp)
      i++;
22020198:	e0bffd17 	ldw	r2,-12(fp)
2202019c:	10800044 	addi	r2,r2,1
220201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
220201a4:	003fe106 	br	2202012c <__alt_data_end+0xfffe0d2c>

    active = alt_irq_pending ();
220201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
220201ac:	e0bffb17 	ldw	r2,-20(fp)
220201b0:	103fdb1e 	bne	r2,zero,22020120 <__alt_data_end+0xfffe0d20>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
220201b4:	0001883a 	nop
}
220201b8:	e037883a 	mov	sp,fp
220201bc:	dfc00117 	ldw	ra,4(sp)
220201c0:	df000017 	ldw	fp,0(sp)
220201c4:	dec00204 	addi	sp,sp,8
220201c8:	f800283a 	ret

220201cc <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
220201cc:	defffb04 	addi	sp,sp,-20
220201d0:	dfc00415 	stw	ra,16(sp)
220201d4:	df000315 	stw	fp,12(sp)
220201d8:	df000304 	addi	fp,sp,12
220201dc:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
220201e0:	000531fa 	rdctl	r2,exception
220201e4:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
220201e8:	e0bffd17 	ldw	r2,-12(fp)
220201ec:	10801f0c 	andi	r2,r2,124
220201f0:	1004d0ba 	srli	r2,r2,2
220201f4:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
220201f8:	0005333a 	rdctl	r2,badaddr
220201fc:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
22020200:	d0a6d817 	ldw	r2,-25760(gp)
22020204:	10000726 	beq	r2,zero,22020224 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
22020208:	d0a6d817 	ldw	r2,-25760(gp)
2202020c:	e0fffd17 	ldw	r3,-12(fp)
22020210:	1809883a 	mov	r4,r3
22020214:	e17fff17 	ldw	r5,-4(fp)
22020218:	e1bffe17 	ldw	r6,-8(fp)
2202021c:	103ee83a 	callr	r2
22020220:	00000206 	br	2202022c <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
22020224:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
22020228:	0005883a 	mov	r2,zero
}
2202022c:	e037883a 	mov	sp,fp
22020230:	dfc00117 	ldw	ra,4(sp)
22020234:	df000017 	ldw	fp,0(sp)
22020238:	dec00204 	addi	sp,sp,8
2202023c:	f800283a 	ret

Disassembly of section .text:

22020240 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
22020240:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
22020244:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
22020248:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
2202024c:	00bffd16 	blt	zero,r2,22020244 <__alt_data_end+0xfffe0e44>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
22020250:	06c880f4 	movhi	sp,8707
    ori sp, sp, %lo(__alt_stack_pointer)
22020254:	defd0014 	ori	sp,sp,62464
    movhi gp, %hi(_gp)
22020258:	068880f4 	movhi	gp,8707
    ori gp, gp, %lo(_gp)
2202025c:	d6a68314 	ori	gp,gp,39436
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
22020260:	008880f4 	movhi	r2,8707
    ori r2, r2, %lo(__bss_start)
22020264:	108d4e14 	ori	r2,r2,13624

    movhi r3, %hi(__bss_end)
22020268:	00c880f4 	movhi	r3,8707
    ori r3, r3, %lo(__bss_end)
2202026c:	18cda614 	ori	r3,r3,13976

    beq r2, r3, 1f
22020270:	10c00326 	beq	r2,r3,22020280 <_start+0x40>

0:
    stw zero, (r2)
22020274:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
22020278:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
2202027c:	10fffd36 	bltu	r2,r3,22020274 <__alt_data_end+0xfffe0e74>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
22020280:	202d4f80 	call	2202d4f8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
22020284:	202d69c0 	call	2202d69c <alt_main>

22020288 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
22020288:	003fff06 	br	22020288 <__alt_data_end+0xfffe0e88>

2202028c <main>:

//#define KEY_BASE 0x40041030
//#define DDR3_STATUS_BASE 0x40041020

int main()
{
2202028c:	defff604 	addi	sp,sp,-40
22020290:	dfc00915 	stw	ra,36(sp)
22020294:	df000815 	stw	fp,32(sp)
22020298:	dc000715 	stw	r16,28(sp)
2202029c:	df000804 	addi	fp,sp,32



	bool bPass;
	int TestIndex ;
	alt_u32 InitValue = 0x01;
220202a0:	00800044 	movi	r2,1
220202a4:	e0bffa15 	stw	r2,-24(fp)
	bool bShowMessage = TRUE;
220202a8:	00800044 	movi	r2,1
220202ac:	e0bffb15 	stw	r2,-20(fp)
	alt_u32 TimeStart, TimeElapsed;
	alt_u8 Status;


	printf("===== DDR3 Test! Size=%dMB (CPU Clock:%d) =====\r\n", MEM_IF_DDR3_EMIF_SPAN/1024/1024, ALT_CPU_CPU_FREQ);
220202b0:	010880f4 	movhi	r4,8707
220202b4:	213ec204 	addi	r4,r4,-1272
220202b8:	01408004 	movi	r5,512
220202bc:	0181dcf4 	movhi	r6,1907
220202c0:	31965004 	addi	r6,r6,22848
220202c4:	2020ddc0 	call	22020ddc <printf>
	usleep(100000);
220202c8:	010000b4 	movhi	r4,2
220202cc:	2121a804 	addi	r4,r4,-31072
220202d0:	202db4c0 	call	2202db4c <usleep>
	Status = IORD(DDR3_STATUS_BASE, 0x00);
220202d4:	00880034 	movhi	r2,8192
220202d8:	10800804 	addi	r2,r2,32
220202dc:	10800037 	ldwio	r2,0(r2)
220202e0:	e0bffc05 	stb	r2,-16(fp)


    TestIndex = 0;
220202e4:	e03ff915 	stw	zero,-28(fp)

	while(1){
            bPass = TRUE;
220202e8:	00800044 	movi	r2,1
220202ec:	e0bff815 	stw	r2,-32(fp)
        	TestIndex++;
220202f0:	e0bff917 	ldw	r2,-28(fp)
220202f4:	10800044 	addi	r2,r2,1
220202f8:	e0bff915 	stw	r2,-28(fp)
        	printf("=====> DDR3 Testing, Iteration: %d\n", TestIndex);
220202fc:	010880f4 	movhi	r4,8707
22020300:	213ecf04 	addi	r4,r4,-1220
22020304:	e17ff917 	ldw	r5,-28(fp)
22020308:	2020ddc0 	call	22020ddc <printf>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
2202030c:	008880f4 	movhi	r2,8707
22020310:	108d5904 	addi	r2,r2,13668
22020314:	10800017 	ldw	r2,0(r2)
        	TimeStart = alt_nticks();
22020318:	e0bffd15 	stw	r2,-12(fp)

        	if ((Status & STATUS_PLL_LOCKED) != STATUS_PLL_LOCKED){
2202031c:	e0bffc03 	ldbu	r2,-16(fp)
22020320:	1080020c 	andi	r2,r2,8
22020324:	1000061e 	bne	r2,zero,22020340 <main+0xb4>
        		printf("pll is not locked: fail (Status=%xh)\r\n", Status);
22020328:	e0bffc03 	ldbu	r2,-16(fp)
2202032c:	010880f4 	movhi	r4,8707
22020330:	213ed804 	addi	r4,r4,-1184
22020334:	100b883a 	mov	r5,r2
22020338:	2020ddc0 	call	22020ddc <printf>
        		bPass = FALSE;
2202033c:	e03ff815 	stw	zero,-32(fp)
        	}

        	if ((Status & STATUS_BIT_DONE) != STATUS_BIT_DONE){
22020340:	e0bffc03 	ldbu	r2,-16(fp)
22020344:	1080004c 	andi	r2,r2,1
22020348:	1000061e 	bne	r2,zero,22020364 <main+0xd8>
        		printf("local init done: fail (Status=%xh)\r\n", Status);
2202034c:	e0bffc03 	ldbu	r2,-16(fp)
22020350:	010880f4 	movhi	r4,8707
22020354:	213ee204 	addi	r4,r4,-1144
22020358:	100b883a 	mov	r5,r2
2202035c:	2020ddc0 	call	22020ddc <printf>
        		bPass = FALSE;
22020360:	e03ff815 	stw	zero,-32(fp)
        	}

        	if (bPass && (((Status & STATUS_BIT_FAIL) == STATUS_BIT_FAIL) || ((Status & STATUS_BIT_SUCCESS) != STATUS_BIT_SUCCESS))){
22020364:	e0bff817 	ldw	r2,-32(fp)
22020368:	10000a26 	beq	r2,zero,22020394 <main+0x108>
2202036c:	e0bffc03 	ldbu	r2,-16(fp)
22020370:	1080008c 	andi	r2,r2,2
22020374:	1000031e 	bne	r2,zero,22020384 <main+0xf8>
22020378:	e0bffc03 	ldbu	r2,-16(fp)
2202037c:	1080010c 	andi	r2,r2,4
22020380:	1000041e 	bne	r2,zero,22020394 <main+0x108>
        		printf("local init: fail\r\n");
22020384:	010880f4 	movhi	r4,8707
22020388:	213eec04 	addi	r4,r4,-1104
2202038c:	2020ef00 	call	22020ef0 <puts>
        		bPass = FALSE;
22020390:	e03ff815 	stw	zero,-32(fp)
        	}

        	if (bPass)
22020394:	e0bff817 	ldw	r2,-32(fp)
22020398:	10000626 	beq	r2,zero,220203b4 <main+0x128>
        		bPass = TMEM_Verify(MEM_IF_DDR3_EMIF_BASE, MEM_IF_DDR3_EMIF_SPAN, InitValue,  bShowMessage);
2202039c:	0009883a 	mov	r4,zero
220203a0:	01480034 	movhi	r5,8192
220203a4:	e1bffa17 	ldw	r6,-24(fp)
220203a8:	e1fffb17 	ldw	r7,-20(fp)
220203ac:	202043c0 	call	2202043c <TMEM_Verify>
220203b0:	e0bff815 	stw	r2,-32(fp)
220203b4:	008880f4 	movhi	r2,8707
220203b8:	108d5904 	addi	r2,r2,13668
220203bc:	10c00017 	ldw	r3,0(r2)

        	TimeElapsed = alt_nticks() - TimeStart;
220203c0:	e0bffd17 	ldw	r2,-12(fp)
220203c4:	1885c83a 	sub	r2,r3,r2
220203c8:	e0bffe15 	stw	r2,-8(fp)
        	printf("DDR3 test:%s, %d seconds\r\n", bPass?"Pass":"NG", (int)(TimeElapsed/alt_ticks_per_second()));
220203cc:	e0bff817 	ldw	r2,-32(fp)
220203d0:	10000326 	beq	r2,zero,220203e0 <main+0x154>
220203d4:	040880f4 	movhi	r16,8707
220203d8:	843ef104 	addi	r16,r16,-1084
220203dc:	00000206 	br	220203e8 <main+0x15c>
220203e0:	040880f4 	movhi	r16,8707
220203e4:	843ef304 	addi	r16,r16,-1076
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
220203e8:	008880f4 	movhi	r2,8707
220203ec:	108d5804 	addi	r2,r2,13664
220203f0:	10800017 	ldw	r2,0(r2)
220203f4:	e13ffe17 	ldw	r4,-8(fp)
220203f8:	100b883a 	mov	r5,r2
220203fc:	2020c680 	call	22020c68 <__udivsi3>
22020400:	010880f4 	movhi	r4,8707
22020404:	213ef404 	addi	r4,r4,-1072
22020408:	800b883a 	mov	r5,r16
2202040c:	100d883a 	mov	r6,r2
22020410:	2020ddc0 	call	22020ddc <printf>


        	printf("Press KEY1 for one more Test\r\n");
22020414:	010880f4 	movhi	r4,8707
22020418:	213efb04 	addi	r4,r4,-1044
2202041c:	2020ef00 	call	22020ef0 <puts>
            while(IORD(KEY_BASE, 0)&0x02);
22020420:	0001883a 	nop
22020424:	00880034 	movhi	r2,8192
22020428:	10800c04 	addi	r2,r2,48
2202042c:	10800037 	ldwio	r2,0(r2)
22020430:	1080008c 	andi	r2,r2,2
22020434:	103ffb1e 	bne	r2,zero,22020424 <__alt_data_end+0xfffe1024>

	} // while(1)
22020438:	003fab06 	br	220202e8 <__alt_data_end+0xfffe0ee8>

2202043c <TMEM_Verify>:


//#define SHOW_PROGRESS


bool TMEM_Verify(alt_u32 BaseAddr, alt_u32 ByteLen, alt_u32 InitValue, bool bShowMessage){
2202043c:	defee304 	addi	sp,sp,-1140
22020440:	dfc11c15 	stw	ra,1136(sp)
22020444:	df011b15 	stw	fp,1132(sp)
22020448:	dc411a15 	stw	r17,1128(sp)
2202044c:	dc011915 	stw	r16,1124(sp)
22020450:	df011b04 	addi	fp,sp,1132
22020454:	e13ffa15 	stw	r4,-24(fp)
22020458:	e17ffb15 	stw	r5,-20(fp)
2202045c:	e1bffc15 	stw	r6,-16(fp)
22020460:	e1fffd15 	stw	r7,-12(fp)
    bool bPass = TRUE;
22020464:	00800044 	movi	r2,1
22020468:	e0bee515 	stw	r2,-1132(fp)
    typedef alt_u32 my_data;
    my_data szData[257];
    int i, nRemainedLen, nAccessLen;
    my_data *pDes, *pSrc;
    int nItemNum, nPos;
    const int my_data_size = sizeof(my_data);
2202046c:	00800104 	movi	r2,4
22020470:	e0beed15 	stw	r2,-1100(fp)
    int nProgressIndex=0;
22020474:	e03eec15 	stw	zero,-1104(fp)
    alt_u32 szProgress[10];
    
    if (bShowMessage){
22020478:	e0bffd17 	ldw	r2,-12(fp)
2202047c:	10001726 	beq	r2,zero,220204dc <TMEM_Verify+0xa0>
        for(i=0;i<10;i++){
22020480:	e03ee615 	stw	zero,-1128(fp)
22020484:	00001206 	br	220204d0 <TMEM_Verify+0x94>
            szProgress[i] = ByteLen/10*(i+1);     
22020488:	e0bffb17 	ldw	r2,-20(fp)
2202048c:	1009883a 	mov	r4,r2
22020490:	01400284 	movi	r5,10
22020494:	2020c680 	call	22020c68 <__udivsi3>
22020498:	1007883a 	mov	r3,r2
2202049c:	e0bee617 	ldw	r2,-1128(fp)
220204a0:	10800044 	addi	r2,r2,1
220204a4:	1887383a 	mul	r3,r3,r2
220204a8:	e0bee617 	ldw	r2,-1128(fp)
220204ac:	1085883a 	add	r2,r2,r2
220204b0:	1085883a 	add	r2,r2,r2
220204b4:	e13ee504 	addi	r4,fp,-1132
220204b8:	2085883a 	add	r2,r4,r2
220204bc:	10810b04 	addi	r2,r2,1068
220204c0:	10c00015 	stw	r3,0(r2)
    const int my_data_size = sizeof(my_data);
    int nProgressIndex=0;
    alt_u32 szProgress[10];
    
    if (bShowMessage){
        for(i=0;i<10;i++){
220204c4:	e0bee617 	ldw	r2,-1128(fp)
220204c8:	10800044 	addi	r2,r2,1
220204cc:	e0bee615 	stw	r2,-1128(fp)
220204d0:	e0bee617 	ldw	r2,-1128(fp)
220204d4:	10800290 	cmplti	r2,r2,10
220204d8:	103feb1e 	bne	r2,zero,22020488 <__alt_data_end+0xfffe1088>
            szProgress[i] = ByteLen/10*(i+1);     
        }
    }        
    
    
    nItemNum = sizeof(szData)/sizeof(szData[0]);
220204dc:	00804044 	movi	r2,257
220204e0:	e0beea15 	stw	r2,-1112(fp)
    for(i=0;i<nItemNum;i++){
220204e4:	e03ee615 	stw	zero,-1128(fp)
220204e8:	00001e06 	br	22020564 <TMEM_Verify+0x128>
        if (i == 0)
220204ec:	e0bee617 	ldw	r2,-1128(fp)
220204f0:	1000091e 	bne	r2,zero,22020518 <TMEM_Verify+0xdc>
            szData[i] = InitValue;
220204f4:	e0bee617 	ldw	r2,-1128(fp)
220204f8:	1085883a 	add	r2,r2,r2
220204fc:	1085883a 	add	r2,r2,r2
22020500:	e0fee504 	addi	r3,fp,-1132
22020504:	1885883a 	add	r2,r3,r2
22020508:	10800a04 	addi	r2,r2,40
2202050c:	e0fffc17 	ldw	r3,-16(fp)
22020510:	10c00015 	stw	r3,0(r2)
22020514:	00001006 	br	22020558 <TMEM_Verify+0x11c>
        else     
            szData[i] = szData[i-1] * 13;
22020518:	e0bee617 	ldw	r2,-1128(fp)
2202051c:	10bfffc4 	addi	r2,r2,-1
22020520:	1085883a 	add	r2,r2,r2
22020524:	1085883a 	add	r2,r2,r2
22020528:	e13ee504 	addi	r4,fp,-1132
2202052c:	2085883a 	add	r2,r4,r2
22020530:	10800a04 	addi	r2,r2,40
22020534:	10800017 	ldw	r2,0(r2)
22020538:	10c00364 	muli	r3,r2,13
2202053c:	e0bee617 	ldw	r2,-1128(fp)
22020540:	1085883a 	add	r2,r2,r2
22020544:	1085883a 	add	r2,r2,r2
22020548:	e13ee504 	addi	r4,fp,-1132
2202054c:	2085883a 	add	r2,r4,r2
22020550:	10800a04 	addi	r2,r2,40
22020554:	10c00015 	stw	r3,0(r2)
        }
    }        
    
    
    nItemNum = sizeof(szData)/sizeof(szData[0]);
    for(i=0;i<nItemNum;i++){
22020558:	e0bee617 	ldw	r2,-1128(fp)
2202055c:	10800044 	addi	r2,r2,1
22020560:	e0bee615 	stw	r2,-1128(fp)
22020564:	e0fee617 	ldw	r3,-1128(fp)
22020568:	e0beea17 	ldw	r2,-1112(fp)
2202056c:	18bfdf16 	blt	r3,r2,220204ec <__alt_data_end+0xfffe10ec>
        if (i == 0)
            szData[i] = InitValue;
        else     
            szData[i] = szData[i-1] * 13;
    }
    szData[nItemNum-1] = 0xAAAAAAAA;
22020570:	e0beea17 	ldw	r2,-1112(fp)
22020574:	10bfffc4 	addi	r2,r2,-1
22020578:	1085883a 	add	r2,r2,r2
2202057c:	1085883a 	add	r2,r2,r2
22020580:	e0fee504 	addi	r3,fp,-1132
22020584:	1885883a 	add	r2,r3,r2
22020588:	10c00a04 	addi	r3,r2,40
2202058c:	00aaaaf4 	movhi	r2,43691
22020590:	10aaaa84 	addi	r2,r2,-21846
22020594:	18800015 	stw	r2,0(r3)
    szData[nItemNum-2] = 0x55555555;
22020598:	e0beea17 	ldw	r2,-1112(fp)
2202059c:	10bfff84 	addi	r2,r2,-2
220205a0:	1085883a 	add	r2,r2,r2
220205a4:	1085883a 	add	r2,r2,r2
220205a8:	e13ee504 	addi	r4,fp,-1132
220205ac:	2085883a 	add	r2,r4,r2
220205b0:	10c00a04 	addi	r3,r2,40
220205b4:	00955574 	movhi	r2,21845
220205b8:	10955544 	addi	r2,r2,21845
220205bc:	18800015 	stw	r2,0(r3)
    szData[nItemNum-3] = 0x00000000;
220205c0:	e0beea17 	ldw	r2,-1112(fp)
220205c4:	10bfff44 	addi	r2,r2,-3
220205c8:	1085883a 	add	r2,r2,r2
220205cc:	1085883a 	add	r2,r2,r2
220205d0:	e0fee504 	addi	r3,fp,-1132
220205d4:	1885883a 	add	r2,r3,r2
220205d8:	10800a04 	addi	r2,r2,40
220205dc:	10000015 	stw	zero,0(r2)
    szData[nItemNum-4] = 0xFFFFFFFF;
220205e0:	e0beea17 	ldw	r2,-1112(fp)
220205e4:	10bfff04 	addi	r2,r2,-4
220205e8:	1085883a 	add	r2,r2,r2
220205ec:	1085883a 	add	r2,r2,r2
220205f0:	e13ee504 	addi	r4,fp,-1132
220205f4:	2085883a 	add	r2,r4,r2
220205f8:	10800a04 	addi	r2,r2,40
220205fc:	00ffffc4 	movi	r3,-1
22020600:	10c00015 	stw	r3,0(r2)

    if (bShowMessage)    
22020604:	e0bffd17 	ldw	r2,-12(fp)
22020608:	10000326 	beq	r2,zero,22020618 <TMEM_Verify+0x1dc>
        printf("write...\n");
2202060c:	010880f4 	movhi	r4,8707
22020610:	213f0304 	addi	r4,r4,-1012
22020614:	2020ef00 	call	22020ef0 <puts>
    // write
    pDes = (my_data *)BaseAddr;
22020618:	e0bffa17 	ldw	r2,-24(fp)
2202061c:	e0bee815 	stw	r2,-1120(fp)
    nAccessLen = sizeof(szData);
22020620:	00810104 	movi	r2,1028
22020624:	e0bee715 	stw	r2,-1124(fp)
    nItemNum = nAccessLen / my_data_size;
22020628:	e13ee717 	ldw	r4,-1124(fp)
2202062c:	e17eed17 	ldw	r5,-1100(fp)
22020630:	2020bb80 	call	22020bb8 <__divsi3>
22020634:	e0beea15 	stw	r2,-1112(fp)
    nPos = 0;
22020638:	e03eeb15 	stw	zero,-1108(fp)
    while(nPos < ByteLen){
2202063c:	00003506 	br	22020714 <TMEM_Verify+0x2d8>
        nRemainedLen = ByteLen - nPos;
22020640:	e0beeb17 	ldw	r2,-1108(fp)
22020644:	e0fffb17 	ldw	r3,-20(fp)
22020648:	1885c83a 	sub	r2,r3,r2
2202064c:	e0beee15 	stw	r2,-1096(fp)
        if (nAccessLen > nRemainedLen){
22020650:	e0bee717 	ldw	r2,-1124(fp)
22020654:	e0feee17 	ldw	r3,-1096(fp)
22020658:	1880060e 	bge	r3,r2,22020674 <TMEM_Verify+0x238>
            nAccessLen = nRemainedLen;
2202065c:	e0beee17 	ldw	r2,-1096(fp)
22020660:	e0bee715 	stw	r2,-1124(fp)
            nItemNum = nAccessLen / my_data_size;
22020664:	e13ee717 	ldw	r4,-1124(fp)
22020668:	e17eed17 	ldw	r5,-1100(fp)
2202066c:	2020bb80 	call	22020bb8 <__divsi3>
22020670:	e0beea15 	stw	r2,-1112(fp)
        }    
        memcpy(pDes, szData, nAccessLen);
22020674:	e0bee717 	ldw	r2,-1124(fp)
22020678:	e0feef04 	addi	r3,fp,-1092
2202067c:	e13ee817 	ldw	r4,-1120(fp)
22020680:	180b883a 	mov	r5,r3
22020684:	100d883a 	mov	r6,r2
22020688:	2020c780 	call	22020c78 <memcpy>
        pDes += nItemNum;
2202068c:	e0beea17 	ldw	r2,-1112(fp)
22020690:	1085883a 	add	r2,r2,r2
22020694:	1085883a 	add	r2,r2,r2
22020698:	1007883a 	mov	r3,r2
2202069c:	e0bee817 	ldw	r2,-1120(fp)
220206a0:	10c5883a 	add	r2,r2,r3
220206a4:	e0bee815 	stw	r2,-1120(fp)
        nPos += nAccessLen;
220206a8:	e0feeb17 	ldw	r3,-1108(fp)
220206ac:	e0bee717 	ldw	r2,-1124(fp)
220206b0:	1885883a 	add	r2,r3,r2
220206b4:	e0beeb15 	stw	r2,-1108(fp)
        
        if (bShowMessage){
220206b8:	e0bffd17 	ldw	r2,-12(fp)
220206bc:	10001526 	beq	r2,zero,22020714 <TMEM_Verify+0x2d8>
            if (nProgressIndex <= 9 && nPos >= szProgress[nProgressIndex]){
220206c0:	e0beec17 	ldw	r2,-1104(fp)
220206c4:	10800288 	cmpgei	r2,r2,10
220206c8:	1000121e 	bne	r2,zero,22020714 <TMEM_Verify+0x2d8>
220206cc:	e0feeb17 	ldw	r3,-1108(fp)
220206d0:	e0beec17 	ldw	r2,-1104(fp)
220206d4:	1085883a 	add	r2,r2,r2
220206d8:	1085883a 	add	r2,r2,r2
220206dc:	e13ee504 	addi	r4,fp,-1132
220206e0:	2085883a 	add	r2,r4,r2
220206e4:	10810b04 	addi	r2,r2,1068
220206e8:	10800017 	ldw	r2,0(r2)
220206ec:	18800936 	bltu	r3,r2,22020714 <TMEM_Verify+0x2d8>
                nProgressIndex++;
220206f0:	e0beec17 	ldw	r2,-1104(fp)
220206f4:	10800044 	addi	r2,r2,1
220206f8:	e0beec15 	stw	r2,-1104(fp)
                printf("%02d%% ", nProgressIndex*10);
220206fc:	e0beec17 	ldw	r2,-1104(fp)
22020700:	108002a4 	muli	r2,r2,10
22020704:	010880f4 	movhi	r4,8707
22020708:	213f0604 	addi	r4,r4,-1000
2202070c:	100b883a 	mov	r5,r2
22020710:	2020ddc0 	call	22020ddc <printf>
    // write
    pDes = (my_data *)BaseAddr;
    nAccessLen = sizeof(szData);
    nItemNum = nAccessLen / my_data_size;
    nPos = 0;
    while(nPos < ByteLen){
22020714:	e0feeb17 	ldw	r3,-1108(fp)
22020718:	e0bffb17 	ldw	r2,-20(fp)
2202071c:	18bfc836 	bltu	r3,r2,22020640 <__alt_data_end+0xfffe1240>
                printf("%02d%% ", nProgressIndex*10);
            }
        }            
    } 
    
    alt_dcache_flush_all();
22020720:	202d2300 	call	2202d230 <alt_dcache_flush_all>
    
    if (bShowMessage){
22020724:	e0bffd17 	ldw	r2,-12(fp)
22020728:	10000426 	beq	r2,zero,2202073c <TMEM_Verify+0x300>
        nProgressIndex = 0;
2202072c:	e03eec15 	stw	zero,-1104(fp)
        printf("\nread/verify...\n");
22020730:	010880f4 	movhi	r4,8707
22020734:	213f0804 	addi	r4,r4,-992
22020738:	2020ef00 	call	22020ef0 <puts>
    }        
    
    // read & verify
    pSrc = (my_data *)BaseAddr;
2202073c:	e0bffa17 	ldw	r2,-24(fp)
22020740:	e0bee915 	stw	r2,-1116(fp)
    nAccessLen = sizeof(szData);
22020744:	00810104 	movi	r2,1028
22020748:	e0bee715 	stw	r2,-1124(fp)
    nItemNum = nAccessLen / my_data_size;
2202074c:	e13ee717 	ldw	r4,-1124(fp)
22020750:	e17eed17 	ldw	r5,-1100(fp)
22020754:	2020bb80 	call	22020bb8 <__divsi3>
22020758:	e0beea15 	stw	r2,-1112(fp)
    nPos = 0;
2202075c:	e03eeb15 	stw	zero,-1108(fp)
    while(bPass && nPos < ByteLen){
22020760:	00005806 	br	220208c4 <TMEM_Verify+0x488>
        nRemainedLen = ByteLen - nPos;
22020764:	e0beeb17 	ldw	r2,-1108(fp)
22020768:	e0fffb17 	ldw	r3,-20(fp)
2202076c:	1885c83a 	sub	r2,r3,r2
22020770:	e0beee15 	stw	r2,-1096(fp)
        if (nAccessLen > nRemainedLen){
22020774:	e0bee717 	ldw	r2,-1124(fp)
22020778:	e0feee17 	ldw	r3,-1096(fp)
2202077c:	1880060e 	bge	r3,r2,22020798 <TMEM_Verify+0x35c>
            nAccessLen = nRemainedLen;
22020780:	e0beee17 	ldw	r2,-1096(fp)
22020784:	e0bee715 	stw	r2,-1124(fp)
            nItemNum = nAccessLen / my_data_size;
22020788:	e13ee717 	ldw	r4,-1124(fp)
2202078c:	e17eed17 	ldw	r5,-1100(fp)
22020790:	2020bb80 	call	22020bb8 <__divsi3>
22020794:	e0beea15 	stw	r2,-1112(fp)
        }            
        pDes = szData;
22020798:	e0beef04 	addi	r2,fp,-1092
2202079c:	e0bee815 	stw	r2,-1120(fp)
        for(i=0;i<nItemNum && bPass;i++){
220207a0:	e03ee615 	stw	zero,-1128(fp)
220207a4:	00002706 	br	22020844 <TMEM_Verify+0x408>
            if (*pSrc++ != *pDes++){ 
220207a8:	e0bee917 	ldw	r2,-1116(fp)
220207ac:	10c00104 	addi	r3,r2,4
220207b0:	e0fee915 	stw	r3,-1116(fp)
220207b4:	10c00017 	ldw	r3,0(r2)
220207b8:	e0bee817 	ldw	r2,-1120(fp)
220207bc:	11000104 	addi	r4,r2,4
220207c0:	e13ee815 	stw	r4,-1120(fp)
220207c4:	10800017 	ldw	r2,0(r2)
220207c8:	18801b26 	beq	r3,r2,22020838 <TMEM_Verify+0x3fc>
                if (bShowMessage)        
220207cc:	e0bffd17 	ldw	r2,-12(fp)
220207d0:	10001826 	beq	r2,zero,22020834 <TMEM_Verify+0x3f8>
                    printf("verify ng, read=%08Xh, expected=%08Xh, WordIndex=%Xh\n", (int)*(pSrc-1), (int)szData[i], (nPos/my_data_size)+i);
220207d4:	e0bee917 	ldw	r2,-1116(fp)
220207d8:	10bfff04 	addi	r2,r2,-4
220207dc:	10800017 	ldw	r2,0(r2)
220207e0:	1023883a 	mov	r17,r2
220207e4:	e0bee617 	ldw	r2,-1128(fp)
220207e8:	1085883a 	add	r2,r2,r2
220207ec:	1085883a 	add	r2,r2,r2
220207f0:	e0fee504 	addi	r3,fp,-1132
220207f4:	1885883a 	add	r2,r3,r2
220207f8:	10800a04 	addi	r2,r2,40
220207fc:	10800017 	ldw	r2,0(r2)
22020800:	1021883a 	mov	r16,r2
22020804:	e13eeb17 	ldw	r4,-1108(fp)
22020808:	e17eed17 	ldw	r5,-1100(fp)
2202080c:	2020bb80 	call	22020bb8 <__divsi3>
22020810:	1007883a 	mov	r3,r2
22020814:	e0bee617 	ldw	r2,-1128(fp)
22020818:	1885883a 	add	r2,r3,r2
2202081c:	010880f4 	movhi	r4,8707
22020820:	213f0c04 	addi	r4,r4,-976
22020824:	880b883a 	mov	r5,r17
22020828:	800d883a 	mov	r6,r16
2202082c:	100f883a 	mov	r7,r2
22020830:	2020ddc0 	call	22020ddc <printf>
                bPass = FALSE;
22020834:	e03ee515 	stw	zero,-1132(fp)
        if (nAccessLen > nRemainedLen){
            nAccessLen = nRemainedLen;
            nItemNum = nAccessLen / my_data_size;
        }            
        pDes = szData;
        for(i=0;i<nItemNum && bPass;i++){
22020838:	e0bee617 	ldw	r2,-1128(fp)
2202083c:	10800044 	addi	r2,r2,1
22020840:	e0bee615 	stw	r2,-1128(fp)
22020844:	e0fee617 	ldw	r3,-1128(fp)
22020848:	e0beea17 	ldw	r2,-1112(fp)
2202084c:	1880020e 	bge	r3,r2,22020858 <TMEM_Verify+0x41c>
22020850:	e0bee517 	ldw	r2,-1132(fp)
22020854:	103fd41e 	bne	r2,zero,220207a8 <__alt_data_end+0xfffe13a8>
                if (bShowMessage)        
                    printf("verify ng, read=%08Xh, expected=%08Xh, WordIndex=%Xh\n", (int)*(pSrc-1), (int)szData[i], (nPos/my_data_size)+i);
                bPass = FALSE;
            }    
        }
        nPos += nAccessLen;
22020858:	e0feeb17 	ldw	r3,-1108(fp)
2202085c:	e0bee717 	ldw	r2,-1124(fp)
22020860:	1885883a 	add	r2,r3,r2
22020864:	e0beeb15 	stw	r2,-1108(fp)
        if (bShowMessage){
22020868:	e0bffd17 	ldw	r2,-12(fp)
2202086c:	10001526 	beq	r2,zero,220208c4 <TMEM_Verify+0x488>
            if (nProgressIndex <= 9 && nPos >= szProgress[nProgressIndex]){
22020870:	e0beec17 	ldw	r2,-1104(fp)
22020874:	10800288 	cmpgei	r2,r2,10
22020878:	1000121e 	bne	r2,zero,220208c4 <TMEM_Verify+0x488>
2202087c:	e0feeb17 	ldw	r3,-1108(fp)
22020880:	e0beec17 	ldw	r2,-1104(fp)
22020884:	1085883a 	add	r2,r2,r2
22020888:	1085883a 	add	r2,r2,r2
2202088c:	e13ee504 	addi	r4,fp,-1132
22020890:	2085883a 	add	r2,r4,r2
22020894:	10810b04 	addi	r2,r2,1068
22020898:	10800017 	ldw	r2,0(r2)
2202089c:	18800936 	bltu	r3,r2,220208c4 <TMEM_Verify+0x488>
                nProgressIndex++;
220208a0:	e0beec17 	ldw	r2,-1104(fp)
220208a4:	10800044 	addi	r2,r2,1
220208a8:	e0beec15 	stw	r2,-1104(fp)
                printf("%02d%% ", nProgressIndex*10);
220208ac:	e0beec17 	ldw	r2,-1104(fp)
220208b0:	108002a4 	muli	r2,r2,10
220208b4:	010880f4 	movhi	r4,8707
220208b8:	213f0604 	addi	r4,r4,-1000
220208bc:	100b883a 	mov	r5,r2
220208c0:	2020ddc0 	call	22020ddc <printf>
    // read & verify
    pSrc = (my_data *)BaseAddr;
    nAccessLen = sizeof(szData);
    nItemNum = nAccessLen / my_data_size;
    nPos = 0;
    while(bPass && nPos < ByteLen){
220208c4:	e0bee517 	ldw	r2,-1132(fp)
220208c8:	10000326 	beq	r2,zero,220208d8 <TMEM_Verify+0x49c>
220208cc:	e0feeb17 	ldw	r3,-1108(fp)
220208d0:	e0bffb17 	ldw	r2,-20(fp)
220208d4:	18bfa336 	bltu	r3,r2,22020764 <__alt_data_end+0xfffe1364>
                printf("%02d%% ", nProgressIndex*10);
            }
        }            
    }     

    if (bShowMessage)    
220208d8:	e0bffd17 	ldw	r2,-12(fp)
220208dc:	10000226 	beq	r2,zero,220208e8 <TMEM_Verify+0x4ac>
        printf("\n");
220208e0:	01000284 	movi	r4,10
220208e4:	2020e200 	call	22020e20 <putchar>
    
    return bPass;
220208e8:	e0bee517 	ldw	r2,-1132(fp)
}
220208ec:	e6fffe04 	addi	sp,fp,-8
220208f0:	dfc00317 	ldw	ra,12(sp)
220208f4:	df000217 	ldw	fp,8(sp)
220208f8:	dc400117 	ldw	r17,4(sp)
220208fc:	dc000017 	ldw	r16,0(sp)
22020900:	dec00404 	addi	sp,sp,16
22020904:	f800283a 	ret

22020908 <TMEM_QuickVerify>:


bool TMEM_QuickVerify(alt_u32 BaseAddr, alt_u32 DataSize, alt_u32 DataWidth, alt_u32 AddrWidth){
22020908:	defff104 	addi	sp,sp,-60
2202090c:	dfc00e15 	stw	ra,56(sp)
22020910:	df000d15 	stw	fp,52(sp)
22020914:	df000d04 	addi	fp,sp,52
22020918:	e13ffc15 	stw	r4,-16(fp)
2202091c:	e17ffd15 	stw	r5,-12(fp)
22020920:	e1bffe15 	stw	r6,-8(fp)
22020924:	e1ffff15 	stw	r7,-4(fp)
    bool bPass = TRUE;
22020928:	00800044 	movi	r2,1
2202092c:	e0bff315 	stw	r2,-52(fp)
    const alt_u32 TestNum = 1024*1024*2;
22020930:	00800834 	movhi	r2,32
22020934:	e0bff615 	stw	r2,-40(fp)
    const alt_u32 TestPattern = 0xAA;
22020938:	00802a84 	movi	r2,170
2202093c:	e0bff715 	stw	r2,-36(fp)
    alt_u32 mask, Read32, Addr32, TestData32, TestAddr32;
    int i;
    
    //alt_u32 *pMem = (alt_u32 *)BaseAddr;
    // test address line
    mask = 0x01;
22020940:	00800044 	movi	r2,1
22020944:	e0bff415 	stw	r2,-48(fp)
    for(i=0;i<AddrWidth && bPass;i++){
22020948:	e03ff515 	stw	zero,-44(fp)
2202094c:	00001b06 	br	220209bc <TMEM_QuickVerify+0xb4>
        //*(pMem + mask) = TestPattern;
        IOWR(BaseAddr, mask, TestPattern);
22020950:	e0bff417 	ldw	r2,-48(fp)
22020954:	1085883a 	add	r2,r2,r2
22020958:	1085883a 	add	r2,r2,r2
2202095c:	1007883a 	mov	r3,r2
22020960:	e0bffc17 	ldw	r2,-16(fp)
22020964:	1885883a 	add	r2,r3,r2
22020968:	1007883a 	mov	r3,r2
2202096c:	e0bff717 	ldw	r2,-36(fp)
22020970:	18800035 	stwio	r2,0(r3)
        //if (*(pMem + mask) != TestPattern)
        Read32 = IORD(BaseAddr, mask);
22020974:	e0bff417 	ldw	r2,-48(fp)
22020978:	1085883a 	add	r2,r2,r2
2202097c:	1085883a 	add	r2,r2,r2
22020980:	1007883a 	mov	r3,r2
22020984:	e0bffc17 	ldw	r2,-16(fp)
22020988:	1885883a 	add	r2,r3,r2
2202098c:	10800037 	ldwio	r2,0(r2)
22020990:	e0bff815 	stw	r2,-32(fp)
        if (Read32 != TestPattern)
22020994:	e0fff817 	ldw	r3,-32(fp)
22020998:	e0bff717 	ldw	r2,-36(fp)
2202099c:	18800126 	beq	r3,r2,220209a4 <TMEM_QuickVerify+0x9c>
            bPass = FALSE;
220209a0:	e03ff315 	stw	zero,-52(fp)
        mask <<= 1;    
220209a4:	e0bff417 	ldw	r2,-48(fp)
220209a8:	1085883a 	add	r2,r2,r2
220209ac:	e0bff415 	stw	r2,-48(fp)
    int i;
    
    //alt_u32 *pMem = (alt_u32 *)BaseAddr;
    // test address line
    mask = 0x01;
    for(i=0;i<AddrWidth && bPass;i++){
220209b0:	e0bff517 	ldw	r2,-44(fp)
220209b4:	10800044 	addi	r2,r2,1
220209b8:	e0bff515 	stw	r2,-44(fp)
220209bc:	e0fff517 	ldw	r3,-44(fp)
220209c0:	e0bfff17 	ldw	r2,-4(fp)
220209c4:	1880022e 	bgeu	r3,r2,220209d0 <TMEM_QuickVerify+0xc8>
220209c8:	e0bff317 	ldw	r2,-52(fp)
220209cc:	103fe01e 	bne	r2,zero,22020950 <__alt_data_end+0xfffe1550>
            bPass = FALSE;
        mask <<= 1;    
    }
    
    // test data line
    mask = 0x01;
220209d0:	00800044 	movi	r2,1
220209d4:	e0bff415 	stw	r2,-48(fp)
    for(i=0;i<DataWidth && bPass;i++){
220209d8:	e03ff515 	stw	zero,-44(fp)
220209dc:	00002206 	br	22020a68 <TMEM_QuickVerify+0x160>
        //*(pMem+i/32) = mask;
        Addr32 = i*13;
220209e0:	e0bff517 	ldw	r2,-44(fp)
220209e4:	10800364 	muli	r2,r2,13
220209e8:	e0bff915 	stw	r2,-28(fp)
        IOWR(BaseAddr, Addr32, mask);
220209ec:	e0bff917 	ldw	r2,-28(fp)
220209f0:	1085883a 	add	r2,r2,r2
220209f4:	1085883a 	add	r2,r2,r2
220209f8:	1007883a 	mov	r3,r2
220209fc:	e0bffc17 	ldw	r2,-16(fp)
22020a00:	1885883a 	add	r2,r3,r2
22020a04:	1007883a 	mov	r3,r2
22020a08:	e0bff417 	ldw	r2,-48(fp)
22020a0c:	18800035 	stwio	r2,0(r3)
        Read32 = IORD(BaseAddr, Addr32);
22020a10:	e0bff917 	ldw	r2,-28(fp)
22020a14:	1085883a 	add	r2,r2,r2
22020a18:	1085883a 	add	r2,r2,r2
22020a1c:	1007883a 	mov	r3,r2
22020a20:	e0bffc17 	ldw	r2,-16(fp)
22020a24:	1885883a 	add	r2,r3,r2
22020a28:	10800037 	ldwio	r2,0(r2)
22020a2c:	e0bff815 	stw	r2,-32(fp)
        //if (*(pMem+i/32) != mask)
        if (Read32 != mask)
22020a30:	e0fff817 	ldw	r3,-32(fp)
22020a34:	e0bff417 	ldw	r2,-48(fp)
22020a38:	18800126 	beq	r3,r2,22020a40 <TMEM_QuickVerify+0x138>
            bPass = FALSE;
22020a3c:	e03ff315 	stw	zero,-52(fp)
        mask <<= 1;
22020a40:	e0bff417 	ldw	r2,-48(fp)
22020a44:	1085883a 	add	r2,r2,r2
22020a48:	e0bff415 	stw	r2,-48(fp)
        if (mask == 0x00)
22020a4c:	e0bff417 	ldw	r2,-48(fp)
22020a50:	1000021e 	bne	r2,zero,22020a5c <TMEM_QuickVerify+0x154>
            mask = 0x01;    
22020a54:	00800044 	movi	r2,1
22020a58:	e0bff415 	stw	r2,-48(fp)
        mask <<= 1;    
    }
    
    // test data line
    mask = 0x01;
    for(i=0;i<DataWidth && bPass;i++){
22020a5c:	e0bff517 	ldw	r2,-44(fp)
22020a60:	10800044 	addi	r2,r2,1
22020a64:	e0bff515 	stw	r2,-44(fp)
22020a68:	e0fff517 	ldw	r3,-44(fp)
22020a6c:	e0bffe17 	ldw	r2,-8(fp)
22020a70:	1880022e 	bgeu	r3,r2,22020a7c <TMEM_QuickVerify+0x174>
22020a74:	e0bff317 	ldw	r2,-52(fp)
22020a78:	103fd91e 	bne	r2,zero,220209e0 <__alt_data_end+0xfffe15e0>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
22020a7c:	008880f4 	movhi	r2,8707
22020a80:	108d5904 	addi	r2,r2,13668
22020a84:	10800017 	ldw	r2,0(r2)
        if (mask == 0x00)
            mask = 0x01;    
    }
    
    // random data test
    srand(alt_nticks());
22020a88:	1009883a 	mov	r4,r2
22020a8c:	2020f040 	call	22020f04 <srand>
    for(i=0;i<TestNum && bPass;i++){
22020a90:	e03ff515 	stw	zero,-44(fp)
22020a94:	00002206 	br	22020b20 <TMEM_QuickVerify+0x218>
        TestAddr32 = rand()%(DataSize/4);
22020a98:	2020f1c0 	call	22020f1c <rand>
22020a9c:	1007883a 	mov	r3,r2
22020aa0:	e0bffd17 	ldw	r2,-12(fp)
22020aa4:	1004d0ba 	srli	r2,r2,2
22020aa8:	1809883a 	mov	r4,r3
22020aac:	100b883a 	mov	r5,r2
22020ab0:	2020c700 	call	22020c70 <__umodsi3>
22020ab4:	e0bffa15 	stw	r2,-24(fp)
        TestData32 = rand();
22020ab8:	2020f1c0 	call	22020f1c <rand>
22020abc:	e0bffb15 	stw	r2,-20(fp)
        IOWR(BaseAddr, TestAddr32, TestData32);
22020ac0:	e0bffa17 	ldw	r2,-24(fp)
22020ac4:	1085883a 	add	r2,r2,r2
22020ac8:	1085883a 	add	r2,r2,r2
22020acc:	1007883a 	mov	r3,r2
22020ad0:	e0bffc17 	ldw	r2,-16(fp)
22020ad4:	1885883a 	add	r2,r3,r2
22020ad8:	1007883a 	mov	r3,r2
22020adc:	e0bffb17 	ldw	r2,-20(fp)
22020ae0:	18800035 	stwio	r2,0(r3)
        Read32 = IORD(BaseAddr, TestAddr32);
22020ae4:	e0bffa17 	ldw	r2,-24(fp)
22020ae8:	1085883a 	add	r2,r2,r2
22020aec:	1085883a 	add	r2,r2,r2
22020af0:	1007883a 	mov	r3,r2
22020af4:	e0bffc17 	ldw	r2,-16(fp)
22020af8:	1885883a 	add	r2,r3,r2
22020afc:	10800037 	ldwio	r2,0(r2)
22020b00:	e0bff815 	stw	r2,-32(fp)
        if (Read32 != TestData32)
22020b04:	e0fff817 	ldw	r3,-32(fp)
22020b08:	e0bffb17 	ldw	r2,-20(fp)
22020b0c:	18800126 	beq	r3,r2,22020b14 <TMEM_QuickVerify+0x20c>
            bPass = FALSE;        
22020b10:	e03ff315 	stw	zero,-52(fp)
            mask = 0x01;    
    }
    
    // random data test
    srand(alt_nticks());
    for(i=0;i<TestNum && bPass;i++){
22020b14:	e0bff517 	ldw	r2,-44(fp)
22020b18:	10800044 	addi	r2,r2,1
22020b1c:	e0bff515 	stw	r2,-44(fp)
22020b20:	e0fff517 	ldw	r3,-44(fp)
22020b24:	e0bff617 	ldw	r2,-40(fp)
22020b28:	1880022e 	bgeu	r3,r2,22020b34 <TMEM_QuickVerify+0x22c>
22020b2c:	e0bff317 	ldw	r2,-52(fp)
22020b30:	103fd91e 	bne	r2,zero,22020a98 <__alt_data_end+0xfffe1698>
        if (Read32 != TestData32)
            bPass = FALSE;        
        
    }
    
    return bPass;
22020b34:	e0bff317 	ldw	r2,-52(fp)
}
22020b38:	e037883a 	mov	sp,fp
22020b3c:	dfc00117 	ldw	ra,4(sp)
22020b40:	df000017 	ldw	fp,0(sp)
22020b44:	dec00204 	addi	sp,sp,8
22020b48:	f800283a 	ret

22020b4c <udivmodsi4>:
22020b4c:	2900182e 	bgeu	r5,r4,22020bb0 <udivmodsi4+0x64>
22020b50:	28001716 	blt	r5,zero,22020bb0 <udivmodsi4+0x64>
22020b54:	00800804 	movi	r2,32
22020b58:	00c00044 	movi	r3,1
22020b5c:	00000206 	br	22020b68 <udivmodsi4+0x1c>
22020b60:	10001126 	beq	r2,zero,22020ba8 <udivmodsi4+0x5c>
22020b64:	28000516 	blt	r5,zero,22020b7c <udivmodsi4+0x30>
22020b68:	294b883a 	add	r5,r5,r5
22020b6c:	10bfffc4 	addi	r2,r2,-1
22020b70:	18c7883a 	add	r3,r3,r3
22020b74:	293ffa36 	bltu	r5,r4,22020b60 <__alt_data_end+0xfffe1760>
22020b78:	18000b26 	beq	r3,zero,22020ba8 <udivmodsi4+0x5c>
22020b7c:	0005883a 	mov	r2,zero
22020b80:	21400236 	bltu	r4,r5,22020b8c <udivmodsi4+0x40>
22020b84:	2149c83a 	sub	r4,r4,r5
22020b88:	10c4b03a 	or	r2,r2,r3
22020b8c:	1806d07a 	srli	r3,r3,1
22020b90:	280ad07a 	srli	r5,r5,1
22020b94:	183ffa1e 	bne	r3,zero,22020b80 <__alt_data_end+0xfffe1780>
22020b98:	3000011e 	bne	r6,zero,22020ba0 <udivmodsi4+0x54>
22020b9c:	f800283a 	ret
22020ba0:	2005883a 	mov	r2,r4
22020ba4:	f800283a 	ret
22020ba8:	0005883a 	mov	r2,zero
22020bac:	003ffa06 	br	22020b98 <__alt_data_end+0xfffe1798>
22020bb0:	00c00044 	movi	r3,1
22020bb4:	003ff106 	br	22020b7c <__alt_data_end+0xfffe177c>

22020bb8 <__divsi3>:
22020bb8:	defffe04 	addi	sp,sp,-8
22020bbc:	dfc00115 	stw	ra,4(sp)
22020bc0:	dc000015 	stw	r16,0(sp)
22020bc4:	20000b16 	blt	r4,zero,22020bf4 <__divsi3+0x3c>
22020bc8:	0021883a 	mov	r16,zero
22020bcc:	28000c16 	blt	r5,zero,22020c00 <__divsi3+0x48>
22020bd0:	000d883a 	mov	r6,zero
22020bd4:	2020b4c0 	call	22020b4c <udivmodsi4>
22020bd8:	0407c83a 	sub	r3,zero,r16
22020bdc:	1884f03a 	xor	r2,r3,r2
22020be0:	1405883a 	add	r2,r2,r16
22020be4:	dfc00117 	ldw	ra,4(sp)
22020be8:	dc000017 	ldw	r16,0(sp)
22020bec:	dec00204 	addi	sp,sp,8
22020bf0:	f800283a 	ret
22020bf4:	0109c83a 	sub	r4,zero,r4
22020bf8:	04000044 	movi	r16,1
22020bfc:	283ff40e 	bge	r5,zero,22020bd0 <__alt_data_end+0xfffe17d0>
22020c00:	014bc83a 	sub	r5,zero,r5
22020c04:	8400005c 	xori	r16,r16,1
22020c08:	003ff106 	br	22020bd0 <__alt_data_end+0xfffe17d0>

22020c0c <__modsi3>:
22020c0c:	defffd04 	addi	sp,sp,-12
22020c10:	dfc00215 	stw	ra,8(sp)
22020c14:	dc400115 	stw	r17,4(sp)
22020c18:	dc000015 	stw	r16,0(sp)
22020c1c:	20000c16 	blt	r4,zero,22020c50 <__modsi3+0x44>
22020c20:	0023883a 	mov	r17,zero
22020c24:	0021883a 	mov	r16,zero
22020c28:	28000d16 	blt	r5,zero,22020c60 <__modsi3+0x54>
22020c2c:	01800044 	movi	r6,1
22020c30:	2020b4c0 	call	22020b4c <udivmodsi4>
22020c34:	1404f03a 	xor	r2,r2,r16
22020c38:	8885883a 	add	r2,r17,r2
22020c3c:	dfc00217 	ldw	ra,8(sp)
22020c40:	dc400117 	ldw	r17,4(sp)
22020c44:	dc000017 	ldw	r16,0(sp)
22020c48:	dec00304 	addi	sp,sp,12
22020c4c:	f800283a 	ret
22020c50:	0109c83a 	sub	r4,zero,r4
22020c54:	04400044 	movi	r17,1
22020c58:	043fffc4 	movi	r16,-1
22020c5c:	283ff30e 	bge	r5,zero,22020c2c <__alt_data_end+0xfffe182c>
22020c60:	014bc83a 	sub	r5,zero,r5
22020c64:	003ff106 	br	22020c2c <__alt_data_end+0xfffe182c>

22020c68 <__udivsi3>:
22020c68:	000d883a 	mov	r6,zero
22020c6c:	2020b4c1 	jmpi	22020b4c <udivmodsi4>

22020c70 <__umodsi3>:
22020c70:	01800044 	movi	r6,1
22020c74:	2020b4c1 	jmpi	22020b4c <udivmodsi4>

22020c78 <memcpy>:
22020c78:	deffff04 	addi	sp,sp,-4
22020c7c:	dc000015 	stw	r16,0(sp)
22020c80:	00c003c4 	movi	r3,15
22020c84:	2005883a 	mov	r2,r4
22020c88:	1980432e 	bgeu	r3,r6,22020d98 <memcpy+0x120>
22020c8c:	2146b03a 	or	r3,r4,r5
22020c90:	18c000cc 	andi	r3,r3,3
22020c94:	1800421e 	bne	r3,zero,22020da0 <memcpy+0x128>
22020c98:	343ffc04 	addi	r16,r6,-16
22020c9c:	8020d13a 	srli	r16,r16,4
22020ca0:	28c00104 	addi	r3,r5,4
22020ca4:	23400104 	addi	r13,r4,4
22020ca8:	801e913a 	slli	r15,r16,4
22020cac:	2b000204 	addi	r12,r5,8
22020cb0:	22c00204 	addi	r11,r4,8
22020cb4:	7bc00504 	addi	r15,r15,20
22020cb8:	2a800304 	addi	r10,r5,12
22020cbc:	22400304 	addi	r9,r4,12
22020cc0:	2bdf883a 	add	r15,r5,r15
22020cc4:	2811883a 	mov	r8,r5
22020cc8:	200f883a 	mov	r7,r4
22020ccc:	41000017 	ldw	r4,0(r8)
22020cd0:	39c00404 	addi	r7,r7,16
22020cd4:	18c00404 	addi	r3,r3,16
22020cd8:	393ffc15 	stw	r4,-16(r7)
22020cdc:	1bbffc17 	ldw	r14,-16(r3)
22020ce0:	6b400404 	addi	r13,r13,16
22020ce4:	5ac00404 	addi	r11,r11,16
22020ce8:	6bbffc15 	stw	r14,-16(r13)
22020cec:	63800017 	ldw	r14,0(r12)
22020cf0:	4a400404 	addi	r9,r9,16
22020cf4:	42000404 	addi	r8,r8,16
22020cf8:	5bbffc15 	stw	r14,-16(r11)
22020cfc:	53800017 	ldw	r14,0(r10)
22020d00:	63000404 	addi	r12,r12,16
22020d04:	52800404 	addi	r10,r10,16
22020d08:	4bbffc15 	stw	r14,-16(r9)
22020d0c:	1bffef1e 	bne	r3,r15,22020ccc <__alt_data_end+0xfffe18cc>
22020d10:	81c00044 	addi	r7,r16,1
22020d14:	380e913a 	slli	r7,r7,4
22020d18:	310003cc 	andi	r4,r6,15
22020d1c:	02c000c4 	movi	r11,3
22020d20:	11c7883a 	add	r3,r2,r7
22020d24:	29cb883a 	add	r5,r5,r7
22020d28:	59001f2e 	bgeu	r11,r4,22020da8 <memcpy+0x130>
22020d2c:	1813883a 	mov	r9,r3
22020d30:	2811883a 	mov	r8,r5
22020d34:	200f883a 	mov	r7,r4
22020d38:	42800017 	ldw	r10,0(r8)
22020d3c:	4a400104 	addi	r9,r9,4
22020d40:	39ffff04 	addi	r7,r7,-4
22020d44:	4abfff15 	stw	r10,-4(r9)
22020d48:	42000104 	addi	r8,r8,4
22020d4c:	59fffa36 	bltu	r11,r7,22020d38 <__alt_data_end+0xfffe1938>
22020d50:	213fff04 	addi	r4,r4,-4
22020d54:	2008d0ba 	srli	r4,r4,2
22020d58:	318000cc 	andi	r6,r6,3
22020d5c:	21000044 	addi	r4,r4,1
22020d60:	2109883a 	add	r4,r4,r4
22020d64:	2109883a 	add	r4,r4,r4
22020d68:	1907883a 	add	r3,r3,r4
22020d6c:	290b883a 	add	r5,r5,r4
22020d70:	30000626 	beq	r6,zero,22020d8c <memcpy+0x114>
22020d74:	198d883a 	add	r6,r3,r6
22020d78:	29c00003 	ldbu	r7,0(r5)
22020d7c:	18c00044 	addi	r3,r3,1
22020d80:	29400044 	addi	r5,r5,1
22020d84:	19ffffc5 	stb	r7,-1(r3)
22020d88:	19bffb1e 	bne	r3,r6,22020d78 <__alt_data_end+0xfffe1978>
22020d8c:	dc000017 	ldw	r16,0(sp)
22020d90:	dec00104 	addi	sp,sp,4
22020d94:	f800283a 	ret
22020d98:	2007883a 	mov	r3,r4
22020d9c:	003ff406 	br	22020d70 <__alt_data_end+0xfffe1970>
22020da0:	2007883a 	mov	r3,r4
22020da4:	003ff306 	br	22020d74 <__alt_data_end+0xfffe1974>
22020da8:	200d883a 	mov	r6,r4
22020dac:	003ff006 	br	22020d70 <__alt_data_end+0xfffe1970>

22020db0 <_printf_r>:
22020db0:	defffd04 	addi	sp,sp,-12
22020db4:	dfc00015 	stw	ra,0(sp)
22020db8:	d9800115 	stw	r6,4(sp)
22020dbc:	d9c00215 	stw	r7,8(sp)
22020dc0:	280d883a 	mov	r6,r5
22020dc4:	21400217 	ldw	r5,8(r4)
22020dc8:	d9c00104 	addi	r7,sp,4
22020dcc:	20210180 	call	22021018 <___vfprintf_internal_r>
22020dd0:	dfc00017 	ldw	ra,0(sp)
22020dd4:	dec00304 	addi	sp,sp,12
22020dd8:	f800283a 	ret

22020ddc <printf>:
22020ddc:	defffc04 	addi	sp,sp,-16
22020de0:	dfc00015 	stw	ra,0(sp)
22020de4:	d9400115 	stw	r5,4(sp)
22020de8:	d9800215 	stw	r6,8(sp)
22020dec:	d9c00315 	stw	r7,12(sp)
22020df0:	008880f4 	movhi	r2,8707
22020df4:	10868404 	addi	r2,r2,6672
22020df8:	10800017 	ldw	r2,0(r2)
22020dfc:	200b883a 	mov	r5,r4
22020e00:	d9800104 	addi	r6,sp,4
22020e04:	11000217 	ldw	r4,8(r2)
22020e08:	20230140 	call	22023014 <__vfprintf_internal>
22020e0c:	dfc00017 	ldw	ra,0(sp)
22020e10:	dec00404 	addi	sp,sp,16
22020e14:	f800283a 	ret

22020e18 <_putchar_r>:
22020e18:	21800217 	ldw	r6,8(r4)
22020e1c:	20277e41 	jmpi	220277e4 <_putc_r>

22020e20 <putchar>:
22020e20:	008880f4 	movhi	r2,8707
22020e24:	10868404 	addi	r2,r2,6672
22020e28:	200b883a 	mov	r5,r4
22020e2c:	11000017 	ldw	r4,0(r2)
22020e30:	21800217 	ldw	r6,8(r4)
22020e34:	20277e41 	jmpi	220277e4 <_putc_r>

22020e38 <_puts_r>:
22020e38:	defff604 	addi	sp,sp,-40
22020e3c:	dc000715 	stw	r16,28(sp)
22020e40:	2021883a 	mov	r16,r4
22020e44:	2809883a 	mov	r4,r5
22020e48:	dc400815 	stw	r17,32(sp)
22020e4c:	dfc00915 	stw	ra,36(sp)
22020e50:	2823883a 	mov	r17,r5
22020e54:	2020f800 	call	22020f80 <strlen>
22020e58:	00c880f4 	movhi	r3,8707
22020e5c:	18c68404 	addi	r3,r3,6672
22020e60:	18c00017 	ldw	r3,0(r3)
22020e64:	11000044 	addi	r4,r2,1
22020e68:	d8800115 	stw	r2,4(sp)
22020e6c:	18c00217 	ldw	r3,8(r3)
22020e70:	014880f4 	movhi	r5,8707
22020e74:	297f1a04 	addi	r5,r5,-920
22020e78:	1880030b 	ldhu	r2,12(r3)
22020e7c:	d9400215 	stw	r5,8(sp)
22020e80:	d9000615 	stw	r4,24(sp)
22020e84:	01400044 	movi	r5,1
22020e88:	01000084 	movi	r4,2
22020e8c:	d9000515 	stw	r4,20(sp)
22020e90:	dc400015 	stw	r17,0(sp)
22020e94:	d9400315 	stw	r5,12(sp)
22020e98:	dec00415 	stw	sp,16(sp)
22020e9c:	1108000c 	andi	r4,r2,8192
22020ea0:	2000061e 	bne	r4,zero,22020ebc <_puts_r+0x84>
22020ea4:	19401917 	ldw	r5,100(r3)
22020ea8:	0137ffc4 	movi	r4,-8193
22020eac:	10880014 	ori	r2,r2,8192
22020eb0:	2908703a 	and	r4,r5,r4
22020eb4:	1880030d 	sth	r2,12(r3)
22020eb8:	19001915 	stw	r4,100(r3)
22020ebc:	81400217 	ldw	r5,8(r16)
22020ec0:	8009883a 	mov	r4,r16
22020ec4:	d9800404 	addi	r6,sp,16
22020ec8:	202549c0 	call	2202549c <__sfvwrite_r>
22020ecc:	1000061e 	bne	r2,zero,22020ee8 <_puts_r+0xb0>
22020ed0:	00800284 	movi	r2,10
22020ed4:	dfc00917 	ldw	ra,36(sp)
22020ed8:	dc400817 	ldw	r17,32(sp)
22020edc:	dc000717 	ldw	r16,28(sp)
22020ee0:	dec00a04 	addi	sp,sp,40
22020ee4:	f800283a 	ret
22020ee8:	00bfffc4 	movi	r2,-1
22020eec:	003ff906 	br	22020ed4 <__alt_data_end+0xfffe1ad4>

22020ef0 <puts>:
22020ef0:	008880f4 	movhi	r2,8707
22020ef4:	10868404 	addi	r2,r2,6672
22020ef8:	200b883a 	mov	r5,r4
22020efc:	11000017 	ldw	r4,0(r2)
22020f00:	2020e381 	jmpi	22020e38 <_puts_r>

22020f04 <srand>:
22020f04:	008880f4 	movhi	r2,8707
22020f08:	10868404 	addi	r2,r2,6672
22020f0c:	10800017 	ldw	r2,0(r2)
22020f10:	11002915 	stw	r4,164(r2)
22020f14:	10002a15 	stw	zero,168(r2)
22020f18:	f800283a 	ret

22020f1c <rand>:
22020f1c:	008880f4 	movhi	r2,8707
22020f20:	defffe04 	addi	sp,sp,-8
22020f24:	10868404 	addi	r2,r2,6672
22020f28:	dc000015 	stw	r16,0(sp)
22020f2c:	14000017 	ldw	r16,0(r2)
22020f30:	dfc00115 	stw	ra,4(sp)
22020f34:	01932574 	movhi	r6,19605
22020f38:	81002917 	ldw	r4,164(r16)
22020f3c:	81402a17 	ldw	r5,168(r16)
22020f40:	01d614b4 	movhi	r7,22610
22020f44:	319fcb44 	addi	r6,r6,32557
22020f48:	39fd0b44 	addi	r7,r7,-3027
22020f4c:	2029f600 	call	22029f60 <__muldi3>
22020f50:	11000044 	addi	r4,r2,1
22020f54:	2085803a 	cmpltu	r2,r4,r2
22020f58:	10c7883a 	add	r3,r2,r3
22020f5c:	00a00034 	movhi	r2,32768
22020f60:	10bfffc4 	addi	r2,r2,-1
22020f64:	1884703a 	and	r2,r3,r2
22020f68:	81002915 	stw	r4,164(r16)
22020f6c:	80c02a15 	stw	r3,168(r16)
22020f70:	dfc00117 	ldw	ra,4(sp)
22020f74:	dc000017 	ldw	r16,0(sp)
22020f78:	dec00204 	addi	sp,sp,8
22020f7c:	f800283a 	ret

22020f80 <strlen>:
22020f80:	208000cc 	andi	r2,r4,3
22020f84:	10002026 	beq	r2,zero,22021008 <strlen+0x88>
22020f88:	20800007 	ldb	r2,0(r4)
22020f8c:	10002026 	beq	r2,zero,22021010 <strlen+0x90>
22020f90:	2005883a 	mov	r2,r4
22020f94:	00000206 	br	22020fa0 <strlen+0x20>
22020f98:	10c00007 	ldb	r3,0(r2)
22020f9c:	18001826 	beq	r3,zero,22021000 <strlen+0x80>
22020fa0:	10800044 	addi	r2,r2,1
22020fa4:	10c000cc 	andi	r3,r2,3
22020fa8:	183ffb1e 	bne	r3,zero,22020f98 <__alt_data_end+0xfffe1b98>
22020fac:	10c00017 	ldw	r3,0(r2)
22020fb0:	01ffbff4 	movhi	r7,65279
22020fb4:	39ffbfc4 	addi	r7,r7,-257
22020fb8:	00ca303a 	nor	r5,zero,r3
22020fbc:	01a02074 	movhi	r6,32897
22020fc0:	19c7883a 	add	r3,r3,r7
22020fc4:	31a02004 	addi	r6,r6,-32640
22020fc8:	1946703a 	and	r3,r3,r5
22020fcc:	1986703a 	and	r3,r3,r6
22020fd0:	1800091e 	bne	r3,zero,22020ff8 <strlen+0x78>
22020fd4:	10800104 	addi	r2,r2,4
22020fd8:	10c00017 	ldw	r3,0(r2)
22020fdc:	19cb883a 	add	r5,r3,r7
22020fe0:	00c6303a 	nor	r3,zero,r3
22020fe4:	28c6703a 	and	r3,r5,r3
22020fe8:	1986703a 	and	r3,r3,r6
22020fec:	183ff926 	beq	r3,zero,22020fd4 <__alt_data_end+0xfffe1bd4>
22020ff0:	00000106 	br	22020ff8 <strlen+0x78>
22020ff4:	10800044 	addi	r2,r2,1
22020ff8:	10c00007 	ldb	r3,0(r2)
22020ffc:	183ffd1e 	bne	r3,zero,22020ff4 <__alt_data_end+0xfffe1bf4>
22021000:	1105c83a 	sub	r2,r2,r4
22021004:	f800283a 	ret
22021008:	2005883a 	mov	r2,r4
2202100c:	003fe706 	br	22020fac <__alt_data_end+0xfffe1bac>
22021010:	0005883a 	mov	r2,zero
22021014:	f800283a 	ret

22021018 <___vfprintf_internal_r>:
22021018:	defeb604 	addi	sp,sp,-1320
2202101c:	dfc14915 	stw	ra,1316(sp)
22021020:	ddc14715 	stw	r23,1308(sp)
22021024:	dd814615 	stw	r22,1304(sp)
22021028:	282f883a 	mov	r23,r5
2202102c:	202d883a 	mov	r22,r4
22021030:	d9812a15 	stw	r6,1192(sp)
22021034:	d9c12d15 	stw	r7,1204(sp)
22021038:	df014815 	stw	fp,1312(sp)
2202103c:	dd414515 	stw	r21,1300(sp)
22021040:	dd014415 	stw	r20,1296(sp)
22021044:	dcc14315 	stw	r19,1292(sp)
22021048:	dc814215 	stw	r18,1288(sp)
2202104c:	dc414115 	stw	r17,1284(sp)
22021050:	dc014015 	stw	r16,1280(sp)
22021054:	2025b5c0 	call	22025b5c <_localeconv_r>
22021058:	10800017 	ldw	r2,0(r2)
2202105c:	1009883a 	mov	r4,r2
22021060:	d8813515 	stw	r2,1236(sp)
22021064:	2020f800 	call	22020f80 <strlen>
22021068:	d8813815 	stw	r2,1248(sp)
2202106c:	b0000226 	beq	r22,zero,22021078 <___vfprintf_internal_r+0x60>
22021070:	b0800e17 	ldw	r2,56(r22)
22021074:	10010426 	beq	r2,zero,22021488 <___vfprintf_internal_r+0x470>
22021078:	b8c0030b 	ldhu	r3,12(r23)
2202107c:	1908000c 	andi	r4,r3,8192
22021080:	1805883a 	mov	r2,r3
22021084:	2000071e 	bne	r4,zero,220210a4 <___vfprintf_internal_r+0x8c>
22021088:	b9001917 	ldw	r4,100(r23)
2202108c:	18880014 	ori	r2,r3,8192
22021090:	00f7ffc4 	movi	r3,-8193
22021094:	20c8703a 	and	r4,r4,r3
22021098:	b880030d 	sth	r2,12(r23)
2202109c:	1007883a 	mov	r3,r2
220210a0:	b9001915 	stw	r4,100(r23)
220210a4:	1100020c 	andi	r4,r2,8
220210a8:	2000a726 	beq	r4,zero,22021348 <___vfprintf_internal_r+0x330>
220210ac:	b9000417 	ldw	r4,16(r23)
220210b0:	2000a526 	beq	r4,zero,22021348 <___vfprintf_internal_r+0x330>
220210b4:	1080068c 	andi	r2,r2,26
220210b8:	01000284 	movi	r4,10
220210bc:	1100ab26 	beq	r2,r4,2202136c <___vfprintf_internal_r+0x354>
220210c0:	dac10e04 	addi	r11,sp,1080
220210c4:	db010dc4 	addi	r12,sp,1079
220210c8:	d8800404 	addi	r2,sp,16
220210cc:	050880f4 	movhi	r20,8707
220210d0:	dac12815 	stw	r11,1184(sp)
220210d4:	5b17c83a 	sub	r11,r11,r12
220210d8:	a53f2b84 	addi	r20,r20,-850
220210dc:	db012915 	stw	r12,1188(sp)
220210e0:	d8811e15 	stw	r2,1144(sp)
220210e4:	d8012015 	stw	zero,1152(sp)
220210e8:	d8011f15 	stw	zero,1148(sp)
220210ec:	d8013315 	stw	zero,1228(sp)
220210f0:	d8013715 	stw	zero,1244(sp)
220210f4:	d8013915 	stw	zero,1252(sp)
220210f8:	d8013b15 	stw	zero,1260(sp)
220210fc:	d8013a15 	stw	zero,1256(sp)
22021100:	d8012f15 	stw	zero,1212(sp)
22021104:	1011883a 	mov	r8,r2
22021108:	dac13c15 	stw	r11,1264(sp)
2202110c:	db012a17 	ldw	r12,1192(sp)
22021110:	60800007 	ldb	r2,0(r12)
22021114:	1000df26 	beq	r2,zero,22021494 <___vfprintf_internal_r+0x47c>
22021118:	00c00944 	movi	r3,37
2202111c:	10c0dd26 	beq	r2,r3,22021494 <___vfprintf_internal_r+0x47c>
22021120:	6021883a 	mov	r16,r12
22021124:	00000106 	br	2202112c <___vfprintf_internal_r+0x114>
22021128:	10c08426 	beq	r2,r3,2202133c <___vfprintf_internal_r+0x324>
2202112c:	84000044 	addi	r16,r16,1
22021130:	80800007 	ldb	r2,0(r16)
22021134:	103ffc1e 	bne	r2,zero,22021128 <__alt_data_end+0xfffe1d28>
22021138:	dac12a17 	ldw	r11,1192(sp)
2202113c:	82e3c83a 	sub	r17,r16,r11
22021140:	88000f26 	beq	r17,zero,22021180 <___vfprintf_internal_r+0x168>
22021144:	d8c12017 	ldw	r3,1152(sp)
22021148:	d8811f17 	ldw	r2,1148(sp)
2202114c:	dac12a17 	ldw	r11,1192(sp)
22021150:	1c47883a 	add	r3,r3,r17
22021154:	10800044 	addi	r2,r2,1
22021158:	d8c12015 	stw	r3,1152(sp)
2202115c:	42c00015 	stw	r11,0(r8)
22021160:	44400115 	stw	r17,4(r8)
22021164:	d8811f15 	stw	r2,1148(sp)
22021168:	00c001c4 	movi	r3,7
2202116c:	1880b416 	blt	r3,r2,22021440 <___vfprintf_internal_r+0x428>
22021170:	42000204 	addi	r8,r8,8
22021174:	db012f17 	ldw	r12,1212(sp)
22021178:	6459883a 	add	r12,r12,r17
2202117c:	db012f15 	stw	r12,1212(sp)
22021180:	80800007 	ldb	r2,0(r16)
22021184:	1000b526 	beq	r2,zero,2202145c <___vfprintf_internal_r+0x444>
22021188:	80800044 	addi	r2,r16,1
2202118c:	84000047 	ldb	r16,1(r16)
22021190:	d8012785 	stb	zero,1182(sp)
22021194:	000d883a 	mov	r6,zero
22021198:	027fffc4 	movi	r9,-1
2202119c:	d8012e15 	stw	zero,1208(sp)
220211a0:	0023883a 	mov	r17,zero
220211a4:	01001604 	movi	r4,88
220211a8:	01400244 	movi	r5,9
220211ac:	02800a84 	movi	r10,42
220211b0:	01c01b04 	movi	r7,108
220211b4:	10c00044 	addi	r3,r2,1
220211b8:	80bff804 	addi	r2,r16,-32
220211bc:	2082f236 	bltu	r4,r2,22021d88 <___vfprintf_internal_r+0xd70>
220211c0:	100490ba 	slli	r2,r2,2
220211c4:	02c880b4 	movhi	r11,8706
220211c8:	5ac47604 	addi	r11,r11,4568
220211cc:	12c5883a 	add	r2,r2,r11
220211d0:	10800017 	ldw	r2,0(r2)
220211d4:	1000683a 	jmp	r2
220211d8:	22021bd0 	cmplti	r8,r4,2159
220211dc:	22021d88 	cmpgei	r8,r4,2166
220211e0:	22021d88 	cmpgei	r8,r4,2166
220211e4:	22021bf0 	cmpltui	r8,r4,2159
220211e8:	22021d88 	cmpgei	r8,r4,2166
220211ec:	22021d88 	cmpgei	r8,r4,2166
220211f0:	22021d88 	cmpgei	r8,r4,2166
220211f4:	22021d88 	cmpgei	r8,r4,2166
220211f8:	22021d88 	cmpgei	r8,r4,2166
220211fc:	22021d88 	cmpgei	r8,r4,2166
22021200:	22021d4c 	andi	r8,r4,2165
22021204:	22021d78 	rdprs	r8,r4,2165
22021208:	22021d88 	cmpgei	r8,r4,2166
2202120c:	2202149c 	xori	r8,r4,2130
22021210:	220214ac 	andhi	r8,r4,2130
22021214:	22021d88 	cmpgei	r8,r4,2166
22021218:	220214ec 	andhi	r8,r4,2131
2202121c:	220219e0 	cmpeqi	r8,r4,2151
22021220:	220219e0 	cmpeqi	r8,r4,2151
22021224:	220219e0 	cmpeqi	r8,r4,2151
22021228:	220219e0 	cmpeqi	r8,r4,2151
2202122c:	220219e0 	cmpeqi	r8,r4,2151
22021230:	220219e0 	cmpeqi	r8,r4,2151
22021234:	220219e0 	cmpeqi	r8,r4,2151
22021238:	220219e0 	cmpeqi	r8,r4,2151
2202123c:	220219e0 	cmpeqi	r8,r4,2151
22021240:	22021d88 	cmpgei	r8,r4,2166
22021244:	22021d88 	cmpgei	r8,r4,2166
22021248:	22021d88 	cmpgei	r8,r4,2166
2202124c:	22021d88 	cmpgei	r8,r4,2166
22021250:	22021d88 	cmpgei	r8,r4,2166
22021254:	22021d88 	cmpgei	r8,r4,2166
22021258:	22021d88 	cmpgei	r8,r4,2166
2202125c:	22021d88 	cmpgei	r8,r4,2166
22021260:	22021d88 	cmpgei	r8,r4,2166
22021264:	22021d88 	cmpgei	r8,r4,2166
22021268:	22021a14 	ori	r8,r4,2152
2202126c:	220214fc 	xorhi	r8,r4,2131
22021270:	22021d88 	cmpgei	r8,r4,2166
22021274:	220214fc 	xorhi	r8,r4,2131
22021278:	22021d88 	cmpgei	r8,r4,2166
2202127c:	22021d88 	cmpgei	r8,r4,2166
22021280:	22021d88 	cmpgei	r8,r4,2166
22021284:	22021d88 	cmpgei	r8,r4,2166
22021288:	220215a0 	cmpeqi	r8,r4,2134
2202128c:	22021d88 	cmpgei	r8,r4,2166
22021290:	22021d88 	cmpgei	r8,r4,2166
22021294:	220215b0 	cmpltui	r8,r4,2134
22021298:	22021d88 	cmpgei	r8,r4,2166
2202129c:	22021d88 	cmpgei	r8,r4,2166
220212a0:	22021d88 	cmpgei	r8,r4,2166
220212a4:	22021d88 	cmpgei	r8,r4,2166
220212a8:	22021d88 	cmpgei	r8,r4,2166
220212ac:	220219ac 	andhi	r8,r4,2150
220212b0:	22021d88 	cmpgei	r8,r4,2166
220212b4:	22021d88 	cmpgei	r8,r4,2166
220212b8:	22021a5c 	xori	r8,r4,2153
220212bc:	22021d88 	cmpgei	r8,r4,2166
220212c0:	22021d88 	cmpgei	r8,r4,2166
220212c4:	22021d88 	cmpgei	r8,r4,2166
220212c8:	22021d88 	cmpgei	r8,r4,2166
220212cc:	22021d88 	cmpgei	r8,r4,2166
220212d0:	22021d88 	cmpgei	r8,r4,2166
220212d4:	22021d88 	cmpgei	r8,r4,2166
220212d8:	22021d88 	cmpgei	r8,r4,2166
220212dc:	22021d88 	cmpgei	r8,r4,2166
220212e0:	22021d88 	cmpgei	r8,r4,2166
220212e4:	22021c50 	cmplti	r8,r4,2161
220212e8:	22021c00 	call	222021c0 <__alt_data_end+0x1c2dc0>
220212ec:	220214fc 	xorhi	r8,r4,2131
220212f0:	220214fc 	xorhi	r8,r4,2131
220212f4:	220214fc 	xorhi	r8,r4,2131
220212f8:	22021c40 	call	222021c4 <__alt_data_end+0x1c2dc4>
220212fc:	22021c00 	call	222021c0 <__alt_data_end+0x1c2dc0>
22021300:	22021d88 	cmpgei	r8,r4,2166
22021304:	22021d88 	cmpgei	r8,r4,2166
22021308:	22021b48 	cmpgei	r8,r4,2157
2202130c:	22021d88 	cmpgei	r8,r4,2166
22021310:	22021b5c 	xori	r8,r4,2157
22021314:	22021b90 	cmplti	r8,r4,2158
22021318:	22021c90 	cmplti	r8,r4,2162
2202131c:	22021ab8 	rdprs	r8,r4,2154
22021320:	22021d88 	cmpgei	r8,r4,2166
22021324:	22021cd8 	cmpnei	r8,r4,2163
22021328:	22021d88 	cmpgei	r8,r4,2166
2202132c:	22021ac8 	cmpgei	r8,r4,2155
22021330:	22021d88 	cmpgei	r8,r4,2166
22021334:	22021d88 	cmpgei	r8,r4,2166
22021338:	22021b08 	cmpgei	r8,r4,2156
2202133c:	db012a17 	ldw	r12,1192(sp)
22021340:	8323c83a 	sub	r17,r16,r12
22021344:	003f7e06 	br	22021140 <__alt_data_end+0xfffe1d40>
22021348:	b009883a 	mov	r4,r22
2202134c:	b80b883a 	mov	r5,r23
22021350:	20230380 	call	22023038 <__swsetup_r>
22021354:	10002d1e 	bne	r2,zero,2202140c <___vfprintf_internal_r+0x3f4>
22021358:	b8c0030b 	ldhu	r3,12(r23)
2202135c:	01000284 	movi	r4,10
22021360:	1805883a 	mov	r2,r3
22021364:	1080068c 	andi	r2,r2,26
22021368:	113f551e 	bne	r2,r4,220210c0 <__alt_data_end+0xfffe1cc0>
2202136c:	b880038b 	ldhu	r2,14(r23)
22021370:	113fffcc 	andi	r4,r2,65535
22021374:	2120001c 	xori	r4,r4,32768
22021378:	21200004 	addi	r4,r4,-32768
2202137c:	203f5016 	blt	r4,zero,220210c0 <__alt_data_end+0xfffe1cc0>
22021380:	bac01917 	ldw	r11,100(r23)
22021384:	ba800717 	ldw	r10,28(r23)
22021388:	ba400917 	ldw	r9,36(r23)
2202138c:	d9812a17 	ldw	r6,1192(sp)
22021390:	d9c12d17 	ldw	r7,1204(sp)
22021394:	02010004 	movi	r8,1024
22021398:	18ffff4c 	andi	r3,r3,65533
2202139c:	d881078d 	sth	r2,1054(sp)
220213a0:	b009883a 	mov	r4,r22
220213a4:	d8800404 	addi	r2,sp,16
220213a8:	d9410404 	addi	r5,sp,1040
220213ac:	d8c1070d 	sth	r3,1052(sp)
220213b0:	dac11d15 	stw	r11,1140(sp)
220213b4:	da810b15 	stw	r10,1068(sp)
220213b8:	da410d15 	stw	r9,1076(sp)
220213bc:	d8810415 	stw	r2,1040(sp)
220213c0:	d8810815 	stw	r2,1056(sp)
220213c4:	da010615 	stw	r8,1048(sp)
220213c8:	da010915 	stw	r8,1060(sp)
220213cc:	d8010a15 	stw	zero,1064(sp)
220213d0:	20210180 	call	22021018 <___vfprintf_internal_r>
220213d4:	1021883a 	mov	r16,r2
220213d8:	10000416 	blt	r2,zero,220213ec <___vfprintf_internal_r+0x3d4>
220213dc:	b009883a 	mov	r4,r22
220213e0:	d9410404 	addi	r5,sp,1040
220213e4:	2024a900 	call	22024a90 <_fflush_r>
220213e8:	1006ee1e 	bne	r2,zero,22022fa4 <___vfprintf_internal_r+0x1f8c>
220213ec:	d881070b 	ldhu	r2,1052(sp)
220213f0:	1080100c 	andi	r2,r2,64
220213f4:	10000326 	beq	r2,zero,22021404 <___vfprintf_internal_r+0x3ec>
220213f8:	b880030b 	ldhu	r2,12(r23)
220213fc:	10801014 	ori	r2,r2,64
22021400:	b880030d 	sth	r2,12(r23)
22021404:	8005883a 	mov	r2,r16
22021408:	00000106 	br	22021410 <___vfprintf_internal_r+0x3f8>
2202140c:	00bfffc4 	movi	r2,-1
22021410:	dfc14917 	ldw	ra,1316(sp)
22021414:	df014817 	ldw	fp,1312(sp)
22021418:	ddc14717 	ldw	r23,1308(sp)
2202141c:	dd814617 	ldw	r22,1304(sp)
22021420:	dd414517 	ldw	r21,1300(sp)
22021424:	dd014417 	ldw	r20,1296(sp)
22021428:	dcc14317 	ldw	r19,1292(sp)
2202142c:	dc814217 	ldw	r18,1288(sp)
22021430:	dc414117 	ldw	r17,1284(sp)
22021434:	dc014017 	ldw	r16,1280(sp)
22021438:	dec14a04 	addi	sp,sp,1320
2202143c:	f800283a 	ret
22021440:	b009883a 	mov	r4,r22
22021444:	b80b883a 	mov	r5,r23
22021448:	d9811e04 	addi	r6,sp,1144
2202144c:	20282900 	call	22028290 <__sprint_r>
22021450:	1000081e 	bne	r2,zero,22021474 <___vfprintf_internal_r+0x45c>
22021454:	da000404 	addi	r8,sp,16
22021458:	003f4606 	br	22021174 <__alt_data_end+0xfffe1d74>
2202145c:	d8812017 	ldw	r2,1152(sp)
22021460:	10000426 	beq	r2,zero,22021474 <___vfprintf_internal_r+0x45c>
22021464:	b009883a 	mov	r4,r22
22021468:	b80b883a 	mov	r5,r23
2202146c:	d9811e04 	addi	r6,sp,1144
22021470:	20282900 	call	22028290 <__sprint_r>
22021474:	b880030b 	ldhu	r2,12(r23)
22021478:	1080100c 	andi	r2,r2,64
2202147c:	103fe31e 	bne	r2,zero,2202140c <__alt_data_end+0xfffe200c>
22021480:	d8812f17 	ldw	r2,1212(sp)
22021484:	003fe206 	br	22021410 <__alt_data_end+0xfffe2010>
22021488:	b009883a 	mov	r4,r22
2202148c:	20250380 	call	22025038 <__sinit>
22021490:	003ef906 	br	22021078 <__alt_data_end+0xfffe1c78>
22021494:	dc012a17 	ldw	r16,1192(sp)
22021498:	003f3906 	br	22021180 <__alt_data_end+0xfffe1d80>
2202149c:	1805883a 	mov	r2,r3
220214a0:	8c400114 	ori	r17,r17,4
220214a4:	1c000007 	ldb	r16,0(r3)
220214a8:	003f4206 	br	220211b4 <__alt_data_end+0xfffe1db4>
220214ac:	1c000007 	ldb	r16,0(r3)
220214b0:	18800044 	addi	r2,r3,1
220214b4:	8286b326 	beq	r16,r10,22022f84 <___vfprintf_internal_r+0x1f6c>
220214b8:	82fff404 	addi	r11,r16,-48
220214bc:	1007883a 	mov	r3,r2
220214c0:	0013883a 	mov	r9,zero
220214c4:	2aff3c36 	bltu	r5,r11,220211b8 <__alt_data_end+0xfffe1db8>
220214c8:	1c000007 	ldb	r16,0(r3)
220214cc:	4a4002a4 	muli	r9,r9,10
220214d0:	18c00044 	addi	r3,r3,1
220214d4:	5a53883a 	add	r9,r11,r9
220214d8:	82fff404 	addi	r11,r16,-48
220214dc:	2afffa2e 	bgeu	r5,r11,220214c8 <__alt_data_end+0xfffe20c8>
220214e0:	483f350e 	bge	r9,zero,220211b8 <__alt_data_end+0xfffe1db8>
220214e4:	027fffc4 	movi	r9,-1
220214e8:	003f3306 	br	220211b8 <__alt_data_end+0xfffe1db8>
220214ec:	8c402014 	ori	r17,r17,128
220214f0:	1805883a 	mov	r2,r3
220214f4:	1c000007 	ldb	r16,0(r3)
220214f8:	003f2e06 	br	220211b4 <__alt_data_end+0xfffe1db4>
220214fc:	db012d17 	ldw	r12,1204(sp)
22021500:	dac12d17 	ldw	r11,1204(sp)
22021504:	d8c12a15 	stw	r3,1192(sp)
22021508:	63000017 	ldw	r12,0(r12)
2202150c:	5ac00117 	ldw	r11,4(r11)
22021510:	d9812785 	stb	r6,1182(sp)
22021514:	6009883a 	mov	r4,r12
22021518:	580b883a 	mov	r5,r11
2202151c:	db013715 	stw	r12,1244(sp)
22021520:	da013f15 	stw	r8,1276(sp)
22021524:	da413e15 	stw	r9,1272(sp)
22021528:	dac13915 	stw	r11,1252(sp)
2202152c:	2027eec0 	call	22027eec <__fpclassifyd>
22021530:	db012d17 	ldw	r12,1204(sp)
22021534:	04800044 	movi	r18,1
22021538:	da013f17 	ldw	r8,1276(sp)
2202153c:	64c00204 	addi	r19,r12,8
22021540:	da413e17 	ldw	r9,1272(sp)
22021544:	d9013717 	ldw	r4,1244(sp)
22021548:	d9413917 	ldw	r5,1252(sp)
2202154c:	1484581e 	bne	r2,r18,220226b0 <___vfprintf_internal_r+0x1698>
22021550:	000d883a 	mov	r6,zero
22021554:	000f883a 	mov	r7,zero
22021558:	202bddc0 	call	2202bddc <__ledf2>
2202155c:	da013f17 	ldw	r8,1276(sp)
22021560:	1005ef16 	blt	r2,zero,22022d20 <___vfprintf_internal_r+0x1d08>
22021564:	dd412783 	ldbu	r21,1182(sp)
22021568:	008011c4 	movi	r2,71
2202156c:	14053b0e 	bge	r2,r16,22022a5c <___vfprintf_internal_r+0x1a44>
22021570:	00c880f4 	movhi	r3,8707
22021574:	18ff1c04 	addi	r3,r3,-912
22021578:	d8c13115 	stw	r3,1220(sp)
2202157c:	02c000c4 	movi	r11,3
22021580:	00bfdfc4 	movi	r2,-129
22021584:	dac12b15 	stw	r11,1196(sp)
22021588:	88a2703a 	and	r17,r17,r2
2202158c:	dcc12d15 	stw	r19,1204(sp)
22021590:	5825883a 	mov	r18,r11
22021594:	d8013215 	stw	zero,1224(sp)
22021598:	d8013415 	stw	zero,1232(sp)
2202159c:	00003206 	br	22021668 <___vfprintf_internal_r+0x650>
220215a0:	8c400214 	ori	r17,r17,8
220215a4:	1805883a 	mov	r2,r3
220215a8:	1c000007 	ldb	r16,0(r3)
220215ac:	003f0106 	br	220211b4 <__alt_data_end+0xfffe1db4>
220215b0:	8c400414 	ori	r17,r17,16
220215b4:	d8c12a15 	stw	r3,1192(sp)
220215b8:	88c0080c 	andi	r3,r17,32
220215bc:	d8812d17 	ldw	r2,1204(sp)
220215c0:	18017726 	beq	r3,zero,22021ba0 <___vfprintf_internal_r+0xb88>
220215c4:	db012d17 	ldw	r12,1204(sp)
220215c8:	14c00017 	ldw	r19,0(r2)
220215cc:	17000117 	ldw	fp,4(r2)
220215d0:	63000204 	addi	r12,r12,8
220215d4:	db012d15 	stw	r12,1204(sp)
220215d8:	0005883a 	mov	r2,zero
220215dc:	9f06b03a 	or	r3,r19,fp
220215e0:	d8012785 	stb	zero,1182(sp)
220215e4:	da413215 	stw	r9,1224(sp)
220215e8:	002b883a 	mov	r21,zero
220215ec:	48000216 	blt	r9,zero,220215f8 <___vfprintf_internal_r+0x5e0>
220215f0:	013fdfc4 	movi	r4,-129
220215f4:	8922703a 	and	r17,r17,r4
220215f8:	1801ed1e 	bne	r3,zero,22021db0 <___vfprintf_internal_r+0xd98>
220215fc:	4802e026 	beq	r9,zero,22022180 <___vfprintf_internal_r+0x1168>
22021600:	10803fcc 	andi	r2,r2,255
22021604:	00c00044 	movi	r3,1
22021608:	10c20f26 	beq	r2,r3,22021e48 <___vfprintf_internal_r+0xe30>
2202160c:	00c00084 	movi	r3,2
22021610:	10c2fd26 	beq	r2,r3,22022208 <___vfprintf_internal_r+0x11f0>
22021614:	d8c10e04 	addi	r3,sp,1080
22021618:	9808d0fa 	srli	r4,r19,3
2202161c:	e00a977a 	slli	r5,fp,29
22021620:	e038d0fa 	srli	fp,fp,3
22021624:	9cc001cc 	andi	r19,r19,7
22021628:	98800c04 	addi	r2,r19,48
2202162c:	18ffffc4 	addi	r3,r3,-1
22021630:	2926b03a 	or	r19,r5,r4
22021634:	18800005 	stb	r2,0(r3)
22021638:	9f08b03a 	or	r4,r19,fp
2202163c:	203ff61e 	bne	r4,zero,22021618 <__alt_data_end+0xfffe2218>
22021640:	8900004c 	andi	r4,r17,1
22021644:	d8c13115 	stw	r3,1220(sp)
22021648:	2003791e 	bne	r4,zero,22022430 <___vfprintf_internal_r+0x1418>
2202164c:	dac12817 	ldw	r11,1184(sp)
22021650:	58e5c83a 	sub	r18,r11,r3
22021654:	9005883a 	mov	r2,r18
22021658:	9240010e 	bge	r18,r9,22021660 <___vfprintf_internal_r+0x648>
2202165c:	4805883a 	mov	r2,r9
22021660:	d8812b15 	stw	r2,1196(sp)
22021664:	d8013415 	stw	zero,1232(sp)
22021668:	a8803fcc 	andi	r2,r21,255
2202166c:	1080201c 	xori	r2,r2,128
22021670:	10bfe004 	addi	r2,r2,-128
22021674:	10000326 	beq	r2,zero,22021684 <___vfprintf_internal_r+0x66c>
22021678:	db012b17 	ldw	r12,1196(sp)
2202167c:	63000044 	addi	r12,r12,1
22021680:	db012b15 	stw	r12,1196(sp)
22021684:	88c0008c 	andi	r3,r17,2
22021688:	d8c12c15 	stw	r3,1200(sp)
2202168c:	18000326 	beq	r3,zero,2202169c <___vfprintf_internal_r+0x684>
22021690:	dac12b17 	ldw	r11,1196(sp)
22021694:	5ac00084 	addi	r11,r11,2
22021698:	dac12b15 	stw	r11,1196(sp)
2202169c:	8b00210c 	andi	r12,r17,132
220216a0:	db013015 	stw	r12,1216(sp)
220216a4:	6001c01e 	bne	r12,zero,22021da8 <___vfprintf_internal_r+0xd90>
220216a8:	dac12e17 	ldw	r11,1208(sp)
220216ac:	db012b17 	ldw	r12,1196(sp)
220216b0:	5b39c83a 	sub	fp,r11,r12
220216b4:	0701bc0e 	bge	zero,fp,22021da8 <___vfprintf_internal_r+0xd90>
220216b8:	02400404 	movi	r9,16
220216bc:	d8c12017 	ldw	r3,1152(sp)
220216c0:	d8811f17 	ldw	r2,1148(sp)
220216c4:	4f05220e 	bge	r9,fp,22022b50 <___vfprintf_internal_r+0x1b38>
220216c8:	014880f4 	movhi	r5,8707
220216cc:	297f2f84 	addi	r5,r5,-834
220216d0:	d9413615 	stw	r5,1240(sp)
220216d4:	482b883a 	mov	r21,r9
220216d8:	04c001c4 	movi	r19,7
220216dc:	00000306 	br	220216ec <___vfprintf_internal_r+0x6d4>
220216e0:	e73ffc04 	addi	fp,fp,-16
220216e4:	42000204 	addi	r8,r8,8
220216e8:	af00130e 	bge	r21,fp,22021738 <___vfprintf_internal_r+0x720>
220216ec:	02c880f4 	movhi	r11,8707
220216f0:	18c00404 	addi	r3,r3,16
220216f4:	10800044 	addi	r2,r2,1
220216f8:	5aff2f84 	addi	r11,r11,-834
220216fc:	42c00015 	stw	r11,0(r8)
22021700:	45400115 	stw	r21,4(r8)
22021704:	d8c12015 	stw	r3,1152(sp)
22021708:	d8811f15 	stw	r2,1148(sp)
2202170c:	98bff40e 	bge	r19,r2,220216e0 <__alt_data_end+0xfffe22e0>
22021710:	b009883a 	mov	r4,r22
22021714:	b80b883a 	mov	r5,r23
22021718:	d9811e04 	addi	r6,sp,1144
2202171c:	20282900 	call	22028290 <__sprint_r>
22021720:	103f541e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22021724:	e73ffc04 	addi	fp,fp,-16
22021728:	d8c12017 	ldw	r3,1152(sp)
2202172c:	d8811f17 	ldw	r2,1148(sp)
22021730:	da000404 	addi	r8,sp,16
22021734:	af3fed16 	blt	r21,fp,220216ec <__alt_data_end+0xfffe22ec>
22021738:	db013617 	ldw	r12,1240(sp)
2202173c:	e0c7883a 	add	r3,fp,r3
22021740:	10800044 	addi	r2,r2,1
22021744:	43000015 	stw	r12,0(r8)
22021748:	47000115 	stw	fp,4(r8)
2202174c:	d8c12015 	stw	r3,1152(sp)
22021750:	d8811f15 	stw	r2,1148(sp)
22021754:	010001c4 	movi	r4,7
22021758:	2082f416 	blt	r4,r2,2202232c <___vfprintf_internal_r+0x1314>
2202175c:	d8812787 	ldb	r2,1182(sp)
22021760:	42000204 	addi	r8,r8,8
22021764:	10000c26 	beq	r2,zero,22021798 <___vfprintf_internal_r+0x780>
22021768:	d8811f17 	ldw	r2,1148(sp)
2202176c:	d9012784 	addi	r4,sp,1182
22021770:	18c00044 	addi	r3,r3,1
22021774:	10800044 	addi	r2,r2,1
22021778:	41000015 	stw	r4,0(r8)
2202177c:	01000044 	movi	r4,1
22021780:	41000115 	stw	r4,4(r8)
22021784:	d8c12015 	stw	r3,1152(sp)
22021788:	d8811f15 	stw	r2,1148(sp)
2202178c:	010001c4 	movi	r4,7
22021790:	20828d16 	blt	r4,r2,220221c8 <___vfprintf_internal_r+0x11b0>
22021794:	42000204 	addi	r8,r8,8
22021798:	dac12c17 	ldw	r11,1200(sp)
2202179c:	58000c26 	beq	r11,zero,220217d0 <___vfprintf_internal_r+0x7b8>
220217a0:	d8811f17 	ldw	r2,1148(sp)
220217a4:	d9012704 	addi	r4,sp,1180
220217a8:	18c00084 	addi	r3,r3,2
220217ac:	10800044 	addi	r2,r2,1
220217b0:	41000015 	stw	r4,0(r8)
220217b4:	01000084 	movi	r4,2
220217b8:	41000115 	stw	r4,4(r8)
220217bc:	d8c12015 	stw	r3,1152(sp)
220217c0:	d8811f15 	stw	r2,1148(sp)
220217c4:	010001c4 	movi	r4,7
220217c8:	20828716 	blt	r4,r2,220221e8 <___vfprintf_internal_r+0x11d0>
220217cc:	42000204 	addi	r8,r8,8
220217d0:	db013017 	ldw	r12,1216(sp)
220217d4:	00802004 	movi	r2,128
220217d8:	6081e926 	beq	r12,r2,22021f80 <___vfprintf_internal_r+0xf68>
220217dc:	db013217 	ldw	r12,1224(sp)
220217e0:	64abc83a 	sub	r21,r12,r18
220217e4:	0540260e 	bge	zero,r21,22021880 <___vfprintf_internal_r+0x868>
220217e8:	07000404 	movi	fp,16
220217ec:	d8811f17 	ldw	r2,1148(sp)
220217f0:	e5443d0e 	bge	fp,r21,220228e8 <___vfprintf_internal_r+0x18d0>
220217f4:	014880f4 	movhi	r5,8707
220217f8:	297f2b84 	addi	r5,r5,-850
220217fc:	d9412c15 	stw	r5,1200(sp)
22021800:	04c001c4 	movi	r19,7
22021804:	00000306 	br	22021814 <___vfprintf_internal_r+0x7fc>
22021808:	ad7ffc04 	addi	r21,r21,-16
2202180c:	42000204 	addi	r8,r8,8
22021810:	e540110e 	bge	fp,r21,22021858 <___vfprintf_internal_r+0x840>
22021814:	18c00404 	addi	r3,r3,16
22021818:	10800044 	addi	r2,r2,1
2202181c:	45000015 	stw	r20,0(r8)
22021820:	47000115 	stw	fp,4(r8)
22021824:	d8c12015 	stw	r3,1152(sp)
22021828:	d8811f15 	stw	r2,1148(sp)
2202182c:	98bff60e 	bge	r19,r2,22021808 <__alt_data_end+0xfffe2408>
22021830:	b009883a 	mov	r4,r22
22021834:	b80b883a 	mov	r5,r23
22021838:	d9811e04 	addi	r6,sp,1144
2202183c:	20282900 	call	22028290 <__sprint_r>
22021840:	103f0c1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22021844:	ad7ffc04 	addi	r21,r21,-16
22021848:	d8c12017 	ldw	r3,1152(sp)
2202184c:	d8811f17 	ldw	r2,1148(sp)
22021850:	da000404 	addi	r8,sp,16
22021854:	e57fef16 	blt	fp,r21,22021814 <__alt_data_end+0xfffe2414>
22021858:	dac12c17 	ldw	r11,1200(sp)
2202185c:	1d47883a 	add	r3,r3,r21
22021860:	10800044 	addi	r2,r2,1
22021864:	42c00015 	stw	r11,0(r8)
22021868:	45400115 	stw	r21,4(r8)
2202186c:	d8c12015 	stw	r3,1152(sp)
22021870:	d8811f15 	stw	r2,1148(sp)
22021874:	010001c4 	movi	r4,7
22021878:	20824b16 	blt	r4,r2,220221a8 <___vfprintf_internal_r+0x1190>
2202187c:	42000204 	addi	r8,r8,8
22021880:	8880400c 	andi	r2,r17,256
22021884:	1001761e 	bne	r2,zero,22021e60 <___vfprintf_internal_r+0xe48>
22021888:	d8811f17 	ldw	r2,1148(sp)
2202188c:	db013117 	ldw	r12,1220(sp)
22021890:	1c87883a 	add	r3,r3,r18
22021894:	10800044 	addi	r2,r2,1
22021898:	43000015 	stw	r12,0(r8)
2202189c:	44800115 	stw	r18,4(r8)
220218a0:	d8c12015 	stw	r3,1152(sp)
220218a4:	d8811f15 	stw	r2,1148(sp)
220218a8:	010001c4 	movi	r4,7
220218ac:	20822616 	blt	r4,r2,22022148 <___vfprintf_internal_r+0x1130>
220218b0:	42000204 	addi	r8,r8,8
220218b4:	8c40010c 	andi	r17,r17,4
220218b8:	88003126 	beq	r17,zero,22021980 <___vfprintf_internal_r+0x968>
220218bc:	db012e17 	ldw	r12,1208(sp)
220218c0:	dac12b17 	ldw	r11,1196(sp)
220218c4:	62e1c83a 	sub	r16,r12,r11
220218c8:	04002d0e 	bge	zero,r16,22021980 <___vfprintf_internal_r+0x968>
220218cc:	04400404 	movi	r17,16
220218d0:	d8811f17 	ldw	r2,1148(sp)
220218d4:	8c04df0e 	bge	r17,r16,22022c54 <___vfprintf_internal_r+0x1c3c>
220218d8:	010880f4 	movhi	r4,8707
220218dc:	213f2f84 	addi	r4,r4,-834
220218e0:	d9013615 	stw	r4,1240(sp)
220218e4:	048001c4 	movi	r18,7
220218e8:	00000306 	br	220218f8 <___vfprintf_internal_r+0x8e0>
220218ec:	843ffc04 	addi	r16,r16,-16
220218f0:	42000204 	addi	r8,r8,8
220218f4:	8c00130e 	bge	r17,r16,22021944 <___vfprintf_internal_r+0x92c>
220218f8:	014880f4 	movhi	r5,8707
220218fc:	18c00404 	addi	r3,r3,16
22021900:	10800044 	addi	r2,r2,1
22021904:	297f2f84 	addi	r5,r5,-834
22021908:	41400015 	stw	r5,0(r8)
2202190c:	44400115 	stw	r17,4(r8)
22021910:	d8c12015 	stw	r3,1152(sp)
22021914:	d8811f15 	stw	r2,1148(sp)
22021918:	90bff40e 	bge	r18,r2,220218ec <__alt_data_end+0xfffe24ec>
2202191c:	b009883a 	mov	r4,r22
22021920:	b80b883a 	mov	r5,r23
22021924:	d9811e04 	addi	r6,sp,1144
22021928:	20282900 	call	22028290 <__sprint_r>
2202192c:	103ed11e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22021930:	843ffc04 	addi	r16,r16,-16
22021934:	d8c12017 	ldw	r3,1152(sp)
22021938:	d8811f17 	ldw	r2,1148(sp)
2202193c:	da000404 	addi	r8,sp,16
22021940:	8c3fed16 	blt	r17,r16,220218f8 <__alt_data_end+0xfffe24f8>
22021944:	dac13617 	ldw	r11,1240(sp)
22021948:	1c07883a 	add	r3,r3,r16
2202194c:	10800044 	addi	r2,r2,1
22021950:	42c00015 	stw	r11,0(r8)
22021954:	44000115 	stw	r16,4(r8)
22021958:	d8c12015 	stw	r3,1152(sp)
2202195c:	d8811f15 	stw	r2,1148(sp)
22021960:	010001c4 	movi	r4,7
22021964:	2080060e 	bge	r4,r2,22021980 <___vfprintf_internal_r+0x968>
22021968:	b009883a 	mov	r4,r22
2202196c:	b80b883a 	mov	r5,r23
22021970:	d9811e04 	addi	r6,sp,1144
22021974:	20282900 	call	22028290 <__sprint_r>
22021978:	103ebe1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
2202197c:	d8c12017 	ldw	r3,1152(sp)
22021980:	d8812b17 	ldw	r2,1196(sp)
22021984:	db012e17 	ldw	r12,1208(sp)
22021988:	1300010e 	bge	r2,r12,22021990 <___vfprintf_internal_r+0x978>
2202198c:	6005883a 	mov	r2,r12
22021990:	dac12f17 	ldw	r11,1212(sp)
22021994:	5897883a 	add	r11,r11,r2
22021998:	dac12f15 	stw	r11,1212(sp)
2202199c:	1801f21e 	bne	r3,zero,22022168 <___vfprintf_internal_r+0x1150>
220219a0:	d8011f15 	stw	zero,1148(sp)
220219a4:	da000404 	addi	r8,sp,16
220219a8:	003dd806 	br	2202110c <__alt_data_end+0xfffe1d0c>
220219ac:	8c400414 	ori	r17,r17,16
220219b0:	d8c12a15 	stw	r3,1192(sp)
220219b4:	88c0080c 	andi	r3,r17,32
220219b8:	d8812d17 	ldw	r2,1204(sp)
220219bc:	18004626 	beq	r3,zero,22021ad8 <___vfprintf_internal_r+0xac0>
220219c0:	dac12d17 	ldw	r11,1204(sp)
220219c4:	14c00017 	ldw	r19,0(r2)
220219c8:	17000117 	ldw	fp,4(r2)
220219cc:	5ac00204 	addi	r11,r11,8
220219d0:	dac12d15 	stw	r11,1204(sp)
220219d4:	00800044 	movi	r2,1
220219d8:	9f06b03a 	or	r3,r19,fp
220219dc:	003f0006 	br	220215e0 <__alt_data_end+0xfffe21e0>
220219e0:	1805883a 	mov	r2,r3
220219e4:	d8012e15 	stw	zero,1208(sp)
220219e8:	82fff404 	addi	r11,r16,-48
220219ec:	0019883a 	mov	r12,zero
220219f0:	14000007 	ldb	r16,0(r2)
220219f4:	630002a4 	muli	r12,r12,10
220219f8:	18c00044 	addi	r3,r3,1
220219fc:	1805883a 	mov	r2,r3
22021a00:	62d9883a 	add	r12,r12,r11
22021a04:	82fff404 	addi	r11,r16,-48
22021a08:	2afff92e 	bgeu	r5,r11,220219f0 <__alt_data_end+0xfffe25f0>
22021a0c:	db012e15 	stw	r12,1208(sp)
22021a10:	003de906 	br	220211b8 <__alt_data_end+0xfffe1db8>
22021a14:	8c400414 	ori	r17,r17,16
22021a18:	d8c12a15 	stw	r3,1192(sp)
22021a1c:	d9812785 	stb	r6,1182(sp)
22021a20:	8880080c 	andi	r2,r17,32
22021a24:	d8c12d17 	ldw	r3,1204(sp)
22021a28:	10007a26 	beq	r2,zero,22021c14 <___vfprintf_internal_r+0xbfc>
22021a2c:	db012d17 	ldw	r12,1204(sp)
22021a30:	18800117 	ldw	r2,4(r3)
22021a34:	1cc00017 	ldw	r19,0(r3)
22021a38:	63000204 	addi	r12,r12,8
22021a3c:	db012d15 	stw	r12,1204(sp)
22021a40:	1039883a 	mov	fp,r2
22021a44:	10031016 	blt	r2,zero,22022688 <___vfprintf_internal_r+0x1670>
22021a48:	dd412783 	ldbu	r21,1182(sp)
22021a4c:	da413215 	stw	r9,1224(sp)
22021a50:	00800044 	movi	r2,1
22021a54:	9f06b03a 	or	r3,r19,fp
22021a58:	003ee406 	br	220215ec <__alt_data_end+0xfffe21ec>
22021a5c:	030880f4 	movhi	r12,8707
22021a60:	633f1f04 	addi	r12,r12,-900
22021a64:	d8c12a15 	stw	r3,1192(sp)
22021a68:	d9812785 	stb	r6,1182(sp)
22021a6c:	db013b15 	stw	r12,1260(sp)
22021a70:	88c0080c 	andi	r3,r17,32
22021a74:	d8812d17 	ldw	r2,1204(sp)
22021a78:	18002b26 	beq	r3,zero,22021b28 <___vfprintf_internal_r+0xb10>
22021a7c:	dac12d17 	ldw	r11,1204(sp)
22021a80:	14c00017 	ldw	r19,0(r2)
22021a84:	17000117 	ldw	fp,4(r2)
22021a88:	5ac00204 	addi	r11,r11,8
22021a8c:	dac12d15 	stw	r11,1204(sp)
22021a90:	8880004c 	andi	r2,r17,1
22021a94:	10025b26 	beq	r2,zero,22022404 <___vfprintf_internal_r+0x13ec>
22021a98:	9f06b03a 	or	r3,r19,fp
22021a9c:	18037026 	beq	r3,zero,22022860 <___vfprintf_internal_r+0x1848>
22021aa0:	00800c04 	movi	r2,48
22021aa4:	d8812705 	stb	r2,1180(sp)
22021aa8:	dc012745 	stb	r16,1181(sp)
22021aac:	8c400094 	ori	r17,r17,2
22021ab0:	00800084 	movi	r2,2
22021ab4:	003eca06 	br	220215e0 <__alt_data_end+0xfffe21e0>
22021ab8:	8c400814 	ori	r17,r17,32
22021abc:	1805883a 	mov	r2,r3
22021ac0:	1c000007 	ldb	r16,0(r3)
22021ac4:	003dbb06 	br	220211b4 <__alt_data_end+0xfffe1db4>
22021ac8:	d8c12a15 	stw	r3,1192(sp)
22021acc:	88c0080c 	andi	r3,r17,32
22021ad0:	d8812d17 	ldw	r2,1204(sp)
22021ad4:	183fba1e 	bne	r3,zero,220219c0 <__alt_data_end+0xfffe25c0>
22021ad8:	88c0040c 	andi	r3,r17,16
22021adc:	18024c1e 	bne	r3,zero,22022410 <___vfprintf_internal_r+0x13f8>
22021ae0:	88c0100c 	andi	r3,r17,64
22021ae4:	18024a26 	beq	r3,zero,22022410 <___vfprintf_internal_r+0x13f8>
22021ae8:	dac12d17 	ldw	r11,1204(sp)
22021aec:	14c0000b 	ldhu	r19,0(r2)
22021af0:	0039883a 	mov	fp,zero
22021af4:	5ac00104 	addi	r11,r11,4
22021af8:	dac12d15 	stw	r11,1204(sp)
22021afc:	00800044 	movi	r2,1
22021b00:	9807883a 	mov	r3,r19
22021b04:	003eb606 	br	220215e0 <__alt_data_end+0xfffe21e0>
22021b08:	008880f4 	movhi	r2,8707
22021b0c:	10bf2404 	addi	r2,r2,-880
22021b10:	d8c12a15 	stw	r3,1192(sp)
22021b14:	d8813b15 	stw	r2,1260(sp)
22021b18:	d9812785 	stb	r6,1182(sp)
22021b1c:	88c0080c 	andi	r3,r17,32
22021b20:	d8812d17 	ldw	r2,1204(sp)
22021b24:	183fd51e 	bne	r3,zero,22021a7c <__alt_data_end+0xfffe267c>
22021b28:	88c0040c 	andi	r3,r17,16
22021b2c:	18034126 	beq	r3,zero,22022834 <___vfprintf_internal_r+0x181c>
22021b30:	db012d17 	ldw	r12,1204(sp)
22021b34:	14c00017 	ldw	r19,0(r2)
22021b38:	0039883a 	mov	fp,zero
22021b3c:	63000104 	addi	r12,r12,4
22021b40:	db012d15 	stw	r12,1204(sp)
22021b44:	003fd206 	br	22021a90 <__alt_data_end+0xfffe2690>
22021b48:	1c000007 	ldb	r16,0(r3)
22021b4c:	81c3d626 	beq	r16,r7,22022aa8 <___vfprintf_internal_r+0x1a90>
22021b50:	8c400414 	ori	r17,r17,16
22021b54:	1805883a 	mov	r2,r3
22021b58:	003d9606 	br	220211b4 <__alt_data_end+0xfffe1db4>
22021b5c:	d8c12a15 	stw	r3,1192(sp)
22021b60:	d9812785 	stb	r6,1182(sp)
22021b64:	8880080c 	andi	r2,r17,32
22021b68:	10033f26 	beq	r2,zero,22022868 <___vfprintf_internal_r+0x1850>
22021b6c:	db012d17 	ldw	r12,1204(sp)
22021b70:	dac12f17 	ldw	r11,1212(sp)
22021b74:	60800017 	ldw	r2,0(r12)
22021b78:	5807d7fa 	srai	r3,r11,31
22021b7c:	63000104 	addi	r12,r12,4
22021b80:	db012d15 	stw	r12,1204(sp)
22021b84:	12c00015 	stw	r11,0(r2)
22021b88:	10c00115 	stw	r3,4(r2)
22021b8c:	003d5f06 	br	2202110c <__alt_data_end+0xfffe1d0c>
22021b90:	d8c12a15 	stw	r3,1192(sp)
22021b94:	88c0080c 	andi	r3,r17,32
22021b98:	d8812d17 	ldw	r2,1204(sp)
22021b9c:	183e891e 	bne	r3,zero,220215c4 <__alt_data_end+0xfffe21c4>
22021ba0:	88c0040c 	andi	r3,r17,16
22021ba4:	1801ea1e 	bne	r3,zero,22022350 <___vfprintf_internal_r+0x1338>
22021ba8:	88c0100c 	andi	r3,r17,64
22021bac:	1801e826 	beq	r3,zero,22022350 <___vfprintf_internal_r+0x1338>
22021bb0:	db012d17 	ldw	r12,1204(sp)
22021bb4:	14c0000b 	ldhu	r19,0(r2)
22021bb8:	0039883a 	mov	fp,zero
22021bbc:	63000104 	addi	r12,r12,4
22021bc0:	db012d15 	stw	r12,1204(sp)
22021bc4:	0005883a 	mov	r2,zero
22021bc8:	9807883a 	mov	r3,r19
22021bcc:	003e8406 	br	220215e0 <__alt_data_end+0xfffe21e0>
22021bd0:	30803fcc 	andi	r2,r6,255
22021bd4:	1080201c 	xori	r2,r2,128
22021bd8:	10bfe004 	addi	r2,r2,-128
22021bdc:	10031d1e 	bne	r2,zero,22022854 <___vfprintf_internal_r+0x183c>
22021be0:	1805883a 	mov	r2,r3
22021be4:	01800804 	movi	r6,32
22021be8:	1c000007 	ldb	r16,0(r3)
22021bec:	003d7106 	br	220211b4 <__alt_data_end+0xfffe1db4>
22021bf0:	8c400054 	ori	r17,r17,1
22021bf4:	1805883a 	mov	r2,r3
22021bf8:	1c000007 	ldb	r16,0(r3)
22021bfc:	003d6d06 	br	220211b4 <__alt_data_end+0xfffe1db4>
22021c00:	d8c12a15 	stw	r3,1192(sp)
22021c04:	d9812785 	stb	r6,1182(sp)
22021c08:	8880080c 	andi	r2,r17,32
22021c0c:	d8c12d17 	ldw	r3,1204(sp)
22021c10:	103f861e 	bne	r2,zero,22021a2c <__alt_data_end+0xfffe262c>
22021c14:	8880040c 	andi	r2,r17,16
22021c18:	1001f31e 	bne	r2,zero,220223e8 <___vfprintf_internal_r+0x13d0>
22021c1c:	8880100c 	andi	r2,r17,64
22021c20:	1001f126 	beq	r2,zero,220223e8 <___vfprintf_internal_r+0x13d0>
22021c24:	1cc0000f 	ldh	r19,0(r3)
22021c28:	db012d17 	ldw	r12,1204(sp)
22021c2c:	9839d7fa 	srai	fp,r19,31
22021c30:	63000104 	addi	r12,r12,4
22021c34:	db012d15 	stw	r12,1204(sp)
22021c38:	e005883a 	mov	r2,fp
22021c3c:	003f8106 	br	22021a44 <__alt_data_end+0xfffe2644>
22021c40:	8c401014 	ori	r17,r17,64
22021c44:	1805883a 	mov	r2,r3
22021c48:	1c000007 	ldb	r16,0(r3)
22021c4c:	003d5906 	br	220211b4 <__alt_data_end+0xfffe1db4>
22021c50:	db012d17 	ldw	r12,1204(sp)
22021c54:	d8c12a15 	stw	r3,1192(sp)
22021c58:	00c00044 	movi	r3,1
22021c5c:	60800017 	ldw	r2,0(r12)
22021c60:	63000104 	addi	r12,r12,4
22021c64:	d8c12b15 	stw	r3,1196(sp)
22021c68:	d8012785 	stb	zero,1182(sp)
22021c6c:	d8810405 	stb	r2,1040(sp)
22021c70:	db012d15 	stw	r12,1204(sp)
22021c74:	dac10404 	addi	r11,sp,1040
22021c78:	1825883a 	mov	r18,r3
22021c7c:	d8013215 	stw	zero,1224(sp)
22021c80:	d8013415 	stw	zero,1232(sp)
22021c84:	dac13115 	stw	r11,1220(sp)
22021c88:	0005883a 	mov	r2,zero
22021c8c:	003e7d06 	br	22021684 <__alt_data_end+0xfffe2284>
22021c90:	db012d17 	ldw	r12,1204(sp)
22021c94:	00800c04 	movi	r2,48
22021c98:	d8812705 	stb	r2,1180(sp)
22021c9c:	64c00017 	ldw	r19,0(r12)
22021ca0:	00801e04 	movi	r2,120
22021ca4:	d8812745 	stb	r2,1181(sp)
22021ca8:	008880f4 	movhi	r2,8707
22021cac:	10bf2404 	addi	r2,r2,-880
22021cb0:	63000104 	addi	r12,r12,4
22021cb4:	d8c12a15 	stw	r3,1192(sp)
22021cb8:	d8813b15 	stw	r2,1260(sp)
22021cbc:	0039883a 	mov	fp,zero
22021cc0:	8c400094 	ori	r17,r17,2
22021cc4:	db012d15 	stw	r12,1204(sp)
22021cc8:	00800084 	movi	r2,2
22021ccc:	04001e04 	movi	r16,120
22021cd0:	9807883a 	mov	r3,r19
22021cd4:	003e4206 	br	220215e0 <__alt_data_end+0xfffe21e0>
22021cd8:	dac12d17 	ldw	r11,1204(sp)
22021cdc:	db012d17 	ldw	r12,1204(sp)
22021ce0:	d8c12a15 	stw	r3,1192(sp)
22021ce4:	5ac00017 	ldw	r11,0(r11)
22021ce8:	d8012785 	stb	zero,1182(sp)
22021cec:	64c00104 	addi	r19,r12,4
22021cf0:	dac13115 	stw	r11,1220(sp)
22021cf4:	5803e826 	beq	r11,zero,22022c98 <___vfprintf_internal_r+0x1c80>
22021cf8:	d9013117 	ldw	r4,1220(sp)
22021cfc:	48037a16 	blt	r9,zero,22022ae8 <___vfprintf_internal_r+0x1ad0>
22021d00:	480d883a 	mov	r6,r9
22021d04:	000b883a 	mov	r5,zero
22021d08:	da013f15 	stw	r8,1276(sp)
22021d0c:	da413e15 	stw	r9,1272(sp)
22021d10:	20264f00 	call	220264f0 <memchr>
22021d14:	da013f17 	ldw	r8,1276(sp)
22021d18:	da413e17 	ldw	r9,1272(sp)
22021d1c:	10044426 	beq	r2,zero,22022e30 <___vfprintf_internal_r+0x1e18>
22021d20:	d8c13117 	ldw	r3,1220(sp)
22021d24:	10e5c83a 	sub	r18,r2,r3
22021d28:	4c834416 	blt	r9,r18,22022a3c <___vfprintf_internal_r+0x1a24>
22021d2c:	9005883a 	mov	r2,r18
22021d30:	90037216 	blt	r18,zero,22022afc <___vfprintf_internal_r+0x1ae4>
22021d34:	dd412783 	ldbu	r21,1182(sp)
22021d38:	d8812b15 	stw	r2,1196(sp)
22021d3c:	dcc12d15 	stw	r19,1204(sp)
22021d40:	d8013215 	stw	zero,1224(sp)
22021d44:	d8013415 	stw	zero,1232(sp)
22021d48:	003e4706 	br	22021668 <__alt_data_end+0xfffe2268>
22021d4c:	dac12d17 	ldw	r11,1204(sp)
22021d50:	db012d17 	ldw	r12,1204(sp)
22021d54:	5ac00017 	ldw	r11,0(r11)
22021d58:	dac12e15 	stw	r11,1208(sp)
22021d5c:	62c00104 	addi	r11,r12,4
22021d60:	db012e17 	ldw	r12,1208(sp)
22021d64:	60034a16 	blt	r12,zero,22022a90 <___vfprintf_internal_r+0x1a78>
22021d68:	dac12d15 	stw	r11,1204(sp)
22021d6c:	1805883a 	mov	r2,r3
22021d70:	1c000007 	ldb	r16,0(r3)
22021d74:	003d0f06 	br	220211b4 <__alt_data_end+0xfffe1db4>
22021d78:	1805883a 	mov	r2,r3
22021d7c:	01800ac4 	movi	r6,43
22021d80:	1c000007 	ldb	r16,0(r3)
22021d84:	003d0b06 	br	220211b4 <__alt_data_end+0xfffe1db4>
22021d88:	d8c12a15 	stw	r3,1192(sp)
22021d8c:	d9812785 	stb	r6,1182(sp)
22021d90:	803db226 	beq	r16,zero,2202145c <__alt_data_end+0xfffe205c>
22021d94:	00c00044 	movi	r3,1
22021d98:	d8c12b15 	stw	r3,1196(sp)
22021d9c:	dc010405 	stb	r16,1040(sp)
22021da0:	d8012785 	stb	zero,1182(sp)
22021da4:	003fb306 	br	22021c74 <__alt_data_end+0xfffe2874>
22021da8:	d8c12017 	ldw	r3,1152(sp)
22021dac:	003e6d06 	br	22021764 <__alt_data_end+0xfffe2364>
22021db0:	10803fcc 	andi	r2,r2,255
22021db4:	00c00044 	movi	r3,1
22021db8:	10fe141e 	bne	r2,r3,2202160c <__alt_data_end+0xfffe220c>
22021dbc:	e000021e 	bne	fp,zero,22021dc8 <___vfprintf_internal_r+0xdb0>
22021dc0:	00800244 	movi	r2,9
22021dc4:	14c0202e 	bgeu	r2,r19,22021e48 <___vfprintf_internal_r+0xe30>
22021dc8:	dc012b15 	stw	r16,1196(sp)
22021dcc:	dc412c15 	stw	r17,1200(sp)
22021dd0:	9821883a 	mov	r16,r19
22021dd4:	e023883a 	mov	r17,fp
22021dd8:	dc810e04 	addi	r18,sp,1080
22021ddc:	4027883a 	mov	r19,r8
22021de0:	4839883a 	mov	fp,r9
22021de4:	8009883a 	mov	r4,r16
22021de8:	880b883a 	mov	r5,r17
22021dec:	01800284 	movi	r6,10
22021df0:	000f883a 	mov	r7,zero
22021df4:	202a5800 	call	2202a580 <__umoddi3>
22021df8:	10800c04 	addi	r2,r2,48
22021dfc:	94bfffc4 	addi	r18,r18,-1
22021e00:	8009883a 	mov	r4,r16
22021e04:	880b883a 	mov	r5,r17
22021e08:	01800284 	movi	r6,10
22021e0c:	000f883a 	mov	r7,zero
22021e10:	90800005 	stb	r2,0(r18)
22021e14:	2029fc00 	call	22029fc0 <__udivdi3>
22021e18:	1021883a 	mov	r16,r2
22021e1c:	10c4b03a 	or	r2,r2,r3
22021e20:	1823883a 	mov	r17,r3
22021e24:	103fef1e 	bne	r2,zero,22021de4 <__alt_data_end+0xfffe29e4>
22021e28:	dac12817 	ldw	r11,1184(sp)
22021e2c:	dc813115 	stw	r18,1220(sp)
22021e30:	dc012b17 	ldw	r16,1196(sp)
22021e34:	9811883a 	mov	r8,r19
22021e38:	dc412c17 	ldw	r17,1200(sp)
22021e3c:	e013883a 	mov	r9,fp
22021e40:	5ca5c83a 	sub	r18,r11,r18
22021e44:	003e0306 	br	22021654 <__alt_data_end+0xfffe2254>
22021e48:	9cc00c04 	addi	r19,r19,48
22021e4c:	d8c10dc4 	addi	r3,sp,1079
22021e50:	dcc10dc5 	stb	r19,1079(sp)
22021e54:	dc813c17 	ldw	r18,1264(sp)
22021e58:	d8c13115 	stw	r3,1220(sp)
22021e5c:	003dfd06 	br	22021654 <__alt_data_end+0xfffe2254>
22021e60:	00801944 	movi	r2,101
22021e64:	1400710e 	bge	r2,r16,2202202c <___vfprintf_internal_r+0x1014>
22021e68:	d9013717 	ldw	r4,1244(sp)
22021e6c:	d9413917 	ldw	r5,1252(sp)
22021e70:	000d883a 	mov	r6,zero
22021e74:	000f883a 	mov	r7,zero
22021e78:	d8c13d15 	stw	r3,1268(sp)
22021e7c:	da013f15 	stw	r8,1276(sp)
22021e80:	202bc780 	call	2202bc78 <__eqdf2>
22021e84:	d8c13d17 	ldw	r3,1268(sp)
22021e88:	da013f17 	ldw	r8,1276(sp)
22021e8c:	1000ef1e 	bne	r2,zero,2202224c <___vfprintf_internal_r+0x1234>
22021e90:	d8811f17 	ldw	r2,1148(sp)
22021e94:	010880f4 	movhi	r4,8707
22021e98:	213f2b04 	addi	r4,r4,-852
22021e9c:	18c00044 	addi	r3,r3,1
22021ea0:	10800044 	addi	r2,r2,1
22021ea4:	41000015 	stw	r4,0(r8)
22021ea8:	01000044 	movi	r4,1
22021eac:	41000115 	stw	r4,4(r8)
22021eb0:	d8c12015 	stw	r3,1152(sp)
22021eb4:	d8811f15 	stw	r2,1148(sp)
22021eb8:	010001c4 	movi	r4,7
22021ebc:	20828e16 	blt	r4,r2,220228f8 <___vfprintf_internal_r+0x18e0>
22021ec0:	42000204 	addi	r8,r8,8
22021ec4:	d8812617 	ldw	r2,1176(sp)
22021ec8:	dac13317 	ldw	r11,1228(sp)
22021ecc:	12c00216 	blt	r2,r11,22021ed8 <___vfprintf_internal_r+0xec0>
22021ed0:	8880004c 	andi	r2,r17,1
22021ed4:	103e7726 	beq	r2,zero,220218b4 <__alt_data_end+0xfffe24b4>
22021ed8:	db013817 	ldw	r12,1248(sp)
22021edc:	d8811f17 	ldw	r2,1148(sp)
22021ee0:	dac13517 	ldw	r11,1236(sp)
22021ee4:	1b07883a 	add	r3,r3,r12
22021ee8:	10800044 	addi	r2,r2,1
22021eec:	42c00015 	stw	r11,0(r8)
22021ef0:	43000115 	stw	r12,4(r8)
22021ef4:	d8c12015 	stw	r3,1152(sp)
22021ef8:	d8811f15 	stw	r2,1148(sp)
22021efc:	010001c4 	movi	r4,7
22021f00:	2082ed16 	blt	r4,r2,22022ab8 <___vfprintf_internal_r+0x1aa0>
22021f04:	42000204 	addi	r8,r8,8
22021f08:	db013317 	ldw	r12,1228(sp)
22021f0c:	643fffc4 	addi	r16,r12,-1
22021f10:	043e680e 	bge	zero,r16,220218b4 <__alt_data_end+0xfffe24b4>
22021f14:	04800404 	movi	r18,16
22021f18:	d8811f17 	ldw	r2,1148(sp)
22021f1c:	94007e0e 	bge	r18,r16,22022118 <___vfprintf_internal_r+0x1100>
22021f20:	014880f4 	movhi	r5,8707
22021f24:	297f2b84 	addi	r5,r5,-850
22021f28:	d9412c15 	stw	r5,1200(sp)
22021f2c:	054001c4 	movi	r21,7
22021f30:	00000306 	br	22021f40 <___vfprintf_internal_r+0xf28>
22021f34:	42000204 	addi	r8,r8,8
22021f38:	843ffc04 	addi	r16,r16,-16
22021f3c:	9400790e 	bge	r18,r16,22022124 <___vfprintf_internal_r+0x110c>
22021f40:	18c00404 	addi	r3,r3,16
22021f44:	10800044 	addi	r2,r2,1
22021f48:	45000015 	stw	r20,0(r8)
22021f4c:	44800115 	stw	r18,4(r8)
22021f50:	d8c12015 	stw	r3,1152(sp)
22021f54:	d8811f15 	stw	r2,1148(sp)
22021f58:	a8bff60e 	bge	r21,r2,22021f34 <__alt_data_end+0xfffe2b34>
22021f5c:	b009883a 	mov	r4,r22
22021f60:	b80b883a 	mov	r5,r23
22021f64:	d9811e04 	addi	r6,sp,1144
22021f68:	20282900 	call	22028290 <__sprint_r>
22021f6c:	103d411e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22021f70:	d8c12017 	ldw	r3,1152(sp)
22021f74:	d8811f17 	ldw	r2,1148(sp)
22021f78:	da000404 	addi	r8,sp,16
22021f7c:	003fee06 	br	22021f38 <__alt_data_end+0xfffe2b38>
22021f80:	dac12e17 	ldw	r11,1208(sp)
22021f84:	db012b17 	ldw	r12,1196(sp)
22021f88:	5b2bc83a 	sub	r21,r11,r12
22021f8c:	057e130e 	bge	zero,r21,220217dc <__alt_data_end+0xfffe23dc>
22021f90:	07000404 	movi	fp,16
22021f94:	d8811f17 	ldw	r2,1148(sp)
22021f98:	e543640e 	bge	fp,r21,22022d2c <___vfprintf_internal_r+0x1d14>
22021f9c:	014880f4 	movhi	r5,8707
22021fa0:	297f2b84 	addi	r5,r5,-850
22021fa4:	d9412c15 	stw	r5,1200(sp)
22021fa8:	04c001c4 	movi	r19,7
22021fac:	00000306 	br	22021fbc <___vfprintf_internal_r+0xfa4>
22021fb0:	ad7ffc04 	addi	r21,r21,-16
22021fb4:	42000204 	addi	r8,r8,8
22021fb8:	e540110e 	bge	fp,r21,22022000 <___vfprintf_internal_r+0xfe8>
22021fbc:	18c00404 	addi	r3,r3,16
22021fc0:	10800044 	addi	r2,r2,1
22021fc4:	45000015 	stw	r20,0(r8)
22021fc8:	47000115 	stw	fp,4(r8)
22021fcc:	d8c12015 	stw	r3,1152(sp)
22021fd0:	d8811f15 	stw	r2,1148(sp)
22021fd4:	98bff60e 	bge	r19,r2,22021fb0 <__alt_data_end+0xfffe2bb0>
22021fd8:	b009883a 	mov	r4,r22
22021fdc:	b80b883a 	mov	r5,r23
22021fe0:	d9811e04 	addi	r6,sp,1144
22021fe4:	20282900 	call	22028290 <__sprint_r>
22021fe8:	103d221e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22021fec:	ad7ffc04 	addi	r21,r21,-16
22021ff0:	d8c12017 	ldw	r3,1152(sp)
22021ff4:	d8811f17 	ldw	r2,1148(sp)
22021ff8:	da000404 	addi	r8,sp,16
22021ffc:	e57fef16 	blt	fp,r21,22021fbc <__alt_data_end+0xfffe2bbc>
22022000:	dac12c17 	ldw	r11,1200(sp)
22022004:	1d47883a 	add	r3,r3,r21
22022008:	10800044 	addi	r2,r2,1
2202200c:	42c00015 	stw	r11,0(r8)
22022010:	45400115 	stw	r21,4(r8)
22022014:	d8c12015 	stw	r3,1152(sp)
22022018:	d8811f15 	stw	r2,1148(sp)
2202201c:	010001c4 	movi	r4,7
22022020:	20819116 	blt	r4,r2,22022668 <___vfprintf_internal_r+0x1650>
22022024:	42000204 	addi	r8,r8,8
22022028:	003dec06 	br	220217dc <__alt_data_end+0xfffe23dc>
2202202c:	db013317 	ldw	r12,1228(sp)
22022030:	00800044 	movi	r2,1
22022034:	18c00044 	addi	r3,r3,1
22022038:	1301530e 	bge	r2,r12,22022588 <___vfprintf_internal_r+0x1570>
2202203c:	dc011f17 	ldw	r16,1148(sp)
22022040:	dac13117 	ldw	r11,1220(sp)
22022044:	00800044 	movi	r2,1
22022048:	84000044 	addi	r16,r16,1
2202204c:	40800115 	stw	r2,4(r8)
22022050:	42c00015 	stw	r11,0(r8)
22022054:	d8c12015 	stw	r3,1152(sp)
22022058:	dc011f15 	stw	r16,1148(sp)
2202205c:	008001c4 	movi	r2,7
22022060:	14016b16 	blt	r2,r16,22022610 <___vfprintf_internal_r+0x15f8>
22022064:	42000204 	addi	r8,r8,8
22022068:	db013817 	ldw	r12,1248(sp)
2202206c:	dac13517 	ldw	r11,1236(sp)
22022070:	84000044 	addi	r16,r16,1
22022074:	1b07883a 	add	r3,r3,r12
22022078:	42c00015 	stw	r11,0(r8)
2202207c:	43000115 	stw	r12,4(r8)
22022080:	d8c12015 	stw	r3,1152(sp)
22022084:	dc011f15 	stw	r16,1148(sp)
22022088:	008001c4 	movi	r2,7
2202208c:	14016916 	blt	r2,r16,22022634 <___vfprintf_internal_r+0x161c>
22022090:	44800204 	addi	r18,r8,8
22022094:	d9013717 	ldw	r4,1244(sp)
22022098:	d9413917 	ldw	r5,1252(sp)
2202209c:	000d883a 	mov	r6,zero
220220a0:	000f883a 	mov	r7,zero
220220a4:	d8c13d15 	stw	r3,1268(sp)
220220a8:	202bc780 	call	2202bc78 <__eqdf2>
220220ac:	d8c13d17 	ldw	r3,1268(sp)
220220b0:	db013317 	ldw	r12,1228(sp)
220220b4:	1000ae26 	beq	r2,zero,22022370 <___vfprintf_internal_r+0x1358>
220220b8:	dac13117 	ldw	r11,1220(sp)
220220bc:	60bfffc4 	addi	r2,r12,-1
220220c0:	1887883a 	add	r3,r3,r2
220220c4:	59000044 	addi	r4,r11,1
220220c8:	84000044 	addi	r16,r16,1
220220cc:	90800115 	stw	r2,4(r18)
220220d0:	91000015 	stw	r4,0(r18)
220220d4:	d8c12015 	stw	r3,1152(sp)
220220d8:	dc011f15 	stw	r16,1148(sp)
220220dc:	008001c4 	movi	r2,7
220220e0:	14014216 	blt	r2,r16,220225ec <___vfprintf_internal_r+0x15d4>
220220e4:	94800204 	addi	r18,r18,8
220220e8:	dac13a17 	ldw	r11,1256(sp)
220220ec:	dd4122c4 	addi	r21,sp,1163
220220f0:	84000044 	addi	r16,r16,1
220220f4:	58c7883a 	add	r3,r11,r3
220220f8:	95400015 	stw	r21,0(r18)
220220fc:	92c00115 	stw	r11,4(r18)
22022100:	d8c12015 	stw	r3,1152(sp)
22022104:	dc011f15 	stw	r16,1148(sp)
22022108:	008001c4 	movi	r2,7
2202210c:	14000e16 	blt	r2,r16,22022148 <___vfprintf_internal_r+0x1130>
22022110:	92000204 	addi	r8,r18,8
22022114:	003de706 	br	220218b4 <__alt_data_end+0xfffe24b4>
22022118:	010880f4 	movhi	r4,8707
2202211c:	213f2b84 	addi	r4,r4,-850
22022120:	d9012c15 	stw	r4,1200(sp)
22022124:	dac12c17 	ldw	r11,1200(sp)
22022128:	1c07883a 	add	r3,r3,r16
2202212c:	44000115 	stw	r16,4(r8)
22022130:	42c00015 	stw	r11,0(r8)
22022134:	10800044 	addi	r2,r2,1
22022138:	d8c12015 	stw	r3,1152(sp)
2202213c:	d8811f15 	stw	r2,1148(sp)
22022140:	010001c4 	movi	r4,7
22022144:	20bdda0e 	bge	r4,r2,220218b0 <__alt_data_end+0xfffe24b0>
22022148:	b009883a 	mov	r4,r22
2202214c:	b80b883a 	mov	r5,r23
22022150:	d9811e04 	addi	r6,sp,1144
22022154:	20282900 	call	22028290 <__sprint_r>
22022158:	103cc61e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
2202215c:	d8c12017 	ldw	r3,1152(sp)
22022160:	da000404 	addi	r8,sp,16
22022164:	003dd306 	br	220218b4 <__alt_data_end+0xfffe24b4>
22022168:	b009883a 	mov	r4,r22
2202216c:	b80b883a 	mov	r5,r23
22022170:	d9811e04 	addi	r6,sp,1144
22022174:	20282900 	call	22028290 <__sprint_r>
22022178:	103e0926 	beq	r2,zero,220219a0 <__alt_data_end+0xfffe25a0>
2202217c:	003cbd06 	br	22021474 <__alt_data_end+0xfffe2074>
22022180:	10803fcc 	andi	r2,r2,255
22022184:	1000651e 	bne	r2,zero,2202231c <___vfprintf_internal_r+0x1304>
22022188:	8880004c 	andi	r2,r17,1
2202218c:	10013226 	beq	r2,zero,22022658 <___vfprintf_internal_r+0x1640>
22022190:	00800c04 	movi	r2,48
22022194:	d8c10dc4 	addi	r3,sp,1079
22022198:	d8810dc5 	stb	r2,1079(sp)
2202219c:	dc813c17 	ldw	r18,1264(sp)
220221a0:	d8c13115 	stw	r3,1220(sp)
220221a4:	003d2b06 	br	22021654 <__alt_data_end+0xfffe2254>
220221a8:	b009883a 	mov	r4,r22
220221ac:	b80b883a 	mov	r5,r23
220221b0:	d9811e04 	addi	r6,sp,1144
220221b4:	20282900 	call	22028290 <__sprint_r>
220221b8:	103cae1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
220221bc:	d8c12017 	ldw	r3,1152(sp)
220221c0:	da000404 	addi	r8,sp,16
220221c4:	003dae06 	br	22021880 <__alt_data_end+0xfffe2480>
220221c8:	b009883a 	mov	r4,r22
220221cc:	b80b883a 	mov	r5,r23
220221d0:	d9811e04 	addi	r6,sp,1144
220221d4:	20282900 	call	22028290 <__sprint_r>
220221d8:	103ca61e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
220221dc:	d8c12017 	ldw	r3,1152(sp)
220221e0:	da000404 	addi	r8,sp,16
220221e4:	003d6c06 	br	22021798 <__alt_data_end+0xfffe2398>
220221e8:	b009883a 	mov	r4,r22
220221ec:	b80b883a 	mov	r5,r23
220221f0:	d9811e04 	addi	r6,sp,1144
220221f4:	20282900 	call	22028290 <__sprint_r>
220221f8:	103c9e1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
220221fc:	d8c12017 	ldw	r3,1152(sp)
22022200:	da000404 	addi	r8,sp,16
22022204:	003d7206 	br	220217d0 <__alt_data_end+0xfffe23d0>
22022208:	d9413b17 	ldw	r5,1260(sp)
2202220c:	d8c10e04 	addi	r3,sp,1080
22022210:	988003cc 	andi	r2,r19,15
22022214:	e008973a 	slli	r4,fp,28
22022218:	2885883a 	add	r2,r5,r2
2202221c:	9826d13a 	srli	r19,r19,4
22022220:	10800003 	ldbu	r2,0(r2)
22022224:	e038d13a 	srli	fp,fp,4
22022228:	18ffffc4 	addi	r3,r3,-1
2202222c:	24e6b03a 	or	r19,r4,r19
22022230:	18800005 	stb	r2,0(r3)
22022234:	9f04b03a 	or	r2,r19,fp
22022238:	103ff51e 	bne	r2,zero,22022210 <__alt_data_end+0xfffe2e10>
2202223c:	db012817 	ldw	r12,1184(sp)
22022240:	d8c13115 	stw	r3,1220(sp)
22022244:	60e5c83a 	sub	r18,r12,r3
22022248:	003d0206 	br	22021654 <__alt_data_end+0xfffe2254>
2202224c:	dc012617 	ldw	r16,1176(sp)
22022250:	0401b10e 	bge	zero,r16,22022918 <___vfprintf_internal_r+0x1900>
22022254:	db013117 	ldw	r12,1220(sp)
22022258:	dac13317 	ldw	r11,1228(sp)
2202225c:	62e1883a 	add	r16,r12,r11
22022260:	db013417 	ldw	r12,1232(sp)
22022264:	5825883a 	mov	r18,r11
22022268:	62c0010e 	bge	r12,r11,22022270 <___vfprintf_internal_r+0x1258>
2202226c:	6025883a 	mov	r18,r12
22022270:	04800b0e 	bge	zero,r18,220222a0 <___vfprintf_internal_r+0x1288>
22022274:	d8811f17 	ldw	r2,1148(sp)
22022278:	dac13117 	ldw	r11,1220(sp)
2202227c:	1c87883a 	add	r3,r3,r18
22022280:	10800044 	addi	r2,r2,1
22022284:	42c00015 	stw	r11,0(r8)
22022288:	44800115 	stw	r18,4(r8)
2202228c:	d8c12015 	stw	r3,1152(sp)
22022290:	d8811f15 	stw	r2,1148(sp)
22022294:	010001c4 	movi	r4,7
22022298:	20824f16 	blt	r4,r2,22022bd8 <___vfprintf_internal_r+0x1bc0>
2202229c:	42000204 	addi	r8,r8,8
220222a0:	90024b16 	blt	r18,zero,22022bd0 <___vfprintf_internal_r+0x1bb8>
220222a4:	db013417 	ldw	r12,1232(sp)
220222a8:	64a5c83a 	sub	r18,r12,r18
220222ac:	0480730e 	bge	zero,r18,2202247c <___vfprintf_internal_r+0x1464>
220222b0:	05400404 	movi	r21,16
220222b4:	d8811f17 	ldw	r2,1148(sp)
220222b8:	ac817d0e 	bge	r21,r18,220228b0 <___vfprintf_internal_r+0x1898>
220222bc:	014880f4 	movhi	r5,8707
220222c0:	297f2b84 	addi	r5,r5,-850
220222c4:	d9412c15 	stw	r5,1200(sp)
220222c8:	070001c4 	movi	fp,7
220222cc:	00000306 	br	220222dc <___vfprintf_internal_r+0x12c4>
220222d0:	42000204 	addi	r8,r8,8
220222d4:	94bffc04 	addi	r18,r18,-16
220222d8:	ac81780e 	bge	r21,r18,220228bc <___vfprintf_internal_r+0x18a4>
220222dc:	18c00404 	addi	r3,r3,16
220222e0:	10800044 	addi	r2,r2,1
220222e4:	45000015 	stw	r20,0(r8)
220222e8:	45400115 	stw	r21,4(r8)
220222ec:	d8c12015 	stw	r3,1152(sp)
220222f0:	d8811f15 	stw	r2,1148(sp)
220222f4:	e0bff60e 	bge	fp,r2,220222d0 <__alt_data_end+0xfffe2ed0>
220222f8:	b009883a 	mov	r4,r22
220222fc:	b80b883a 	mov	r5,r23
22022300:	d9811e04 	addi	r6,sp,1144
22022304:	20282900 	call	22028290 <__sprint_r>
22022308:	103c5a1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
2202230c:	d8c12017 	ldw	r3,1152(sp)
22022310:	d8811f17 	ldw	r2,1148(sp)
22022314:	da000404 	addi	r8,sp,16
22022318:	003fee06 	br	220222d4 <__alt_data_end+0xfffe2ed4>
2202231c:	dac10e04 	addi	r11,sp,1080
22022320:	0025883a 	mov	r18,zero
22022324:	dac13115 	stw	r11,1220(sp)
22022328:	003cca06 	br	22021654 <__alt_data_end+0xfffe2254>
2202232c:	b009883a 	mov	r4,r22
22022330:	b80b883a 	mov	r5,r23
22022334:	d9811e04 	addi	r6,sp,1144
22022338:	20282900 	call	22028290 <__sprint_r>
2202233c:	103c4d1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022340:	d8c12017 	ldw	r3,1152(sp)
22022344:	d8812787 	ldb	r2,1182(sp)
22022348:	da000404 	addi	r8,sp,16
2202234c:	003d0506 	br	22021764 <__alt_data_end+0xfffe2364>
22022350:	dac12d17 	ldw	r11,1204(sp)
22022354:	14c00017 	ldw	r19,0(r2)
22022358:	0039883a 	mov	fp,zero
2202235c:	5ac00104 	addi	r11,r11,4
22022360:	dac12d15 	stw	r11,1204(sp)
22022364:	0005883a 	mov	r2,zero
22022368:	9807883a 	mov	r3,r19
2202236c:	003c9c06 	br	220215e0 <__alt_data_end+0xfffe21e0>
22022370:	657fffc4 	addi	r21,r12,-1
22022374:	057f5c0e 	bge	zero,r21,220220e8 <__alt_data_end+0xfffe2ce8>
22022378:	07000404 	movi	fp,16
2202237c:	e5408f0e 	bge	fp,r21,220225bc <___vfprintf_internal_r+0x15a4>
22022380:	010880f4 	movhi	r4,8707
22022384:	213f2b84 	addi	r4,r4,-850
22022388:	d9012c15 	stw	r4,1200(sp)
2202238c:	01c001c4 	movi	r7,7
22022390:	00000306 	br	220223a0 <___vfprintf_internal_r+0x1388>
22022394:	94800204 	addi	r18,r18,8
22022398:	ad7ffc04 	addi	r21,r21,-16
2202239c:	e5408a0e 	bge	fp,r21,220225c8 <___vfprintf_internal_r+0x15b0>
220223a0:	18c00404 	addi	r3,r3,16
220223a4:	84000044 	addi	r16,r16,1
220223a8:	95000015 	stw	r20,0(r18)
220223ac:	97000115 	stw	fp,4(r18)
220223b0:	d8c12015 	stw	r3,1152(sp)
220223b4:	dc011f15 	stw	r16,1148(sp)
220223b8:	3c3ff60e 	bge	r7,r16,22022394 <__alt_data_end+0xfffe2f94>
220223bc:	b009883a 	mov	r4,r22
220223c0:	b80b883a 	mov	r5,r23
220223c4:	d9811e04 	addi	r6,sp,1144
220223c8:	d9c13d15 	stw	r7,1268(sp)
220223cc:	20282900 	call	22028290 <__sprint_r>
220223d0:	d9c13d17 	ldw	r7,1268(sp)
220223d4:	103c271e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
220223d8:	d8c12017 	ldw	r3,1152(sp)
220223dc:	dc011f17 	ldw	r16,1148(sp)
220223e0:	dc800404 	addi	r18,sp,16
220223e4:	003fec06 	br	22022398 <__alt_data_end+0xfffe2f98>
220223e8:	1cc00017 	ldw	r19,0(r3)
220223ec:	dac12d17 	ldw	r11,1204(sp)
220223f0:	9839d7fa 	srai	fp,r19,31
220223f4:	5ac00104 	addi	r11,r11,4
220223f8:	dac12d15 	stw	r11,1204(sp)
220223fc:	e005883a 	mov	r2,fp
22022400:	003d9006 	br	22021a44 <__alt_data_end+0xfffe2644>
22022404:	00800084 	movi	r2,2
22022408:	9f06b03a 	or	r3,r19,fp
2202240c:	003c7406 	br	220215e0 <__alt_data_end+0xfffe21e0>
22022410:	db012d17 	ldw	r12,1204(sp)
22022414:	14c00017 	ldw	r19,0(r2)
22022418:	0039883a 	mov	fp,zero
2202241c:	63000104 	addi	r12,r12,4
22022420:	db012d15 	stw	r12,1204(sp)
22022424:	00800044 	movi	r2,1
22022428:	9807883a 	mov	r3,r19
2202242c:	003c6c06 	br	220215e0 <__alt_data_end+0xfffe21e0>
22022430:	10803fcc 	andi	r2,r2,255
22022434:	1080201c 	xori	r2,r2,128
22022438:	10bfe004 	addi	r2,r2,-128
2202243c:	01000c04 	movi	r4,48
22022440:	1101a526 	beq	r2,r4,22022ad8 <___vfprintf_internal_r+0x1ac0>
22022444:	dac13117 	ldw	r11,1220(sp)
22022448:	db012817 	ldw	r12,1184(sp)
2202244c:	193fffc5 	stb	r4,-1(r3)
22022450:	5affffc4 	addi	r11,r11,-1
22022454:	dac13115 	stw	r11,1220(sp)
22022458:	62e5c83a 	sub	r18,r12,r11
2202245c:	003c7d06 	br	22021654 <__alt_data_end+0xfffe2254>
22022460:	b009883a 	mov	r4,r22
22022464:	b80b883a 	mov	r5,r23
22022468:	d9811e04 	addi	r6,sp,1144
2202246c:	20282900 	call	22028290 <__sprint_r>
22022470:	103c001e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022474:	d8c12017 	ldw	r3,1152(sp)
22022478:	da000404 	addi	r8,sp,16
2202247c:	db013117 	ldw	r12,1220(sp)
22022480:	dac13417 	ldw	r11,1232(sp)
22022484:	d8812617 	ldw	r2,1176(sp)
22022488:	62e5883a 	add	r18,r12,r11
2202248c:	db013317 	ldw	r12,1228(sp)
22022490:	13000216 	blt	r2,r12,2202249c <___vfprintf_internal_r+0x1484>
22022494:	8900004c 	andi	r4,r17,1
22022498:	20000c26 	beq	r4,zero,220224cc <___vfprintf_internal_r+0x14b4>
2202249c:	dac13817 	ldw	r11,1248(sp)
220224a0:	d9011f17 	ldw	r4,1148(sp)
220224a4:	db013517 	ldw	r12,1236(sp)
220224a8:	1ac7883a 	add	r3,r3,r11
220224ac:	21000044 	addi	r4,r4,1
220224b0:	43000015 	stw	r12,0(r8)
220224b4:	42c00115 	stw	r11,4(r8)
220224b8:	d8c12015 	stw	r3,1152(sp)
220224bc:	d9011f15 	stw	r4,1148(sp)
220224c0:	014001c4 	movi	r5,7
220224c4:	2901cc16 	blt	r5,r4,22022bf8 <___vfprintf_internal_r+0x1be0>
220224c8:	42000204 	addi	r8,r8,8
220224cc:	dac13317 	ldw	r11,1228(sp)
220224d0:	8489c83a 	sub	r4,r16,r18
220224d4:	5885c83a 	sub	r2,r11,r2
220224d8:	1021883a 	mov	r16,r2
220224dc:	2080010e 	bge	r4,r2,220224e4 <___vfprintf_internal_r+0x14cc>
220224e0:	2021883a 	mov	r16,r4
220224e4:	04000a0e 	bge	zero,r16,22022510 <___vfprintf_internal_r+0x14f8>
220224e8:	d9011f17 	ldw	r4,1148(sp)
220224ec:	1c07883a 	add	r3,r3,r16
220224f0:	44800015 	stw	r18,0(r8)
220224f4:	21000044 	addi	r4,r4,1
220224f8:	44000115 	stw	r16,4(r8)
220224fc:	d8c12015 	stw	r3,1152(sp)
22022500:	d9011f15 	stw	r4,1148(sp)
22022504:	014001c4 	movi	r5,7
22022508:	2901d616 	blt	r5,r4,22022c64 <___vfprintf_internal_r+0x1c4c>
2202250c:	42000204 	addi	r8,r8,8
22022510:	8001df16 	blt	r16,zero,22022c90 <___vfprintf_internal_r+0x1c78>
22022514:	1421c83a 	sub	r16,r2,r16
22022518:	043ce60e 	bge	zero,r16,220218b4 <__alt_data_end+0xfffe24b4>
2202251c:	04800404 	movi	r18,16
22022520:	d8811f17 	ldw	r2,1148(sp)
22022524:	943efc0e 	bge	r18,r16,22022118 <__alt_data_end+0xfffe2d18>
22022528:	014880f4 	movhi	r5,8707
2202252c:	297f2b84 	addi	r5,r5,-850
22022530:	d9412c15 	stw	r5,1200(sp)
22022534:	054001c4 	movi	r21,7
22022538:	00000306 	br	22022548 <___vfprintf_internal_r+0x1530>
2202253c:	42000204 	addi	r8,r8,8
22022540:	843ffc04 	addi	r16,r16,-16
22022544:	943ef70e 	bge	r18,r16,22022124 <__alt_data_end+0xfffe2d24>
22022548:	18c00404 	addi	r3,r3,16
2202254c:	10800044 	addi	r2,r2,1
22022550:	45000015 	stw	r20,0(r8)
22022554:	44800115 	stw	r18,4(r8)
22022558:	d8c12015 	stw	r3,1152(sp)
2202255c:	d8811f15 	stw	r2,1148(sp)
22022560:	a8bff60e 	bge	r21,r2,2202253c <__alt_data_end+0xfffe313c>
22022564:	b009883a 	mov	r4,r22
22022568:	b80b883a 	mov	r5,r23
2202256c:	d9811e04 	addi	r6,sp,1144
22022570:	20282900 	call	22028290 <__sprint_r>
22022574:	103bbf1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022578:	d8c12017 	ldw	r3,1152(sp)
2202257c:	d8811f17 	ldw	r2,1148(sp)
22022580:	da000404 	addi	r8,sp,16
22022584:	003fee06 	br	22022540 <__alt_data_end+0xfffe3140>
22022588:	8888703a 	and	r4,r17,r2
2202258c:	203eab1e 	bne	r4,zero,2202203c <__alt_data_end+0xfffe2c3c>
22022590:	dc011f17 	ldw	r16,1148(sp)
22022594:	db013117 	ldw	r12,1220(sp)
22022598:	40800115 	stw	r2,4(r8)
2202259c:	84000044 	addi	r16,r16,1
220225a0:	43000015 	stw	r12,0(r8)
220225a4:	d8c12015 	stw	r3,1152(sp)
220225a8:	dc011f15 	stw	r16,1148(sp)
220225ac:	008001c4 	movi	r2,7
220225b0:	14000e16 	blt	r2,r16,220225ec <___vfprintf_internal_r+0x15d4>
220225b4:	44800204 	addi	r18,r8,8
220225b8:	003ecb06 	br	220220e8 <__alt_data_end+0xfffe2ce8>
220225bc:	008880f4 	movhi	r2,8707
220225c0:	10bf2b84 	addi	r2,r2,-850
220225c4:	d8812c15 	stw	r2,1200(sp)
220225c8:	dac12c17 	ldw	r11,1200(sp)
220225cc:	1d47883a 	add	r3,r3,r21
220225d0:	84000044 	addi	r16,r16,1
220225d4:	92c00015 	stw	r11,0(r18)
220225d8:	95400115 	stw	r21,4(r18)
220225dc:	d8c12015 	stw	r3,1152(sp)
220225e0:	dc011f15 	stw	r16,1148(sp)
220225e4:	008001c4 	movi	r2,7
220225e8:	143ebe0e 	bge	r2,r16,220220e4 <__alt_data_end+0xfffe2ce4>
220225ec:	b009883a 	mov	r4,r22
220225f0:	b80b883a 	mov	r5,r23
220225f4:	d9811e04 	addi	r6,sp,1144
220225f8:	20282900 	call	22028290 <__sprint_r>
220225fc:	103b9d1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022600:	d8c12017 	ldw	r3,1152(sp)
22022604:	dc011f17 	ldw	r16,1148(sp)
22022608:	dc800404 	addi	r18,sp,16
2202260c:	003eb606 	br	220220e8 <__alt_data_end+0xfffe2ce8>
22022610:	b009883a 	mov	r4,r22
22022614:	b80b883a 	mov	r5,r23
22022618:	d9811e04 	addi	r6,sp,1144
2202261c:	20282900 	call	22028290 <__sprint_r>
22022620:	103b941e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022624:	d8c12017 	ldw	r3,1152(sp)
22022628:	dc011f17 	ldw	r16,1148(sp)
2202262c:	da000404 	addi	r8,sp,16
22022630:	003e8d06 	br	22022068 <__alt_data_end+0xfffe2c68>
22022634:	b009883a 	mov	r4,r22
22022638:	b80b883a 	mov	r5,r23
2202263c:	d9811e04 	addi	r6,sp,1144
22022640:	20282900 	call	22028290 <__sprint_r>
22022644:	103b8b1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022648:	d8c12017 	ldw	r3,1152(sp)
2202264c:	dc011f17 	ldw	r16,1148(sp)
22022650:	dc800404 	addi	r18,sp,16
22022654:	003e8f06 	br	22022094 <__alt_data_end+0xfffe2c94>
22022658:	db010e04 	addi	r12,sp,1080
2202265c:	0025883a 	mov	r18,zero
22022660:	db013115 	stw	r12,1220(sp)
22022664:	003bfb06 	br	22021654 <__alt_data_end+0xfffe2254>
22022668:	b009883a 	mov	r4,r22
2202266c:	b80b883a 	mov	r5,r23
22022670:	d9811e04 	addi	r6,sp,1144
22022674:	20282900 	call	22028290 <__sprint_r>
22022678:	103b7e1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
2202267c:	d8c12017 	ldw	r3,1152(sp)
22022680:	da000404 	addi	r8,sp,16
22022684:	003c5506 	br	220217dc <__alt_data_end+0xfffe23dc>
22022688:	04e7c83a 	sub	r19,zero,r19
2202268c:	9804c03a 	cmpne	r2,r19,zero
22022690:	0739c83a 	sub	fp,zero,fp
22022694:	e0b9c83a 	sub	fp,fp,r2
22022698:	05400b44 	movi	r21,45
2202269c:	dd412785 	stb	r21,1182(sp)
220226a0:	da413215 	stw	r9,1224(sp)
220226a4:	00800044 	movi	r2,1
220226a8:	9f06b03a 	or	r3,r19,fp
220226ac:	003bcf06 	br	220215ec <__alt_data_end+0xfffe21ec>
220226b0:	da013f15 	stw	r8,1276(sp)
220226b4:	da413e15 	stw	r9,1272(sp)
220226b8:	2027eec0 	call	22027eec <__fpclassifyd>
220226bc:	da013f17 	ldw	r8,1276(sp)
220226c0:	da413e17 	ldw	r9,1272(sp)
220226c4:	1000ce26 	beq	r2,zero,22022a00 <___vfprintf_internal_r+0x19e8>
220226c8:	057ff7c4 	movi	r21,-33
220226cc:	00bfffc4 	movi	r2,-1
220226d0:	856a703a 	and	r21,r16,r21
220226d4:	4881f026 	beq	r9,r2,22022e98 <___vfprintf_internal_r+0x1e80>
220226d8:	008011c4 	movi	r2,71
220226dc:	a881e526 	beq	r21,r2,22022e74 <___vfprintf_internal_r+0x1e5c>
220226e0:	db013917 	ldw	r12,1252(sp)
220226e4:	8ac04014 	ori	r11,r17,256
220226e8:	dac12d15 	stw	r11,1204(sp)
220226ec:	6001e416 	blt	r12,zero,22022e80 <___vfprintf_internal_r+0x1e68>
220226f0:	dc813917 	ldw	r18,1252(sp)
220226f4:	d8012b05 	stb	zero,1196(sp)
220226f8:	00801984 	movi	r2,102
220226fc:	80811826 	beq	r16,r2,22022b60 <___vfprintf_internal_r+0x1b48>
22022700:	00801184 	movi	r2,70
22022704:	80811626 	beq	r16,r2,22022b60 <___vfprintf_internal_r+0x1b48>
22022708:	00801144 	movi	r2,69
2202270c:	a881e026 	beq	r21,r2,22022e90 <___vfprintf_internal_r+0x1e78>
22022710:	4839883a 	mov	fp,r9
22022714:	d8812604 	addi	r2,sp,1176
22022718:	d8800115 	stw	r2,4(sp)
2202271c:	d9413717 	ldw	r5,1244(sp)
22022720:	d8812504 	addi	r2,sp,1172
22022724:	d8800215 	stw	r2,8(sp)
22022728:	d8812104 	addi	r2,sp,1156
2202272c:	df000015 	stw	fp,0(sp)
22022730:	d8800315 	stw	r2,12(sp)
22022734:	b009883a 	mov	r4,r22
22022738:	900d883a 	mov	r6,r18
2202273c:	01c00084 	movi	r7,2
22022740:	da013f15 	stw	r8,1276(sp)
22022744:	da413e15 	stw	r9,1272(sp)
22022748:	20233680 	call	22023368 <_dtoa_r>
2202274c:	d8813115 	stw	r2,1220(sp)
22022750:	008019c4 	movi	r2,103
22022754:	da013f17 	ldw	r8,1276(sp)
22022758:	da413e17 	ldw	r9,1272(sp)
2202275c:	80800226 	beq	r16,r2,22022768 <___vfprintf_internal_r+0x1750>
22022760:	008011c4 	movi	r2,71
22022764:	8081101e 	bne	r16,r2,22022ba8 <___vfprintf_internal_r+0x1b90>
22022768:	8880004c 	andi	r2,r17,1
2202276c:	1001df26 	beq	r2,zero,22022eec <___vfprintf_internal_r+0x1ed4>
22022770:	db013117 	ldw	r12,1220(sp)
22022774:	6715883a 	add	r10,r12,fp
22022778:	d9013717 	ldw	r4,1244(sp)
2202277c:	900b883a 	mov	r5,r18
22022780:	000d883a 	mov	r6,zero
22022784:	000f883a 	mov	r7,zero
22022788:	da013f15 	stw	r8,1276(sp)
2202278c:	da413e15 	stw	r9,1272(sp)
22022790:	da813d15 	stw	r10,1268(sp)
22022794:	202bc780 	call	2202bc78 <__eqdf2>
22022798:	da013f17 	ldw	r8,1276(sp)
2202279c:	da413e17 	ldw	r9,1272(sp)
220227a0:	da813d17 	ldw	r10,1268(sp)
220227a4:	10016526 	beq	r2,zero,22022d3c <___vfprintf_internal_r+0x1d24>
220227a8:	d8812117 	ldw	r2,1156(sp)
220227ac:	1280062e 	bgeu	r2,r10,220227c8 <___vfprintf_internal_r+0x17b0>
220227b0:	01000c04 	movi	r4,48
220227b4:	10c00044 	addi	r3,r2,1
220227b8:	d8c12115 	stw	r3,1156(sp)
220227bc:	11000005 	stb	r4,0(r2)
220227c0:	d8812117 	ldw	r2,1156(sp)
220227c4:	12bffb36 	bltu	r2,r10,220227b4 <__alt_data_end+0xfffe33b4>
220227c8:	db013117 	ldw	r12,1220(sp)
220227cc:	1305c83a 	sub	r2,r2,r12
220227d0:	d8813315 	stw	r2,1228(sp)
220227d4:	008011c4 	movi	r2,71
220227d8:	a8814a26 	beq	r21,r2,22022d04 <___vfprintf_internal_r+0x1cec>
220227dc:	00801944 	movi	r2,101
220227e0:	14020a0e 	bge	r2,r16,2202300c <___vfprintf_internal_r+0x1ff4>
220227e4:	00801984 	movi	r2,102
220227e8:	8081b626 	beq	r16,r2,22022ec4 <___vfprintf_internal_r+0x1eac>
220227ec:	db012617 	ldw	r12,1176(sp)
220227f0:	db013415 	stw	r12,1232(sp)
220227f4:	db013417 	ldw	r12,1232(sp)
220227f8:	dac13317 	ldw	r11,1228(sp)
220227fc:	62c1a816 	blt	r12,r11,22022ea0 <___vfprintf_internal_r+0x1e88>
22022800:	8c40004c 	andi	r17,r17,1
22022804:	8801ca1e 	bne	r17,zero,22022f30 <___vfprintf_internal_r+0x1f18>
22022808:	6005883a 	mov	r2,r12
2202280c:	6001b516 	blt	r12,zero,22022ee4 <___vfprintf_internal_r+0x1ecc>
22022810:	dc813417 	ldw	r18,1232(sp)
22022814:	df012b07 	ldb	fp,1196(sp)
22022818:	e001321e 	bne	fp,zero,22022ce4 <___vfprintf_internal_r+0x1ccc>
2202281c:	dc412d17 	ldw	r17,1204(sp)
22022820:	dd412783 	ldbu	r21,1182(sp)
22022824:	d8812b15 	stw	r2,1196(sp)
22022828:	dcc12d15 	stw	r19,1204(sp)
2202282c:	d8013215 	stw	zero,1224(sp)
22022830:	003b8d06 	br	22021668 <__alt_data_end+0xfffe2268>
22022834:	88c0100c 	andi	r3,r17,64
22022838:	18008226 	beq	r3,zero,22022a44 <___vfprintf_internal_r+0x1a2c>
2202283c:	dac12d17 	ldw	r11,1204(sp)
22022840:	14c0000b 	ldhu	r19,0(r2)
22022844:	0039883a 	mov	fp,zero
22022848:	5ac00104 	addi	r11,r11,4
2202284c:	dac12d15 	stw	r11,1204(sp)
22022850:	003c8f06 	br	22021a90 <__alt_data_end+0xfffe2690>
22022854:	1c000007 	ldb	r16,0(r3)
22022858:	1805883a 	mov	r2,r3
2202285c:	003a5506 	br	220211b4 <__alt_data_end+0xfffe1db4>
22022860:	00800084 	movi	r2,2
22022864:	003b5e06 	br	220215e0 <__alt_data_end+0xfffe21e0>
22022868:	8880040c 	andi	r2,r17,16
2202286c:	1000091e 	bne	r2,zero,22022894 <___vfprintf_internal_r+0x187c>
22022870:	8c40100c 	andi	r17,r17,64
22022874:	88000726 	beq	r17,zero,22022894 <___vfprintf_internal_r+0x187c>
22022878:	db012d17 	ldw	r12,1204(sp)
2202287c:	dac12f17 	ldw	r11,1212(sp)
22022880:	60800017 	ldw	r2,0(r12)
22022884:	63000104 	addi	r12,r12,4
22022888:	db012d15 	stw	r12,1204(sp)
2202288c:	12c0000d 	sth	r11,0(r2)
22022890:	003a1e06 	br	2202110c <__alt_data_end+0xfffe1d0c>
22022894:	db012d17 	ldw	r12,1204(sp)
22022898:	dac12f17 	ldw	r11,1212(sp)
2202289c:	60800017 	ldw	r2,0(r12)
220228a0:	63000104 	addi	r12,r12,4
220228a4:	db012d15 	stw	r12,1204(sp)
220228a8:	12c00015 	stw	r11,0(r2)
220228ac:	003a1706 	br	2202110c <__alt_data_end+0xfffe1d0c>
220228b0:	010880f4 	movhi	r4,8707
220228b4:	213f2b84 	addi	r4,r4,-850
220228b8:	d9012c15 	stw	r4,1200(sp)
220228bc:	dac12c17 	ldw	r11,1200(sp)
220228c0:	1c87883a 	add	r3,r3,r18
220228c4:	10800044 	addi	r2,r2,1
220228c8:	42c00015 	stw	r11,0(r8)
220228cc:	44800115 	stw	r18,4(r8)
220228d0:	d8c12015 	stw	r3,1152(sp)
220228d4:	d8811f15 	stw	r2,1148(sp)
220228d8:	010001c4 	movi	r4,7
220228dc:	20bee016 	blt	r4,r2,22022460 <__alt_data_end+0xfffe3060>
220228e0:	42000204 	addi	r8,r8,8
220228e4:	003ee506 	br	2202247c <__alt_data_end+0xfffe307c>
220228e8:	010880f4 	movhi	r4,8707
220228ec:	213f2b84 	addi	r4,r4,-850
220228f0:	d9012c15 	stw	r4,1200(sp)
220228f4:	003bd806 	br	22021858 <__alt_data_end+0xfffe2458>
220228f8:	b009883a 	mov	r4,r22
220228fc:	b80b883a 	mov	r5,r23
22022900:	d9811e04 	addi	r6,sp,1144
22022904:	20282900 	call	22028290 <__sprint_r>
22022908:	103ada1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
2202290c:	d8c12017 	ldw	r3,1152(sp)
22022910:	da000404 	addi	r8,sp,16
22022914:	003d6b06 	br	22021ec4 <__alt_data_end+0xfffe2ac4>
22022918:	d8811f17 	ldw	r2,1148(sp)
2202291c:	030880f4 	movhi	r12,8707
22022920:	01000044 	movi	r4,1
22022924:	18c00044 	addi	r3,r3,1
22022928:	10800044 	addi	r2,r2,1
2202292c:	633f2b04 	addi	r12,r12,-852
22022930:	41000115 	stw	r4,4(r8)
22022934:	43000015 	stw	r12,0(r8)
22022938:	d8c12015 	stw	r3,1152(sp)
2202293c:	d8811f15 	stw	r2,1148(sp)
22022940:	010001c4 	movi	r4,7
22022944:	20804916 	blt	r4,r2,22022a6c <___vfprintf_internal_r+0x1a54>
22022948:	42000204 	addi	r8,r8,8
2202294c:	8000041e 	bne	r16,zero,22022960 <___vfprintf_internal_r+0x1948>
22022950:	dac13317 	ldw	r11,1228(sp)
22022954:	5800021e 	bne	r11,zero,22022960 <___vfprintf_internal_r+0x1948>
22022958:	8880004c 	andi	r2,r17,1
2202295c:	103bd526 	beq	r2,zero,220218b4 <__alt_data_end+0xfffe24b4>
22022960:	db013817 	ldw	r12,1248(sp)
22022964:	d8811f17 	ldw	r2,1148(sp)
22022968:	dac13517 	ldw	r11,1236(sp)
2202296c:	1b07883a 	add	r3,r3,r12
22022970:	10800044 	addi	r2,r2,1
22022974:	42c00015 	stw	r11,0(r8)
22022978:	43000115 	stw	r12,4(r8)
2202297c:	d8c12015 	stw	r3,1152(sp)
22022980:	d8811f15 	stw	r2,1148(sp)
22022984:	010001c4 	movi	r4,7
22022988:	20813016 	blt	r4,r2,22022e4c <___vfprintf_internal_r+0x1e34>
2202298c:	42000204 	addi	r8,r8,8
22022990:	0421c83a 	sub	r16,zero,r16
22022994:	0400630e 	bge	zero,r16,22022b24 <___vfprintf_internal_r+0x1b0c>
22022998:	04800404 	movi	r18,16
2202299c:	94009f0e 	bge	r18,r16,22022c1c <___vfprintf_internal_r+0x1c04>
220229a0:	010880f4 	movhi	r4,8707
220229a4:	213f2b84 	addi	r4,r4,-850
220229a8:	d9012c15 	stw	r4,1200(sp)
220229ac:	054001c4 	movi	r21,7
220229b0:	00000306 	br	220229c0 <___vfprintf_internal_r+0x19a8>
220229b4:	42000204 	addi	r8,r8,8
220229b8:	843ffc04 	addi	r16,r16,-16
220229bc:	94009a0e 	bge	r18,r16,22022c28 <___vfprintf_internal_r+0x1c10>
220229c0:	18c00404 	addi	r3,r3,16
220229c4:	10800044 	addi	r2,r2,1
220229c8:	45000015 	stw	r20,0(r8)
220229cc:	44800115 	stw	r18,4(r8)
220229d0:	d8c12015 	stw	r3,1152(sp)
220229d4:	d8811f15 	stw	r2,1148(sp)
220229d8:	a8bff60e 	bge	r21,r2,220229b4 <__alt_data_end+0xfffe35b4>
220229dc:	b009883a 	mov	r4,r22
220229e0:	b80b883a 	mov	r5,r23
220229e4:	d9811e04 	addi	r6,sp,1144
220229e8:	20282900 	call	22028290 <__sprint_r>
220229ec:	103aa11e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
220229f0:	d8c12017 	ldw	r3,1152(sp)
220229f4:	d8811f17 	ldw	r2,1148(sp)
220229f8:	da000404 	addi	r8,sp,16
220229fc:	003fee06 	br	220229b8 <__alt_data_end+0xfffe35b8>
22022a00:	008011c4 	movi	r2,71
22022a04:	1400b316 	blt	r2,r16,22022cd4 <___vfprintf_internal_r+0x1cbc>
22022a08:	030880f4 	movhi	r12,8707
22022a0c:	633f1d04 	addi	r12,r12,-908
22022a10:	db013115 	stw	r12,1220(sp)
22022a14:	00c000c4 	movi	r3,3
22022a18:	00bfdfc4 	movi	r2,-129
22022a1c:	d8c12b15 	stw	r3,1196(sp)
22022a20:	88a2703a 	and	r17,r17,r2
22022a24:	dd412783 	ldbu	r21,1182(sp)
22022a28:	dcc12d15 	stw	r19,1204(sp)
22022a2c:	1825883a 	mov	r18,r3
22022a30:	d8013215 	stw	zero,1224(sp)
22022a34:	d8013415 	stw	zero,1232(sp)
22022a38:	003b0b06 	br	22021668 <__alt_data_end+0xfffe2268>
22022a3c:	4825883a 	mov	r18,r9
22022a40:	003cba06 	br	22021d2c <__alt_data_end+0xfffe292c>
22022a44:	db012d17 	ldw	r12,1204(sp)
22022a48:	14c00017 	ldw	r19,0(r2)
22022a4c:	0039883a 	mov	fp,zero
22022a50:	63000104 	addi	r12,r12,4
22022a54:	db012d15 	stw	r12,1204(sp)
22022a58:	003c0d06 	br	22021a90 <__alt_data_end+0xfffe2690>
22022a5c:	008880f4 	movhi	r2,8707
22022a60:	10bf1b04 	addi	r2,r2,-916
22022a64:	d8813115 	stw	r2,1220(sp)
22022a68:	003ac406 	br	2202157c <__alt_data_end+0xfffe217c>
22022a6c:	b009883a 	mov	r4,r22
22022a70:	b80b883a 	mov	r5,r23
22022a74:	d9811e04 	addi	r6,sp,1144
22022a78:	20282900 	call	22028290 <__sprint_r>
22022a7c:	103a7d1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022a80:	dc012617 	ldw	r16,1176(sp)
22022a84:	d8c12017 	ldw	r3,1152(sp)
22022a88:	da000404 	addi	r8,sp,16
22022a8c:	003faf06 	br	2202294c <__alt_data_end+0xfffe354c>
22022a90:	db012e17 	ldw	r12,1208(sp)
22022a94:	1805883a 	mov	r2,r3
22022a98:	dac12d15 	stw	r11,1204(sp)
22022a9c:	0319c83a 	sub	r12,zero,r12
22022aa0:	db012e15 	stw	r12,1208(sp)
22022aa4:	003a7e06 	br	220214a0 <__alt_data_end+0xfffe20a0>
22022aa8:	18800044 	addi	r2,r3,1
22022aac:	8c400814 	ori	r17,r17,32
22022ab0:	1c000047 	ldb	r16,1(r3)
22022ab4:	0039bf06 	br	220211b4 <__alt_data_end+0xfffe1db4>
22022ab8:	b009883a 	mov	r4,r22
22022abc:	b80b883a 	mov	r5,r23
22022ac0:	d9811e04 	addi	r6,sp,1144
22022ac4:	20282900 	call	22028290 <__sprint_r>
22022ac8:	103a6a1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022acc:	d8c12017 	ldw	r3,1152(sp)
22022ad0:	da000404 	addi	r8,sp,16
22022ad4:	003d0c06 	br	22021f08 <__alt_data_end+0xfffe2b08>
22022ad8:	db012817 	ldw	r12,1184(sp)
22022adc:	d8c13117 	ldw	r3,1220(sp)
22022ae0:	60e5c83a 	sub	r18,r12,r3
22022ae4:	003adb06 	br	22021654 <__alt_data_end+0xfffe2254>
22022ae8:	da013f15 	stw	r8,1276(sp)
22022aec:	2020f800 	call	22020f80 <strlen>
22022af0:	1025883a 	mov	r18,r2
22022af4:	da013f17 	ldw	r8,1276(sp)
22022af8:	903c8e0e 	bge	r18,zero,22021d34 <__alt_data_end+0xfffe2934>
22022afc:	0005883a 	mov	r2,zero
22022b00:	003c8c06 	br	22021d34 <__alt_data_end+0xfffe2934>
22022b04:	b009883a 	mov	r4,r22
22022b08:	b80b883a 	mov	r5,r23
22022b0c:	d9811e04 	addi	r6,sp,1144
22022b10:	20282900 	call	22028290 <__sprint_r>
22022b14:	103a571e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022b18:	d8c12017 	ldw	r3,1152(sp)
22022b1c:	d8811f17 	ldw	r2,1148(sp)
22022b20:	da000404 	addi	r8,sp,16
22022b24:	db013317 	ldw	r12,1228(sp)
22022b28:	dac13117 	ldw	r11,1220(sp)
22022b2c:	10800044 	addi	r2,r2,1
22022b30:	60c7883a 	add	r3,r12,r3
22022b34:	42c00015 	stw	r11,0(r8)
22022b38:	43000115 	stw	r12,4(r8)
22022b3c:	d8c12015 	stw	r3,1152(sp)
22022b40:	d8811f15 	stw	r2,1148(sp)
22022b44:	010001c4 	movi	r4,7
22022b48:	20bb590e 	bge	r4,r2,220218b0 <__alt_data_end+0xfffe24b0>
22022b4c:	003d7e06 	br	22022148 <__alt_data_end+0xfffe2d48>
22022b50:	010880f4 	movhi	r4,8707
22022b54:	213f2f84 	addi	r4,r4,-834
22022b58:	d9013615 	stw	r4,1240(sp)
22022b5c:	003af606 	br	22021738 <__alt_data_end+0xfffe2338>
22022b60:	d8812604 	addi	r2,sp,1176
22022b64:	d8800115 	stw	r2,4(sp)
22022b68:	d9413717 	ldw	r5,1244(sp)
22022b6c:	d8812504 	addi	r2,sp,1172
22022b70:	d8800215 	stw	r2,8(sp)
22022b74:	d8812104 	addi	r2,sp,1156
22022b78:	da400015 	stw	r9,0(sp)
22022b7c:	d8800315 	stw	r2,12(sp)
22022b80:	b009883a 	mov	r4,r22
22022b84:	900d883a 	mov	r6,r18
22022b88:	01c000c4 	movi	r7,3
22022b8c:	da013f15 	stw	r8,1276(sp)
22022b90:	da413e15 	stw	r9,1272(sp)
22022b94:	20233680 	call	22023368 <_dtoa_r>
22022b98:	da413e17 	ldw	r9,1272(sp)
22022b9c:	da013f17 	ldw	r8,1276(sp)
22022ba0:	d8813115 	stw	r2,1220(sp)
22022ba4:	4839883a 	mov	fp,r9
22022ba8:	dac13117 	ldw	r11,1220(sp)
22022bac:	00801184 	movi	r2,70
22022bb0:	5f15883a 	add	r10,r11,fp
22022bb4:	a8bef01e 	bne	r21,r2,22022778 <__alt_data_end+0xfffe3378>
22022bb8:	59000007 	ldb	r4,0(r11)
22022bbc:	00800c04 	movi	r2,48
22022bc0:	2080e026 	beq	r4,r2,22022f44 <___vfprintf_internal_r+0x1f2c>
22022bc4:	d8c12617 	ldw	r3,1176(sp)
22022bc8:	50d5883a 	add	r10,r10,r3
22022bcc:	003eea06 	br	22022778 <__alt_data_end+0xfffe3378>
22022bd0:	0025883a 	mov	r18,zero
22022bd4:	003db306 	br	220222a4 <__alt_data_end+0xfffe2ea4>
22022bd8:	b009883a 	mov	r4,r22
22022bdc:	b80b883a 	mov	r5,r23
22022be0:	d9811e04 	addi	r6,sp,1144
22022be4:	20282900 	call	22028290 <__sprint_r>
22022be8:	103a221e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022bec:	d8c12017 	ldw	r3,1152(sp)
22022bf0:	da000404 	addi	r8,sp,16
22022bf4:	003daa06 	br	220222a0 <__alt_data_end+0xfffe2ea0>
22022bf8:	b009883a 	mov	r4,r22
22022bfc:	b80b883a 	mov	r5,r23
22022c00:	d9811e04 	addi	r6,sp,1144
22022c04:	20282900 	call	22028290 <__sprint_r>
22022c08:	103a1a1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022c0c:	d8812617 	ldw	r2,1176(sp)
22022c10:	d8c12017 	ldw	r3,1152(sp)
22022c14:	da000404 	addi	r8,sp,16
22022c18:	003e2c06 	br	220224cc <__alt_data_end+0xfffe30cc>
22022c1c:	030880f4 	movhi	r12,8707
22022c20:	633f2b84 	addi	r12,r12,-850
22022c24:	db012c15 	stw	r12,1200(sp)
22022c28:	dac12c17 	ldw	r11,1200(sp)
22022c2c:	1c07883a 	add	r3,r3,r16
22022c30:	10800044 	addi	r2,r2,1
22022c34:	42c00015 	stw	r11,0(r8)
22022c38:	44000115 	stw	r16,4(r8)
22022c3c:	d8c12015 	stw	r3,1152(sp)
22022c40:	d8811f15 	stw	r2,1148(sp)
22022c44:	010001c4 	movi	r4,7
22022c48:	20bfae16 	blt	r4,r2,22022b04 <__alt_data_end+0xfffe3704>
22022c4c:	42000204 	addi	r8,r8,8
22022c50:	003fb406 	br	22022b24 <__alt_data_end+0xfffe3724>
22022c54:	030880f4 	movhi	r12,8707
22022c58:	633f2f84 	addi	r12,r12,-834
22022c5c:	db013615 	stw	r12,1240(sp)
22022c60:	003b3806 	br	22021944 <__alt_data_end+0xfffe2544>
22022c64:	b009883a 	mov	r4,r22
22022c68:	b80b883a 	mov	r5,r23
22022c6c:	d9811e04 	addi	r6,sp,1144
22022c70:	20282900 	call	22028290 <__sprint_r>
22022c74:	1039ff1e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022c78:	d8812617 	ldw	r2,1176(sp)
22022c7c:	db013317 	ldw	r12,1228(sp)
22022c80:	d8c12017 	ldw	r3,1152(sp)
22022c84:	da000404 	addi	r8,sp,16
22022c88:	6085c83a 	sub	r2,r12,r2
22022c8c:	003e2006 	br	22022510 <__alt_data_end+0xfffe3110>
22022c90:	0021883a 	mov	r16,zero
22022c94:	003e1f06 	br	22022514 <__alt_data_end+0xfffe3114>
22022c98:	00800184 	movi	r2,6
22022c9c:	1240012e 	bgeu	r2,r9,22022ca4 <___vfprintf_internal_r+0x1c8c>
22022ca0:	1013883a 	mov	r9,r2
22022ca4:	4825883a 	mov	r18,r9
22022ca8:	4805883a 	mov	r2,r9
22022cac:	48009e16 	blt	r9,zero,22022f28 <___vfprintf_internal_r+0x1f10>
22022cb0:	d8812b15 	stw	r2,1196(sp)
22022cb4:	008880f4 	movhi	r2,8707
22022cb8:	10bf2904 	addi	r2,r2,-860
22022cbc:	d8813115 	stw	r2,1220(sp)
22022cc0:	dcc12d15 	stw	r19,1204(sp)
22022cc4:	d8013215 	stw	zero,1224(sp)
22022cc8:	d8013415 	stw	zero,1232(sp)
22022ccc:	0005883a 	mov	r2,zero
22022cd0:	003a6c06 	br	22021684 <__alt_data_end+0xfffe2284>
22022cd4:	008880f4 	movhi	r2,8707
22022cd8:	10bf1e04 	addi	r2,r2,-904
22022cdc:	d8813115 	stw	r2,1220(sp)
22022ce0:	003f4c06 	br	22022a14 <__alt_data_end+0xfffe3614>
22022ce4:	00c00b44 	movi	r3,45
22022ce8:	d8812b15 	stw	r2,1196(sp)
22022cec:	dc412d17 	ldw	r17,1204(sp)
22022cf0:	d8c12785 	stb	r3,1182(sp)
22022cf4:	dcc12d15 	stw	r19,1204(sp)
22022cf8:	d8013215 	stw	zero,1224(sp)
22022cfc:	00800b44 	movi	r2,45
22022d00:	003a5d06 	br	22021678 <__alt_data_end+0xfffe2278>
22022d04:	d8c12617 	ldw	r3,1176(sp)
22022d08:	00bfff44 	movi	r2,-3
22022d0c:	18800d16 	blt	r3,r2,22022d44 <___vfprintf_internal_r+0x1d2c>
22022d10:	48c00c16 	blt	r9,r3,22022d44 <___vfprintf_internal_r+0x1d2c>
22022d14:	d8c13415 	stw	r3,1232(sp)
22022d18:	040019c4 	movi	r16,103
22022d1c:	003eb506 	br	220227f4 <__alt_data_end+0xfffe33f4>
22022d20:	05400b44 	movi	r21,45
22022d24:	dd412785 	stb	r21,1182(sp)
22022d28:	003a0f06 	br	22021568 <__alt_data_end+0xfffe2168>
22022d2c:	010880f4 	movhi	r4,8707
22022d30:	213f2b84 	addi	r4,r4,-850
22022d34:	d9012c15 	stw	r4,1200(sp)
22022d38:	003cb106 	br	22022000 <__alt_data_end+0xfffe2c00>
22022d3c:	5005883a 	mov	r2,r10
22022d40:	003ea106 	br	220227c8 <__alt_data_end+0xfffe33c8>
22022d44:	843fff84 	addi	r16,r16,-2
22022d48:	1f3fffc4 	addi	fp,r3,-1
22022d4c:	df012615 	stw	fp,1176(sp)
22022d50:	dc0122c5 	stb	r16,1163(sp)
22022d54:	e0009516 	blt	fp,zero,22022fac <___vfprintf_internal_r+0x1f94>
22022d58:	00800ac4 	movi	r2,43
22022d5c:	d8812305 	stb	r2,1164(sp)
22022d60:	00800244 	movi	r2,9
22022d64:	1700690e 	bge	r2,fp,22022f0c <___vfprintf_internal_r+0x1ef4>
22022d68:	dd4122c4 	addi	r21,sp,1163
22022d6c:	dc012c15 	stw	r16,1200(sp)
22022d70:	8825883a 	mov	r18,r17
22022d74:	a821883a 	mov	r16,r21
22022d78:	4023883a 	mov	r17,r8
22022d7c:	e009883a 	mov	r4,fp
22022d80:	01400284 	movi	r5,10
22022d84:	2020c0c0 	call	22020c0c <__modsi3>
22022d88:	10800c04 	addi	r2,r2,48
22022d8c:	843fffc4 	addi	r16,r16,-1
22022d90:	e009883a 	mov	r4,fp
22022d94:	01400284 	movi	r5,10
22022d98:	80800005 	stb	r2,0(r16)
22022d9c:	2020bb80 	call	22020bb8 <__divsi3>
22022da0:	1039883a 	mov	fp,r2
22022da4:	00800244 	movi	r2,9
22022da8:	173ff416 	blt	r2,fp,22022d7c <__alt_data_end+0xfffe397c>
22022dac:	8811883a 	mov	r8,r17
22022db0:	e0800c04 	addi	r2,fp,48
22022db4:	9023883a 	mov	r17,r18
22022db8:	8025883a 	mov	r18,r16
22022dbc:	913fffc4 	addi	r4,r18,-1
22022dc0:	90bfffc5 	stb	r2,-1(r18)
22022dc4:	dc012c17 	ldw	r16,1200(sp)
22022dc8:	25408e2e 	bgeu	r4,r21,22023004 <___vfprintf_internal_r+0x1fec>
22022dcc:	d9412384 	addi	r5,sp,1166
22022dd0:	2c8bc83a 	sub	r5,r5,r18
22022dd4:	d8c12344 	addi	r3,sp,1165
22022dd8:	a94b883a 	add	r5,r21,r5
22022ddc:	00000106 	br	22022de4 <___vfprintf_internal_r+0x1dcc>
22022de0:	20800003 	ldbu	r2,0(r4)
22022de4:	18800005 	stb	r2,0(r3)
22022de8:	18c00044 	addi	r3,r3,1
22022dec:	21000044 	addi	r4,r4,1
22022df0:	197ffb1e 	bne	r3,r5,22022de0 <__alt_data_end+0xfffe39e0>
22022df4:	d8812304 	addi	r2,sp,1164
22022df8:	1485c83a 	sub	r2,r2,r18
22022dfc:	d8c12344 	addi	r3,sp,1165
22022e00:	1885883a 	add	r2,r3,r2
22022e04:	dac13317 	ldw	r11,1228(sp)
22022e08:	156bc83a 	sub	r21,r2,r21
22022e0c:	dd413a15 	stw	r21,1256(sp)
22022e10:	00800044 	movi	r2,1
22022e14:	5d65883a 	add	r18,r11,r21
22022e18:	12c0770e 	bge	r2,r11,22022ff8 <___vfprintf_internal_r+0x1fe0>
22022e1c:	94800044 	addi	r18,r18,1
22022e20:	9005883a 	mov	r2,r18
22022e24:	90007216 	blt	r18,zero,22022ff0 <___vfprintf_internal_r+0x1fd8>
22022e28:	d8013415 	stw	zero,1232(sp)
22022e2c:	003e7906 	br	22022814 <__alt_data_end+0xfffe3414>
22022e30:	da412b15 	stw	r9,1196(sp)
22022e34:	dd412783 	ldbu	r21,1182(sp)
22022e38:	4825883a 	mov	r18,r9
22022e3c:	dcc12d15 	stw	r19,1204(sp)
22022e40:	d8013215 	stw	zero,1224(sp)
22022e44:	d8013415 	stw	zero,1232(sp)
22022e48:	003a0706 	br	22021668 <__alt_data_end+0xfffe2268>
22022e4c:	b009883a 	mov	r4,r22
22022e50:	b80b883a 	mov	r5,r23
22022e54:	d9811e04 	addi	r6,sp,1144
22022e58:	20282900 	call	22028290 <__sprint_r>
22022e5c:	1039851e 	bne	r2,zero,22021474 <__alt_data_end+0xfffe2074>
22022e60:	dc012617 	ldw	r16,1176(sp)
22022e64:	d8c12017 	ldw	r3,1152(sp)
22022e68:	d8811f17 	ldw	r2,1148(sp)
22022e6c:	da000404 	addi	r8,sp,16
22022e70:	003ec706 	br	22022990 <__alt_data_end+0xfffe3590>
22022e74:	483e1a1e 	bne	r9,zero,220226e0 <__alt_data_end+0xfffe32e0>
22022e78:	9013883a 	mov	r9,r18
22022e7c:	003e1806 	br	220226e0 <__alt_data_end+0xfffe32e0>
22022e80:	00c00b44 	movi	r3,45
22022e84:	64a0003c 	xorhi	r18,r12,32768
22022e88:	d8c12b05 	stb	r3,1196(sp)
22022e8c:	003e1a06 	br	220226f8 <__alt_data_end+0xfffe32f8>
22022e90:	4f000044 	addi	fp,r9,1
22022e94:	003e1f06 	br	22022714 <__alt_data_end+0xfffe3314>
22022e98:	02400184 	movi	r9,6
22022e9c:	003e1006 	br	220226e0 <__alt_data_end+0xfffe32e0>
22022ea0:	d8c13417 	ldw	r3,1232(sp)
22022ea4:	00c04b0e 	bge	zero,r3,22022fd4 <___vfprintf_internal_r+0x1fbc>
22022ea8:	04800044 	movi	r18,1
22022eac:	dac13317 	ldw	r11,1228(sp)
22022eb0:	92e5883a 	add	r18,r18,r11
22022eb4:	9005883a 	mov	r2,r18
22022eb8:	903e560e 	bge	r18,zero,22022814 <__alt_data_end+0xfffe3414>
22022ebc:	0005883a 	mov	r2,zero
22022ec0:	003e5406 	br	22022814 <__alt_data_end+0xfffe3414>
22022ec4:	d8c12617 	ldw	r3,1176(sp)
22022ec8:	d8c13415 	stw	r3,1232(sp)
22022ecc:	00c03b0e 	bge	zero,r3,22022fbc <___vfprintf_internal_r+0x1fa4>
22022ed0:	4800081e 	bne	r9,zero,22022ef4 <___vfprintf_internal_r+0x1edc>
22022ed4:	8c40004c 	andi	r17,r17,1
22022ed8:	8800061e 	bne	r17,zero,22022ef4 <___vfprintf_internal_r+0x1edc>
22022edc:	1805883a 	mov	r2,r3
22022ee0:	183e4b0e 	bge	r3,zero,22022810 <__alt_data_end+0xfffe3410>
22022ee4:	0005883a 	mov	r2,zero
22022ee8:	003e4906 	br	22022810 <__alt_data_end+0xfffe3410>
22022eec:	d8812117 	ldw	r2,1156(sp)
22022ef0:	003e3506 	br	220227c8 <__alt_data_end+0xfffe33c8>
22022ef4:	dac13417 	ldw	r11,1232(sp)
22022ef8:	4a400044 	addi	r9,r9,1
22022efc:	5a65883a 	add	r18,r11,r9
22022f00:	9005883a 	mov	r2,r18
22022f04:	903e430e 	bge	r18,zero,22022814 <__alt_data_end+0xfffe3414>
22022f08:	003fec06 	br	22022ebc <__alt_data_end+0xfffe3abc>
22022f0c:	00800c04 	movi	r2,48
22022f10:	e0c00c04 	addi	r3,fp,48
22022f14:	d8812345 	stb	r2,1165(sp)
22022f18:	d8c12385 	stb	r3,1166(sp)
22022f1c:	d88123c4 	addi	r2,sp,1167
22022f20:	dd4122c4 	addi	r21,sp,1163
22022f24:	003fb706 	br	22022e04 <__alt_data_end+0xfffe3a04>
22022f28:	0005883a 	mov	r2,zero
22022f2c:	003f6006 	br	22022cb0 <__alt_data_end+0xfffe38b0>
22022f30:	db013417 	ldw	r12,1232(sp)
22022f34:	64800044 	addi	r18,r12,1
22022f38:	9005883a 	mov	r2,r18
22022f3c:	903e350e 	bge	r18,zero,22022814 <__alt_data_end+0xfffe3414>
22022f40:	003fde06 	br	22022ebc <__alt_data_end+0xfffe3abc>
22022f44:	d9013717 	ldw	r4,1244(sp)
22022f48:	900b883a 	mov	r5,r18
22022f4c:	000d883a 	mov	r6,zero
22022f50:	000f883a 	mov	r7,zero
22022f54:	da013f15 	stw	r8,1276(sp)
22022f58:	da413e15 	stw	r9,1272(sp)
22022f5c:	da813d15 	stw	r10,1268(sp)
22022f60:	202bc780 	call	2202bc78 <__eqdf2>
22022f64:	da013f17 	ldw	r8,1276(sp)
22022f68:	da413e17 	ldw	r9,1272(sp)
22022f6c:	da813d17 	ldw	r10,1268(sp)
22022f70:	103f1426 	beq	r2,zero,22022bc4 <__alt_data_end+0xfffe37c4>
22022f74:	00800044 	movi	r2,1
22022f78:	1707c83a 	sub	r3,r2,fp
22022f7c:	d8c12615 	stw	r3,1176(sp)
22022f80:	003f1106 	br	22022bc8 <__alt_data_end+0xfffe37c8>
22022f84:	dac12d17 	ldw	r11,1204(sp)
22022f88:	5a400017 	ldw	r9,0(r11)
22022f8c:	5ac00104 	addi	r11,r11,4
22022f90:	dac12d15 	stw	r11,1204(sp)
22022f94:	483ec60e 	bge	r9,zero,22022ab0 <__alt_data_end+0xfffe36b0>
22022f98:	027fffc4 	movi	r9,-1
22022f9c:	1c000047 	ldb	r16,1(r3)
22022fa0:	00388406 	br	220211b4 <__alt_data_end+0xfffe1db4>
22022fa4:	043fffc4 	movi	r16,-1
22022fa8:	00391006 	br	220213ec <__alt_data_end+0xfffe1fec>
22022fac:	00800b44 	movi	r2,45
22022fb0:	0739c83a 	sub	fp,zero,fp
22022fb4:	d8812305 	stb	r2,1164(sp)
22022fb8:	003f6906 	br	22022d60 <__alt_data_end+0xfffe3960>
22022fbc:	4800081e 	bne	r9,zero,22022fe0 <___vfprintf_internal_r+0x1fc8>
22022fc0:	8c40004c 	andi	r17,r17,1
22022fc4:	8800061e 	bne	r17,zero,22022fe0 <___vfprintf_internal_r+0x1fc8>
22022fc8:	00800044 	movi	r2,1
22022fcc:	1025883a 	mov	r18,r2
22022fd0:	003e1006 	br	22022814 <__alt_data_end+0xfffe3414>
22022fd4:	04800084 	movi	r18,2
22022fd8:	90e5c83a 	sub	r18,r18,r3
22022fdc:	003fb306 	br	22022eac <__alt_data_end+0xfffe3aac>
22022fe0:	4c800084 	addi	r18,r9,2
22022fe4:	9005883a 	mov	r2,r18
22022fe8:	903e0a0e 	bge	r18,zero,22022814 <__alt_data_end+0xfffe3414>
22022fec:	003fb306 	br	22022ebc <__alt_data_end+0xfffe3abc>
22022ff0:	0005883a 	mov	r2,zero
22022ff4:	003f8c06 	br	22022e28 <__alt_data_end+0xfffe3a28>
22022ff8:	88a2703a 	and	r17,r17,r2
22022ffc:	883f8826 	beq	r17,zero,22022e20 <__alt_data_end+0xfffe3a20>
22023000:	003f8606 	br	22022e1c <__alt_data_end+0xfffe3a1c>
22023004:	d8812344 	addi	r2,sp,1165
22023008:	003f7e06 	br	22022e04 <__alt_data_end+0xfffe3a04>
2202300c:	d8c12617 	ldw	r3,1176(sp)
22023010:	003f4d06 	br	22022d48 <__alt_data_end+0xfffe3948>

22023014 <__vfprintf_internal>:
22023014:	2007883a 	mov	r3,r4
22023018:	010880f4 	movhi	r4,8707
2202301c:	21068404 	addi	r4,r4,6672
22023020:	21000017 	ldw	r4,0(r4)
22023024:	2805883a 	mov	r2,r5
22023028:	300f883a 	mov	r7,r6
2202302c:	180b883a 	mov	r5,r3
22023030:	100d883a 	mov	r6,r2
22023034:	20210181 	jmpi	22021018 <___vfprintf_internal_r>

22023038 <__swsetup_r>:
22023038:	008880f4 	movhi	r2,8707
2202303c:	defffd04 	addi	sp,sp,-12
22023040:	10868404 	addi	r2,r2,6672
22023044:	dc400115 	stw	r17,4(sp)
22023048:	2023883a 	mov	r17,r4
2202304c:	11000017 	ldw	r4,0(r2)
22023050:	dc000015 	stw	r16,0(sp)
22023054:	dfc00215 	stw	ra,8(sp)
22023058:	2821883a 	mov	r16,r5
2202305c:	20000226 	beq	r4,zero,22023068 <__swsetup_r+0x30>
22023060:	20c00e17 	ldw	r3,56(r4)
22023064:	18002e26 	beq	r3,zero,22023120 <__swsetup_r+0xe8>
22023068:	8080030b 	ldhu	r2,12(r16)
2202306c:	10c0020c 	andi	r3,r2,8
22023070:	100d883a 	mov	r6,r2
22023074:	18000f26 	beq	r3,zero,220230b4 <__swsetup_r+0x7c>
22023078:	80c00417 	ldw	r3,16(r16)
2202307c:	18001526 	beq	r3,zero,220230d4 <__swsetup_r+0x9c>
22023080:	1100004c 	andi	r4,r2,1
22023084:	20001c1e 	bne	r4,zero,220230f8 <__swsetup_r+0xc0>
22023088:	1080008c 	andi	r2,r2,2
2202308c:	1000261e 	bne	r2,zero,22023128 <__swsetup_r+0xf0>
22023090:	80800517 	ldw	r2,20(r16)
22023094:	80800215 	stw	r2,8(r16)
22023098:	18001c26 	beq	r3,zero,2202310c <__swsetup_r+0xd4>
2202309c:	0005883a 	mov	r2,zero
220230a0:	dfc00217 	ldw	ra,8(sp)
220230a4:	dc400117 	ldw	r17,4(sp)
220230a8:	dc000017 	ldw	r16,0(sp)
220230ac:	dec00304 	addi	sp,sp,12
220230b0:	f800283a 	ret
220230b4:	3080040c 	andi	r2,r6,16
220230b8:	10001726 	beq	r2,zero,22023118 <__swsetup_r+0xe0>
220230bc:	3080010c 	andi	r2,r6,4
220230c0:	10001b1e 	bne	r2,zero,22023130 <__swsetup_r+0xf8>
220230c4:	80c00417 	ldw	r3,16(r16)
220230c8:	30800214 	ori	r2,r6,8
220230cc:	8080030d 	sth	r2,12(r16)
220230d0:	183feb1e 	bne	r3,zero,22023080 <__alt_data_end+0xfffe3c80>
220230d4:	1140a00c 	andi	r5,r2,640
220230d8:	01008004 	movi	r4,512
220230dc:	293fe826 	beq	r5,r4,22023080 <__alt_data_end+0xfffe3c80>
220230e0:	8809883a 	mov	r4,r17
220230e4:	800b883a 	mov	r5,r16
220230e8:	2025b900 	call	22025b90 <__smakebuf_r>
220230ec:	8080030b 	ldhu	r2,12(r16)
220230f0:	80c00417 	ldw	r3,16(r16)
220230f4:	003fe206 	br	22023080 <__alt_data_end+0xfffe3c80>
220230f8:	80800517 	ldw	r2,20(r16)
220230fc:	80000215 	stw	zero,8(r16)
22023100:	0085c83a 	sub	r2,zero,r2
22023104:	80800615 	stw	r2,24(r16)
22023108:	183fe41e 	bne	r3,zero,2202309c <__alt_data_end+0xfffe3c9c>
2202310c:	8080030b 	ldhu	r2,12(r16)
22023110:	1080200c 	andi	r2,r2,128
22023114:	103fe226 	beq	r2,zero,220230a0 <__alt_data_end+0xfffe3ca0>
22023118:	00bfffc4 	movi	r2,-1
2202311c:	003fe006 	br	220230a0 <__alt_data_end+0xfffe3ca0>
22023120:	20250380 	call	22025038 <__sinit>
22023124:	003fd006 	br	22023068 <__alt_data_end+0xfffe3c68>
22023128:	0005883a 	mov	r2,zero
2202312c:	003fd906 	br	22023094 <__alt_data_end+0xfffe3c94>
22023130:	81400c17 	ldw	r5,48(r16)
22023134:	28000626 	beq	r5,zero,22023150 <__swsetup_r+0x118>
22023138:	80801004 	addi	r2,r16,64
2202313c:	28800326 	beq	r5,r2,2202314c <__swsetup_r+0x114>
22023140:	8809883a 	mov	r4,r17
22023144:	20251ac0 	call	220251ac <_free_r>
22023148:	8180030b 	ldhu	r6,12(r16)
2202314c:	80000c15 	stw	zero,48(r16)
22023150:	80c00417 	ldw	r3,16(r16)
22023154:	00bff6c4 	movi	r2,-37
22023158:	118c703a 	and	r6,r2,r6
2202315c:	80000115 	stw	zero,4(r16)
22023160:	80c00015 	stw	r3,0(r16)
22023164:	003fd806 	br	220230c8 <__alt_data_end+0xfffe3cc8>

22023168 <quorem>:
22023168:	defff704 	addi	sp,sp,-36
2202316c:	dc800215 	stw	r18,8(sp)
22023170:	20800417 	ldw	r2,16(r4)
22023174:	2c800417 	ldw	r18,16(r5)
22023178:	dfc00815 	stw	ra,32(sp)
2202317c:	ddc00715 	stw	r23,28(sp)
22023180:	dd800615 	stw	r22,24(sp)
22023184:	dd400515 	stw	r21,20(sp)
22023188:	dd000415 	stw	r20,16(sp)
2202318c:	dcc00315 	stw	r19,12(sp)
22023190:	dc400115 	stw	r17,4(sp)
22023194:	dc000015 	stw	r16,0(sp)
22023198:	14807116 	blt	r2,r18,22023360 <quorem+0x1f8>
2202319c:	94bfffc4 	addi	r18,r18,-1
220231a0:	94ad883a 	add	r22,r18,r18
220231a4:	b5ad883a 	add	r22,r22,r22
220231a8:	2c400504 	addi	r17,r5,20
220231ac:	8da9883a 	add	r20,r17,r22
220231b0:	25400504 	addi	r21,r4,20
220231b4:	282f883a 	mov	r23,r5
220231b8:	adad883a 	add	r22,r21,r22
220231bc:	a1400017 	ldw	r5,0(r20)
220231c0:	2021883a 	mov	r16,r4
220231c4:	b1000017 	ldw	r4,0(r22)
220231c8:	29400044 	addi	r5,r5,1
220231cc:	2020c680 	call	22020c68 <__udivsi3>
220231d0:	1027883a 	mov	r19,r2
220231d4:	10002c26 	beq	r2,zero,22023288 <quorem+0x120>
220231d8:	a813883a 	mov	r9,r21
220231dc:	8811883a 	mov	r8,r17
220231e0:	0009883a 	mov	r4,zero
220231e4:	000d883a 	mov	r6,zero
220231e8:	41c00017 	ldw	r7,0(r8)
220231ec:	49400017 	ldw	r5,0(r9)
220231f0:	42000104 	addi	r8,r8,4
220231f4:	38bfffcc 	andi	r2,r7,65535
220231f8:	14c5383a 	mul	r2,r2,r19
220231fc:	380ed43a 	srli	r7,r7,16
22023200:	28ffffcc 	andi	r3,r5,65535
22023204:	2085883a 	add	r2,r4,r2
22023208:	1008d43a 	srli	r4,r2,16
2202320c:	3ccf383a 	mul	r7,r7,r19
22023210:	198d883a 	add	r6,r3,r6
22023214:	10ffffcc 	andi	r3,r2,65535
22023218:	30c7c83a 	sub	r3,r6,r3
2202321c:	280ad43a 	srli	r5,r5,16
22023220:	21c9883a 	add	r4,r4,r7
22023224:	180dd43a 	srai	r6,r3,16
22023228:	20bfffcc 	andi	r2,r4,65535
2202322c:	288bc83a 	sub	r5,r5,r2
22023230:	298b883a 	add	r5,r5,r6
22023234:	280e943a 	slli	r7,r5,16
22023238:	18ffffcc 	andi	r3,r3,65535
2202323c:	2008d43a 	srli	r4,r4,16
22023240:	38ceb03a 	or	r7,r7,r3
22023244:	49c00015 	stw	r7,0(r9)
22023248:	280dd43a 	srai	r6,r5,16
2202324c:	4a400104 	addi	r9,r9,4
22023250:	a23fe52e 	bgeu	r20,r8,220231e8 <__alt_data_end+0xfffe3de8>
22023254:	b0800017 	ldw	r2,0(r22)
22023258:	10000b1e 	bne	r2,zero,22023288 <quorem+0x120>
2202325c:	b0bfff04 	addi	r2,r22,-4
22023260:	a880082e 	bgeu	r21,r2,22023284 <quorem+0x11c>
22023264:	b0ffff17 	ldw	r3,-4(r22)
22023268:	18000326 	beq	r3,zero,22023278 <quorem+0x110>
2202326c:	00000506 	br	22023284 <quorem+0x11c>
22023270:	10c00017 	ldw	r3,0(r2)
22023274:	1800031e 	bne	r3,zero,22023284 <quorem+0x11c>
22023278:	10bfff04 	addi	r2,r2,-4
2202327c:	94bfffc4 	addi	r18,r18,-1
22023280:	a8bffb36 	bltu	r21,r2,22023270 <__alt_data_end+0xfffe3e70>
22023284:	84800415 	stw	r18,16(r16)
22023288:	8009883a 	mov	r4,r16
2202328c:	b80b883a 	mov	r5,r23
22023290:	20271180 	call	22027118 <__mcmp>
22023294:	10002616 	blt	r2,zero,22023330 <quorem+0x1c8>
22023298:	9cc00044 	addi	r19,r19,1
2202329c:	a80d883a 	mov	r6,r21
220232a0:	000b883a 	mov	r5,zero
220232a4:	31000017 	ldw	r4,0(r6)
220232a8:	88800017 	ldw	r2,0(r17)
220232ac:	31800104 	addi	r6,r6,4
220232b0:	20ffffcc 	andi	r3,r4,65535
220232b4:	194b883a 	add	r5,r3,r5
220232b8:	10ffffcc 	andi	r3,r2,65535
220232bc:	28c7c83a 	sub	r3,r5,r3
220232c0:	1004d43a 	srli	r2,r2,16
220232c4:	2008d43a 	srli	r4,r4,16
220232c8:	180bd43a 	srai	r5,r3,16
220232cc:	18ffffcc 	andi	r3,r3,65535
220232d0:	2089c83a 	sub	r4,r4,r2
220232d4:	2149883a 	add	r4,r4,r5
220232d8:	2004943a 	slli	r2,r4,16
220232dc:	8c400104 	addi	r17,r17,4
220232e0:	200bd43a 	srai	r5,r4,16
220232e4:	10c6b03a 	or	r3,r2,r3
220232e8:	30ffff15 	stw	r3,-4(r6)
220232ec:	a47fed2e 	bgeu	r20,r17,220232a4 <__alt_data_end+0xfffe3ea4>
220232f0:	9485883a 	add	r2,r18,r18
220232f4:	1085883a 	add	r2,r2,r2
220232f8:	a887883a 	add	r3,r21,r2
220232fc:	18800017 	ldw	r2,0(r3)
22023300:	10000b1e 	bne	r2,zero,22023330 <quorem+0x1c8>
22023304:	18bfff04 	addi	r2,r3,-4
22023308:	a880082e 	bgeu	r21,r2,2202332c <quorem+0x1c4>
2202330c:	18ffff17 	ldw	r3,-4(r3)
22023310:	18000326 	beq	r3,zero,22023320 <quorem+0x1b8>
22023314:	00000506 	br	2202332c <quorem+0x1c4>
22023318:	10c00017 	ldw	r3,0(r2)
2202331c:	1800031e 	bne	r3,zero,2202332c <quorem+0x1c4>
22023320:	10bfff04 	addi	r2,r2,-4
22023324:	94bfffc4 	addi	r18,r18,-1
22023328:	a8bffb36 	bltu	r21,r2,22023318 <__alt_data_end+0xfffe3f18>
2202332c:	84800415 	stw	r18,16(r16)
22023330:	9805883a 	mov	r2,r19
22023334:	dfc00817 	ldw	ra,32(sp)
22023338:	ddc00717 	ldw	r23,28(sp)
2202333c:	dd800617 	ldw	r22,24(sp)
22023340:	dd400517 	ldw	r21,20(sp)
22023344:	dd000417 	ldw	r20,16(sp)
22023348:	dcc00317 	ldw	r19,12(sp)
2202334c:	dc800217 	ldw	r18,8(sp)
22023350:	dc400117 	ldw	r17,4(sp)
22023354:	dc000017 	ldw	r16,0(sp)
22023358:	dec00904 	addi	sp,sp,36
2202335c:	f800283a 	ret
22023360:	0005883a 	mov	r2,zero
22023364:	003ff306 	br	22023334 <__alt_data_end+0xfffe3f34>

22023368 <_dtoa_r>:
22023368:	20801017 	ldw	r2,64(r4)
2202336c:	deffde04 	addi	sp,sp,-136
22023370:	dd401d15 	stw	r21,116(sp)
22023374:	dcc01b15 	stw	r19,108(sp)
22023378:	dc801a15 	stw	r18,104(sp)
2202337c:	dc401915 	stw	r17,100(sp)
22023380:	dc001815 	stw	r16,96(sp)
22023384:	dfc02115 	stw	ra,132(sp)
22023388:	df002015 	stw	fp,128(sp)
2202338c:	ddc01f15 	stw	r23,124(sp)
22023390:	dd801e15 	stw	r22,120(sp)
22023394:	dd001c15 	stw	r20,112(sp)
22023398:	d9c00315 	stw	r7,12(sp)
2202339c:	2021883a 	mov	r16,r4
220233a0:	302b883a 	mov	r21,r6
220233a4:	2825883a 	mov	r18,r5
220233a8:	dc402417 	ldw	r17,144(sp)
220233ac:	3027883a 	mov	r19,r6
220233b0:	10000826 	beq	r2,zero,220233d4 <_dtoa_r+0x6c>
220233b4:	21801117 	ldw	r6,68(r4)
220233b8:	00c00044 	movi	r3,1
220233bc:	100b883a 	mov	r5,r2
220233c0:	1986983a 	sll	r3,r3,r6
220233c4:	11800115 	stw	r6,4(r2)
220233c8:	10c00215 	stw	r3,8(r2)
220233cc:	20269000 	call	22026900 <_Bfree>
220233d0:	80001015 	stw	zero,64(r16)
220233d4:	a8002d16 	blt	r21,zero,2202348c <_dtoa_r+0x124>
220233d8:	88000015 	stw	zero,0(r17)
220233dc:	a8dffc2c 	andhi	r3,r21,32752
220233e0:	009ffc34 	movhi	r2,32752
220233e4:	18801b26 	beq	r3,r2,22023454 <_dtoa_r+0xec>
220233e8:	9009883a 	mov	r4,r18
220233ec:	980b883a 	mov	r5,r19
220233f0:	000d883a 	mov	r6,zero
220233f4:	000f883a 	mov	r7,zero
220233f8:	202bc780 	call	2202bc78 <__eqdf2>
220233fc:	10002a1e 	bne	r2,zero,220234a8 <_dtoa_r+0x140>
22023400:	d8c02317 	ldw	r3,140(sp)
22023404:	d9002517 	ldw	r4,148(sp)
22023408:	00800044 	movi	r2,1
2202340c:	18800015 	stw	r2,0(r3)
22023410:	2001a226 	beq	r4,zero,22023a9c <_dtoa_r+0x734>
22023414:	008880f4 	movhi	r2,8707
22023418:	10bf2b44 	addi	r2,r2,-851
2202341c:	20800015 	stw	r2,0(r4)
22023420:	10bfffc4 	addi	r2,r2,-1
22023424:	dfc02117 	ldw	ra,132(sp)
22023428:	df002017 	ldw	fp,128(sp)
2202342c:	ddc01f17 	ldw	r23,124(sp)
22023430:	dd801e17 	ldw	r22,120(sp)
22023434:	dd401d17 	ldw	r21,116(sp)
22023438:	dd001c17 	ldw	r20,112(sp)
2202343c:	dcc01b17 	ldw	r19,108(sp)
22023440:	dc801a17 	ldw	r18,104(sp)
22023444:	dc401917 	ldw	r17,100(sp)
22023448:	dc001817 	ldw	r16,96(sp)
2202344c:	dec02204 	addi	sp,sp,136
22023450:	f800283a 	ret
22023454:	d8c02317 	ldw	r3,140(sp)
22023458:	0089c3c4 	movi	r2,9999
2202345c:	18800015 	stw	r2,0(r3)
22023460:	90017c26 	beq	r18,zero,22023a54 <_dtoa_r+0x6ec>
22023464:	008880f4 	movhi	r2,8707
22023468:	10bf3704 	addi	r2,r2,-804
2202346c:	d9002517 	ldw	r4,148(sp)
22023470:	203fec26 	beq	r4,zero,22023424 <__alt_data_end+0xfffe4024>
22023474:	10c000c7 	ldb	r3,3(r2)
22023478:	18017d1e 	bne	r3,zero,22023a70 <_dtoa_r+0x708>
2202347c:	10c000c4 	addi	r3,r2,3
22023480:	d9802517 	ldw	r6,148(sp)
22023484:	30c00015 	stw	r3,0(r6)
22023488:	003fe606 	br	22023424 <__alt_data_end+0xfffe4024>
2202348c:	04e00034 	movhi	r19,32768
22023490:	9cffffc4 	addi	r19,r19,-1
22023494:	00800044 	movi	r2,1
22023498:	ace6703a 	and	r19,r21,r19
2202349c:	88800015 	stw	r2,0(r17)
220234a0:	982b883a 	mov	r21,r19
220234a4:	003fcd06 	br	220233dc <__alt_data_end+0xfffe3fdc>
220234a8:	d8800204 	addi	r2,sp,8
220234ac:	a822d53a 	srli	r17,r21,20
220234b0:	d8800015 	stw	r2,0(sp)
220234b4:	8009883a 	mov	r4,r16
220234b8:	900b883a 	mov	r5,r18
220234bc:	980d883a 	mov	r6,r19
220234c0:	d9c00104 	addi	r7,sp,4
220234c4:	202748c0 	call	2202748c <__d2b>
220234c8:	1039883a 	mov	fp,r2
220234cc:	88016a1e 	bne	r17,zero,22023a78 <_dtoa_r+0x710>
220234d0:	dd000217 	ldw	r20,8(sp)
220234d4:	dc400117 	ldw	r17,4(sp)
220234d8:	00befbc4 	movi	r2,-1041
220234dc:	a463883a 	add	r17,r20,r17
220234e0:	8882ea16 	blt	r17,r2,2202408c <_dtoa_r+0xd24>
220234e4:	00bf0384 	movi	r2,-1010
220234e8:	1445c83a 	sub	r2,r2,r17
220234ec:	89010484 	addi	r4,r17,1042
220234f0:	a8aa983a 	sll	r21,r21,r2
220234f4:	9108d83a 	srl	r4,r18,r4
220234f8:	a908b03a 	or	r4,r21,r4
220234fc:	202d0080 	call	2202d008 <__floatunsidf>
22023500:	017f8434 	movhi	r5,65040
22023504:	01800044 	movi	r6,1
22023508:	1009883a 	mov	r4,r2
2202350c:	194b883a 	add	r5,r3,r5
22023510:	8c7fffc4 	addi	r17,r17,-1
22023514:	d9800f15 	stw	r6,60(sp)
22023518:	000d883a 	mov	r6,zero
2202351c:	01cffe34 	movhi	r7,16376
22023520:	202c5e00 	call	2202c5e0 <__subdf3>
22023524:	0198dbf4 	movhi	r6,25455
22023528:	01cff4f4 	movhi	r7,16339
2202352c:	1009883a 	mov	r4,r2
22023530:	180b883a 	mov	r5,r3
22023534:	3190d844 	addi	r6,r6,17249
22023538:	39e1e9c4 	addi	r7,r7,-30809
2202353c:	202bebc0 	call	2202bebc <__muldf3>
22023540:	01a2d874 	movhi	r6,35681
22023544:	01cff1f4 	movhi	r7,16327
22023548:	180b883a 	mov	r5,r3
2202354c:	31b22cc4 	addi	r6,r6,-14157
22023550:	39e28a04 	addi	r7,r7,-30168
22023554:	1009883a 	mov	r4,r2
22023558:	202ab100 	call	2202ab10 <__adddf3>
2202355c:	8809883a 	mov	r4,r17
22023560:	102d883a 	mov	r22,r2
22023564:	182b883a 	mov	r21,r3
22023568:	202cf380 	call	2202cf38 <__floatsidf>
2202356c:	019427f4 	movhi	r6,20639
22023570:	01cff4f4 	movhi	r7,16339
22023574:	1009883a 	mov	r4,r2
22023578:	180b883a 	mov	r5,r3
2202357c:	319e7ec4 	addi	r6,r6,31227
22023580:	39d104c4 	addi	r7,r7,17427
22023584:	202bebc0 	call	2202bebc <__muldf3>
22023588:	b009883a 	mov	r4,r22
2202358c:	a80b883a 	mov	r5,r21
22023590:	100d883a 	mov	r6,r2
22023594:	180f883a 	mov	r7,r3
22023598:	202ab100 	call	2202ab10 <__adddf3>
2202359c:	1009883a 	mov	r4,r2
220235a0:	180b883a 	mov	r5,r3
220235a4:	102d883a 	mov	r22,r2
220235a8:	182b883a 	mov	r21,r3
220235ac:	202ceb00 	call	2202ceb0 <__fixdfsi>
220235b0:	b009883a 	mov	r4,r22
220235b4:	a80b883a 	mov	r5,r21
220235b8:	000d883a 	mov	r6,zero
220235bc:	000f883a 	mov	r7,zero
220235c0:	d8800515 	stw	r2,20(sp)
220235c4:	202bddc0 	call	2202bddc <__ledf2>
220235c8:	10023116 	blt	r2,zero,22023e90 <_dtoa_r+0xb28>
220235cc:	d8c00517 	ldw	r3,20(sp)
220235d0:	00800584 	movi	r2,22
220235d4:	10c21f36 	bltu	r2,r3,22023e54 <_dtoa_r+0xaec>
220235d8:	180490fa 	slli	r2,r3,3
220235dc:	00c880f4 	movhi	r3,8707
220235e0:	18ff5304 	addi	r3,r3,-692
220235e4:	1885883a 	add	r2,r3,r2
220235e8:	11000017 	ldw	r4,0(r2)
220235ec:	11400117 	ldw	r5,4(r2)
220235f0:	900d883a 	mov	r6,r18
220235f4:	980f883a 	mov	r7,r19
220235f8:	202bcfc0 	call	2202bcfc <__gedf2>
220235fc:	0082a70e 	bge	zero,r2,2202409c <_dtoa_r+0xd34>
22023600:	d9000517 	ldw	r4,20(sp)
22023604:	d8000c15 	stw	zero,48(sp)
22023608:	213fffc4 	addi	r4,r4,-1
2202360c:	d9000515 	stw	r4,20(sp)
22023610:	a463c83a 	sub	r17,r20,r17
22023614:	8dbfffc4 	addi	r22,r17,-1
22023618:	b0021916 	blt	r22,zero,22023e80 <_dtoa_r+0xb18>
2202361c:	d8000815 	stw	zero,32(sp)
22023620:	d8800517 	ldw	r2,20(sp)
22023624:	10020e16 	blt	r2,zero,22023e60 <_dtoa_r+0xaf8>
22023628:	b0ad883a 	add	r22,r22,r2
2202362c:	d8800a15 	stw	r2,40(sp)
22023630:	d8000915 	stw	zero,36(sp)
22023634:	d8c00317 	ldw	r3,12(sp)
22023638:	00800244 	movi	r2,9
2202363c:	10c11a36 	bltu	r2,r3,22023aa8 <_dtoa_r+0x740>
22023640:	00800144 	movi	r2,5
22023644:	10c4fc0e 	bge	r2,r3,22024a38 <_dtoa_r+0x16d0>
22023648:	18ffff04 	addi	r3,r3,-4
2202364c:	d8c00315 	stw	r3,12(sp)
22023650:	0029883a 	mov	r20,zero
22023654:	d9800317 	ldw	r6,12(sp)
22023658:	008000c4 	movi	r2,3
2202365c:	3083bd26 	beq	r6,r2,22024554 <_dtoa_r+0x11ec>
22023660:	1183670e 	bge	r2,r6,22024400 <_dtoa_r+0x1098>
22023664:	d8c00317 	ldw	r3,12(sp)
22023668:	00800104 	movi	r2,4
2202366c:	1882e726 	beq	r3,r2,2202420c <_dtoa_r+0xea4>
22023670:	00800144 	movi	r2,5
22023674:	1884f21e 	bne	r3,r2,22024a40 <_dtoa_r+0x16d8>
22023678:	00800044 	movi	r2,1
2202367c:	d8800b15 	stw	r2,44(sp)
22023680:	d8c02217 	ldw	r3,136(sp)
22023684:	d9000517 	ldw	r4,20(sp)
22023688:	1907883a 	add	r3,r3,r4
2202368c:	19800044 	addi	r6,r3,1
22023690:	d8c00d15 	stw	r3,52(sp)
22023694:	d9800615 	stw	r6,24(sp)
22023698:	0183c30e 	bge	zero,r6,220245a8 <_dtoa_r+0x1240>
2202369c:	d9800617 	ldw	r6,24(sp)
220236a0:	3023883a 	mov	r17,r6
220236a4:	80001115 	stw	zero,68(r16)
220236a8:	008005c4 	movi	r2,23
220236ac:	1184f62e 	bgeu	r2,r6,22024a88 <_dtoa_r+0x1720>
220236b0:	00c00044 	movi	r3,1
220236b4:	00800104 	movi	r2,4
220236b8:	1085883a 	add	r2,r2,r2
220236bc:	11000504 	addi	r4,r2,20
220236c0:	180b883a 	mov	r5,r3
220236c4:	18c00044 	addi	r3,r3,1
220236c8:	313ffb2e 	bgeu	r6,r4,220236b8 <__alt_data_end+0xfffe42b8>
220236cc:	81401115 	stw	r5,68(r16)
220236d0:	8009883a 	mov	r4,r16
220236d4:	20268580 	call	22026858 <_Balloc>
220236d8:	d8800715 	stw	r2,28(sp)
220236dc:	80801015 	stw	r2,64(r16)
220236e0:	00800384 	movi	r2,14
220236e4:	1440fd36 	bltu	r2,r17,22023adc <_dtoa_r+0x774>
220236e8:	a000fc26 	beq	r20,zero,22023adc <_dtoa_r+0x774>
220236ec:	d8800517 	ldw	r2,20(sp)
220236f0:	0083b90e 	bge	zero,r2,220245d8 <_dtoa_r+0x1270>
220236f4:	d8c00517 	ldw	r3,20(sp)
220236f8:	108003cc 	andi	r2,r2,15
220236fc:	100490fa 	slli	r2,r2,3
22023700:	182fd13a 	srai	r23,r3,4
22023704:	00c880f4 	movhi	r3,8707
22023708:	18ff5304 	addi	r3,r3,-692
2202370c:	1885883a 	add	r2,r3,r2
22023710:	b8c0040c 	andi	r3,r23,16
22023714:	12c00017 	ldw	r11,0(r2)
22023718:	12800117 	ldw	r10,4(r2)
2202371c:	18039726 	beq	r3,zero,2202457c <_dtoa_r+0x1214>
22023720:	008880f4 	movhi	r2,8707
22023724:	10bf4904 	addi	r2,r2,-732
22023728:	11800817 	ldw	r6,32(r2)
2202372c:	11c00917 	ldw	r7,36(r2)
22023730:	9009883a 	mov	r4,r18
22023734:	980b883a 	mov	r5,r19
22023738:	da801615 	stw	r10,88(sp)
2202373c:	dac01515 	stw	r11,84(sp)
22023740:	202b3ac0 	call	2202b3ac <__divdf3>
22023744:	da801617 	ldw	r10,88(sp)
22023748:	dac01517 	ldw	r11,84(sp)
2202374c:	bdc003cc 	andi	r23,r23,15
22023750:	044000c4 	movi	r17,3
22023754:	d8800e15 	stw	r2,56(sp)
22023758:	182b883a 	mov	r21,r3
2202375c:	b8001126 	beq	r23,zero,220237a4 <_dtoa_r+0x43c>
22023760:	050880f4 	movhi	r20,8707
22023764:	a53f4904 	addi	r20,r20,-732
22023768:	5805883a 	mov	r2,r11
2202376c:	5007883a 	mov	r3,r10
22023770:	b980004c 	andi	r6,r23,1
22023774:	1009883a 	mov	r4,r2
22023778:	b82fd07a 	srai	r23,r23,1
2202377c:	180b883a 	mov	r5,r3
22023780:	30000426 	beq	r6,zero,22023794 <_dtoa_r+0x42c>
22023784:	a1800017 	ldw	r6,0(r20)
22023788:	a1c00117 	ldw	r7,4(r20)
2202378c:	8c400044 	addi	r17,r17,1
22023790:	202bebc0 	call	2202bebc <__muldf3>
22023794:	a5000204 	addi	r20,r20,8
22023798:	b83ff51e 	bne	r23,zero,22023770 <__alt_data_end+0xfffe4370>
2202379c:	1017883a 	mov	r11,r2
220237a0:	1815883a 	mov	r10,r3
220237a4:	d9000e17 	ldw	r4,56(sp)
220237a8:	a80b883a 	mov	r5,r21
220237ac:	580d883a 	mov	r6,r11
220237b0:	500f883a 	mov	r7,r10
220237b4:	202b3ac0 	call	2202b3ac <__divdf3>
220237b8:	1029883a 	mov	r20,r2
220237bc:	182b883a 	mov	r21,r3
220237c0:	d9800c17 	ldw	r6,48(sp)
220237c4:	30000626 	beq	r6,zero,220237e0 <_dtoa_r+0x478>
220237c8:	a009883a 	mov	r4,r20
220237cc:	a80b883a 	mov	r5,r21
220237d0:	000d883a 	mov	r6,zero
220237d4:	01cffc34 	movhi	r7,16368
220237d8:	202bddc0 	call	2202bddc <__ledf2>
220237dc:	10043216 	blt	r2,zero,220248a8 <_dtoa_r+0x1540>
220237e0:	8809883a 	mov	r4,r17
220237e4:	202cf380 	call	2202cf38 <__floatsidf>
220237e8:	1009883a 	mov	r4,r2
220237ec:	180b883a 	mov	r5,r3
220237f0:	a00d883a 	mov	r6,r20
220237f4:	a80f883a 	mov	r7,r21
220237f8:	202bebc0 	call	2202bebc <__muldf3>
220237fc:	000d883a 	mov	r6,zero
22023800:	1009883a 	mov	r4,r2
22023804:	180b883a 	mov	r5,r3
22023808:	01d00734 	movhi	r7,16412
2202380c:	202ab100 	call	2202ab10 <__adddf3>
22023810:	1023883a 	mov	r17,r2
22023814:	d9800617 	ldw	r6,24(sp)
22023818:	00bf3034 	movhi	r2,64704
2202381c:	1885883a 	add	r2,r3,r2
22023820:	d8800e15 	stw	r2,56(sp)
22023824:	30032e26 	beq	r6,zero,220244e0 <_dtoa_r+0x1178>
22023828:	d8c00517 	ldw	r3,20(sp)
2202382c:	da800617 	ldw	r10,24(sp)
22023830:	d8c01215 	stw	r3,72(sp)
22023834:	d9000b17 	ldw	r4,44(sp)
22023838:	2003b026 	beq	r4,zero,220246fc <_dtoa_r+0x1394>
2202383c:	50bfffc4 	addi	r2,r10,-1
22023840:	100490fa 	slli	r2,r2,3
22023844:	00c880f4 	movhi	r3,8707
22023848:	18ff5304 	addi	r3,r3,-692
2202384c:	1885883a 	add	r2,r3,r2
22023850:	11800017 	ldw	r6,0(r2)
22023854:	11c00117 	ldw	r7,4(r2)
22023858:	d8800717 	ldw	r2,28(sp)
2202385c:	0009883a 	mov	r4,zero
22023860:	014ff834 	movhi	r5,16352
22023864:	da801615 	stw	r10,88(sp)
22023868:	15c00044 	addi	r23,r2,1
2202386c:	202b3ac0 	call	2202b3ac <__divdf3>
22023870:	d9c00e17 	ldw	r7,56(sp)
22023874:	880d883a 	mov	r6,r17
22023878:	1009883a 	mov	r4,r2
2202387c:	180b883a 	mov	r5,r3
22023880:	202c5e00 	call	2202c5e0 <__subdf3>
22023884:	a80b883a 	mov	r5,r21
22023888:	a009883a 	mov	r4,r20
2202388c:	d8c01015 	stw	r3,64(sp)
22023890:	d8800e15 	stw	r2,56(sp)
22023894:	202ceb00 	call	2202ceb0 <__fixdfsi>
22023898:	1009883a 	mov	r4,r2
2202389c:	d8801715 	stw	r2,92(sp)
220238a0:	202cf380 	call	2202cf38 <__floatsidf>
220238a4:	a009883a 	mov	r4,r20
220238a8:	a80b883a 	mov	r5,r21
220238ac:	100d883a 	mov	r6,r2
220238b0:	180f883a 	mov	r7,r3
220238b4:	202c5e00 	call	2202c5e0 <__subdf3>
220238b8:	da001717 	ldw	r8,92(sp)
220238bc:	1829883a 	mov	r20,r3
220238c0:	d8c00717 	ldw	r3,28(sp)
220238c4:	d9000e17 	ldw	r4,56(sp)
220238c8:	d9401017 	ldw	r5,64(sp)
220238cc:	42000c04 	addi	r8,r8,48
220238d0:	1023883a 	mov	r17,r2
220238d4:	1a000005 	stb	r8,0(r3)
220238d8:	880d883a 	mov	r6,r17
220238dc:	a00f883a 	mov	r7,r20
220238e0:	402b883a 	mov	r21,r8
220238e4:	202bcfc0 	call	2202bcfc <__gedf2>
220238e8:	00844516 	blt	zero,r2,22024a00 <_dtoa_r+0x1698>
220238ec:	0009883a 	mov	r4,zero
220238f0:	014ffc34 	movhi	r5,16368
220238f4:	880d883a 	mov	r6,r17
220238f8:	a00f883a 	mov	r7,r20
220238fc:	202c5e00 	call	2202c5e0 <__subdf3>
22023900:	d9000e17 	ldw	r4,56(sp)
22023904:	d9401017 	ldw	r5,64(sp)
22023908:	100d883a 	mov	r6,r2
2202390c:	180f883a 	mov	r7,r3
22023910:	202bcfc0 	call	2202bcfc <__gedf2>
22023914:	da801617 	ldw	r10,88(sp)
22023918:	00843616 	blt	zero,r2,220249f4 <_dtoa_r+0x168c>
2202391c:	00800044 	movi	r2,1
22023920:	12806e0e 	bge	r2,r10,22023adc <_dtoa_r+0x774>
22023924:	d9000717 	ldw	r4,28(sp)
22023928:	dd801315 	stw	r22,76(sp)
2202392c:	dc001115 	stw	r16,68(sp)
22023930:	2295883a 	add	r10,r4,r10
22023934:	dcc01415 	stw	r19,80(sp)
22023938:	502d883a 	mov	r22,r10
2202393c:	dcc01017 	ldw	r19,64(sp)
22023940:	b821883a 	mov	r16,r23
22023944:	dc801015 	stw	r18,64(sp)
22023948:	dc800e17 	ldw	r18,56(sp)
2202394c:	00000906 	br	22023974 <_dtoa_r+0x60c>
22023950:	202c5e00 	call	2202c5e0 <__subdf3>
22023954:	1009883a 	mov	r4,r2
22023958:	180b883a 	mov	r5,r3
2202395c:	900d883a 	mov	r6,r18
22023960:	980f883a 	mov	r7,r19
22023964:	202bddc0 	call	2202bddc <__ledf2>
22023968:	10040e16 	blt	r2,zero,220249a4 <_dtoa_r+0x163c>
2202396c:	b821883a 	mov	r16,r23
22023970:	bd841026 	beq	r23,r22,220249b4 <_dtoa_r+0x164c>
22023974:	9009883a 	mov	r4,r18
22023978:	980b883a 	mov	r5,r19
2202397c:	000d883a 	mov	r6,zero
22023980:	01d00934 	movhi	r7,16420
22023984:	202bebc0 	call	2202bebc <__muldf3>
22023988:	000d883a 	mov	r6,zero
2202398c:	01d00934 	movhi	r7,16420
22023990:	8809883a 	mov	r4,r17
22023994:	a00b883a 	mov	r5,r20
22023998:	1025883a 	mov	r18,r2
2202399c:	1827883a 	mov	r19,r3
220239a0:	202bebc0 	call	2202bebc <__muldf3>
220239a4:	180b883a 	mov	r5,r3
220239a8:	1009883a 	mov	r4,r2
220239ac:	1823883a 	mov	r17,r3
220239b0:	1029883a 	mov	r20,r2
220239b4:	202ceb00 	call	2202ceb0 <__fixdfsi>
220239b8:	1009883a 	mov	r4,r2
220239bc:	102b883a 	mov	r21,r2
220239c0:	202cf380 	call	2202cf38 <__floatsidf>
220239c4:	a009883a 	mov	r4,r20
220239c8:	880b883a 	mov	r5,r17
220239cc:	100d883a 	mov	r6,r2
220239d0:	180f883a 	mov	r7,r3
220239d4:	202c5e00 	call	2202c5e0 <__subdf3>
220239d8:	ad400c04 	addi	r21,r21,48
220239dc:	1009883a 	mov	r4,r2
220239e0:	180b883a 	mov	r5,r3
220239e4:	900d883a 	mov	r6,r18
220239e8:	980f883a 	mov	r7,r19
220239ec:	85400005 	stb	r21,0(r16)
220239f0:	1023883a 	mov	r17,r2
220239f4:	1829883a 	mov	r20,r3
220239f8:	202bddc0 	call	2202bddc <__ledf2>
220239fc:	bdc00044 	addi	r23,r23,1
22023a00:	0009883a 	mov	r4,zero
22023a04:	014ffc34 	movhi	r5,16368
22023a08:	880d883a 	mov	r6,r17
22023a0c:	a00f883a 	mov	r7,r20
22023a10:	103fcf0e 	bge	r2,zero,22023950 <__alt_data_end+0xfffe4550>
22023a14:	d9801217 	ldw	r6,72(sp)
22023a18:	dc001117 	ldw	r16,68(sp)
22023a1c:	d9800515 	stw	r6,20(sp)
22023a20:	8009883a 	mov	r4,r16
22023a24:	e00b883a 	mov	r5,fp
22023a28:	20269000 	call	22026900 <_Bfree>
22023a2c:	d8c00517 	ldw	r3,20(sp)
22023a30:	d9002317 	ldw	r4,140(sp)
22023a34:	d9802517 	ldw	r6,148(sp)
22023a38:	b8000005 	stb	zero,0(r23)
22023a3c:	18800044 	addi	r2,r3,1
22023a40:	20800015 	stw	r2,0(r4)
22023a44:	30027226 	beq	r6,zero,22024410 <_dtoa_r+0x10a8>
22023a48:	35c00015 	stw	r23,0(r6)
22023a4c:	d8800717 	ldw	r2,28(sp)
22023a50:	003e7406 	br	22023424 <__alt_data_end+0xfffe4024>
22023a54:	00800434 	movhi	r2,16
22023a58:	10bfffc4 	addi	r2,r2,-1
22023a5c:	a8aa703a 	and	r21,r21,r2
22023a60:	a83e801e 	bne	r21,zero,22023464 <__alt_data_end+0xfffe4064>
22023a64:	008880f4 	movhi	r2,8707
22023a68:	10bf3404 	addi	r2,r2,-816
22023a6c:	003e7f06 	br	2202346c <__alt_data_end+0xfffe406c>
22023a70:	10c00204 	addi	r3,r2,8
22023a74:	003e8206 	br	22023480 <__alt_data_end+0xfffe4080>
22023a78:	01400434 	movhi	r5,16
22023a7c:	297fffc4 	addi	r5,r5,-1
22023a80:	994a703a 	and	r5,r19,r5
22023a84:	9009883a 	mov	r4,r18
22023a88:	8c7f0044 	addi	r17,r17,-1023
22023a8c:	294ffc34 	orhi	r5,r5,16368
22023a90:	dd000217 	ldw	r20,8(sp)
22023a94:	d8000f15 	stw	zero,60(sp)
22023a98:	003e9f06 	br	22023518 <__alt_data_end+0xfffe4118>
22023a9c:	008880f4 	movhi	r2,8707
22023aa0:	10bf2b04 	addi	r2,r2,-852
22023aa4:	003e5f06 	br	22023424 <__alt_data_end+0xfffe4024>
22023aa8:	80001115 	stw	zero,68(r16)
22023aac:	8009883a 	mov	r4,r16
22023ab0:	000b883a 	mov	r5,zero
22023ab4:	20268580 	call	22026858 <_Balloc>
22023ab8:	01bfffc4 	movi	r6,-1
22023abc:	d8800715 	stw	r2,28(sp)
22023ac0:	80801015 	stw	r2,64(r16)
22023ac4:	00800044 	movi	r2,1
22023ac8:	d9800615 	stw	r6,24(sp)
22023acc:	d8800b15 	stw	r2,44(sp)
22023ad0:	d8002215 	stw	zero,136(sp)
22023ad4:	d9800d15 	stw	r6,52(sp)
22023ad8:	d8000315 	stw	zero,12(sp)
22023adc:	d8800117 	ldw	r2,4(sp)
22023ae0:	10008e16 	blt	r2,zero,22023d1c <_dtoa_r+0x9b4>
22023ae4:	d9000517 	ldw	r4,20(sp)
22023ae8:	00c00384 	movi	r3,14
22023aec:	19008b16 	blt	r3,r4,22023d1c <_dtoa_r+0x9b4>
22023af0:	200490fa 	slli	r2,r4,3
22023af4:	00c880f4 	movhi	r3,8707
22023af8:	d9802217 	ldw	r6,136(sp)
22023afc:	18ff5304 	addi	r3,r3,-692
22023b00:	1885883a 	add	r2,r3,r2
22023b04:	14400017 	ldw	r17,0(r2)
22023b08:	15000117 	ldw	r20,4(r2)
22023b0c:	3001c716 	blt	r6,zero,2202422c <_dtoa_r+0xec4>
22023b10:	880d883a 	mov	r6,r17
22023b14:	a00f883a 	mov	r7,r20
22023b18:	9009883a 	mov	r4,r18
22023b1c:	980b883a 	mov	r5,r19
22023b20:	202b3ac0 	call	2202b3ac <__divdf3>
22023b24:	180b883a 	mov	r5,r3
22023b28:	1009883a 	mov	r4,r2
22023b2c:	202ceb00 	call	2202ceb0 <__fixdfsi>
22023b30:	1009883a 	mov	r4,r2
22023b34:	102d883a 	mov	r22,r2
22023b38:	202cf380 	call	2202cf38 <__floatsidf>
22023b3c:	1009883a 	mov	r4,r2
22023b40:	180b883a 	mov	r5,r3
22023b44:	880d883a 	mov	r6,r17
22023b48:	a00f883a 	mov	r7,r20
22023b4c:	202bebc0 	call	2202bebc <__muldf3>
22023b50:	9009883a 	mov	r4,r18
22023b54:	980b883a 	mov	r5,r19
22023b58:	100d883a 	mov	r6,r2
22023b5c:	180f883a 	mov	r7,r3
22023b60:	202c5e00 	call	2202c5e0 <__subdf3>
22023b64:	d9000717 	ldw	r4,28(sp)
22023b68:	d9800617 	ldw	r6,24(sp)
22023b6c:	180b883a 	mov	r5,r3
22023b70:	b0c00c04 	addi	r3,r22,48
22023b74:	20c00005 	stb	r3,0(r4)
22023b78:	25c00044 	addi	r23,r4,1
22023b7c:	01000044 	movi	r4,1
22023b80:	1011883a 	mov	r8,r2
22023b84:	2807883a 	mov	r3,r5
22023b88:	31003d26 	beq	r6,r4,22023c80 <_dtoa_r+0x918>
22023b8c:	000d883a 	mov	r6,zero
22023b90:	01d00934 	movhi	r7,16420
22023b94:	1009883a 	mov	r4,r2
22023b98:	202bebc0 	call	2202bebc <__muldf3>
22023b9c:	1009883a 	mov	r4,r2
22023ba0:	180b883a 	mov	r5,r3
22023ba4:	000d883a 	mov	r6,zero
22023ba8:	000f883a 	mov	r7,zero
22023bac:	1027883a 	mov	r19,r2
22023bb0:	182b883a 	mov	r21,r3
22023bb4:	202bc780 	call	2202bc78 <__eqdf2>
22023bb8:	103f9926 	beq	r2,zero,22023a20 <__alt_data_end+0xfffe4620>
22023bbc:	d8c00617 	ldw	r3,24(sp)
22023bc0:	d9000717 	ldw	r4,28(sp)
22023bc4:	b825883a 	mov	r18,r23
22023bc8:	18bfffc4 	addi	r2,r3,-1
22023bcc:	20ad883a 	add	r22,r4,r2
22023bd0:	dc000315 	stw	r16,12(sp)
22023bd4:	00000a06 	br	22023c00 <_dtoa_r+0x898>
22023bd8:	202bebc0 	call	2202bebc <__muldf3>
22023bdc:	1009883a 	mov	r4,r2
22023be0:	180b883a 	mov	r5,r3
22023be4:	000d883a 	mov	r6,zero
22023be8:	000f883a 	mov	r7,zero
22023bec:	1027883a 	mov	r19,r2
22023bf0:	182b883a 	mov	r21,r3
22023bf4:	b825883a 	mov	r18,r23
22023bf8:	202bc780 	call	2202bc78 <__eqdf2>
22023bfc:	10022626 	beq	r2,zero,22024498 <_dtoa_r+0x1130>
22023c00:	880d883a 	mov	r6,r17
22023c04:	a00f883a 	mov	r7,r20
22023c08:	9809883a 	mov	r4,r19
22023c0c:	a80b883a 	mov	r5,r21
22023c10:	202b3ac0 	call	2202b3ac <__divdf3>
22023c14:	180b883a 	mov	r5,r3
22023c18:	1009883a 	mov	r4,r2
22023c1c:	202ceb00 	call	2202ceb0 <__fixdfsi>
22023c20:	1009883a 	mov	r4,r2
22023c24:	1021883a 	mov	r16,r2
22023c28:	202cf380 	call	2202cf38 <__floatsidf>
22023c2c:	1009883a 	mov	r4,r2
22023c30:	180b883a 	mov	r5,r3
22023c34:	880d883a 	mov	r6,r17
22023c38:	a00f883a 	mov	r7,r20
22023c3c:	202bebc0 	call	2202bebc <__muldf3>
22023c40:	9809883a 	mov	r4,r19
22023c44:	a80b883a 	mov	r5,r21
22023c48:	100d883a 	mov	r6,r2
22023c4c:	180f883a 	mov	r7,r3
22023c50:	202c5e00 	call	2202c5e0 <__subdf3>
22023c54:	82000c04 	addi	r8,r16,48
22023c58:	92000005 	stb	r8,0(r18)
22023c5c:	1009883a 	mov	r4,r2
22023c60:	180b883a 	mov	r5,r3
22023c64:	000d883a 	mov	r6,zero
22023c68:	01d00934 	movhi	r7,16420
22023c6c:	1011883a 	mov	r8,r2
22023c70:	bdc00044 	addi	r23,r23,1
22023c74:	95bfd81e 	bne	r18,r22,22023bd8 <__alt_data_end+0xfffe47d8>
22023c78:	802d883a 	mov	r22,r16
22023c7c:	dc000317 	ldw	r16,12(sp)
22023c80:	4009883a 	mov	r4,r8
22023c84:	180b883a 	mov	r5,r3
22023c88:	400d883a 	mov	r6,r8
22023c8c:	180f883a 	mov	r7,r3
22023c90:	202ab100 	call	2202ab10 <__adddf3>
22023c94:	8809883a 	mov	r4,r17
22023c98:	a00b883a 	mov	r5,r20
22023c9c:	100d883a 	mov	r6,r2
22023ca0:	180f883a 	mov	r7,r3
22023ca4:	1027883a 	mov	r19,r2
22023ca8:	1825883a 	mov	r18,r3
22023cac:	202bddc0 	call	2202bddc <__ledf2>
22023cb0:	10000816 	blt	r2,zero,22023cd4 <_dtoa_r+0x96c>
22023cb4:	8809883a 	mov	r4,r17
22023cb8:	a00b883a 	mov	r5,r20
22023cbc:	980d883a 	mov	r6,r19
22023cc0:	900f883a 	mov	r7,r18
22023cc4:	202bc780 	call	2202bc78 <__eqdf2>
22023cc8:	103f551e 	bne	r2,zero,22023a20 <__alt_data_end+0xfffe4620>
22023ccc:	b580004c 	andi	r22,r22,1
22023cd0:	b03f5326 	beq	r22,zero,22023a20 <__alt_data_end+0xfffe4620>
22023cd4:	bd7fffc3 	ldbu	r21,-1(r23)
22023cd8:	b8bfffc4 	addi	r2,r23,-1
22023cdc:	1007883a 	mov	r3,r2
22023ce0:	01400e44 	movi	r5,57
22023ce4:	d9800717 	ldw	r6,28(sp)
22023ce8:	00000506 	br	22023d00 <_dtoa_r+0x998>
22023cec:	18ffffc4 	addi	r3,r3,-1
22023cf0:	30825e26 	beq	r6,r2,2202466c <_dtoa_r+0x1304>
22023cf4:	1d400003 	ldbu	r21,0(r3)
22023cf8:	102f883a 	mov	r23,r2
22023cfc:	10bfffc4 	addi	r2,r2,-1
22023d00:	a9003fcc 	andi	r4,r21,255
22023d04:	2100201c 	xori	r4,r4,128
22023d08:	213fe004 	addi	r4,r4,-128
22023d0c:	217ff726 	beq	r4,r5,22023cec <__alt_data_end+0xfffe48ec>
22023d10:	aa000044 	addi	r8,r21,1
22023d14:	12000005 	stb	r8,0(r2)
22023d18:	003f4106 	br	22023a20 <__alt_data_end+0xfffe4620>
22023d1c:	d8c00b17 	ldw	r3,44(sp)
22023d20:	18006726 	beq	r3,zero,22023ec0 <_dtoa_r+0xb58>
22023d24:	d9000317 	ldw	r4,12(sp)
22023d28:	00c00044 	movi	r3,1
22023d2c:	19016a0e 	bge	r3,r4,220242d8 <_dtoa_r+0xf70>
22023d30:	d8800617 	ldw	r2,24(sp)
22023d34:	d8c00917 	ldw	r3,36(sp)
22023d38:	157fffc4 	addi	r21,r2,-1
22023d3c:	1d420716 	blt	r3,r21,2202455c <_dtoa_r+0x11f4>
22023d40:	1d6bc83a 	sub	r21,r3,r21
22023d44:	d8800617 	ldw	r2,24(sp)
22023d48:	1002c716 	blt	r2,zero,22024868 <_dtoa_r+0x1500>
22023d4c:	dd000817 	ldw	r20,32(sp)
22023d50:	d8800617 	ldw	r2,24(sp)
22023d54:	d9800817 	ldw	r6,32(sp)
22023d58:	8009883a 	mov	r4,r16
22023d5c:	01400044 	movi	r5,1
22023d60:	308d883a 	add	r6,r6,r2
22023d64:	d9800815 	stw	r6,32(sp)
22023d68:	b0ad883a 	add	r22,r22,r2
22023d6c:	2026c580 	call	22026c58 <__i2b>
22023d70:	1023883a 	mov	r17,r2
22023d74:	a0000826 	beq	r20,zero,22023d98 <_dtoa_r+0xa30>
22023d78:	0580070e 	bge	zero,r22,22023d98 <_dtoa_r+0xa30>
22023d7c:	b005883a 	mov	r2,r22
22023d80:	a5812016 	blt	r20,r22,22024204 <_dtoa_r+0xe9c>
22023d84:	d8c00817 	ldw	r3,32(sp)
22023d88:	a0a9c83a 	sub	r20,r20,r2
22023d8c:	b0adc83a 	sub	r22,r22,r2
22023d90:	1887c83a 	sub	r3,r3,r2
22023d94:	d8c00815 	stw	r3,32(sp)
22023d98:	d9000917 	ldw	r4,36(sp)
22023d9c:	0100140e 	bge	zero,r4,22023df0 <_dtoa_r+0xa88>
22023da0:	d9800b17 	ldw	r6,44(sp)
22023da4:	3001e526 	beq	r6,zero,2202453c <_dtoa_r+0x11d4>
22023da8:	05400e0e 	bge	zero,r21,22023de4 <_dtoa_r+0xa7c>
22023dac:	880b883a 	mov	r5,r17
22023db0:	8009883a 	mov	r4,r16
22023db4:	a80d883a 	mov	r6,r21
22023db8:	2026e900 	call	22026e90 <__pow5mult>
22023dbc:	e00d883a 	mov	r6,fp
22023dc0:	8009883a 	mov	r4,r16
22023dc4:	100b883a 	mov	r5,r2
22023dc8:	1023883a 	mov	r17,r2
22023dcc:	2026c940 	call	22026c94 <__multiply>
22023dd0:	102f883a 	mov	r23,r2
22023dd4:	e00b883a 	mov	r5,fp
22023dd8:	8009883a 	mov	r4,r16
22023ddc:	20269000 	call	22026900 <_Bfree>
22023de0:	b839883a 	mov	fp,r23
22023de4:	d8800917 	ldw	r2,36(sp)
22023de8:	154dc83a 	sub	r6,r2,r21
22023dec:	3001281e 	bne	r6,zero,22024290 <_dtoa_r+0xf28>
22023df0:	05c00044 	movi	r23,1
22023df4:	8009883a 	mov	r4,r16
22023df8:	b80b883a 	mov	r5,r23
22023dfc:	2026c580 	call	22026c58 <__i2b>
22023e00:	d8c00a17 	ldw	r3,40(sp)
22023e04:	102b883a 	mov	r21,r2
22023e08:	00c0310e 	bge	zero,r3,22023ed0 <_dtoa_r+0xb68>
22023e0c:	8009883a 	mov	r4,r16
22023e10:	100b883a 	mov	r5,r2
22023e14:	180d883a 	mov	r6,r3
22023e18:	2026e900 	call	22026e90 <__pow5mult>
22023e1c:	d9000317 	ldw	r4,12(sp)
22023e20:	102b883a 	mov	r21,r2
22023e24:	b9011f0e 	bge	r23,r4,220242a4 <_dtoa_r+0xf3c>
22023e28:	0027883a 	mov	r19,zero
22023e2c:	a8800417 	ldw	r2,16(r21)
22023e30:	10800104 	addi	r2,r2,4
22023e34:	1085883a 	add	r2,r2,r2
22023e38:	1085883a 	add	r2,r2,r2
22023e3c:	a885883a 	add	r2,r21,r2
22023e40:	11000017 	ldw	r4,0(r2)
22023e44:	2026b400 	call	22026b40 <__hi0bits>
22023e48:	00c00804 	movi	r3,32
22023e4c:	1885c83a 	sub	r2,r3,r2
22023e50:	00002506 	br	22023ee8 <_dtoa_r+0xb80>
22023e54:	01800044 	movi	r6,1
22023e58:	d9800c15 	stw	r6,48(sp)
22023e5c:	003dec06 	br	22023610 <__alt_data_end+0xfffe4210>
22023e60:	d8c00817 	ldw	r3,32(sp)
22023e64:	d9000517 	ldw	r4,20(sp)
22023e68:	d8000a15 	stw	zero,40(sp)
22023e6c:	1907c83a 	sub	r3,r3,r4
22023e70:	010dc83a 	sub	r6,zero,r4
22023e74:	d8c00815 	stw	r3,32(sp)
22023e78:	d9800915 	stw	r6,36(sp)
22023e7c:	003ded06 	br	22023634 <__alt_data_end+0xfffe4234>
22023e80:	05adc83a 	sub	r22,zero,r22
22023e84:	dd800815 	stw	r22,32(sp)
22023e88:	002d883a 	mov	r22,zero
22023e8c:	003de406 	br	22023620 <__alt_data_end+0xfffe4220>
22023e90:	d9000517 	ldw	r4,20(sp)
22023e94:	202cf380 	call	2202cf38 <__floatsidf>
22023e98:	1009883a 	mov	r4,r2
22023e9c:	180b883a 	mov	r5,r3
22023ea0:	b00d883a 	mov	r6,r22
22023ea4:	a80f883a 	mov	r7,r21
22023ea8:	202bc780 	call	2202bc78 <__eqdf2>
22023eac:	103dc726 	beq	r2,zero,220235cc <__alt_data_end+0xfffe41cc>
22023eb0:	d8800517 	ldw	r2,20(sp)
22023eb4:	10bfffc4 	addi	r2,r2,-1
22023eb8:	d8800515 	stw	r2,20(sp)
22023ebc:	003dc306 	br	220235cc <__alt_data_end+0xfffe41cc>
22023ec0:	dd400917 	ldw	r21,36(sp)
22023ec4:	dd000817 	ldw	r20,32(sp)
22023ec8:	0023883a 	mov	r17,zero
22023ecc:	003fa906 	br	22023d74 <__alt_data_end+0xfffe4974>
22023ed0:	d9800317 	ldw	r6,12(sp)
22023ed4:	b981670e 	bge	r23,r6,22024474 <_dtoa_r+0x110c>
22023ed8:	0027883a 	mov	r19,zero
22023edc:	d8c00a17 	ldw	r3,40(sp)
22023ee0:	183fd21e 	bne	r3,zero,22023e2c <__alt_data_end+0xfffe4a2c>
22023ee4:	00800044 	movi	r2,1
22023ee8:	1585883a 	add	r2,r2,r22
22023eec:	108007cc 	andi	r2,r2,31
22023ef0:	10005f26 	beq	r2,zero,22024070 <_dtoa_r+0xd08>
22023ef4:	00c00804 	movi	r3,32
22023ef8:	1887c83a 	sub	r3,r3,r2
22023efc:	01000104 	movi	r4,4
22023f00:	20c2dd0e 	bge	r4,r3,22024a78 <_dtoa_r+0x1710>
22023f04:	d9000817 	ldw	r4,32(sp)
22023f08:	00c00704 	movi	r3,28
22023f0c:	1885c83a 	sub	r2,r3,r2
22023f10:	2089883a 	add	r4,r4,r2
22023f14:	d9000815 	stw	r4,32(sp)
22023f18:	a0a9883a 	add	r20,r20,r2
22023f1c:	b0ad883a 	add	r22,r22,r2
22023f20:	d8800817 	ldw	r2,32(sp)
22023f24:	0080050e 	bge	zero,r2,22023f3c <_dtoa_r+0xbd4>
22023f28:	e00b883a 	mov	r5,fp
22023f2c:	8009883a 	mov	r4,r16
22023f30:	100d883a 	mov	r6,r2
22023f34:	2026fd00 	call	22026fd0 <__lshift>
22023f38:	1039883a 	mov	fp,r2
22023f3c:	0580050e 	bge	zero,r22,22023f54 <_dtoa_r+0xbec>
22023f40:	a80b883a 	mov	r5,r21
22023f44:	8009883a 	mov	r4,r16
22023f48:	b00d883a 	mov	r6,r22
22023f4c:	2026fd00 	call	22026fd0 <__lshift>
22023f50:	102b883a 	mov	r21,r2
22023f54:	d8c00c17 	ldw	r3,48(sp)
22023f58:	1801161e 	bne	r3,zero,220243b4 <_dtoa_r+0x104c>
22023f5c:	d8c00617 	ldw	r3,24(sp)
22023f60:	00c12d0e 	bge	zero,r3,22024418 <_dtoa_r+0x10b0>
22023f64:	d8c00b17 	ldw	r3,44(sp)
22023f68:	1800571e 	bne	r3,zero,220240c8 <_dtoa_r+0xd60>
22023f6c:	dc800717 	ldw	r18,28(sp)
22023f70:	dcc00617 	ldw	r19,24(sp)
22023f74:	9029883a 	mov	r20,r18
22023f78:	00000206 	br	22023f84 <_dtoa_r+0xc1c>
22023f7c:	20269280 	call	22026928 <__multadd>
22023f80:	1039883a 	mov	fp,r2
22023f84:	e009883a 	mov	r4,fp
22023f88:	a80b883a 	mov	r5,r21
22023f8c:	20231680 	call	22023168 <quorem>
22023f90:	10800c04 	addi	r2,r2,48
22023f94:	90800005 	stb	r2,0(r18)
22023f98:	94800044 	addi	r18,r18,1
22023f9c:	9507c83a 	sub	r3,r18,r20
22023fa0:	8009883a 	mov	r4,r16
22023fa4:	e00b883a 	mov	r5,fp
22023fa8:	01800284 	movi	r6,10
22023fac:	000f883a 	mov	r7,zero
22023fb0:	1cfff216 	blt	r3,r19,22023f7c <__alt_data_end+0xfffe4b7c>
22023fb4:	1011883a 	mov	r8,r2
22023fb8:	d8800617 	ldw	r2,24(sp)
22023fbc:	00822e0e 	bge	zero,r2,22024878 <_dtoa_r+0x1510>
22023fc0:	d9000717 	ldw	r4,28(sp)
22023fc4:	0025883a 	mov	r18,zero
22023fc8:	20af883a 	add	r23,r4,r2
22023fcc:	e00b883a 	mov	r5,fp
22023fd0:	01800044 	movi	r6,1
22023fd4:	8009883a 	mov	r4,r16
22023fd8:	da001715 	stw	r8,92(sp)
22023fdc:	2026fd00 	call	22026fd0 <__lshift>
22023fe0:	1009883a 	mov	r4,r2
22023fe4:	a80b883a 	mov	r5,r21
22023fe8:	1039883a 	mov	fp,r2
22023fec:	20271180 	call	22027118 <__mcmp>
22023ff0:	da001717 	ldw	r8,92(sp)
22023ff4:	00816e0e 	bge	zero,r2,220245b0 <_dtoa_r+0x1248>
22023ff8:	b93fffc3 	ldbu	r4,-1(r23)
22023ffc:	b8bfffc4 	addi	r2,r23,-1
22024000:	1007883a 	mov	r3,r2
22024004:	01800e44 	movi	r6,57
22024008:	d9c00717 	ldw	r7,28(sp)
2202400c:	00000506 	br	22024024 <_dtoa_r+0xcbc>
22024010:	18ffffc4 	addi	r3,r3,-1
22024014:	38811926 	beq	r7,r2,2202447c <_dtoa_r+0x1114>
22024018:	19000003 	ldbu	r4,0(r3)
2202401c:	102f883a 	mov	r23,r2
22024020:	10bfffc4 	addi	r2,r2,-1
22024024:	21403fcc 	andi	r5,r4,255
22024028:	2940201c 	xori	r5,r5,128
2202402c:	297fe004 	addi	r5,r5,-128
22024030:	29bff726 	beq	r5,r6,22024010 <__alt_data_end+0xfffe4c10>
22024034:	21000044 	addi	r4,r4,1
22024038:	11000005 	stb	r4,0(r2)
2202403c:	8009883a 	mov	r4,r16
22024040:	a80b883a 	mov	r5,r21
22024044:	20269000 	call	22026900 <_Bfree>
22024048:	883e7526 	beq	r17,zero,22023a20 <__alt_data_end+0xfffe4620>
2202404c:	90000426 	beq	r18,zero,22024060 <_dtoa_r+0xcf8>
22024050:	94400326 	beq	r18,r17,22024060 <_dtoa_r+0xcf8>
22024054:	8009883a 	mov	r4,r16
22024058:	900b883a 	mov	r5,r18
2202405c:	20269000 	call	22026900 <_Bfree>
22024060:	8009883a 	mov	r4,r16
22024064:	880b883a 	mov	r5,r17
22024068:	20269000 	call	22026900 <_Bfree>
2202406c:	003e6c06 	br	22023a20 <__alt_data_end+0xfffe4620>
22024070:	00800704 	movi	r2,28
22024074:	d9800817 	ldw	r6,32(sp)
22024078:	a0a9883a 	add	r20,r20,r2
2202407c:	b0ad883a 	add	r22,r22,r2
22024080:	308d883a 	add	r6,r6,r2
22024084:	d9800815 	stw	r6,32(sp)
22024088:	003fa506 	br	22023f20 <__alt_data_end+0xfffe4b20>
2202408c:	013efb84 	movi	r4,-1042
22024090:	246bc83a 	sub	r21,r4,r17
22024094:	9548983a 	sll	r4,r18,r21
22024098:	003d1806 	br	220234fc <__alt_data_end+0xfffe40fc>
2202409c:	d8000c15 	stw	zero,48(sp)
220240a0:	003d5b06 	br	22023610 <__alt_data_end+0xfffe4210>
220240a4:	880b883a 	mov	r5,r17
220240a8:	8009883a 	mov	r4,r16
220240ac:	01800284 	movi	r6,10
220240b0:	000f883a 	mov	r7,zero
220240b4:	20269280 	call	22026928 <__multadd>
220240b8:	1023883a 	mov	r17,r2
220240bc:	d8800d17 	ldw	r2,52(sp)
220240c0:	0082550e 	bge	zero,r2,22024a18 <_dtoa_r+0x16b0>
220240c4:	d8800615 	stw	r2,24(sp)
220240c8:	0500050e 	bge	zero,r20,220240e0 <_dtoa_r+0xd78>
220240cc:	880b883a 	mov	r5,r17
220240d0:	8009883a 	mov	r4,r16
220240d4:	a00d883a 	mov	r6,r20
220240d8:	2026fd00 	call	22026fd0 <__lshift>
220240dc:	1023883a 	mov	r17,r2
220240e0:	98016a1e 	bne	r19,zero,2202468c <_dtoa_r+0x1324>
220240e4:	8829883a 	mov	r20,r17
220240e8:	d9000617 	ldw	r4,24(sp)
220240ec:	dcc00717 	ldw	r19,28(sp)
220240f0:	9480004c 	andi	r18,r18,1
220240f4:	20bfffc4 	addi	r2,r4,-1
220240f8:	9885883a 	add	r2,r19,r2
220240fc:	d8800415 	stw	r2,16(sp)
22024100:	dc800615 	stw	r18,24(sp)
22024104:	e009883a 	mov	r4,fp
22024108:	a80b883a 	mov	r5,r21
2202410c:	20231680 	call	22023168 <quorem>
22024110:	e009883a 	mov	r4,fp
22024114:	880b883a 	mov	r5,r17
22024118:	102f883a 	mov	r23,r2
2202411c:	20271180 	call	22027118 <__mcmp>
22024120:	8009883a 	mov	r4,r16
22024124:	a80b883a 	mov	r5,r21
22024128:	a00d883a 	mov	r6,r20
2202412c:	102d883a 	mov	r22,r2
22024130:	20271780 	call	22027178 <__mdiff>
22024134:	1007883a 	mov	r3,r2
22024138:	10800317 	ldw	r2,12(r2)
2202413c:	bc800c04 	addi	r18,r23,48
22024140:	1000971e 	bne	r2,zero,220243a0 <_dtoa_r+0x1038>
22024144:	180b883a 	mov	r5,r3
22024148:	e009883a 	mov	r4,fp
2202414c:	d8c01515 	stw	r3,84(sp)
22024150:	20271180 	call	22027118 <__mcmp>
22024154:	d8c01517 	ldw	r3,84(sp)
22024158:	8009883a 	mov	r4,r16
2202415c:	d8801515 	stw	r2,84(sp)
22024160:	180b883a 	mov	r5,r3
22024164:	20269000 	call	22026900 <_Bfree>
22024168:	d8801517 	ldw	r2,84(sp)
2202416c:	1000041e 	bne	r2,zero,22024180 <_dtoa_r+0xe18>
22024170:	d9800317 	ldw	r6,12(sp)
22024174:	3000021e 	bne	r6,zero,22024180 <_dtoa_r+0xe18>
22024178:	d8c00617 	ldw	r3,24(sp)
2202417c:	18007626 	beq	r3,zero,22024358 <_dtoa_r+0xff0>
22024180:	b0005b16 	blt	r22,zero,220242f0 <_dtoa_r+0xf88>
22024184:	b000041e 	bne	r22,zero,22024198 <_dtoa_r+0xe30>
22024188:	d9000317 	ldw	r4,12(sp)
2202418c:	2000021e 	bne	r4,zero,22024198 <_dtoa_r+0xe30>
22024190:	d8c00617 	ldw	r3,24(sp)
22024194:	18005626 	beq	r3,zero,220242f0 <_dtoa_r+0xf88>
22024198:	00814d16 	blt	zero,r2,220246d0 <_dtoa_r+0x1368>
2202419c:	d8c00417 	ldw	r3,16(sp)
220241a0:	9d800044 	addi	r22,r19,1
220241a4:	9c800005 	stb	r18,0(r19)
220241a8:	b02f883a 	mov	r23,r22
220241ac:	98c14c26 	beq	r19,r3,220246e0 <_dtoa_r+0x1378>
220241b0:	e00b883a 	mov	r5,fp
220241b4:	8009883a 	mov	r4,r16
220241b8:	01800284 	movi	r6,10
220241bc:	000f883a 	mov	r7,zero
220241c0:	20269280 	call	22026928 <__multadd>
220241c4:	1039883a 	mov	fp,r2
220241c8:	8d006d26 	beq	r17,r20,22024380 <_dtoa_r+0x1018>
220241cc:	880b883a 	mov	r5,r17
220241d0:	01800284 	movi	r6,10
220241d4:	000f883a 	mov	r7,zero
220241d8:	8009883a 	mov	r4,r16
220241dc:	20269280 	call	22026928 <__multadd>
220241e0:	a00b883a 	mov	r5,r20
220241e4:	8009883a 	mov	r4,r16
220241e8:	01800284 	movi	r6,10
220241ec:	000f883a 	mov	r7,zero
220241f0:	1023883a 	mov	r17,r2
220241f4:	20269280 	call	22026928 <__multadd>
220241f8:	1029883a 	mov	r20,r2
220241fc:	b027883a 	mov	r19,r22
22024200:	003fc006 	br	22024104 <__alt_data_end+0xfffe4d04>
22024204:	a005883a 	mov	r2,r20
22024208:	003ede06 	br	22023d84 <__alt_data_end+0xfffe4984>
2202420c:	01000044 	movi	r4,1
22024210:	d9000b15 	stw	r4,44(sp)
22024214:	d9802217 	ldw	r6,136(sp)
22024218:	0180dc0e 	bge	zero,r6,2202458c <_dtoa_r+0x1224>
2202421c:	3023883a 	mov	r17,r6
22024220:	d9800d15 	stw	r6,52(sp)
22024224:	d9800615 	stw	r6,24(sp)
22024228:	003d1e06 	br	220236a4 <__alt_data_end+0xfffe42a4>
2202422c:	d8800617 	ldw	r2,24(sp)
22024230:	00be3716 	blt	zero,r2,22023b10 <__alt_data_end+0xfffe4710>
22024234:	1000be1e 	bne	r2,zero,22024530 <_dtoa_r+0x11c8>
22024238:	8809883a 	mov	r4,r17
2202423c:	a00b883a 	mov	r5,r20
22024240:	000d883a 	mov	r6,zero
22024244:	01d00534 	movhi	r7,16404
22024248:	202bebc0 	call	2202bebc <__muldf3>
2202424c:	1009883a 	mov	r4,r2
22024250:	180b883a 	mov	r5,r3
22024254:	900d883a 	mov	r6,r18
22024258:	980f883a 	mov	r7,r19
2202425c:	202bcfc0 	call	2202bcfc <__gedf2>
22024260:	002b883a 	mov	r21,zero
22024264:	0023883a 	mov	r17,zero
22024268:	10007a16 	blt	r2,zero,22024454 <_dtoa_r+0x10ec>
2202426c:	d9002217 	ldw	r4,136(sp)
22024270:	ddc00717 	ldw	r23,28(sp)
22024274:	0108303a 	nor	r4,zero,r4
22024278:	d9000515 	stw	r4,20(sp)
2202427c:	8009883a 	mov	r4,r16
22024280:	a80b883a 	mov	r5,r21
22024284:	20269000 	call	22026900 <_Bfree>
22024288:	883f751e 	bne	r17,zero,22024060 <__alt_data_end+0xfffe4c60>
2202428c:	003de406 	br	22023a20 <__alt_data_end+0xfffe4620>
22024290:	e00b883a 	mov	r5,fp
22024294:	8009883a 	mov	r4,r16
22024298:	2026e900 	call	22026e90 <__pow5mult>
2202429c:	1039883a 	mov	fp,r2
220242a0:	003ed306 	br	22023df0 <__alt_data_end+0xfffe49f0>
220242a4:	903ee01e 	bne	r18,zero,22023e28 <__alt_data_end+0xfffe4a28>
220242a8:	00800434 	movhi	r2,16
220242ac:	10bfffc4 	addi	r2,r2,-1
220242b0:	9884703a 	and	r2,r19,r2
220242b4:	103f081e 	bne	r2,zero,22023ed8 <__alt_data_end+0xfffe4ad8>
220242b8:	9cdffc2c 	andhi	r19,r19,32752
220242bc:	983f0626 	beq	r19,zero,22023ed8 <__alt_data_end+0xfffe4ad8>
220242c0:	d8800817 	ldw	r2,32(sp)
220242c4:	b5800044 	addi	r22,r22,1
220242c8:	04c00044 	movi	r19,1
220242cc:	10800044 	addi	r2,r2,1
220242d0:	d8800815 	stw	r2,32(sp)
220242d4:	003f0106 	br	22023edc <__alt_data_end+0xfffe4adc>
220242d8:	d9800f17 	ldw	r6,60(sp)
220242dc:	30016826 	beq	r6,zero,22024880 <_dtoa_r+0x1518>
220242e0:	10810cc4 	addi	r2,r2,1075
220242e4:	dd400917 	ldw	r21,36(sp)
220242e8:	dd000817 	ldw	r20,32(sp)
220242ec:	003e9906 	br	22023d54 <__alt_data_end+0xfffe4954>
220242f0:	9011883a 	mov	r8,r18
220242f4:	4007883a 	mov	r3,r8
220242f8:	e02d883a 	mov	r22,fp
220242fc:	0080100e 	bge	zero,r2,22024340 <_dtoa_r+0xfd8>
22024300:	01800044 	movi	r6,1
22024304:	8009883a 	mov	r4,r16
22024308:	e00b883a 	mov	r5,fp
2202430c:	da001515 	stw	r8,84(sp)
22024310:	da001715 	stw	r8,92(sp)
22024314:	2026fd00 	call	22026fd0 <__lshift>
22024318:	1009883a 	mov	r4,r2
2202431c:	a80b883a 	mov	r5,r21
22024320:	102d883a 	mov	r22,r2
22024324:	20271180 	call	22027118 <__mcmp>
22024328:	d8c01517 	ldw	r3,84(sp)
2202432c:	da001717 	ldw	r8,92(sp)
22024330:	0081a50e 	bge	zero,r2,220249c8 <_dtoa_r+0x1660>
22024334:	00800e44 	movi	r2,57
22024338:	40817b26 	beq	r8,r2,22024928 <_dtoa_r+0x15c0>
2202433c:	40c00044 	addi	r3,r8,1
22024340:	8825883a 	mov	r18,r17
22024344:	9dc00044 	addi	r23,r19,1
22024348:	98c00005 	stb	r3,0(r19)
2202434c:	a023883a 	mov	r17,r20
22024350:	b039883a 	mov	fp,r22
22024354:	003f3906 	br	2202403c <__alt_data_end+0xfffe4c3c>
22024358:	00800e44 	movi	r2,57
2202435c:	9011883a 	mov	r8,r18
22024360:	90817226 	beq	r18,r2,2202492c <_dtoa_r+0x15c4>
22024364:	0580010e 	bge	zero,r22,2202436c <_dtoa_r+0x1004>
22024368:	ba000c44 	addi	r8,r23,49
2202436c:	8825883a 	mov	r18,r17
22024370:	9dc00044 	addi	r23,r19,1
22024374:	9a000005 	stb	r8,0(r19)
22024378:	a023883a 	mov	r17,r20
2202437c:	003f2f06 	br	2202403c <__alt_data_end+0xfffe4c3c>
22024380:	880b883a 	mov	r5,r17
22024384:	8009883a 	mov	r4,r16
22024388:	01800284 	movi	r6,10
2202438c:	000f883a 	mov	r7,zero
22024390:	20269280 	call	22026928 <__multadd>
22024394:	1023883a 	mov	r17,r2
22024398:	1029883a 	mov	r20,r2
2202439c:	003f9706 	br	220241fc <__alt_data_end+0xfffe4dfc>
220243a0:	8009883a 	mov	r4,r16
220243a4:	180b883a 	mov	r5,r3
220243a8:	20269000 	call	22026900 <_Bfree>
220243ac:	00800044 	movi	r2,1
220243b0:	003f7306 	br	22024180 <__alt_data_end+0xfffe4d80>
220243b4:	e009883a 	mov	r4,fp
220243b8:	a80b883a 	mov	r5,r21
220243bc:	20271180 	call	22027118 <__mcmp>
220243c0:	103ee60e 	bge	r2,zero,22023f5c <__alt_data_end+0xfffe4b5c>
220243c4:	8009883a 	mov	r4,r16
220243c8:	e00b883a 	mov	r5,fp
220243cc:	01800284 	movi	r6,10
220243d0:	000f883a 	mov	r7,zero
220243d4:	20269280 	call	22026928 <__multadd>
220243d8:	d9000517 	ldw	r4,20(sp)
220243dc:	d9800b17 	ldw	r6,44(sp)
220243e0:	1039883a 	mov	fp,r2
220243e4:	213fffc4 	addi	r4,r4,-1
220243e8:	d9000515 	stw	r4,20(sp)
220243ec:	303f2d1e 	bne	r6,zero,220240a4 <__alt_data_end+0xfffe4ca4>
220243f0:	d9000d17 	ldw	r4,52(sp)
220243f4:	0101780e 	bge	zero,r4,220249d8 <_dtoa_r+0x1670>
220243f8:	d9000615 	stw	r4,24(sp)
220243fc:	003edb06 	br	22023f6c <__alt_data_end+0xfffe4b6c>
22024400:	00800084 	movi	r2,2
22024404:	30818e1e 	bne	r6,r2,22024a40 <_dtoa_r+0x16d8>
22024408:	d8000b15 	stw	zero,44(sp)
2202440c:	003f8106 	br	22024214 <__alt_data_end+0xfffe4e14>
22024410:	d8800717 	ldw	r2,28(sp)
22024414:	003c0306 	br	22023424 <__alt_data_end+0xfffe4024>
22024418:	d9000317 	ldw	r4,12(sp)
2202441c:	00800084 	movi	r2,2
22024420:	113ed00e 	bge	r2,r4,22023f64 <__alt_data_end+0xfffe4b64>
22024424:	d8c00617 	ldw	r3,24(sp)
22024428:	183f901e 	bne	r3,zero,2202426c <__alt_data_end+0xfffe4e6c>
2202442c:	a80b883a 	mov	r5,r21
22024430:	8009883a 	mov	r4,r16
22024434:	01800144 	movi	r6,5
22024438:	000f883a 	mov	r7,zero
2202443c:	20269280 	call	22026928 <__multadd>
22024440:	e009883a 	mov	r4,fp
22024444:	100b883a 	mov	r5,r2
22024448:	102b883a 	mov	r21,r2
2202444c:	20271180 	call	22027118 <__mcmp>
22024450:	00bf860e 	bge	zero,r2,2202426c <__alt_data_end+0xfffe4e6c>
22024454:	d9800717 	ldw	r6,28(sp)
22024458:	00800c44 	movi	r2,49
2202445c:	30800005 	stb	r2,0(r6)
22024460:	d8800517 	ldw	r2,20(sp)
22024464:	35c00044 	addi	r23,r6,1
22024468:	10800044 	addi	r2,r2,1
2202446c:	d8800515 	stw	r2,20(sp)
22024470:	003f8206 	br	2202427c <__alt_data_end+0xfffe4e7c>
22024474:	903e981e 	bne	r18,zero,22023ed8 <__alt_data_end+0xfffe4ad8>
22024478:	003f8b06 	br	220242a8 <__alt_data_end+0xfffe4ea8>
2202447c:	d9800517 	ldw	r6,20(sp)
22024480:	d8c00717 	ldw	r3,28(sp)
22024484:	00800c44 	movi	r2,49
22024488:	31800044 	addi	r6,r6,1
2202448c:	d9800515 	stw	r6,20(sp)
22024490:	18800005 	stb	r2,0(r3)
22024494:	003ee906 	br	2202403c <__alt_data_end+0xfffe4c3c>
22024498:	dc000317 	ldw	r16,12(sp)
2202449c:	003d6006 	br	22023a20 <__alt_data_end+0xfffe4620>
220244a0:	8809883a 	mov	r4,r17
220244a4:	202cf380 	call	2202cf38 <__floatsidf>
220244a8:	a009883a 	mov	r4,r20
220244ac:	a80b883a 	mov	r5,r21
220244b0:	100d883a 	mov	r6,r2
220244b4:	180f883a 	mov	r7,r3
220244b8:	202bebc0 	call	2202bebc <__muldf3>
220244bc:	1009883a 	mov	r4,r2
220244c0:	180b883a 	mov	r5,r3
220244c4:	000d883a 	mov	r6,zero
220244c8:	01d00734 	movhi	r7,16412
220244cc:	202ab100 	call	2202ab10 <__adddf3>
220244d0:	1023883a 	mov	r17,r2
220244d4:	00bf3034 	movhi	r2,64704
220244d8:	1885883a 	add	r2,r3,r2
220244dc:	d8800e15 	stw	r2,56(sp)
220244e0:	a009883a 	mov	r4,r20
220244e4:	a80b883a 	mov	r5,r21
220244e8:	000d883a 	mov	r6,zero
220244ec:	01d00534 	movhi	r7,16404
220244f0:	202c5e00 	call	2202c5e0 <__subdf3>
220244f4:	d9c00e17 	ldw	r7,56(sp)
220244f8:	1009883a 	mov	r4,r2
220244fc:	180b883a 	mov	r5,r3
22024500:	880d883a 	mov	r6,r17
22024504:	102b883a 	mov	r21,r2
22024508:	1829883a 	mov	r20,r3
2202450c:	202bcfc0 	call	2202bcfc <__gedf2>
22024510:	00807716 	blt	zero,r2,220246f0 <_dtoa_r+0x1388>
22024514:	d8800e17 	ldw	r2,56(sp)
22024518:	a809883a 	mov	r4,r21
2202451c:	a00b883a 	mov	r5,r20
22024520:	11e0003c 	xorhi	r7,r2,32768
22024524:	880d883a 	mov	r6,r17
22024528:	202bddc0 	call	2202bddc <__ledf2>
2202452c:	103d6b0e 	bge	r2,zero,22023adc <__alt_data_end+0xfffe46dc>
22024530:	002b883a 	mov	r21,zero
22024534:	0023883a 	mov	r17,zero
22024538:	003f4c06 	br	2202426c <__alt_data_end+0xfffe4e6c>
2202453c:	d9800917 	ldw	r6,36(sp)
22024540:	e00b883a 	mov	r5,fp
22024544:	8009883a 	mov	r4,r16
22024548:	2026e900 	call	22026e90 <__pow5mult>
2202454c:	1039883a 	mov	fp,r2
22024550:	003e2706 	br	22023df0 <__alt_data_end+0xfffe49f0>
22024554:	d8000b15 	stw	zero,44(sp)
22024558:	003c4906 	br	22023680 <__alt_data_end+0xfffe4280>
2202455c:	d9000917 	ldw	r4,36(sp)
22024560:	d9800a17 	ldw	r6,40(sp)
22024564:	dd400915 	stw	r21,36(sp)
22024568:	a905c83a 	sub	r2,r21,r4
2202456c:	308d883a 	add	r6,r6,r2
22024570:	d9800a15 	stw	r6,40(sp)
22024574:	002b883a 	mov	r21,zero
22024578:	003df206 	br	22023d44 <__alt_data_end+0xfffe4944>
2202457c:	dc800e15 	stw	r18,56(sp)
22024580:	982b883a 	mov	r21,r19
22024584:	04400084 	movi	r17,2
22024588:	003c7406 	br	2202375c <__alt_data_end+0xfffe435c>
2202458c:	04400044 	movi	r17,1
22024590:	dc400d15 	stw	r17,52(sp)
22024594:	dc400615 	stw	r17,24(sp)
22024598:	dc402215 	stw	r17,136(sp)
2202459c:	80001115 	stw	zero,68(r16)
220245a0:	000b883a 	mov	r5,zero
220245a4:	003c4a06 	br	220236d0 <__alt_data_end+0xfffe42d0>
220245a8:	3023883a 	mov	r17,r6
220245ac:	003ffb06 	br	2202459c <__alt_data_end+0xfffe519c>
220245b0:	1000021e 	bne	r2,zero,220245bc <_dtoa_r+0x1254>
220245b4:	4200004c 	andi	r8,r8,1
220245b8:	403e8f1e 	bne	r8,zero,22023ff8 <__alt_data_end+0xfffe4bf8>
220245bc:	01000c04 	movi	r4,48
220245c0:	00000106 	br	220245c8 <_dtoa_r+0x1260>
220245c4:	102f883a 	mov	r23,r2
220245c8:	b8bfffc4 	addi	r2,r23,-1
220245cc:	10c00007 	ldb	r3,0(r2)
220245d0:	193ffc26 	beq	r3,r4,220245c4 <__alt_data_end+0xfffe51c4>
220245d4:	003e9906 	br	2202403c <__alt_data_end+0xfffe4c3c>
220245d8:	d9000517 	ldw	r4,20(sp)
220245dc:	012fc83a 	sub	r23,zero,r4
220245e0:	b800ad26 	beq	r23,zero,22024898 <_dtoa_r+0x1530>
220245e4:	b88003cc 	andi	r2,r23,15
220245e8:	100490fa 	slli	r2,r2,3
220245ec:	00c880f4 	movhi	r3,8707
220245f0:	18ff5304 	addi	r3,r3,-692
220245f4:	1885883a 	add	r2,r3,r2
220245f8:	11800017 	ldw	r6,0(r2)
220245fc:	11c00117 	ldw	r7,4(r2)
22024600:	b82fd13a 	srai	r23,r23,4
22024604:	9009883a 	mov	r4,r18
22024608:	980b883a 	mov	r5,r19
2202460c:	202bebc0 	call	2202bebc <__muldf3>
22024610:	1029883a 	mov	r20,r2
22024614:	182b883a 	mov	r21,r3
22024618:	b800f426 	beq	r23,zero,220249ec <_dtoa_r+0x1684>
2202461c:	020880f4 	movhi	r8,8707
22024620:	423f4904 	addi	r8,r8,-732
22024624:	8029883a 	mov	r20,r16
22024628:	04400084 	movi	r17,2
2202462c:	4021883a 	mov	r16,r8
22024630:	b980004c 	andi	r6,r23,1
22024634:	1009883a 	mov	r4,r2
22024638:	b82fd07a 	srai	r23,r23,1
2202463c:	180b883a 	mov	r5,r3
22024640:	30000426 	beq	r6,zero,22024654 <_dtoa_r+0x12ec>
22024644:	81800017 	ldw	r6,0(r16)
22024648:	81c00117 	ldw	r7,4(r16)
2202464c:	8c400044 	addi	r17,r17,1
22024650:	202bebc0 	call	2202bebc <__muldf3>
22024654:	84000204 	addi	r16,r16,8
22024658:	b83ff51e 	bne	r23,zero,22024630 <__alt_data_end+0xfffe5230>
2202465c:	a021883a 	mov	r16,r20
22024660:	182b883a 	mov	r21,r3
22024664:	1029883a 	mov	r20,r2
22024668:	003c5506 	br	220237c0 <__alt_data_end+0xfffe43c0>
2202466c:	d9800517 	ldw	r6,20(sp)
22024670:	d9000717 	ldw	r4,28(sp)
22024674:	00c00c04 	movi	r3,48
22024678:	31800044 	addi	r6,r6,1
2202467c:	d9800515 	stw	r6,20(sp)
22024680:	20c00005 	stb	r3,0(r4)
22024684:	02000c44 	movi	r8,49
22024688:	003da206 	br	22023d14 <__alt_data_end+0xfffe4914>
2202468c:	89400117 	ldw	r5,4(r17)
22024690:	8009883a 	mov	r4,r16
22024694:	20268580 	call	22026858 <_Balloc>
22024698:	89800417 	ldw	r6,16(r17)
2202469c:	11000304 	addi	r4,r2,12
220246a0:	89400304 	addi	r5,r17,12
220246a4:	31800084 	addi	r6,r6,2
220246a8:	318d883a 	add	r6,r6,r6
220246ac:	318d883a 	add	r6,r6,r6
220246b0:	1027883a 	mov	r19,r2
220246b4:	2020c780 	call	22020c78 <memcpy>
220246b8:	8009883a 	mov	r4,r16
220246bc:	980b883a 	mov	r5,r19
220246c0:	01800044 	movi	r6,1
220246c4:	2026fd00 	call	22026fd0 <__lshift>
220246c8:	1029883a 	mov	r20,r2
220246cc:	003e8606 	br	220240e8 <__alt_data_end+0xfffe4ce8>
220246d0:	00800e44 	movi	r2,57
220246d4:	90809526 	beq	r18,r2,2202492c <_dtoa_r+0x15c4>
220246d8:	92000044 	addi	r8,r18,1
220246dc:	003f2306 	br	2202436c <__alt_data_end+0xfffe4f6c>
220246e0:	9011883a 	mov	r8,r18
220246e4:	8825883a 	mov	r18,r17
220246e8:	a023883a 	mov	r17,r20
220246ec:	003e3706 	br	22023fcc <__alt_data_end+0xfffe4bcc>
220246f0:	002b883a 	mov	r21,zero
220246f4:	0023883a 	mov	r17,zero
220246f8:	003f5606 	br	22024454 <__alt_data_end+0xfffe5054>
220246fc:	51bfffc4 	addi	r6,r10,-1
22024700:	300490fa 	slli	r2,r6,3
22024704:	00c880f4 	movhi	r3,8707
22024708:	18ff5304 	addi	r3,r3,-692
2202470c:	1885883a 	add	r2,r3,r2
22024710:	d9c00e17 	ldw	r7,56(sp)
22024714:	11000017 	ldw	r4,0(r2)
22024718:	11400117 	ldw	r5,4(r2)
2202471c:	d8800717 	ldw	r2,28(sp)
22024720:	d9801015 	stw	r6,64(sp)
22024724:	880d883a 	mov	r6,r17
22024728:	da801615 	stw	r10,88(sp)
2202472c:	15c00044 	addi	r23,r2,1
22024730:	202bebc0 	call	2202bebc <__muldf3>
22024734:	a80b883a 	mov	r5,r21
22024738:	a009883a 	mov	r4,r20
2202473c:	d8c01115 	stw	r3,68(sp)
22024740:	d8800e15 	stw	r2,56(sp)
22024744:	202ceb00 	call	2202ceb0 <__fixdfsi>
22024748:	1009883a 	mov	r4,r2
2202474c:	1023883a 	mov	r17,r2
22024750:	202cf380 	call	2202cf38 <__floatsidf>
22024754:	a009883a 	mov	r4,r20
22024758:	a80b883a 	mov	r5,r21
2202475c:	100d883a 	mov	r6,r2
22024760:	180f883a 	mov	r7,r3
22024764:	202c5e00 	call	2202c5e0 <__subdf3>
22024768:	1813883a 	mov	r9,r3
2202476c:	d8c00717 	ldw	r3,28(sp)
22024770:	8c400c04 	addi	r17,r17,48
22024774:	1011883a 	mov	r8,r2
22024778:	1c400005 	stb	r17,0(r3)
2202477c:	da801617 	ldw	r10,88(sp)
22024780:	00800044 	movi	r2,1
22024784:	50802326 	beq	r10,r2,22024814 <_dtoa_r+0x14ac>
22024788:	d8800717 	ldw	r2,28(sp)
2202478c:	b82b883a 	mov	r21,r23
22024790:	dc001315 	stw	r16,76(sp)
22024794:	12a9883a 	add	r20,r2,r10
22024798:	4807883a 	mov	r3,r9
2202479c:	4005883a 	mov	r2,r8
220247a0:	dc801415 	stw	r18,80(sp)
220247a4:	000d883a 	mov	r6,zero
220247a8:	01d00934 	movhi	r7,16420
220247ac:	1009883a 	mov	r4,r2
220247b0:	180b883a 	mov	r5,r3
220247b4:	202bebc0 	call	2202bebc <__muldf3>
220247b8:	180b883a 	mov	r5,r3
220247bc:	1009883a 	mov	r4,r2
220247c0:	1821883a 	mov	r16,r3
220247c4:	1025883a 	mov	r18,r2
220247c8:	202ceb00 	call	2202ceb0 <__fixdfsi>
220247cc:	1009883a 	mov	r4,r2
220247d0:	1023883a 	mov	r17,r2
220247d4:	202cf380 	call	2202cf38 <__floatsidf>
220247d8:	9009883a 	mov	r4,r18
220247dc:	800b883a 	mov	r5,r16
220247e0:	100d883a 	mov	r6,r2
220247e4:	180f883a 	mov	r7,r3
220247e8:	8c400c04 	addi	r17,r17,48
220247ec:	202c5e00 	call	2202c5e0 <__subdf3>
220247f0:	ad400044 	addi	r21,r21,1
220247f4:	ac7fffc5 	stb	r17,-1(r21)
220247f8:	ad3fea1e 	bne	r21,r20,220247a4 <__alt_data_end+0xfffe53a4>
220247fc:	1813883a 	mov	r9,r3
22024800:	d8c01017 	ldw	r3,64(sp)
22024804:	dc001317 	ldw	r16,76(sp)
22024808:	dc801417 	ldw	r18,80(sp)
2202480c:	1011883a 	mov	r8,r2
22024810:	b8ef883a 	add	r23,r23,r3
22024814:	d9000e17 	ldw	r4,56(sp)
22024818:	d9401117 	ldw	r5,68(sp)
2202481c:	000d883a 	mov	r6,zero
22024820:	01cff834 	movhi	r7,16352
22024824:	da001715 	stw	r8,92(sp)
22024828:	da401515 	stw	r9,84(sp)
2202482c:	202ab100 	call	2202ab10 <__adddf3>
22024830:	da001717 	ldw	r8,92(sp)
22024834:	da401517 	ldw	r9,84(sp)
22024838:	1009883a 	mov	r4,r2
2202483c:	400d883a 	mov	r6,r8
22024840:	480f883a 	mov	r7,r9
22024844:	180b883a 	mov	r5,r3
22024848:	202bddc0 	call	2202bddc <__ledf2>
2202484c:	da001717 	ldw	r8,92(sp)
22024850:	da401517 	ldw	r9,84(sp)
22024854:	10003b0e 	bge	r2,zero,22024944 <_dtoa_r+0x15dc>
22024858:	d9001217 	ldw	r4,72(sp)
2202485c:	bd7fffc3 	ldbu	r21,-1(r23)
22024860:	d9000515 	stw	r4,20(sp)
22024864:	003d1c06 	br	22023cd8 <__alt_data_end+0xfffe48d8>
22024868:	d8c00817 	ldw	r3,32(sp)
2202486c:	18a9c83a 	sub	r20,r3,r2
22024870:	0005883a 	mov	r2,zero
22024874:	003d3706 	br	22023d54 <__alt_data_end+0xfffe4954>
22024878:	00800044 	movi	r2,1
2202487c:	003dd006 	br	22023fc0 <__alt_data_end+0xfffe4bc0>
22024880:	d8c00217 	ldw	r3,8(sp)
22024884:	00800d84 	movi	r2,54
22024888:	dd400917 	ldw	r21,36(sp)
2202488c:	10c5c83a 	sub	r2,r2,r3
22024890:	dd000817 	ldw	r20,32(sp)
22024894:	003d2f06 	br	22023d54 <__alt_data_end+0xfffe4954>
22024898:	9029883a 	mov	r20,r18
2202489c:	982b883a 	mov	r21,r19
220248a0:	04400084 	movi	r17,2
220248a4:	003bc606 	br	220237c0 <__alt_data_end+0xfffe43c0>
220248a8:	d8800617 	ldw	r2,24(sp)
220248ac:	103efc26 	beq	r2,zero,220244a0 <__alt_data_end+0xfffe50a0>
220248b0:	d8c00d17 	ldw	r3,52(sp)
220248b4:	00fc890e 	bge	zero,r3,22023adc <__alt_data_end+0xfffe46dc>
220248b8:	a80b883a 	mov	r5,r21
220248bc:	a009883a 	mov	r4,r20
220248c0:	000d883a 	mov	r6,zero
220248c4:	01d00934 	movhi	r7,16420
220248c8:	202bebc0 	call	2202bebc <__muldf3>
220248cc:	89000044 	addi	r4,r17,1
220248d0:	1029883a 	mov	r20,r2
220248d4:	182b883a 	mov	r21,r3
220248d8:	202cf380 	call	2202cf38 <__floatsidf>
220248dc:	a009883a 	mov	r4,r20
220248e0:	a80b883a 	mov	r5,r21
220248e4:	100d883a 	mov	r6,r2
220248e8:	180f883a 	mov	r7,r3
220248ec:	202bebc0 	call	2202bebc <__muldf3>
220248f0:	1009883a 	mov	r4,r2
220248f4:	180b883a 	mov	r5,r3
220248f8:	000d883a 	mov	r6,zero
220248fc:	01d00734 	movhi	r7,16412
22024900:	202ab100 	call	2202ab10 <__adddf3>
22024904:	d9000517 	ldw	r4,20(sp)
22024908:	1023883a 	mov	r17,r2
2202490c:	00bf3034 	movhi	r2,64704
22024910:	213fffc4 	addi	r4,r4,-1
22024914:	1885883a 	add	r2,r3,r2
22024918:	d9001215 	stw	r4,72(sp)
2202491c:	d8800e15 	stw	r2,56(sp)
22024920:	da800d17 	ldw	r10,52(sp)
22024924:	003bc306 	br	22023834 <__alt_data_end+0xfffe4434>
22024928:	b039883a 	mov	fp,r22
2202492c:	01000e44 	movi	r4,57
22024930:	8825883a 	mov	r18,r17
22024934:	9dc00044 	addi	r23,r19,1
22024938:	99000005 	stb	r4,0(r19)
2202493c:	a023883a 	mov	r17,r20
22024940:	003dae06 	br	22023ffc <__alt_data_end+0xfffe4bfc>
22024944:	d9800e17 	ldw	r6,56(sp)
22024948:	d9c01117 	ldw	r7,68(sp)
2202494c:	0009883a 	mov	r4,zero
22024950:	014ff834 	movhi	r5,16352
22024954:	da001715 	stw	r8,92(sp)
22024958:	da401515 	stw	r9,84(sp)
2202495c:	202c5e00 	call	2202c5e0 <__subdf3>
22024960:	da001717 	ldw	r8,92(sp)
22024964:	da401517 	ldw	r9,84(sp)
22024968:	1009883a 	mov	r4,r2
2202496c:	180b883a 	mov	r5,r3
22024970:	400d883a 	mov	r6,r8
22024974:	480f883a 	mov	r7,r9
22024978:	202bcfc0 	call	2202bcfc <__gedf2>
2202497c:	00bc570e 	bge	zero,r2,22023adc <__alt_data_end+0xfffe46dc>
22024980:	01000c04 	movi	r4,48
22024984:	00000106 	br	2202498c <_dtoa_r+0x1624>
22024988:	102f883a 	mov	r23,r2
2202498c:	b8bfffc4 	addi	r2,r23,-1
22024990:	10c00007 	ldb	r3,0(r2)
22024994:	193ffc26 	beq	r3,r4,22024988 <__alt_data_end+0xfffe5588>
22024998:	d9801217 	ldw	r6,72(sp)
2202499c:	d9800515 	stw	r6,20(sp)
220249a0:	003c1f06 	br	22023a20 <__alt_data_end+0xfffe4620>
220249a4:	d8801217 	ldw	r2,72(sp)
220249a8:	dc001117 	ldw	r16,68(sp)
220249ac:	d8800515 	stw	r2,20(sp)
220249b0:	003cc906 	br	22023cd8 <__alt_data_end+0xfffe48d8>
220249b4:	dd801317 	ldw	r22,76(sp)
220249b8:	dc001117 	ldw	r16,68(sp)
220249bc:	dcc01417 	ldw	r19,80(sp)
220249c0:	dc801017 	ldw	r18,64(sp)
220249c4:	003c4506 	br	22023adc <__alt_data_end+0xfffe46dc>
220249c8:	103e5d1e 	bne	r2,zero,22024340 <__alt_data_end+0xfffe4f40>
220249cc:	4080004c 	andi	r2,r8,1
220249d0:	103e5b26 	beq	r2,zero,22024340 <__alt_data_end+0xfffe4f40>
220249d4:	003e5706 	br	22024334 <__alt_data_end+0xfffe4f34>
220249d8:	d8c00317 	ldw	r3,12(sp)
220249dc:	00800084 	movi	r2,2
220249e0:	10c00a16 	blt	r2,r3,22024a0c <_dtoa_r+0x16a4>
220249e4:	d9000d17 	ldw	r4,52(sp)
220249e8:	003e8306 	br	220243f8 <__alt_data_end+0xfffe4ff8>
220249ec:	04400084 	movi	r17,2
220249f0:	003b7306 	br	220237c0 <__alt_data_end+0xfffe43c0>
220249f4:	d9801217 	ldw	r6,72(sp)
220249f8:	d9800515 	stw	r6,20(sp)
220249fc:	003cb606 	br	22023cd8 <__alt_data_end+0xfffe48d8>
22024a00:	d9001217 	ldw	r4,72(sp)
22024a04:	d9000515 	stw	r4,20(sp)
22024a08:	003c0506 	br	22023a20 <__alt_data_end+0xfffe4620>
22024a0c:	d9800d17 	ldw	r6,52(sp)
22024a10:	d9800615 	stw	r6,24(sp)
22024a14:	003e8306 	br	22024424 <__alt_data_end+0xfffe5024>
22024a18:	d9800317 	ldw	r6,12(sp)
22024a1c:	00800084 	movi	r2,2
22024a20:	11800216 	blt	r2,r6,22024a2c <_dtoa_r+0x16c4>
22024a24:	d8800d17 	ldw	r2,52(sp)
22024a28:	003da606 	br	220240c4 <__alt_data_end+0xfffe4cc4>
22024a2c:	d8800d17 	ldw	r2,52(sp)
22024a30:	d8800615 	stw	r2,24(sp)
22024a34:	003e7b06 	br	22024424 <__alt_data_end+0xfffe5024>
22024a38:	05000044 	movi	r20,1
22024a3c:	003b0506 	br	22023654 <__alt_data_end+0xfffe4254>
22024a40:	8009883a 	mov	r4,r16
22024a44:	80001115 	stw	zero,68(r16)
22024a48:	000b883a 	mov	r5,zero
22024a4c:	20268580 	call	22026858 <_Balloc>
22024a50:	d8800715 	stw	r2,28(sp)
22024a54:	d8c00717 	ldw	r3,28(sp)
22024a58:	00bfffc4 	movi	r2,-1
22024a5c:	01000044 	movi	r4,1
22024a60:	d8800615 	stw	r2,24(sp)
22024a64:	80c01015 	stw	r3,64(r16)
22024a68:	d9000b15 	stw	r4,44(sp)
22024a6c:	d8002215 	stw	zero,136(sp)
22024a70:	d8800d15 	stw	r2,52(sp)
22024a74:	003c1906 	br	22023adc <__alt_data_end+0xfffe46dc>
22024a78:	193d2926 	beq	r3,r4,22023f20 <__alt_data_end+0xfffe4b20>
22024a7c:	00c00f04 	movi	r3,60
22024a80:	1885c83a 	sub	r2,r3,r2
22024a84:	003d7b06 	br	22024074 <__alt_data_end+0xfffe4c74>
22024a88:	000b883a 	mov	r5,zero
22024a8c:	003b1006 	br	220236d0 <__alt_data_end+0xfffe42d0>

22024a90 <_fflush_r>:
22024a90:	defffb04 	addi	sp,sp,-20
22024a94:	dcc00315 	stw	r19,12(sp)
22024a98:	dc000015 	stw	r16,0(sp)
22024a9c:	dfc00415 	stw	ra,16(sp)
22024aa0:	dc800215 	stw	r18,8(sp)
22024aa4:	dc400115 	stw	r17,4(sp)
22024aa8:	2027883a 	mov	r19,r4
22024aac:	2821883a 	mov	r16,r5
22024ab0:	20000226 	beq	r4,zero,22024abc <_fflush_r+0x2c>
22024ab4:	20800e17 	ldw	r2,56(r4)
22024ab8:	10005326 	beq	r2,zero,22024c08 <_fflush_r+0x178>
22024abc:	8080030b 	ldhu	r2,12(r16)
22024ac0:	10ffffcc 	andi	r3,r2,65535
22024ac4:	18e0001c 	xori	r3,r3,32768
22024ac8:	18e00004 	addi	r3,r3,-32768
22024acc:	18002c26 	beq	r3,zero,22024b80 <_fflush_r+0xf0>
22024ad0:	10c0020c 	andi	r3,r2,8
22024ad4:	1800321e 	bne	r3,zero,22024ba0 <_fflush_r+0x110>
22024ad8:	80c00117 	ldw	r3,4(r16)
22024adc:	10820014 	ori	r2,r2,2048
22024ae0:	8080030d 	sth	r2,12(r16)
22024ae4:	00c0570e 	bge	zero,r3,22024c44 <_fflush_r+0x1b4>
22024ae8:	82000a17 	ldw	r8,40(r16)
22024aec:	40002426 	beq	r8,zero,22024b80 <_fflush_r+0xf0>
22024af0:	9c400017 	ldw	r17,0(r19)
22024af4:	10c4000c 	andi	r3,r2,4096
22024af8:	98000015 	stw	zero,0(r19)
22024afc:	18004626 	beq	r3,zero,22024c18 <_fflush_r+0x188>
22024b00:	81801417 	ldw	r6,80(r16)
22024b04:	10c0010c 	andi	r3,r2,4
22024b08:	18000626 	beq	r3,zero,22024b24 <_fflush_r+0x94>
22024b0c:	80c00117 	ldw	r3,4(r16)
22024b10:	80800c17 	ldw	r2,48(r16)
22024b14:	30cdc83a 	sub	r6,r6,r3
22024b18:	10000226 	beq	r2,zero,22024b24 <_fflush_r+0x94>
22024b1c:	80800f17 	ldw	r2,60(r16)
22024b20:	308dc83a 	sub	r6,r6,r2
22024b24:	81400717 	ldw	r5,28(r16)
22024b28:	9809883a 	mov	r4,r19
22024b2c:	000f883a 	mov	r7,zero
22024b30:	403ee83a 	callr	r8
22024b34:	00ffffc4 	movi	r3,-1
22024b38:	10c04526 	beq	r2,r3,22024c50 <_fflush_r+0x1c0>
22024b3c:	80c0030b 	ldhu	r3,12(r16)
22024b40:	81000417 	ldw	r4,16(r16)
22024b44:	80000115 	stw	zero,4(r16)
22024b48:	197dffcc 	andi	r5,r3,63487
22024b4c:	8140030d 	sth	r5,12(r16)
22024b50:	81000015 	stw	r4,0(r16)
22024b54:	18c4000c 	andi	r3,r3,4096
22024b58:	18000126 	beq	r3,zero,22024b60 <_fflush_r+0xd0>
22024b5c:	80801415 	stw	r2,80(r16)
22024b60:	81400c17 	ldw	r5,48(r16)
22024b64:	9c400015 	stw	r17,0(r19)
22024b68:	28000526 	beq	r5,zero,22024b80 <_fflush_r+0xf0>
22024b6c:	80801004 	addi	r2,r16,64
22024b70:	28800226 	beq	r5,r2,22024b7c <_fflush_r+0xec>
22024b74:	9809883a 	mov	r4,r19
22024b78:	20251ac0 	call	220251ac <_free_r>
22024b7c:	80000c15 	stw	zero,48(r16)
22024b80:	0005883a 	mov	r2,zero
22024b84:	dfc00417 	ldw	ra,16(sp)
22024b88:	dcc00317 	ldw	r19,12(sp)
22024b8c:	dc800217 	ldw	r18,8(sp)
22024b90:	dc400117 	ldw	r17,4(sp)
22024b94:	dc000017 	ldw	r16,0(sp)
22024b98:	dec00504 	addi	sp,sp,20
22024b9c:	f800283a 	ret
22024ba0:	84800417 	ldw	r18,16(r16)
22024ba4:	903ff626 	beq	r18,zero,22024b80 <__alt_data_end+0xfffe5780>
22024ba8:	84400017 	ldw	r17,0(r16)
22024bac:	108000cc 	andi	r2,r2,3
22024bb0:	84800015 	stw	r18,0(r16)
22024bb4:	8ca3c83a 	sub	r17,r17,r18
22024bb8:	10001526 	beq	r2,zero,22024c10 <_fflush_r+0x180>
22024bbc:	0005883a 	mov	r2,zero
22024bc0:	80800215 	stw	r2,8(r16)
22024bc4:	04400316 	blt	zero,r17,22024bd4 <_fflush_r+0x144>
22024bc8:	003fed06 	br	22024b80 <__alt_data_end+0xfffe5780>
22024bcc:	90a5883a 	add	r18,r18,r2
22024bd0:	047feb0e 	bge	zero,r17,22024b80 <__alt_data_end+0xfffe5780>
22024bd4:	80800917 	ldw	r2,36(r16)
22024bd8:	81400717 	ldw	r5,28(r16)
22024bdc:	880f883a 	mov	r7,r17
22024be0:	900d883a 	mov	r6,r18
22024be4:	9809883a 	mov	r4,r19
22024be8:	103ee83a 	callr	r2
22024bec:	88a3c83a 	sub	r17,r17,r2
22024bf0:	00bff616 	blt	zero,r2,22024bcc <__alt_data_end+0xfffe57cc>
22024bf4:	80c0030b 	ldhu	r3,12(r16)
22024bf8:	00bfffc4 	movi	r2,-1
22024bfc:	18c01014 	ori	r3,r3,64
22024c00:	80c0030d 	sth	r3,12(r16)
22024c04:	003fdf06 	br	22024b84 <__alt_data_end+0xfffe5784>
22024c08:	20250380 	call	22025038 <__sinit>
22024c0c:	003fab06 	br	22024abc <__alt_data_end+0xfffe56bc>
22024c10:	80800517 	ldw	r2,20(r16)
22024c14:	003fea06 	br	22024bc0 <__alt_data_end+0xfffe57c0>
22024c18:	81400717 	ldw	r5,28(r16)
22024c1c:	000d883a 	mov	r6,zero
22024c20:	9809883a 	mov	r4,r19
22024c24:	01c00044 	movi	r7,1
22024c28:	403ee83a 	callr	r8
22024c2c:	100d883a 	mov	r6,r2
22024c30:	00bfffc4 	movi	r2,-1
22024c34:	30801326 	beq	r6,r2,22024c84 <_fflush_r+0x1f4>
22024c38:	8080030b 	ldhu	r2,12(r16)
22024c3c:	82000a17 	ldw	r8,40(r16)
22024c40:	003fb006 	br	22024b04 <__alt_data_end+0xfffe5704>
22024c44:	80c00f17 	ldw	r3,60(r16)
22024c48:	00ffa716 	blt	zero,r3,22024ae8 <__alt_data_end+0xfffe56e8>
22024c4c:	003fcc06 	br	22024b80 <__alt_data_end+0xfffe5780>
22024c50:	98c00017 	ldw	r3,0(r19)
22024c54:	183fb926 	beq	r3,zero,22024b3c <__alt_data_end+0xfffe573c>
22024c58:	01000744 	movi	r4,29
22024c5c:	19000226 	beq	r3,r4,22024c68 <_fflush_r+0x1d8>
22024c60:	01000584 	movi	r4,22
22024c64:	1900101e 	bne	r3,r4,22024ca8 <_fflush_r+0x218>
22024c68:	8080030b 	ldhu	r2,12(r16)
22024c6c:	80c00417 	ldw	r3,16(r16)
22024c70:	80000115 	stw	zero,4(r16)
22024c74:	10bdffcc 	andi	r2,r2,63487
22024c78:	8080030d 	sth	r2,12(r16)
22024c7c:	80c00015 	stw	r3,0(r16)
22024c80:	003fb706 	br	22024b60 <__alt_data_end+0xfffe5760>
22024c84:	98800017 	ldw	r2,0(r19)
22024c88:	103feb26 	beq	r2,zero,22024c38 <__alt_data_end+0xfffe5838>
22024c8c:	00c00744 	movi	r3,29
22024c90:	10c00226 	beq	r2,r3,22024c9c <_fflush_r+0x20c>
22024c94:	00c00584 	movi	r3,22
22024c98:	10ffd61e 	bne	r2,r3,22024bf4 <__alt_data_end+0xfffe57f4>
22024c9c:	9c400015 	stw	r17,0(r19)
22024ca0:	0005883a 	mov	r2,zero
22024ca4:	003fb706 	br	22024b84 <__alt_data_end+0xfffe5784>
22024ca8:	80c0030b 	ldhu	r3,12(r16)
22024cac:	18c01014 	ori	r3,r3,64
22024cb0:	80c0030d 	sth	r3,12(r16)
22024cb4:	003fb306 	br	22024b84 <__alt_data_end+0xfffe5784>

22024cb8 <fflush>:
22024cb8:	20000526 	beq	r4,zero,22024cd0 <fflush+0x18>
22024cbc:	008880f4 	movhi	r2,8707
22024cc0:	10868404 	addi	r2,r2,6672
22024cc4:	200b883a 	mov	r5,r4
22024cc8:	11000017 	ldw	r4,0(r2)
22024ccc:	2024a901 	jmpi	22024a90 <_fflush_r>
22024cd0:	008880f4 	movhi	r2,8707
22024cd4:	10868304 	addi	r2,r2,6668
22024cd8:	11000017 	ldw	r4,0(r2)
22024cdc:	014880b4 	movhi	r5,8706
22024ce0:	2952a404 	addi	r5,r5,19088
22024ce4:	20259f81 	jmpi	220259f8 <_fwalk_reent>

22024ce8 <__fp_lock>:
22024ce8:	0005883a 	mov	r2,zero
22024cec:	f800283a 	ret

22024cf0 <__fp_unlock>:
22024cf0:	0005883a 	mov	r2,zero
22024cf4:	f800283a 	ret

22024cf8 <_cleanup_r>:
22024cf8:	014880f4 	movhi	r5,8707
22024cfc:	29668304 	addi	r5,r5,-26100
22024d00:	20259401 	jmpi	22025940 <_fwalk>

22024d04 <__sinit.part.1>:
22024d04:	defff604 	addi	sp,sp,-40
22024d08:	00c880b4 	movhi	r3,8706
22024d0c:	dfc00915 	stw	ra,36(sp)
22024d10:	df000815 	stw	fp,32(sp)
22024d14:	ddc00715 	stw	r23,28(sp)
22024d18:	dd800615 	stw	r22,24(sp)
22024d1c:	dd400515 	stw	r21,20(sp)
22024d20:	dd000415 	stw	r20,16(sp)
22024d24:	dcc00315 	stw	r19,12(sp)
22024d28:	dc800215 	stw	r18,8(sp)
22024d2c:	dc400115 	stw	r17,4(sp)
22024d30:	dc000015 	stw	r16,0(sp)
22024d34:	18d33e04 	addi	r3,r3,19704
22024d38:	24000117 	ldw	r16,4(r4)
22024d3c:	20c00f15 	stw	r3,60(r4)
22024d40:	07000044 	movi	fp,1
22024d44:	00c000c4 	movi	r3,3
22024d48:	2080bb04 	addi	r2,r4,748
22024d4c:	20c0b915 	stw	r3,740(r4)
22024d50:	27000e15 	stw	fp,56(r4)
22024d54:	2080ba15 	stw	r2,744(r4)
22024d58:	2000b815 	stw	zero,736(r4)
22024d5c:	05c00204 	movi	r23,8
22024d60:	00800104 	movi	r2,4
22024d64:	2025883a 	mov	r18,r4
22024d68:	b80d883a 	mov	r6,r23
22024d6c:	81001704 	addi	r4,r16,92
22024d70:	000b883a 	mov	r5,zero
22024d74:	80000015 	stw	zero,0(r16)
22024d78:	80000115 	stw	zero,4(r16)
22024d7c:	80000215 	stw	zero,8(r16)
22024d80:	8080030d 	sth	r2,12(r16)
22024d84:	80001915 	stw	zero,100(r16)
22024d88:	8000038d 	sth	zero,14(r16)
22024d8c:	80000415 	stw	zero,16(r16)
22024d90:	80000515 	stw	zero,20(r16)
22024d94:	80000615 	stw	zero,24(r16)
22024d98:	20267340 	call	22026734 <memset>
22024d9c:	058880b4 	movhi	r22,8706
22024da0:	94400217 	ldw	r17,8(r18)
22024da4:	054880f4 	movhi	r21,8707
22024da8:	050880f4 	movhi	r20,8707
22024dac:	04c880f4 	movhi	r19,8707
22024db0:	b59fed04 	addi	r22,r22,32692
22024db4:	ad600404 	addi	r21,r21,-32752
22024db8:	a5202304 	addi	r20,r20,-32628
22024dbc:	9ce03a04 	addi	r19,r19,-32536
22024dc0:	85800815 	stw	r22,32(r16)
22024dc4:	85400915 	stw	r21,36(r16)
22024dc8:	85000a15 	stw	r20,40(r16)
22024dcc:	84c00b15 	stw	r19,44(r16)
22024dd0:	84000715 	stw	r16,28(r16)
22024dd4:	00800284 	movi	r2,10
22024dd8:	89001704 	addi	r4,r17,92
22024ddc:	b80d883a 	mov	r6,r23
22024de0:	000b883a 	mov	r5,zero
22024de4:	88000015 	stw	zero,0(r17)
22024de8:	88000115 	stw	zero,4(r17)
22024dec:	88000215 	stw	zero,8(r17)
22024df0:	8880030d 	sth	r2,12(r17)
22024df4:	88001915 	stw	zero,100(r17)
22024df8:	8f00038d 	sth	fp,14(r17)
22024dfc:	88000415 	stw	zero,16(r17)
22024e00:	88000515 	stw	zero,20(r17)
22024e04:	88000615 	stw	zero,24(r17)
22024e08:	20267340 	call	22026734 <memset>
22024e0c:	94000317 	ldw	r16,12(r18)
22024e10:	00800484 	movi	r2,18
22024e14:	8c400715 	stw	r17,28(r17)
22024e18:	8d800815 	stw	r22,32(r17)
22024e1c:	8d400915 	stw	r21,36(r17)
22024e20:	8d000a15 	stw	r20,40(r17)
22024e24:	8cc00b15 	stw	r19,44(r17)
22024e28:	8080030d 	sth	r2,12(r16)
22024e2c:	00800084 	movi	r2,2
22024e30:	80000015 	stw	zero,0(r16)
22024e34:	80000115 	stw	zero,4(r16)
22024e38:	80000215 	stw	zero,8(r16)
22024e3c:	80001915 	stw	zero,100(r16)
22024e40:	8080038d 	sth	r2,14(r16)
22024e44:	80000415 	stw	zero,16(r16)
22024e48:	80000515 	stw	zero,20(r16)
22024e4c:	80000615 	stw	zero,24(r16)
22024e50:	81001704 	addi	r4,r16,92
22024e54:	000b883a 	mov	r5,zero
22024e58:	b80d883a 	mov	r6,r23
22024e5c:	20267340 	call	22026734 <memset>
22024e60:	84000715 	stw	r16,28(r16)
22024e64:	85800815 	stw	r22,32(r16)
22024e68:	85400915 	stw	r21,36(r16)
22024e6c:	85000a15 	stw	r20,40(r16)
22024e70:	84c00b15 	stw	r19,44(r16)
22024e74:	dfc00917 	ldw	ra,36(sp)
22024e78:	df000817 	ldw	fp,32(sp)
22024e7c:	ddc00717 	ldw	r23,28(sp)
22024e80:	dd800617 	ldw	r22,24(sp)
22024e84:	dd400517 	ldw	r21,20(sp)
22024e88:	dd000417 	ldw	r20,16(sp)
22024e8c:	dcc00317 	ldw	r19,12(sp)
22024e90:	dc800217 	ldw	r18,8(sp)
22024e94:	dc400117 	ldw	r17,4(sp)
22024e98:	dc000017 	ldw	r16,0(sp)
22024e9c:	dec00a04 	addi	sp,sp,40
22024ea0:	f800283a 	ret

22024ea4 <__sfmoreglue>:
22024ea4:	defffc04 	addi	sp,sp,-16
22024ea8:	dc400115 	stw	r17,4(sp)
22024eac:	2c401a24 	muli	r17,r5,104
22024eb0:	dc800215 	stw	r18,8(sp)
22024eb4:	2825883a 	mov	r18,r5
22024eb8:	89400304 	addi	r5,r17,12
22024ebc:	dc000015 	stw	r16,0(sp)
22024ec0:	dfc00315 	stw	ra,12(sp)
22024ec4:	2025d480 	call	22025d48 <_malloc_r>
22024ec8:	1021883a 	mov	r16,r2
22024ecc:	10000726 	beq	r2,zero,22024eec <__sfmoreglue+0x48>
22024ed0:	11000304 	addi	r4,r2,12
22024ed4:	10000015 	stw	zero,0(r2)
22024ed8:	14800115 	stw	r18,4(r2)
22024edc:	11000215 	stw	r4,8(r2)
22024ee0:	000b883a 	mov	r5,zero
22024ee4:	880d883a 	mov	r6,r17
22024ee8:	20267340 	call	22026734 <memset>
22024eec:	8005883a 	mov	r2,r16
22024ef0:	dfc00317 	ldw	ra,12(sp)
22024ef4:	dc800217 	ldw	r18,8(sp)
22024ef8:	dc400117 	ldw	r17,4(sp)
22024efc:	dc000017 	ldw	r16,0(sp)
22024f00:	dec00404 	addi	sp,sp,16
22024f04:	f800283a 	ret

22024f08 <__sfp>:
22024f08:	008880f4 	movhi	r2,8707
22024f0c:	defffb04 	addi	sp,sp,-20
22024f10:	10868304 	addi	r2,r2,6668
22024f14:	dc800215 	stw	r18,8(sp)
22024f18:	14800017 	ldw	r18,0(r2)
22024f1c:	dcc00315 	stw	r19,12(sp)
22024f20:	dfc00415 	stw	ra,16(sp)
22024f24:	90800e17 	ldw	r2,56(r18)
22024f28:	dc400115 	stw	r17,4(sp)
22024f2c:	dc000015 	stw	r16,0(sp)
22024f30:	2027883a 	mov	r19,r4
22024f34:	1000021e 	bne	r2,zero,22024f40 <__sfp+0x38>
22024f38:	9009883a 	mov	r4,r18
22024f3c:	2024d040 	call	22024d04 <__sinit.part.1>
22024f40:	9480b804 	addi	r18,r18,736
22024f44:	047fffc4 	movi	r17,-1
22024f48:	91400117 	ldw	r5,4(r18)
22024f4c:	94000217 	ldw	r16,8(r18)
22024f50:	297fffc4 	addi	r5,r5,-1
22024f54:	28000a16 	blt	r5,zero,22024f80 <__sfp+0x78>
22024f58:	8080030f 	ldh	r2,12(r16)
22024f5c:	10000c26 	beq	r2,zero,22024f90 <__sfp+0x88>
22024f60:	80c01d04 	addi	r3,r16,116
22024f64:	00000206 	br	22024f70 <__sfp+0x68>
22024f68:	18bfe60f 	ldh	r2,-104(r3)
22024f6c:	10000826 	beq	r2,zero,22024f90 <__sfp+0x88>
22024f70:	297fffc4 	addi	r5,r5,-1
22024f74:	1c3ffd04 	addi	r16,r3,-12
22024f78:	18c01a04 	addi	r3,r3,104
22024f7c:	2c7ffa1e 	bne	r5,r17,22024f68 <__alt_data_end+0xfffe5b68>
22024f80:	90800017 	ldw	r2,0(r18)
22024f84:	10001d26 	beq	r2,zero,22024ffc <__sfp+0xf4>
22024f88:	1025883a 	mov	r18,r2
22024f8c:	003fee06 	br	22024f48 <__alt_data_end+0xfffe5b48>
22024f90:	00bfffc4 	movi	r2,-1
22024f94:	8080038d 	sth	r2,14(r16)
22024f98:	00800044 	movi	r2,1
22024f9c:	8080030d 	sth	r2,12(r16)
22024fa0:	80001915 	stw	zero,100(r16)
22024fa4:	80000015 	stw	zero,0(r16)
22024fa8:	80000215 	stw	zero,8(r16)
22024fac:	80000115 	stw	zero,4(r16)
22024fb0:	80000415 	stw	zero,16(r16)
22024fb4:	80000515 	stw	zero,20(r16)
22024fb8:	80000615 	stw	zero,24(r16)
22024fbc:	81001704 	addi	r4,r16,92
22024fc0:	000b883a 	mov	r5,zero
22024fc4:	01800204 	movi	r6,8
22024fc8:	20267340 	call	22026734 <memset>
22024fcc:	8005883a 	mov	r2,r16
22024fd0:	80000c15 	stw	zero,48(r16)
22024fd4:	80000d15 	stw	zero,52(r16)
22024fd8:	80001115 	stw	zero,68(r16)
22024fdc:	80001215 	stw	zero,72(r16)
22024fe0:	dfc00417 	ldw	ra,16(sp)
22024fe4:	dcc00317 	ldw	r19,12(sp)
22024fe8:	dc800217 	ldw	r18,8(sp)
22024fec:	dc400117 	ldw	r17,4(sp)
22024ff0:	dc000017 	ldw	r16,0(sp)
22024ff4:	dec00504 	addi	sp,sp,20
22024ff8:	f800283a 	ret
22024ffc:	9809883a 	mov	r4,r19
22025000:	01400104 	movi	r5,4
22025004:	2024ea40 	call	22024ea4 <__sfmoreglue>
22025008:	90800015 	stw	r2,0(r18)
2202500c:	103fde1e 	bne	r2,zero,22024f88 <__alt_data_end+0xfffe5b88>
22025010:	00800304 	movi	r2,12
22025014:	98800015 	stw	r2,0(r19)
22025018:	0005883a 	mov	r2,zero
2202501c:	003ff006 	br	22024fe0 <__alt_data_end+0xfffe5be0>

22025020 <_cleanup>:
22025020:	008880f4 	movhi	r2,8707
22025024:	10868304 	addi	r2,r2,6668
22025028:	11000017 	ldw	r4,0(r2)
2202502c:	014880f4 	movhi	r5,8707
22025030:	29668304 	addi	r5,r5,-26100
22025034:	20259401 	jmpi	22025940 <_fwalk>

22025038 <__sinit>:
22025038:	20800e17 	ldw	r2,56(r4)
2202503c:	10000126 	beq	r2,zero,22025044 <__sinit+0xc>
22025040:	f800283a 	ret
22025044:	2024d041 	jmpi	22024d04 <__sinit.part.1>

22025048 <__sfp_lock_acquire>:
22025048:	f800283a 	ret

2202504c <__sfp_lock_release>:
2202504c:	f800283a 	ret

22025050 <__sinit_lock_acquire>:
22025050:	f800283a 	ret

22025054 <__sinit_lock_release>:
22025054:	f800283a 	ret

22025058 <__fp_lock_all>:
22025058:	008880f4 	movhi	r2,8707
2202505c:	10868404 	addi	r2,r2,6672
22025060:	11000017 	ldw	r4,0(r2)
22025064:	014880b4 	movhi	r5,8706
22025068:	29533a04 	addi	r5,r5,19688
2202506c:	20259401 	jmpi	22025940 <_fwalk>

22025070 <__fp_unlock_all>:
22025070:	008880f4 	movhi	r2,8707
22025074:	10868404 	addi	r2,r2,6672
22025078:	11000017 	ldw	r4,0(r2)
2202507c:	014880b4 	movhi	r5,8706
22025080:	29533c04 	addi	r5,r5,19696
22025084:	20259401 	jmpi	22025940 <_fwalk>

22025088 <_malloc_trim_r>:
22025088:	defffb04 	addi	sp,sp,-20
2202508c:	dcc00315 	stw	r19,12(sp)
22025090:	04c880f4 	movhi	r19,8707
22025094:	dc800215 	stw	r18,8(sp)
22025098:	dc400115 	stw	r17,4(sp)
2202509c:	dc000015 	stw	r16,0(sp)
220250a0:	dfc00415 	stw	ra,16(sp)
220250a4:	2821883a 	mov	r16,r5
220250a8:	9cc0ff04 	addi	r19,r19,1020
220250ac:	2025883a 	mov	r18,r4
220250b0:	202d7140 	call	2202d714 <__malloc_lock>
220250b4:	98800217 	ldw	r2,8(r19)
220250b8:	14400117 	ldw	r17,4(r2)
220250bc:	00bfff04 	movi	r2,-4
220250c0:	88a2703a 	and	r17,r17,r2
220250c4:	8c21c83a 	sub	r16,r17,r16
220250c8:	8403fbc4 	addi	r16,r16,4079
220250cc:	8020d33a 	srli	r16,r16,12
220250d0:	0083ffc4 	movi	r2,4095
220250d4:	843fffc4 	addi	r16,r16,-1
220250d8:	8020933a 	slli	r16,r16,12
220250dc:	1400060e 	bge	r2,r16,220250f8 <_malloc_trim_r+0x70>
220250e0:	9009883a 	mov	r4,r18
220250e4:	000b883a 	mov	r5,zero
220250e8:	2027f600 	call	22027f60 <_sbrk_r>
220250ec:	98c00217 	ldw	r3,8(r19)
220250f0:	1c47883a 	add	r3,r3,r17
220250f4:	10c00a26 	beq	r2,r3,22025120 <_malloc_trim_r+0x98>
220250f8:	9009883a 	mov	r4,r18
220250fc:	202d7340 	call	2202d734 <__malloc_unlock>
22025100:	0005883a 	mov	r2,zero
22025104:	dfc00417 	ldw	ra,16(sp)
22025108:	dcc00317 	ldw	r19,12(sp)
2202510c:	dc800217 	ldw	r18,8(sp)
22025110:	dc400117 	ldw	r17,4(sp)
22025114:	dc000017 	ldw	r16,0(sp)
22025118:	dec00504 	addi	sp,sp,20
2202511c:	f800283a 	ret
22025120:	9009883a 	mov	r4,r18
22025124:	040bc83a 	sub	r5,zero,r16
22025128:	2027f600 	call	22027f60 <_sbrk_r>
2202512c:	00ffffc4 	movi	r3,-1
22025130:	10c00d26 	beq	r2,r3,22025168 <_malloc_trim_r+0xe0>
22025134:	00c880f4 	movhi	r3,8707
22025138:	18cd5c04 	addi	r3,r3,13680
2202513c:	18800017 	ldw	r2,0(r3)
22025140:	99000217 	ldw	r4,8(r19)
22025144:	8c23c83a 	sub	r17,r17,r16
22025148:	8c400054 	ori	r17,r17,1
2202514c:	1421c83a 	sub	r16,r2,r16
22025150:	24400115 	stw	r17,4(r4)
22025154:	9009883a 	mov	r4,r18
22025158:	1c000015 	stw	r16,0(r3)
2202515c:	202d7340 	call	2202d734 <__malloc_unlock>
22025160:	00800044 	movi	r2,1
22025164:	003fe706 	br	22025104 <__alt_data_end+0xfffe5d04>
22025168:	9009883a 	mov	r4,r18
2202516c:	000b883a 	mov	r5,zero
22025170:	2027f600 	call	22027f60 <_sbrk_r>
22025174:	99000217 	ldw	r4,8(r19)
22025178:	014003c4 	movi	r5,15
2202517c:	1107c83a 	sub	r3,r2,r4
22025180:	28ffdd0e 	bge	r5,r3,220250f8 <__alt_data_end+0xfffe5cf8>
22025184:	014880f4 	movhi	r5,8707
22025188:	29468604 	addi	r5,r5,6680
2202518c:	29400017 	ldw	r5,0(r5)
22025190:	18c00054 	ori	r3,r3,1
22025194:	20c00115 	stw	r3,4(r4)
22025198:	00c880f4 	movhi	r3,8707
2202519c:	1145c83a 	sub	r2,r2,r5
220251a0:	18cd5c04 	addi	r3,r3,13680
220251a4:	18800015 	stw	r2,0(r3)
220251a8:	003fd306 	br	220250f8 <__alt_data_end+0xfffe5cf8>

220251ac <_free_r>:
220251ac:	28004c26 	beq	r5,zero,220252e0 <_free_r+0x134>
220251b0:	defffd04 	addi	sp,sp,-12
220251b4:	dc400115 	stw	r17,4(sp)
220251b8:	dc000015 	stw	r16,0(sp)
220251bc:	2023883a 	mov	r17,r4
220251c0:	2821883a 	mov	r16,r5
220251c4:	dfc00215 	stw	ra,8(sp)
220251c8:	202d7140 	call	2202d714 <__malloc_lock>
220251cc:	813fff17 	ldw	r4,-4(r16)
220251d0:	00bfff84 	movi	r2,-2
220251d4:	024880f4 	movhi	r9,8707
220251d8:	81bffe04 	addi	r6,r16,-8
220251dc:	2084703a 	and	r2,r4,r2
220251e0:	4a40ff04 	addi	r9,r9,1020
220251e4:	308b883a 	add	r5,r6,r2
220251e8:	2a000117 	ldw	r8,4(r5)
220251ec:	49c00217 	ldw	r7,8(r9)
220251f0:	00ffff04 	movi	r3,-4
220251f4:	40c6703a 	and	r3,r8,r3
220251f8:	39405326 	beq	r7,r5,22025348 <_free_r+0x19c>
220251fc:	28c00115 	stw	r3,4(r5)
22025200:	2100004c 	andi	r4,r4,1
22025204:	2000091e 	bne	r4,zero,2202522c <_free_r+0x80>
22025208:	81fffe17 	ldw	r7,-8(r16)
2202520c:	4a000204 	addi	r8,r9,8
22025210:	31cdc83a 	sub	r6,r6,r7
22025214:	31000217 	ldw	r4,8(r6)
22025218:	11c5883a 	add	r2,r2,r7
2202521c:	22006126 	beq	r4,r8,220253a4 <_free_r+0x1f8>
22025220:	31c00317 	ldw	r7,12(r6)
22025224:	21c00315 	stw	r7,12(r4)
22025228:	39000215 	stw	r4,8(r7)
2202522c:	28c9883a 	add	r4,r5,r3
22025230:	21c00117 	ldw	r7,4(r4)
22025234:	39c0004c 	andi	r7,r7,1
22025238:	38000d1e 	bne	r7,zero,22025270 <_free_r+0xc4>
2202523c:	29000217 	ldw	r4,8(r5)
22025240:	10c5883a 	add	r2,r2,r3
22025244:	00c880f4 	movhi	r3,8707
22025248:	18c10104 	addi	r3,r3,1028
2202524c:	20c07526 	beq	r4,r3,22025424 <_free_r+0x278>
22025250:	29c00317 	ldw	r7,12(r5)
22025254:	11400054 	ori	r5,r2,1
22025258:	3087883a 	add	r3,r6,r2
2202525c:	21c00315 	stw	r7,12(r4)
22025260:	39000215 	stw	r4,8(r7)
22025264:	31400115 	stw	r5,4(r6)
22025268:	18800015 	stw	r2,0(r3)
2202526c:	00000406 	br	22025280 <_free_r+0xd4>
22025270:	10c00054 	ori	r3,r2,1
22025274:	30c00115 	stw	r3,4(r6)
22025278:	3087883a 	add	r3,r6,r2
2202527c:	18800015 	stw	r2,0(r3)
22025280:	00c07fc4 	movi	r3,511
22025284:	18801736 	bltu	r3,r2,220252e4 <_free_r+0x138>
22025288:	1004d0fa 	srli	r2,r2,3
2202528c:	01400044 	movi	r5,1
22025290:	49000117 	ldw	r4,4(r9)
22025294:	1087883a 	add	r3,r2,r2
22025298:	18c7883a 	add	r3,r3,r3
2202529c:	1005d0ba 	srai	r2,r2,2
220252a0:	18c7883a 	add	r3,r3,r3
220252a4:	1a47883a 	add	r3,r3,r9
220252a8:	19c00217 	ldw	r7,8(r3)
220252ac:	2884983a 	sll	r2,r5,r2
220252b0:	30c00315 	stw	r3,12(r6)
220252b4:	31c00215 	stw	r7,8(r6)
220252b8:	1104b03a 	or	r2,r2,r4
220252bc:	19800215 	stw	r6,8(r3)
220252c0:	48800115 	stw	r2,4(r9)
220252c4:	39800315 	stw	r6,12(r7)
220252c8:	8809883a 	mov	r4,r17
220252cc:	dfc00217 	ldw	ra,8(sp)
220252d0:	dc400117 	ldw	r17,4(sp)
220252d4:	dc000017 	ldw	r16,0(sp)
220252d8:	dec00304 	addi	sp,sp,12
220252dc:	202d7341 	jmpi	2202d734 <__malloc_unlock>
220252e0:	f800283a 	ret
220252e4:	1006d27a 	srli	r3,r2,9
220252e8:	01000104 	movi	r4,4
220252ec:	20c04036 	bltu	r4,r3,220253f0 <_free_r+0x244>
220252f0:	1006d1ba 	srli	r3,r2,6
220252f4:	19400e04 	addi	r5,r3,56
220252f8:	2947883a 	add	r3,r5,r5
220252fc:	18c7883a 	add	r3,r3,r3
22025300:	18c7883a 	add	r3,r3,r3
22025304:	1a49883a 	add	r4,r3,r9
22025308:	20c00217 	ldw	r3,8(r4)
2202530c:	01c880f4 	movhi	r7,8707
22025310:	39c0ff04 	addi	r7,r7,1020
22025314:	19003b26 	beq	r3,r4,22025404 <_free_r+0x258>
22025318:	01ffff04 	movi	r7,-4
2202531c:	19400117 	ldw	r5,4(r3)
22025320:	29ca703a 	and	r5,r5,r7
22025324:	1140022e 	bgeu	r2,r5,22025330 <_free_r+0x184>
22025328:	18c00217 	ldw	r3,8(r3)
2202532c:	20fffb1e 	bne	r4,r3,2202531c <__alt_data_end+0xfffe5f1c>
22025330:	18800317 	ldw	r2,12(r3)
22025334:	30800315 	stw	r2,12(r6)
22025338:	30c00215 	stw	r3,8(r6)
2202533c:	11800215 	stw	r6,8(r2)
22025340:	19800315 	stw	r6,12(r3)
22025344:	003fe006 	br	220252c8 <__alt_data_end+0xfffe5ec8>
22025348:	2100004c 	andi	r4,r4,1
2202534c:	1885883a 	add	r2,r3,r2
22025350:	2000071e 	bne	r4,zero,22025370 <_free_r+0x1c4>
22025354:	817ffe17 	ldw	r5,-8(r16)
22025358:	314dc83a 	sub	r6,r6,r5
2202535c:	30c00317 	ldw	r3,12(r6)
22025360:	31000217 	ldw	r4,8(r6)
22025364:	1145883a 	add	r2,r2,r5
22025368:	20c00315 	stw	r3,12(r4)
2202536c:	19000215 	stw	r4,8(r3)
22025370:	10c00054 	ori	r3,r2,1
22025374:	30c00115 	stw	r3,4(r6)
22025378:	00c880f4 	movhi	r3,8707
2202537c:	18c68704 	addi	r3,r3,6684
22025380:	18c00017 	ldw	r3,0(r3)
22025384:	49800215 	stw	r6,8(r9)
22025388:	10ffcf36 	bltu	r2,r3,220252c8 <__alt_data_end+0xfffe5ec8>
2202538c:	008880f4 	movhi	r2,8707
22025390:	108d5304 	addi	r2,r2,13644
22025394:	11400017 	ldw	r5,0(r2)
22025398:	8809883a 	mov	r4,r17
2202539c:	20250880 	call	22025088 <_malloc_trim_r>
220253a0:	003fc906 	br	220252c8 <__alt_data_end+0xfffe5ec8>
220253a4:	28c9883a 	add	r4,r5,r3
220253a8:	21000117 	ldw	r4,4(r4)
220253ac:	2100004c 	andi	r4,r4,1
220253b0:	20000a1e 	bne	r4,zero,220253dc <_free_r+0x230>
220253b4:	29000317 	ldw	r4,12(r5)
220253b8:	29400217 	ldw	r5,8(r5)
220253bc:	10c5883a 	add	r2,r2,r3
220253c0:	10c00054 	ori	r3,r2,1
220253c4:	29000315 	stw	r4,12(r5)
220253c8:	21400215 	stw	r5,8(r4)
220253cc:	30c00115 	stw	r3,4(r6)
220253d0:	308d883a 	add	r6,r6,r2
220253d4:	30800015 	stw	r2,0(r6)
220253d8:	003fbb06 	br	220252c8 <__alt_data_end+0xfffe5ec8>
220253dc:	10c00054 	ori	r3,r2,1
220253e0:	30c00115 	stw	r3,4(r6)
220253e4:	308d883a 	add	r6,r6,r2
220253e8:	30800015 	stw	r2,0(r6)
220253ec:	003fb606 	br	220252c8 <__alt_data_end+0xfffe5ec8>
220253f0:	01000504 	movi	r4,20
220253f4:	20c01436 	bltu	r4,r3,22025448 <_free_r+0x29c>
220253f8:	194016c4 	addi	r5,r3,91
220253fc:	2947883a 	add	r3,r5,r5
22025400:	003fbe06 	br	220252fc <__alt_data_end+0xfffe5efc>
22025404:	280bd0ba 	srai	r5,r5,2
22025408:	00800044 	movi	r2,1
2202540c:	39000117 	ldw	r4,4(r7)
22025410:	114a983a 	sll	r5,r2,r5
22025414:	1805883a 	mov	r2,r3
22025418:	2908b03a 	or	r4,r5,r4
2202541c:	39000115 	stw	r4,4(r7)
22025420:	003fc406 	br	22025334 <__alt_data_end+0xfffe5f34>
22025424:	49800515 	stw	r6,20(r9)
22025428:	49800415 	stw	r6,16(r9)
2202542c:	10c00054 	ori	r3,r2,1
22025430:	31000315 	stw	r4,12(r6)
22025434:	31000215 	stw	r4,8(r6)
22025438:	30c00115 	stw	r3,4(r6)
2202543c:	308d883a 	add	r6,r6,r2
22025440:	30800015 	stw	r2,0(r6)
22025444:	003fa006 	br	220252c8 <__alt_data_end+0xfffe5ec8>
22025448:	01001504 	movi	r4,84
2202544c:	20c00436 	bltu	r4,r3,22025460 <_free_r+0x2b4>
22025450:	1006d33a 	srli	r3,r2,12
22025454:	19401b84 	addi	r5,r3,110
22025458:	2947883a 	add	r3,r5,r5
2202545c:	003fa706 	br	220252fc <__alt_data_end+0xfffe5efc>
22025460:	01005504 	movi	r4,340
22025464:	20c00436 	bltu	r4,r3,22025478 <_free_r+0x2cc>
22025468:	1006d3fa 	srli	r3,r2,15
2202546c:	19401dc4 	addi	r5,r3,119
22025470:	2947883a 	add	r3,r5,r5
22025474:	003fa106 	br	220252fc <__alt_data_end+0xfffe5efc>
22025478:	01015504 	movi	r4,1364
2202547c:	20c00436 	bltu	r4,r3,22025490 <_free_r+0x2e4>
22025480:	1006d4ba 	srli	r3,r2,18
22025484:	19401f04 	addi	r5,r3,124
22025488:	2947883a 	add	r3,r5,r5
2202548c:	003f9b06 	br	220252fc <__alt_data_end+0xfffe5efc>
22025490:	00c03f04 	movi	r3,252
22025494:	01401f84 	movi	r5,126
22025498:	003f9806 	br	220252fc <__alt_data_end+0xfffe5efc>

2202549c <__sfvwrite_r>:
2202549c:	30800217 	ldw	r2,8(r6)
220254a0:	10004526 	beq	r2,zero,220255b8 <__sfvwrite_r+0x11c>
220254a4:	28c0030b 	ldhu	r3,12(r5)
220254a8:	defff404 	addi	sp,sp,-48
220254ac:	dd400715 	stw	r21,28(sp)
220254b0:	dcc00515 	stw	r19,20(sp)
220254b4:	dc000215 	stw	r16,8(sp)
220254b8:	dfc00b15 	stw	ra,44(sp)
220254bc:	df000a15 	stw	fp,40(sp)
220254c0:	ddc00915 	stw	r23,36(sp)
220254c4:	dd800815 	stw	r22,32(sp)
220254c8:	dd000615 	stw	r20,24(sp)
220254cc:	dc800415 	stw	r18,16(sp)
220254d0:	dc400315 	stw	r17,12(sp)
220254d4:	1880020c 	andi	r2,r3,8
220254d8:	2821883a 	mov	r16,r5
220254dc:	202b883a 	mov	r21,r4
220254e0:	3027883a 	mov	r19,r6
220254e4:	10002526 	beq	r2,zero,2202557c <__sfvwrite_r+0xe0>
220254e8:	28800417 	ldw	r2,16(r5)
220254ec:	10002326 	beq	r2,zero,2202557c <__sfvwrite_r+0xe0>
220254f0:	1880008c 	andi	r2,r3,2
220254f4:	9c400017 	ldw	r17,0(r19)
220254f8:	10003126 	beq	r2,zero,220255c0 <__sfvwrite_r+0x124>
220254fc:	0029883a 	mov	r20,zero
22025500:	0025883a 	mov	r18,zero
22025504:	05810004 	movi	r22,1024
22025508:	a00d883a 	mov	r6,r20
2202550c:	a809883a 	mov	r4,r21
22025510:	90002526 	beq	r18,zero,220255a8 <__sfvwrite_r+0x10c>
22025514:	900f883a 	mov	r7,r18
22025518:	81400717 	ldw	r5,28(r16)
2202551c:	b480012e 	bgeu	r22,r18,22025524 <__sfvwrite_r+0x88>
22025520:	01c10004 	movi	r7,1024
22025524:	80800917 	ldw	r2,36(r16)
22025528:	103ee83a 	callr	r2
2202552c:	0080510e 	bge	zero,r2,22025674 <__sfvwrite_r+0x1d8>
22025530:	98c00217 	ldw	r3,8(r19)
22025534:	a0a9883a 	add	r20,r20,r2
22025538:	90a5c83a 	sub	r18,r18,r2
2202553c:	1885c83a 	sub	r2,r3,r2
22025540:	98800215 	stw	r2,8(r19)
22025544:	103ff01e 	bne	r2,zero,22025508 <__alt_data_end+0xfffe6108>
22025548:	0005883a 	mov	r2,zero
2202554c:	dfc00b17 	ldw	ra,44(sp)
22025550:	df000a17 	ldw	fp,40(sp)
22025554:	ddc00917 	ldw	r23,36(sp)
22025558:	dd800817 	ldw	r22,32(sp)
2202555c:	dd400717 	ldw	r21,28(sp)
22025560:	dd000617 	ldw	r20,24(sp)
22025564:	dcc00517 	ldw	r19,20(sp)
22025568:	dc800417 	ldw	r18,16(sp)
2202556c:	dc400317 	ldw	r17,12(sp)
22025570:	dc000217 	ldw	r16,8(sp)
22025574:	dec00c04 	addi	sp,sp,48
22025578:	f800283a 	ret
2202557c:	a809883a 	mov	r4,r21
22025580:	800b883a 	mov	r5,r16
22025584:	20230380 	call	22023038 <__swsetup_r>
22025588:	80c0030b 	ldhu	r3,12(r16)
2202558c:	103fd826 	beq	r2,zero,220254f0 <__alt_data_end+0xfffe60f0>
22025590:	18c01014 	ori	r3,r3,64
22025594:	80c0030d 	sth	r3,12(r16)
22025598:	00c00244 	movi	r3,9
2202559c:	00bfffc4 	movi	r2,-1
220255a0:	a8c00015 	stw	r3,0(r21)
220255a4:	003fe906 	br	2202554c <__alt_data_end+0xfffe614c>
220255a8:	8d000017 	ldw	r20,0(r17)
220255ac:	8c800117 	ldw	r18,4(r17)
220255b0:	8c400204 	addi	r17,r17,8
220255b4:	003fd406 	br	22025508 <__alt_data_end+0xfffe6108>
220255b8:	0005883a 	mov	r2,zero
220255bc:	f800283a 	ret
220255c0:	1880004c 	andi	r2,r3,1
220255c4:	1000301e 	bne	r2,zero,22025688 <__sfvwrite_r+0x1ec>
220255c8:	002f883a 	mov	r23,zero
220255cc:	0025883a 	mov	r18,zero
220255d0:	90001c26 	beq	r18,zero,22025644 <__sfvwrite_r+0x1a8>
220255d4:	1880800c 	andi	r2,r3,512
220255d8:	85000217 	ldw	r20,8(r16)
220255dc:	10006c26 	beq	r2,zero,22025790 <__sfvwrite_r+0x2f4>
220255e0:	a02d883a 	mov	r22,r20
220255e4:	95008536 	bltu	r18,r20,220257fc <__sfvwrite_r+0x360>
220255e8:	1881200c 	andi	r2,r3,1152
220255ec:	10009d1e 	bne	r2,zero,22025864 <__sfvwrite_r+0x3c8>
220255f0:	81000017 	ldw	r4,0(r16)
220255f4:	a039883a 	mov	fp,r20
220255f8:	9029883a 	mov	r20,r18
220255fc:	b80b883a 	mov	r5,r23
22025600:	b00d883a 	mov	r6,r22
22025604:	20265d80 	call	220265d8 <memmove>
22025608:	80c00217 	ldw	r3,8(r16)
2202560c:	81000017 	ldw	r4,0(r16)
22025610:	9005883a 	mov	r2,r18
22025614:	1f39c83a 	sub	fp,r3,fp
22025618:	258f883a 	add	r7,r4,r22
2202561c:	87000215 	stw	fp,8(r16)
22025620:	81c00015 	stw	r7,0(r16)
22025624:	98c00217 	ldw	r3,8(r19)
22025628:	b8af883a 	add	r23,r23,r2
2202562c:	90a5c83a 	sub	r18,r18,r2
22025630:	1d05c83a 	sub	r2,r3,r20
22025634:	98800215 	stw	r2,8(r19)
22025638:	103fc326 	beq	r2,zero,22025548 <__alt_data_end+0xfffe6148>
2202563c:	80c0030b 	ldhu	r3,12(r16)
22025640:	903fe41e 	bne	r18,zero,220255d4 <__alt_data_end+0xfffe61d4>
22025644:	8dc00017 	ldw	r23,0(r17)
22025648:	8c800117 	ldw	r18,4(r17)
2202564c:	8c400204 	addi	r17,r17,8
22025650:	003fdf06 	br	220255d0 <__alt_data_end+0xfffe61d0>
22025654:	202794c0 	call	2202794c <_realloc_r>
22025658:	102d883a 	mov	r22,r2
2202565c:	1000a01e 	bne	r2,zero,220258e0 <__sfvwrite_r+0x444>
22025660:	81400417 	ldw	r5,16(r16)
22025664:	a809883a 	mov	r4,r21
22025668:	20251ac0 	call	220251ac <_free_r>
2202566c:	00800304 	movi	r2,12
22025670:	a8800015 	stw	r2,0(r21)
22025674:	80c0030b 	ldhu	r3,12(r16)
22025678:	00bfffc4 	movi	r2,-1
2202567c:	18c01014 	ori	r3,r3,64
22025680:	80c0030d 	sth	r3,12(r16)
22025684:	003fb106 	br	2202554c <__alt_data_end+0xfffe614c>
22025688:	0029883a 	mov	r20,zero
2202568c:	0011883a 	mov	r8,zero
22025690:	0039883a 	mov	fp,zero
22025694:	0025883a 	mov	r18,zero
22025698:	90001f26 	beq	r18,zero,22025718 <__sfvwrite_r+0x27c>
2202569c:	40006826 	beq	r8,zero,22025840 <__sfvwrite_r+0x3a4>
220256a0:	a02f883a 	mov	r23,r20
220256a4:	9500012e 	bgeu	r18,r20,220256ac <__sfvwrite_r+0x210>
220256a8:	902f883a 	mov	r23,r18
220256ac:	81000017 	ldw	r4,0(r16)
220256b0:	80800417 	ldw	r2,16(r16)
220256b4:	b82d883a 	mov	r22,r23
220256b8:	81800217 	ldw	r6,8(r16)
220256bc:	81c00517 	ldw	r7,20(r16)
220256c0:	1100022e 	bgeu	r2,r4,220256cc <__sfvwrite_r+0x230>
220256c4:	31c7883a 	add	r3,r6,r7
220256c8:	1dc01816 	blt	r3,r23,2202572c <__sfvwrite_r+0x290>
220256cc:	b9c03f16 	blt	r23,r7,220257cc <__sfvwrite_r+0x330>
220256d0:	80800917 	ldw	r2,36(r16)
220256d4:	81400717 	ldw	r5,28(r16)
220256d8:	a809883a 	mov	r4,r21
220256dc:	da000115 	stw	r8,4(sp)
220256e0:	e00d883a 	mov	r6,fp
220256e4:	103ee83a 	callr	r2
220256e8:	102d883a 	mov	r22,r2
220256ec:	da000117 	ldw	r8,4(sp)
220256f0:	00bfe00e 	bge	zero,r2,22025674 <__alt_data_end+0xfffe6274>
220256f4:	a5a9c83a 	sub	r20,r20,r22
220256f8:	a0001f26 	beq	r20,zero,22025778 <__sfvwrite_r+0x2dc>
220256fc:	98800217 	ldw	r2,8(r19)
22025700:	e5b9883a 	add	fp,fp,r22
22025704:	95a5c83a 	sub	r18,r18,r22
22025708:	15adc83a 	sub	r22,r2,r22
2202570c:	9d800215 	stw	r22,8(r19)
22025710:	b03f8d26 	beq	r22,zero,22025548 <__alt_data_end+0xfffe6148>
22025714:	903fe11e 	bne	r18,zero,2202569c <__alt_data_end+0xfffe629c>
22025718:	8f000017 	ldw	fp,0(r17)
2202571c:	8c800117 	ldw	r18,4(r17)
22025720:	0011883a 	mov	r8,zero
22025724:	8c400204 	addi	r17,r17,8
22025728:	003fdb06 	br	22025698 <__alt_data_end+0xfffe6298>
2202572c:	180d883a 	mov	r6,r3
22025730:	e00b883a 	mov	r5,fp
22025734:	da000115 	stw	r8,4(sp)
22025738:	d8c00015 	stw	r3,0(sp)
2202573c:	20265d80 	call	220265d8 <memmove>
22025740:	d8c00017 	ldw	r3,0(sp)
22025744:	80800017 	ldw	r2,0(r16)
22025748:	a809883a 	mov	r4,r21
2202574c:	800b883a 	mov	r5,r16
22025750:	10c5883a 	add	r2,r2,r3
22025754:	80800015 	stw	r2,0(r16)
22025758:	d8c00015 	stw	r3,0(sp)
2202575c:	2024a900 	call	22024a90 <_fflush_r>
22025760:	d8c00017 	ldw	r3,0(sp)
22025764:	da000117 	ldw	r8,4(sp)
22025768:	103fc21e 	bne	r2,zero,22025674 <__alt_data_end+0xfffe6274>
2202576c:	182d883a 	mov	r22,r3
22025770:	a5a9c83a 	sub	r20,r20,r22
22025774:	a03fe11e 	bne	r20,zero,220256fc <__alt_data_end+0xfffe62fc>
22025778:	a809883a 	mov	r4,r21
2202577c:	800b883a 	mov	r5,r16
22025780:	2024a900 	call	22024a90 <_fflush_r>
22025784:	103fbb1e 	bne	r2,zero,22025674 <__alt_data_end+0xfffe6274>
22025788:	0011883a 	mov	r8,zero
2202578c:	003fdb06 	br	220256fc <__alt_data_end+0xfffe62fc>
22025790:	81000017 	ldw	r4,0(r16)
22025794:	80800417 	ldw	r2,16(r16)
22025798:	1100012e 	bgeu	r2,r4,220257a0 <__sfvwrite_r+0x304>
2202579c:	a4805a36 	bltu	r20,r18,22025908 <__sfvwrite_r+0x46c>
220257a0:	81c00517 	ldw	r7,20(r16)
220257a4:	91c01a36 	bltu	r18,r7,22025810 <__sfvwrite_r+0x374>
220257a8:	80800917 	ldw	r2,36(r16)
220257ac:	81400717 	ldw	r5,28(r16)
220257b0:	a809883a 	mov	r4,r21
220257b4:	b80d883a 	mov	r6,r23
220257b8:	103ee83a 	callr	r2
220257bc:	1029883a 	mov	r20,r2
220257c0:	00bfac0e 	bge	zero,r2,22025674 <__alt_data_end+0xfffe6274>
220257c4:	a005883a 	mov	r2,r20
220257c8:	003f9606 	br	22025624 <__alt_data_end+0xfffe6224>
220257cc:	b80d883a 	mov	r6,r23
220257d0:	e00b883a 	mov	r5,fp
220257d4:	da000115 	stw	r8,4(sp)
220257d8:	20265d80 	call	220265d8 <memmove>
220257dc:	80800217 	ldw	r2,8(r16)
220257e0:	80c00017 	ldw	r3,0(r16)
220257e4:	da000117 	ldw	r8,4(sp)
220257e8:	15c5c83a 	sub	r2,r2,r23
220257ec:	1def883a 	add	r23,r3,r23
220257f0:	80800215 	stw	r2,8(r16)
220257f4:	85c00015 	stw	r23,0(r16)
220257f8:	003fbe06 	br	220256f4 <__alt_data_end+0xfffe62f4>
220257fc:	81000017 	ldw	r4,0(r16)
22025800:	9039883a 	mov	fp,r18
22025804:	9029883a 	mov	r20,r18
22025808:	902d883a 	mov	r22,r18
2202580c:	003f7b06 	br	220255fc <__alt_data_end+0xfffe61fc>
22025810:	b80b883a 	mov	r5,r23
22025814:	900d883a 	mov	r6,r18
22025818:	20265d80 	call	220265d8 <memmove>
2202581c:	80c00217 	ldw	r3,8(r16)
22025820:	80800017 	ldw	r2,0(r16)
22025824:	9029883a 	mov	r20,r18
22025828:	1c87c83a 	sub	r3,r3,r18
2202582c:	1485883a 	add	r2,r2,r18
22025830:	80800015 	stw	r2,0(r16)
22025834:	80c00215 	stw	r3,8(r16)
22025838:	9005883a 	mov	r2,r18
2202583c:	003f7906 	br	22025624 <__alt_data_end+0xfffe6224>
22025840:	e009883a 	mov	r4,fp
22025844:	01400284 	movi	r5,10
22025848:	900d883a 	mov	r6,r18
2202584c:	20264f00 	call	220264f0 <memchr>
22025850:	10003826 	beq	r2,zero,22025934 <__sfvwrite_r+0x498>
22025854:	10800044 	addi	r2,r2,1
22025858:	1729c83a 	sub	r20,r2,fp
2202585c:	02000044 	movi	r8,1
22025860:	003f8f06 	br	220256a0 <__alt_data_end+0xfffe62a0>
22025864:	80800517 	ldw	r2,20(r16)
22025868:	81400417 	ldw	r5,16(r16)
2202586c:	87000017 	ldw	fp,0(r16)
22025870:	10a9883a 	add	r20,r2,r2
22025874:	a085883a 	add	r2,r20,r2
22025878:	1028d7fa 	srli	r20,r2,31
2202587c:	e179c83a 	sub	fp,fp,r5
22025880:	e1000044 	addi	r4,fp,1
22025884:	a085883a 	add	r2,r20,r2
22025888:	1029d07a 	srai	r20,r2,1
2202588c:	2485883a 	add	r2,r4,r18
22025890:	a00d883a 	mov	r6,r20
22025894:	a080022e 	bgeu	r20,r2,220258a0 <__sfvwrite_r+0x404>
22025898:	1029883a 	mov	r20,r2
2202589c:	100d883a 	mov	r6,r2
220258a0:	18c1000c 	andi	r3,r3,1024
220258a4:	a809883a 	mov	r4,r21
220258a8:	183f6a26 	beq	r3,zero,22025654 <__alt_data_end+0xfffe6254>
220258ac:	300b883a 	mov	r5,r6
220258b0:	2025d480 	call	22025d48 <_malloc_r>
220258b4:	102d883a 	mov	r22,r2
220258b8:	103f6c26 	beq	r2,zero,2202566c <__alt_data_end+0xfffe626c>
220258bc:	81400417 	ldw	r5,16(r16)
220258c0:	1009883a 	mov	r4,r2
220258c4:	e00d883a 	mov	r6,fp
220258c8:	2020c780 	call	22020c78 <memcpy>
220258cc:	8080030b 	ldhu	r2,12(r16)
220258d0:	00fedfc4 	movi	r3,-1153
220258d4:	10c4703a 	and	r2,r2,r3
220258d8:	10802014 	ori	r2,r2,128
220258dc:	8080030d 	sth	r2,12(r16)
220258e0:	b709883a 	add	r4,r22,fp
220258e4:	a707c83a 	sub	r3,r20,fp
220258e8:	85800415 	stw	r22,16(r16)
220258ec:	85000515 	stw	r20,20(r16)
220258f0:	81000015 	stw	r4,0(r16)
220258f4:	9039883a 	mov	fp,r18
220258f8:	80c00215 	stw	r3,8(r16)
220258fc:	9029883a 	mov	r20,r18
22025900:	902d883a 	mov	r22,r18
22025904:	003f3d06 	br	220255fc <__alt_data_end+0xfffe61fc>
22025908:	b80b883a 	mov	r5,r23
2202590c:	a00d883a 	mov	r6,r20
22025910:	20265d80 	call	220265d8 <memmove>
22025914:	80800017 	ldw	r2,0(r16)
22025918:	a809883a 	mov	r4,r21
2202591c:	800b883a 	mov	r5,r16
22025920:	1505883a 	add	r2,r2,r20
22025924:	80800015 	stw	r2,0(r16)
22025928:	2024a900 	call	22024a90 <_fflush_r>
2202592c:	103fa526 	beq	r2,zero,220257c4 <__alt_data_end+0xfffe63c4>
22025930:	003f5006 	br	22025674 <__alt_data_end+0xfffe6274>
22025934:	95000044 	addi	r20,r18,1
22025938:	02000044 	movi	r8,1
2202593c:	003f5806 	br	220256a0 <__alt_data_end+0xfffe62a0>

22025940 <_fwalk>:
22025940:	defff804 	addi	sp,sp,-32
22025944:	dd400515 	stw	r21,20(sp)
22025948:	2540b804 	addi	r21,r4,736
2202594c:	dd800615 	stw	r22,24(sp)
22025950:	dd000415 	stw	r20,16(sp)
22025954:	dfc00715 	stw	ra,28(sp)
22025958:	dcc00315 	stw	r19,12(sp)
2202595c:	dc800215 	stw	r18,8(sp)
22025960:	dc400115 	stw	r17,4(sp)
22025964:	dc000015 	stw	r16,0(sp)
22025968:	2829883a 	mov	r20,r5
2202596c:	002d883a 	mov	r22,zero
22025970:	20250480 	call	22025048 <__sfp_lock_acquire>
22025974:	a8001426 	beq	r21,zero,220259c8 <_fwalk+0x88>
22025978:	04ffffc4 	movi	r19,-1
2202597c:	ac400117 	ldw	r17,4(r21)
22025980:	ac800217 	ldw	r18,8(r21)
22025984:	8c7fffc4 	addi	r17,r17,-1
22025988:	88000d16 	blt	r17,zero,220259c0 <_fwalk+0x80>
2202598c:	94000304 	addi	r16,r18,12
22025990:	94800384 	addi	r18,r18,14
22025994:	80c0000f 	ldh	r3,0(r16)
22025998:	8c7fffc4 	addi	r17,r17,-1
2202599c:	813ffd04 	addi	r4,r16,-12
220259a0:	18000426 	beq	r3,zero,220259b4 <_fwalk+0x74>
220259a4:	90c0000f 	ldh	r3,0(r18)
220259a8:	1cc00226 	beq	r3,r19,220259b4 <_fwalk+0x74>
220259ac:	a03ee83a 	callr	r20
220259b0:	b0acb03a 	or	r22,r22,r2
220259b4:	84001a04 	addi	r16,r16,104
220259b8:	94801a04 	addi	r18,r18,104
220259bc:	8cfff51e 	bne	r17,r19,22025994 <__alt_data_end+0xfffe6594>
220259c0:	ad400017 	ldw	r21,0(r21)
220259c4:	a83fed1e 	bne	r21,zero,2202597c <__alt_data_end+0xfffe657c>
220259c8:	202504c0 	call	2202504c <__sfp_lock_release>
220259cc:	b005883a 	mov	r2,r22
220259d0:	dfc00717 	ldw	ra,28(sp)
220259d4:	dd800617 	ldw	r22,24(sp)
220259d8:	dd400517 	ldw	r21,20(sp)
220259dc:	dd000417 	ldw	r20,16(sp)
220259e0:	dcc00317 	ldw	r19,12(sp)
220259e4:	dc800217 	ldw	r18,8(sp)
220259e8:	dc400117 	ldw	r17,4(sp)
220259ec:	dc000017 	ldw	r16,0(sp)
220259f0:	dec00804 	addi	sp,sp,32
220259f4:	f800283a 	ret

220259f8 <_fwalk_reent>:
220259f8:	defff804 	addi	sp,sp,-32
220259fc:	dd400515 	stw	r21,20(sp)
22025a00:	2540b804 	addi	r21,r4,736
22025a04:	dd800615 	stw	r22,24(sp)
22025a08:	dd000415 	stw	r20,16(sp)
22025a0c:	dcc00315 	stw	r19,12(sp)
22025a10:	dfc00715 	stw	ra,28(sp)
22025a14:	dc800215 	stw	r18,8(sp)
22025a18:	dc400115 	stw	r17,4(sp)
22025a1c:	dc000015 	stw	r16,0(sp)
22025a20:	2027883a 	mov	r19,r4
22025a24:	2829883a 	mov	r20,r5
22025a28:	002d883a 	mov	r22,zero
22025a2c:	20250480 	call	22025048 <__sfp_lock_acquire>
22025a30:	a8001326 	beq	r21,zero,22025a80 <_fwalk_reent+0x88>
22025a34:	04bfffc4 	movi	r18,-1
22025a38:	ac400117 	ldw	r17,4(r21)
22025a3c:	ac000217 	ldw	r16,8(r21)
22025a40:	8c7fffc4 	addi	r17,r17,-1
22025a44:	88000c16 	blt	r17,zero,22025a78 <_fwalk_reent+0x80>
22025a48:	84000304 	addi	r16,r16,12
22025a4c:	80c0000f 	ldh	r3,0(r16)
22025a50:	8c7fffc4 	addi	r17,r17,-1
22025a54:	817ffd04 	addi	r5,r16,-12
22025a58:	18000526 	beq	r3,zero,22025a70 <_fwalk_reent+0x78>
22025a5c:	80c0008f 	ldh	r3,2(r16)
22025a60:	9809883a 	mov	r4,r19
22025a64:	1c800226 	beq	r3,r18,22025a70 <_fwalk_reent+0x78>
22025a68:	a03ee83a 	callr	r20
22025a6c:	b0acb03a 	or	r22,r22,r2
22025a70:	84001a04 	addi	r16,r16,104
22025a74:	8cbff51e 	bne	r17,r18,22025a4c <__alt_data_end+0xfffe664c>
22025a78:	ad400017 	ldw	r21,0(r21)
22025a7c:	a83fee1e 	bne	r21,zero,22025a38 <__alt_data_end+0xfffe6638>
22025a80:	202504c0 	call	2202504c <__sfp_lock_release>
22025a84:	b005883a 	mov	r2,r22
22025a88:	dfc00717 	ldw	ra,28(sp)
22025a8c:	dd800617 	ldw	r22,24(sp)
22025a90:	dd400517 	ldw	r21,20(sp)
22025a94:	dd000417 	ldw	r20,16(sp)
22025a98:	dcc00317 	ldw	r19,12(sp)
22025a9c:	dc800217 	ldw	r18,8(sp)
22025aa0:	dc400117 	ldw	r17,4(sp)
22025aa4:	dc000017 	ldw	r16,0(sp)
22025aa8:	dec00804 	addi	sp,sp,32
22025aac:	f800283a 	ret

22025ab0 <_setlocale_r>:
22025ab0:	30001b26 	beq	r6,zero,22025b20 <_setlocale_r+0x70>
22025ab4:	014880f4 	movhi	r5,8707
22025ab8:	defffe04 	addi	sp,sp,-8
22025abc:	297f3904 	addi	r5,r5,-796
22025ac0:	3009883a 	mov	r4,r6
22025ac4:	dc000015 	stw	r16,0(sp)
22025ac8:	dfc00115 	stw	ra,4(sp)
22025acc:	3021883a 	mov	r16,r6
22025ad0:	20280f00 	call	220280f0 <strcmp>
22025ad4:	1000061e 	bne	r2,zero,22025af0 <_setlocale_r+0x40>
22025ad8:	008880f4 	movhi	r2,8707
22025adc:	10bf3804 	addi	r2,r2,-800
22025ae0:	dfc00117 	ldw	ra,4(sp)
22025ae4:	dc000017 	ldw	r16,0(sp)
22025ae8:	dec00204 	addi	sp,sp,8
22025aec:	f800283a 	ret
22025af0:	014880f4 	movhi	r5,8707
22025af4:	297f3804 	addi	r5,r5,-800
22025af8:	8009883a 	mov	r4,r16
22025afc:	20280f00 	call	220280f0 <strcmp>
22025b00:	103ff526 	beq	r2,zero,22025ad8 <__alt_data_end+0xfffe66d8>
22025b04:	014880f4 	movhi	r5,8707
22025b08:	297f2304 	addi	r5,r5,-884
22025b0c:	8009883a 	mov	r4,r16
22025b10:	20280f00 	call	220280f0 <strcmp>
22025b14:	103ff026 	beq	r2,zero,22025ad8 <__alt_data_end+0xfffe66d8>
22025b18:	0005883a 	mov	r2,zero
22025b1c:	003ff006 	br	22025ae0 <__alt_data_end+0xfffe66e0>
22025b20:	008880f4 	movhi	r2,8707
22025b24:	10bf3804 	addi	r2,r2,-800
22025b28:	f800283a 	ret

22025b2c <__locale_charset>:
22025b2c:	008880f4 	movhi	r2,8707
22025b30:	1080e904 	addi	r2,r2,932
22025b34:	f800283a 	ret

22025b38 <__locale_mb_cur_max>:
22025b38:	008880f4 	movhi	r2,8707
22025b3c:	10868504 	addi	r2,r2,6676
22025b40:	10800017 	ldw	r2,0(r2)
22025b44:	f800283a 	ret

22025b48 <__locale_msgcharset>:
22025b48:	008880f4 	movhi	r2,8707
22025b4c:	1080e104 	addi	r2,r2,900
22025b50:	f800283a 	ret

22025b54 <__locale_cjk_lang>:
22025b54:	0005883a 	mov	r2,zero
22025b58:	f800283a 	ret

22025b5c <_localeconv_r>:
22025b5c:	008880f4 	movhi	r2,8707
22025b60:	1080f104 	addi	r2,r2,964
22025b64:	f800283a 	ret

22025b68 <setlocale>:
22025b68:	00c880f4 	movhi	r3,8707
22025b6c:	18c68404 	addi	r3,r3,6672
22025b70:	2005883a 	mov	r2,r4
22025b74:	19000017 	ldw	r4,0(r3)
22025b78:	280d883a 	mov	r6,r5
22025b7c:	100b883a 	mov	r5,r2
22025b80:	2025ab01 	jmpi	22025ab0 <_setlocale_r>

22025b84 <localeconv>:
22025b84:	008880f4 	movhi	r2,8707
22025b88:	1080f104 	addi	r2,r2,964
22025b8c:	f800283a 	ret

22025b90 <__smakebuf_r>:
22025b90:	2880030b 	ldhu	r2,12(r5)
22025b94:	10c0008c 	andi	r3,r2,2
22025b98:	1800401e 	bne	r3,zero,22025c9c <__smakebuf_r+0x10c>
22025b9c:	deffec04 	addi	sp,sp,-80
22025ba0:	dc000f15 	stw	r16,60(sp)
22025ba4:	2821883a 	mov	r16,r5
22025ba8:	2940038f 	ldh	r5,14(r5)
22025bac:	dc401015 	stw	r17,64(sp)
22025bb0:	dfc01315 	stw	ra,76(sp)
22025bb4:	dcc01215 	stw	r19,72(sp)
22025bb8:	dc801115 	stw	r18,68(sp)
22025bbc:	2023883a 	mov	r17,r4
22025bc0:	28001b16 	blt	r5,zero,22025c30 <__smakebuf_r+0xa0>
22025bc4:	d80d883a 	mov	r6,sp
22025bc8:	2029bfc0 	call	22029bfc <_fstat_r>
22025bcc:	10001716 	blt	r2,zero,22025c2c <__smakebuf_r+0x9c>
22025bd0:	d8800117 	ldw	r2,4(sp)
22025bd4:	00e00014 	movui	r3,32768
22025bd8:	10bc000c 	andi	r2,r2,61440
22025bdc:	10c03726 	beq	r2,r3,22025cbc <__smakebuf_r+0x12c>
22025be0:	80c0030b 	ldhu	r3,12(r16)
22025be4:	18c20014 	ori	r3,r3,2048
22025be8:	80c0030d 	sth	r3,12(r16)
22025bec:	00c80004 	movi	r3,8192
22025bf0:	10c03c1e 	bne	r2,r3,22025ce4 <__smakebuf_r+0x154>
22025bf4:	8140038f 	ldh	r5,14(r16)
22025bf8:	8809883a 	mov	r4,r17
22025bfc:	2029c540 	call	22029c54 <_isatty_r>
22025c00:	10004e26 	beq	r2,zero,22025d3c <__smakebuf_r+0x1ac>
22025c04:	8080030b 	ldhu	r2,12(r16)
22025c08:	04c00044 	movi	r19,1
22025c0c:	80c010c4 	addi	r3,r16,67
22025c10:	14c4b03a 	or	r2,r2,r19
22025c14:	8080030d 	sth	r2,12(r16)
22025c18:	80c00015 	stw	r3,0(r16)
22025c1c:	80c00415 	stw	r3,16(r16)
22025c20:	84c00515 	stw	r19,20(r16)
22025c24:	04810004 	movi	r18,1024
22025c28:	00000706 	br	22025c48 <__smakebuf_r+0xb8>
22025c2c:	8080030b 	ldhu	r2,12(r16)
22025c30:	10c0200c 	andi	r3,r2,128
22025c34:	18001f1e 	bne	r3,zero,22025cb4 <__smakebuf_r+0x124>
22025c38:	04810004 	movi	r18,1024
22025c3c:	10820014 	ori	r2,r2,2048
22025c40:	8080030d 	sth	r2,12(r16)
22025c44:	0027883a 	mov	r19,zero
22025c48:	8809883a 	mov	r4,r17
22025c4c:	900b883a 	mov	r5,r18
22025c50:	2025d480 	call	22025d48 <_malloc_r>
22025c54:	10002e26 	beq	r2,zero,22025d10 <__smakebuf_r+0x180>
22025c58:	80c0030b 	ldhu	r3,12(r16)
22025c5c:	010880b4 	movhi	r4,8706
22025c60:	21133e04 	addi	r4,r4,19704
22025c64:	89000f15 	stw	r4,60(r17)
22025c68:	18c02014 	ori	r3,r3,128
22025c6c:	80c0030d 	sth	r3,12(r16)
22025c70:	80800015 	stw	r2,0(r16)
22025c74:	80800415 	stw	r2,16(r16)
22025c78:	84800515 	stw	r18,20(r16)
22025c7c:	98001c1e 	bne	r19,zero,22025cf0 <__smakebuf_r+0x160>
22025c80:	dfc01317 	ldw	ra,76(sp)
22025c84:	dcc01217 	ldw	r19,72(sp)
22025c88:	dc801117 	ldw	r18,68(sp)
22025c8c:	dc401017 	ldw	r17,64(sp)
22025c90:	dc000f17 	ldw	r16,60(sp)
22025c94:	dec01404 	addi	sp,sp,80
22025c98:	f800283a 	ret
22025c9c:	288010c4 	addi	r2,r5,67
22025ca0:	28800015 	stw	r2,0(r5)
22025ca4:	28800415 	stw	r2,16(r5)
22025ca8:	00800044 	movi	r2,1
22025cac:	28800515 	stw	r2,20(r5)
22025cb0:	f800283a 	ret
22025cb4:	04801004 	movi	r18,64
22025cb8:	003fe006 	br	22025c3c <__alt_data_end+0xfffe683c>
22025cbc:	81000a17 	ldw	r4,40(r16)
22025cc0:	00c880f4 	movhi	r3,8707
22025cc4:	18e02304 	addi	r3,r3,-32628
22025cc8:	20ffc51e 	bne	r4,r3,22025be0 <__alt_data_end+0xfffe67e0>
22025ccc:	80c0030b 	ldhu	r3,12(r16)
22025cd0:	01010004 	movi	r4,1024
22025cd4:	81001315 	stw	r4,76(r16)
22025cd8:	1906b03a 	or	r3,r3,r4
22025cdc:	80c0030d 	sth	r3,12(r16)
22025ce0:	003fc206 	br	22025bec <__alt_data_end+0xfffe67ec>
22025ce4:	0027883a 	mov	r19,zero
22025ce8:	04810004 	movi	r18,1024
22025cec:	003fd606 	br	22025c48 <__alt_data_end+0xfffe6848>
22025cf0:	8140038f 	ldh	r5,14(r16)
22025cf4:	8809883a 	mov	r4,r17
22025cf8:	2029c540 	call	22029c54 <_isatty_r>
22025cfc:	103fe026 	beq	r2,zero,22025c80 <__alt_data_end+0xfffe6880>
22025d00:	8080030b 	ldhu	r2,12(r16)
22025d04:	10800054 	ori	r2,r2,1
22025d08:	8080030d 	sth	r2,12(r16)
22025d0c:	003fdc06 	br	22025c80 <__alt_data_end+0xfffe6880>
22025d10:	8080030b 	ldhu	r2,12(r16)
22025d14:	10c0800c 	andi	r3,r2,512
22025d18:	183fd91e 	bne	r3,zero,22025c80 <__alt_data_end+0xfffe6880>
22025d1c:	10800094 	ori	r2,r2,2
22025d20:	80c010c4 	addi	r3,r16,67
22025d24:	8080030d 	sth	r2,12(r16)
22025d28:	00800044 	movi	r2,1
22025d2c:	80c00015 	stw	r3,0(r16)
22025d30:	80c00415 	stw	r3,16(r16)
22025d34:	80800515 	stw	r2,20(r16)
22025d38:	003fd106 	br	22025c80 <__alt_data_end+0xfffe6880>
22025d3c:	04c00044 	movi	r19,1
22025d40:	04810004 	movi	r18,1024
22025d44:	003fc006 	br	22025c48 <__alt_data_end+0xfffe6848>

22025d48 <_malloc_r>:
22025d48:	defff504 	addi	sp,sp,-44
22025d4c:	dc800315 	stw	r18,12(sp)
22025d50:	dfc00a15 	stw	ra,40(sp)
22025d54:	df000915 	stw	fp,36(sp)
22025d58:	ddc00815 	stw	r23,32(sp)
22025d5c:	dd800715 	stw	r22,28(sp)
22025d60:	dd400615 	stw	r21,24(sp)
22025d64:	dd000515 	stw	r20,20(sp)
22025d68:	dcc00415 	stw	r19,16(sp)
22025d6c:	dc400215 	stw	r17,8(sp)
22025d70:	dc000115 	stw	r16,4(sp)
22025d74:	288002c4 	addi	r2,r5,11
22025d78:	00c00584 	movi	r3,22
22025d7c:	2025883a 	mov	r18,r4
22025d80:	18802a2e 	bgeu	r3,r2,22025e2c <_malloc_r+0xe4>
22025d84:	047ffe04 	movi	r17,-8
22025d88:	1462703a 	and	r17,r2,r17
22025d8c:	88009e16 	blt	r17,zero,22026008 <_malloc_r+0x2c0>
22025d90:	89409d36 	bltu	r17,r5,22026008 <_malloc_r+0x2c0>
22025d94:	202d7140 	call	2202d714 <__malloc_lock>
22025d98:	00807dc4 	movi	r2,503
22025d9c:	14402736 	bltu	r2,r17,22025e3c <_malloc_r+0xf4>
22025da0:	8806d0fa 	srli	r3,r17,3
22025da4:	04c880f4 	movhi	r19,8707
22025da8:	9cc0ff04 	addi	r19,r19,1020
22025dac:	18c5883a 	add	r2,r3,r3
22025db0:	1085883a 	add	r2,r2,r2
22025db4:	1085883a 	add	r2,r2,r2
22025db8:	9885883a 	add	r2,r19,r2
22025dbc:	14000317 	ldw	r16,12(r2)
22025dc0:	80814a26 	beq	r16,r2,220262ec <_malloc_r+0x5a4>
22025dc4:	80c00117 	ldw	r3,4(r16)
22025dc8:	81000317 	ldw	r4,12(r16)
22025dcc:	00bfff04 	movi	r2,-4
22025dd0:	1884703a 	and	r2,r3,r2
22025dd4:	81400217 	ldw	r5,8(r16)
22025dd8:	8085883a 	add	r2,r16,r2
22025ddc:	10c00117 	ldw	r3,4(r2)
22025de0:	29000315 	stw	r4,12(r5)
22025de4:	21400215 	stw	r5,8(r4)
22025de8:	18c00054 	ori	r3,r3,1
22025dec:	10c00115 	stw	r3,4(r2)
22025df0:	9009883a 	mov	r4,r18
22025df4:	202d7340 	call	2202d734 <__malloc_unlock>
22025df8:	80800204 	addi	r2,r16,8
22025dfc:	dfc00a17 	ldw	ra,40(sp)
22025e00:	df000917 	ldw	fp,36(sp)
22025e04:	ddc00817 	ldw	r23,32(sp)
22025e08:	dd800717 	ldw	r22,28(sp)
22025e0c:	dd400617 	ldw	r21,24(sp)
22025e10:	dd000517 	ldw	r20,20(sp)
22025e14:	dcc00417 	ldw	r19,16(sp)
22025e18:	dc800317 	ldw	r18,12(sp)
22025e1c:	dc400217 	ldw	r17,8(sp)
22025e20:	dc000117 	ldw	r16,4(sp)
22025e24:	dec00b04 	addi	sp,sp,44
22025e28:	f800283a 	ret
22025e2c:	04400404 	movi	r17,16
22025e30:	89407536 	bltu	r17,r5,22026008 <_malloc_r+0x2c0>
22025e34:	202d7140 	call	2202d714 <__malloc_lock>
22025e38:	003fd906 	br	22025da0 <__alt_data_end+0xfffe69a0>
22025e3c:	8806d27a 	srli	r3,r17,9
22025e40:	18007526 	beq	r3,zero,22026018 <_malloc_r+0x2d0>
22025e44:	00800104 	movi	r2,4
22025e48:	10c0ef36 	bltu	r2,r3,22026208 <_malloc_r+0x4c0>
22025e4c:	8806d1ba 	srli	r3,r17,6
22025e50:	19c00e04 	addi	r7,r3,56
22025e54:	39cb883a 	add	r5,r7,r7
22025e58:	04c880f4 	movhi	r19,8707
22025e5c:	294b883a 	add	r5,r5,r5
22025e60:	9cc0ff04 	addi	r19,r19,1020
22025e64:	294b883a 	add	r5,r5,r5
22025e68:	994b883a 	add	r5,r19,r5
22025e6c:	2c000317 	ldw	r16,12(r5)
22025e70:	2c000e26 	beq	r5,r16,22025eac <_malloc_r+0x164>
22025e74:	80800117 	ldw	r2,4(r16)
22025e78:	01bfff04 	movi	r6,-4
22025e7c:	010003c4 	movi	r4,15
22025e80:	1184703a 	and	r2,r2,r6
22025e84:	1447c83a 	sub	r3,r2,r17
22025e88:	20c00716 	blt	r4,r3,22025ea8 <_malloc_r+0x160>
22025e8c:	1800650e 	bge	r3,zero,22026024 <_malloc_r+0x2dc>
22025e90:	84000317 	ldw	r16,12(r16)
22025e94:	2c000526 	beq	r5,r16,22025eac <_malloc_r+0x164>
22025e98:	80800117 	ldw	r2,4(r16)
22025e9c:	1184703a 	and	r2,r2,r6
22025ea0:	1447c83a 	sub	r3,r2,r17
22025ea4:	20fff90e 	bge	r4,r3,22025e8c <__alt_data_end+0xfffe6a8c>
22025ea8:	39ffffc4 	addi	r7,r7,-1
22025eac:	38c00044 	addi	r3,r7,1
22025eb0:	018880f4 	movhi	r6,8707
22025eb4:	9c000417 	ldw	r16,16(r19)
22025eb8:	3180ff04 	addi	r6,r6,1020
22025ebc:	32400204 	addi	r9,r6,8
22025ec0:	82410326 	beq	r16,r9,220262d0 <_malloc_r+0x588>
22025ec4:	81000117 	ldw	r4,4(r16)
22025ec8:	00bfff04 	movi	r2,-4
22025ecc:	208e703a 	and	r7,r4,r2
22025ed0:	3c45c83a 	sub	r2,r7,r17
22025ed4:	010003c4 	movi	r4,15
22025ed8:	2080ee16 	blt	r4,r2,22026294 <_malloc_r+0x54c>
22025edc:	32400515 	stw	r9,20(r6)
22025ee0:	32400415 	stw	r9,16(r6)
22025ee4:	1000510e 	bge	r2,zero,2202602c <_malloc_r+0x2e4>
22025ee8:	00807fc4 	movi	r2,511
22025eec:	11c0ce36 	bltu	r2,r7,22026228 <_malloc_r+0x4e0>
22025ef0:	3808d0fa 	srli	r4,r7,3
22025ef4:	01c00044 	movi	r7,1
22025ef8:	30800117 	ldw	r2,4(r6)
22025efc:	210b883a 	add	r5,r4,r4
22025f00:	294b883a 	add	r5,r5,r5
22025f04:	2009d0ba 	srai	r4,r4,2
22025f08:	294b883a 	add	r5,r5,r5
22025f0c:	298b883a 	add	r5,r5,r6
22025f10:	2a000217 	ldw	r8,8(r5)
22025f14:	3908983a 	sll	r4,r7,r4
22025f18:	81400315 	stw	r5,12(r16)
22025f1c:	82000215 	stw	r8,8(r16)
22025f20:	2088b03a 	or	r4,r4,r2
22025f24:	2c000215 	stw	r16,8(r5)
22025f28:	31000115 	stw	r4,4(r6)
22025f2c:	44000315 	stw	r16,12(r8)
22025f30:	1805d0ba 	srai	r2,r3,2
22025f34:	01400044 	movi	r5,1
22025f38:	288a983a 	sll	r5,r5,r2
22025f3c:	21404336 	bltu	r4,r5,2202604c <_malloc_r+0x304>
22025f40:	2144703a 	and	r2,r4,r5
22025f44:	10000a1e 	bne	r2,zero,22025f70 <_malloc_r+0x228>
22025f48:	00bfff04 	movi	r2,-4
22025f4c:	294b883a 	add	r5,r5,r5
22025f50:	1886703a 	and	r3,r3,r2
22025f54:	2144703a 	and	r2,r4,r5
22025f58:	18c00104 	addi	r3,r3,4
22025f5c:	1000041e 	bne	r2,zero,22025f70 <_malloc_r+0x228>
22025f60:	294b883a 	add	r5,r5,r5
22025f64:	2144703a 	and	r2,r4,r5
22025f68:	18c00104 	addi	r3,r3,4
22025f6c:	103ffc26 	beq	r2,zero,22025f60 <__alt_data_end+0xfffe6b60>
22025f70:	023fff04 	movi	r8,-4
22025f74:	01c003c4 	movi	r7,15
22025f78:	18c5883a 	add	r2,r3,r3
22025f7c:	1085883a 	add	r2,r2,r2
22025f80:	1085883a 	add	r2,r2,r2
22025f84:	9895883a 	add	r10,r19,r2
22025f88:	52c00304 	addi	r11,r10,12
22025f8c:	1819883a 	mov	r12,r3
22025f90:	5c000017 	ldw	r16,0(r11)
22025f94:	59bffd04 	addi	r6,r11,-12
22025f98:	8180041e 	bne	r16,r6,22025fac <_malloc_r+0x264>
22025f9c:	0000ce06 	br	220262d8 <_malloc_r+0x590>
22025fa0:	2000d70e 	bge	r4,zero,22026300 <_malloc_r+0x5b8>
22025fa4:	84000317 	ldw	r16,12(r16)
22025fa8:	8180cb26 	beq	r16,r6,220262d8 <_malloc_r+0x590>
22025fac:	80800117 	ldw	r2,4(r16)
22025fb0:	1204703a 	and	r2,r2,r8
22025fb4:	1449c83a 	sub	r4,r2,r17
22025fb8:	393ff90e 	bge	r7,r4,22025fa0 <__alt_data_end+0xfffe6ba0>
22025fbc:	80800317 	ldw	r2,12(r16)
22025fc0:	80c00217 	ldw	r3,8(r16)
22025fc4:	89400054 	ori	r5,r17,1
22025fc8:	81400115 	stw	r5,4(r16)
22025fcc:	18800315 	stw	r2,12(r3)
22025fd0:	10c00215 	stw	r3,8(r2)
22025fd4:	8463883a 	add	r17,r16,r17
22025fd8:	9c400515 	stw	r17,20(r19)
22025fdc:	9c400415 	stw	r17,16(r19)
22025fe0:	20800054 	ori	r2,r4,1
22025fe4:	88800115 	stw	r2,4(r17)
22025fe8:	8a400315 	stw	r9,12(r17)
22025fec:	8a400215 	stw	r9,8(r17)
22025ff0:	8923883a 	add	r17,r17,r4
22025ff4:	89000015 	stw	r4,0(r17)
22025ff8:	9009883a 	mov	r4,r18
22025ffc:	202d7340 	call	2202d734 <__malloc_unlock>
22026000:	80800204 	addi	r2,r16,8
22026004:	003f7d06 	br	22025dfc <__alt_data_end+0xfffe69fc>
22026008:	00800304 	movi	r2,12
2202600c:	90800015 	stw	r2,0(r18)
22026010:	0005883a 	mov	r2,zero
22026014:	003f7906 	br	22025dfc <__alt_data_end+0xfffe69fc>
22026018:	01401f84 	movi	r5,126
2202601c:	01c00fc4 	movi	r7,63
22026020:	003f8d06 	br	22025e58 <__alt_data_end+0xfffe6a58>
22026024:	81000317 	ldw	r4,12(r16)
22026028:	003f6a06 	br	22025dd4 <__alt_data_end+0xfffe69d4>
2202602c:	81c5883a 	add	r2,r16,r7
22026030:	10c00117 	ldw	r3,4(r2)
22026034:	9009883a 	mov	r4,r18
22026038:	18c00054 	ori	r3,r3,1
2202603c:	10c00115 	stw	r3,4(r2)
22026040:	202d7340 	call	2202d734 <__malloc_unlock>
22026044:	80800204 	addi	r2,r16,8
22026048:	003f6c06 	br	22025dfc <__alt_data_end+0xfffe69fc>
2202604c:	9c000217 	ldw	r16,8(r19)
22026050:	00bfff04 	movi	r2,-4
22026054:	85800117 	ldw	r22,4(r16)
22026058:	b0ac703a 	and	r22,r22,r2
2202605c:	b4400336 	bltu	r22,r17,2202606c <_malloc_r+0x324>
22026060:	b445c83a 	sub	r2,r22,r17
22026064:	00c003c4 	movi	r3,15
22026068:	18805d16 	blt	r3,r2,220261e0 <_malloc_r+0x498>
2202606c:	05c880f4 	movhi	r23,8707
22026070:	008880f4 	movhi	r2,8707
22026074:	bdc68604 	addi	r23,r23,6680
22026078:	108d5304 	addi	r2,r2,13644
2202607c:	15400017 	ldw	r21,0(r2)
22026080:	b9000017 	ldw	r4,0(r23)
22026084:	00ffffc4 	movi	r3,-1
22026088:	858d883a 	add	r6,r16,r22
2202608c:	8d6b883a 	add	r21,r17,r21
22026090:	20c0e426 	beq	r4,r3,22026424 <_malloc_r+0x6dc>
22026094:	ad4403c4 	addi	r21,r21,4111
22026098:	00fc0004 	movi	r3,-4096
2202609c:	a8ea703a 	and	r21,r21,r3
220260a0:	9009883a 	mov	r4,r18
220260a4:	a80b883a 	mov	r5,r21
220260a8:	d9800015 	stw	r6,0(sp)
220260ac:	2027f600 	call	22027f60 <_sbrk_r>
220260b0:	00ffffc4 	movi	r3,-1
220260b4:	1029883a 	mov	r20,r2
220260b8:	d9800017 	ldw	r6,0(sp)
220260bc:	10c0a426 	beq	r2,r3,22026350 <_malloc_r+0x608>
220260c0:	1180a236 	bltu	r2,r6,2202634c <_malloc_r+0x604>
220260c4:	070880f4 	movhi	fp,8707
220260c8:	e70d5c04 	addi	fp,fp,13680
220260cc:	e0c00017 	ldw	r3,0(fp)
220260d0:	a8c7883a 	add	r3,r21,r3
220260d4:	e0c00015 	stw	r3,0(fp)
220260d8:	3500da26 	beq	r6,r20,22026444 <_malloc_r+0x6fc>
220260dc:	b9000017 	ldw	r4,0(r23)
220260e0:	00bfffc4 	movi	r2,-1
220260e4:	2080e426 	beq	r4,r2,22026478 <_malloc_r+0x730>
220260e8:	a185c83a 	sub	r2,r20,r6
220260ec:	1885883a 	add	r2,r3,r2
220260f0:	e0800015 	stw	r2,0(fp)
220260f4:	a0c001cc 	andi	r3,r20,7
220260f8:	1800b526 	beq	r3,zero,220263d0 <_malloc_r+0x688>
220260fc:	a0e9c83a 	sub	r20,r20,r3
22026100:	00840204 	movi	r2,4104
22026104:	a5000204 	addi	r20,r20,8
22026108:	10c7c83a 	sub	r3,r2,r3
2202610c:	a545883a 	add	r2,r20,r21
22026110:	1083ffcc 	andi	r2,r2,4095
22026114:	18abc83a 	sub	r21,r3,r2
22026118:	9009883a 	mov	r4,r18
2202611c:	a80b883a 	mov	r5,r21
22026120:	2027f600 	call	22027f60 <_sbrk_r>
22026124:	00ffffc4 	movi	r3,-1
22026128:	10c0d026 	beq	r2,r3,2202646c <_malloc_r+0x724>
2202612c:	1507c83a 	sub	r3,r2,r20
22026130:	a8c7883a 	add	r3,r21,r3
22026134:	18c00054 	ori	r3,r3,1
22026138:	e0800017 	ldw	r2,0(fp)
2202613c:	9d000215 	stw	r20,8(r19)
22026140:	a0c00115 	stw	r3,4(r20)
22026144:	a887883a 	add	r3,r21,r2
22026148:	e0c00015 	stw	r3,0(fp)
2202614c:	84c00e26 	beq	r16,r19,22026188 <_malloc_r+0x440>
22026150:	018003c4 	movi	r6,15
22026154:	3580a02e 	bgeu	r6,r22,220263d8 <_malloc_r+0x690>
22026158:	81400117 	ldw	r5,4(r16)
2202615c:	013ffe04 	movi	r4,-8
22026160:	b0bffd04 	addi	r2,r22,-12
22026164:	1104703a 	and	r2,r2,r4
22026168:	2900004c 	andi	r4,r5,1
2202616c:	1108b03a 	or	r4,r2,r4
22026170:	81000115 	stw	r4,4(r16)
22026174:	01400144 	movi	r5,5
22026178:	8089883a 	add	r4,r16,r2
2202617c:	21400115 	stw	r5,4(r4)
22026180:	21400215 	stw	r5,8(r4)
22026184:	3080c036 	bltu	r6,r2,22026488 <_malloc_r+0x740>
22026188:	008880f4 	movhi	r2,8707
2202618c:	108d5204 	addi	r2,r2,13640
22026190:	11000017 	ldw	r4,0(r2)
22026194:	20c0012e 	bgeu	r4,r3,2202619c <_malloc_r+0x454>
22026198:	10c00015 	stw	r3,0(r2)
2202619c:	008880f4 	movhi	r2,8707
220261a0:	108d5104 	addi	r2,r2,13636
220261a4:	11000017 	ldw	r4,0(r2)
220261a8:	9c000217 	ldw	r16,8(r19)
220261ac:	20c0012e 	bgeu	r4,r3,220261b4 <_malloc_r+0x46c>
220261b0:	10c00015 	stw	r3,0(r2)
220261b4:	80c00117 	ldw	r3,4(r16)
220261b8:	00bfff04 	movi	r2,-4
220261bc:	1886703a 	and	r3,r3,r2
220261c0:	1c45c83a 	sub	r2,r3,r17
220261c4:	1c400236 	bltu	r3,r17,220261d0 <_malloc_r+0x488>
220261c8:	00c003c4 	movi	r3,15
220261cc:	18800416 	blt	r3,r2,220261e0 <_malloc_r+0x498>
220261d0:	9009883a 	mov	r4,r18
220261d4:	202d7340 	call	2202d734 <__malloc_unlock>
220261d8:	0005883a 	mov	r2,zero
220261dc:	003f0706 	br	22025dfc <__alt_data_end+0xfffe69fc>
220261e0:	88c00054 	ori	r3,r17,1
220261e4:	80c00115 	stw	r3,4(r16)
220261e8:	8463883a 	add	r17,r16,r17
220261ec:	10800054 	ori	r2,r2,1
220261f0:	9c400215 	stw	r17,8(r19)
220261f4:	88800115 	stw	r2,4(r17)
220261f8:	9009883a 	mov	r4,r18
220261fc:	202d7340 	call	2202d734 <__malloc_unlock>
22026200:	80800204 	addi	r2,r16,8
22026204:	003efd06 	br	22025dfc <__alt_data_end+0xfffe69fc>
22026208:	00800504 	movi	r2,20
2202620c:	10c0482e 	bgeu	r2,r3,22026330 <_malloc_r+0x5e8>
22026210:	00801504 	movi	r2,84
22026214:	10c06836 	bltu	r2,r3,220263b8 <_malloc_r+0x670>
22026218:	8806d33a 	srli	r3,r17,12
2202621c:	19c01b84 	addi	r7,r3,110
22026220:	39cb883a 	add	r5,r7,r7
22026224:	003f0c06 	br	22025e58 <__alt_data_end+0xfffe6a58>
22026228:	3804d27a 	srli	r2,r7,9
2202622c:	01000104 	movi	r4,4
22026230:	2080422e 	bgeu	r4,r2,2202633c <_malloc_r+0x5f4>
22026234:	01000504 	movi	r4,20
22026238:	20807c36 	bltu	r4,r2,2202642c <_malloc_r+0x6e4>
2202623c:	110016c4 	addi	r4,r2,91
22026240:	210b883a 	add	r5,r4,r4
22026244:	294b883a 	add	r5,r5,r5
22026248:	294b883a 	add	r5,r5,r5
2202624c:	994b883a 	add	r5,r19,r5
22026250:	28800217 	ldw	r2,8(r5)
22026254:	020880f4 	movhi	r8,8707
22026258:	4200ff04 	addi	r8,r8,1020
2202625c:	11406326 	beq	r2,r5,220263ec <_malloc_r+0x6a4>
22026260:	01bfff04 	movi	r6,-4
22026264:	11000117 	ldw	r4,4(r2)
22026268:	2188703a 	and	r4,r4,r6
2202626c:	3900022e 	bgeu	r7,r4,22026278 <_malloc_r+0x530>
22026270:	10800217 	ldw	r2,8(r2)
22026274:	28bffb1e 	bne	r5,r2,22026264 <__alt_data_end+0xfffe6e64>
22026278:	11800317 	ldw	r6,12(r2)
2202627c:	99000117 	ldw	r4,4(r19)
22026280:	81800315 	stw	r6,12(r16)
22026284:	80800215 	stw	r2,8(r16)
22026288:	34000215 	stw	r16,8(r6)
2202628c:	14000315 	stw	r16,12(r2)
22026290:	003f2706 	br	22025f30 <__alt_data_end+0xfffe6b30>
22026294:	88c00054 	ori	r3,r17,1
22026298:	80c00115 	stw	r3,4(r16)
2202629c:	8463883a 	add	r17,r16,r17
220262a0:	34400515 	stw	r17,20(r6)
220262a4:	34400415 	stw	r17,16(r6)
220262a8:	10c00054 	ori	r3,r2,1
220262ac:	8a400315 	stw	r9,12(r17)
220262b0:	8a400215 	stw	r9,8(r17)
220262b4:	88c00115 	stw	r3,4(r17)
220262b8:	88a3883a 	add	r17,r17,r2
220262bc:	88800015 	stw	r2,0(r17)
220262c0:	9009883a 	mov	r4,r18
220262c4:	202d7340 	call	2202d734 <__malloc_unlock>
220262c8:	80800204 	addi	r2,r16,8
220262cc:	003ecb06 	br	22025dfc <__alt_data_end+0xfffe69fc>
220262d0:	31000117 	ldw	r4,4(r6)
220262d4:	003f1606 	br	22025f30 <__alt_data_end+0xfffe6b30>
220262d8:	63000044 	addi	r12,r12,1
220262dc:	608000cc 	andi	r2,r12,3
220262e0:	5ac00204 	addi	r11,r11,8
220262e4:	103f2a1e 	bne	r2,zero,22025f90 <__alt_data_end+0xfffe6b90>
220262e8:	00002106 	br	22026370 <_malloc_r+0x628>
220262ec:	80800204 	addi	r2,r16,8
220262f0:	84000517 	ldw	r16,20(r16)
220262f4:	143eb31e 	bne	r2,r16,22025dc4 <__alt_data_end+0xfffe69c4>
220262f8:	18c00084 	addi	r3,r3,2
220262fc:	003eec06 	br	22025eb0 <__alt_data_end+0xfffe6ab0>
22026300:	8085883a 	add	r2,r16,r2
22026304:	10c00117 	ldw	r3,4(r2)
22026308:	81000317 	ldw	r4,12(r16)
2202630c:	81400217 	ldw	r5,8(r16)
22026310:	18c00054 	ori	r3,r3,1
22026314:	10c00115 	stw	r3,4(r2)
22026318:	29000315 	stw	r4,12(r5)
2202631c:	21400215 	stw	r5,8(r4)
22026320:	9009883a 	mov	r4,r18
22026324:	202d7340 	call	2202d734 <__malloc_unlock>
22026328:	80800204 	addi	r2,r16,8
2202632c:	003eb306 	br	22025dfc <__alt_data_end+0xfffe69fc>
22026330:	19c016c4 	addi	r7,r3,91
22026334:	39cb883a 	add	r5,r7,r7
22026338:	003ec706 	br	22025e58 <__alt_data_end+0xfffe6a58>
2202633c:	3804d1ba 	srli	r2,r7,6
22026340:	11000e04 	addi	r4,r2,56
22026344:	210b883a 	add	r5,r4,r4
22026348:	003fbe06 	br	22026244 <__alt_data_end+0xfffe6e44>
2202634c:	84ff5d26 	beq	r16,r19,220260c4 <__alt_data_end+0xfffe6cc4>
22026350:	9c000217 	ldw	r16,8(r19)
22026354:	00bfff04 	movi	r2,-4
22026358:	80c00117 	ldw	r3,4(r16)
2202635c:	1886703a 	and	r3,r3,r2
22026360:	003f9706 	br	220261c0 <__alt_data_end+0xfffe6dc0>
22026364:	52800017 	ldw	r10,0(r10)
22026368:	18ffffc4 	addi	r3,r3,-1
2202636c:	50805c1e 	bne	r10,r2,220264e0 <_malloc_r+0x798>
22026370:	190000cc 	andi	r4,r3,3
22026374:	50bffe04 	addi	r2,r10,-8
22026378:	203ffa1e 	bne	r4,zero,22026364 <__alt_data_end+0xfffe6f64>
2202637c:	98800117 	ldw	r2,4(r19)
22026380:	0146303a 	nor	r3,zero,r5
22026384:	1884703a 	and	r2,r3,r2
22026388:	98800115 	stw	r2,4(r19)
2202638c:	294b883a 	add	r5,r5,r5
22026390:	117f2e36 	bltu	r2,r5,2202604c <__alt_data_end+0xfffe6c4c>
22026394:	283f2d26 	beq	r5,zero,2202604c <__alt_data_end+0xfffe6c4c>
22026398:	1146703a 	and	r3,r2,r5
2202639c:	1800521e 	bne	r3,zero,220264e8 <_malloc_r+0x7a0>
220263a0:	6007883a 	mov	r3,r12
220263a4:	294b883a 	add	r5,r5,r5
220263a8:	1148703a 	and	r4,r2,r5
220263ac:	18c00104 	addi	r3,r3,4
220263b0:	203ffc26 	beq	r4,zero,220263a4 <__alt_data_end+0xfffe6fa4>
220263b4:	003ef006 	br	22025f78 <__alt_data_end+0xfffe6b78>
220263b8:	00805504 	movi	r2,340
220263bc:	10c01336 	bltu	r2,r3,2202640c <_malloc_r+0x6c4>
220263c0:	8806d3fa 	srli	r3,r17,15
220263c4:	19c01dc4 	addi	r7,r3,119
220263c8:	39cb883a 	add	r5,r7,r7
220263cc:	003ea206 	br	22025e58 <__alt_data_end+0xfffe6a58>
220263d0:	00c40004 	movi	r3,4096
220263d4:	003f4d06 	br	2202610c <__alt_data_end+0xfffe6d0c>
220263d8:	00800044 	movi	r2,1
220263dc:	a0800115 	stw	r2,4(r20)
220263e0:	a021883a 	mov	r16,r20
220263e4:	0007883a 	mov	r3,zero
220263e8:	003f7506 	br	220261c0 <__alt_data_end+0xfffe6dc0>
220263ec:	200bd0ba 	srai	r5,r4,2
220263f0:	01800044 	movi	r6,1
220263f4:	41000117 	ldw	r4,4(r8)
220263f8:	314a983a 	sll	r5,r6,r5
220263fc:	100d883a 	mov	r6,r2
22026400:	2908b03a 	or	r4,r5,r4
22026404:	41000115 	stw	r4,4(r8)
22026408:	003f9d06 	br	22026280 <__alt_data_end+0xfffe6e80>
2202640c:	00815504 	movi	r2,1364
22026410:	10c01336 	bltu	r2,r3,22026460 <_malloc_r+0x718>
22026414:	8806d4ba 	srli	r3,r17,18
22026418:	19c01f04 	addi	r7,r3,124
2202641c:	39cb883a 	add	r5,r7,r7
22026420:	003e8d06 	br	22025e58 <__alt_data_end+0xfffe6a58>
22026424:	ad400404 	addi	r21,r21,16
22026428:	003f1d06 	br	220260a0 <__alt_data_end+0xfffe6ca0>
2202642c:	01001504 	movi	r4,84
22026430:	20801c36 	bltu	r4,r2,220264a4 <_malloc_r+0x75c>
22026434:	3804d33a 	srli	r2,r7,12
22026438:	11001b84 	addi	r4,r2,110
2202643c:	210b883a 	add	r5,r4,r4
22026440:	003f8006 	br	22026244 <__alt_data_end+0xfffe6e44>
22026444:	3083ffcc 	andi	r2,r6,4095
22026448:	103f241e 	bne	r2,zero,220260dc <__alt_data_end+0xfffe6cdc>
2202644c:	99000217 	ldw	r4,8(r19)
22026450:	ad85883a 	add	r2,r21,r22
22026454:	10800054 	ori	r2,r2,1
22026458:	20800115 	stw	r2,4(r4)
2202645c:	003f4a06 	br	22026188 <__alt_data_end+0xfffe6d88>
22026460:	01403f04 	movi	r5,252
22026464:	01c01f84 	movi	r7,126
22026468:	003e7b06 	br	22025e58 <__alt_data_end+0xfffe6a58>
2202646c:	00c00044 	movi	r3,1
22026470:	002b883a 	mov	r21,zero
22026474:	003f3006 	br	22026138 <__alt_data_end+0xfffe6d38>
22026478:	008880f4 	movhi	r2,8707
2202647c:	10868604 	addi	r2,r2,6680
22026480:	15000015 	stw	r20,0(r2)
22026484:	003f1b06 	br	220260f4 <__alt_data_end+0xfffe6cf4>
22026488:	9009883a 	mov	r4,r18
2202648c:	81400204 	addi	r5,r16,8
22026490:	20251ac0 	call	220251ac <_free_r>
22026494:	008880f4 	movhi	r2,8707
22026498:	108d5c04 	addi	r2,r2,13680
2202649c:	10c00017 	ldw	r3,0(r2)
220264a0:	003f3906 	br	22026188 <__alt_data_end+0xfffe6d88>
220264a4:	01005504 	movi	r4,340
220264a8:	20800436 	bltu	r4,r2,220264bc <_malloc_r+0x774>
220264ac:	3804d3fa 	srli	r2,r7,15
220264b0:	11001dc4 	addi	r4,r2,119
220264b4:	210b883a 	add	r5,r4,r4
220264b8:	003f6206 	br	22026244 <__alt_data_end+0xfffe6e44>
220264bc:	01015504 	movi	r4,1364
220264c0:	20800436 	bltu	r4,r2,220264d4 <_malloc_r+0x78c>
220264c4:	3804d4ba 	srli	r2,r7,18
220264c8:	11001f04 	addi	r4,r2,124
220264cc:	210b883a 	add	r5,r4,r4
220264d0:	003f5c06 	br	22026244 <__alt_data_end+0xfffe6e44>
220264d4:	01403f04 	movi	r5,252
220264d8:	01001f84 	movi	r4,126
220264dc:	003f5906 	br	22026244 <__alt_data_end+0xfffe6e44>
220264e0:	98800117 	ldw	r2,4(r19)
220264e4:	003fa906 	br	2202638c <__alt_data_end+0xfffe6f8c>
220264e8:	6007883a 	mov	r3,r12
220264ec:	003ea206 	br	22025f78 <__alt_data_end+0xfffe6b78>

220264f0 <memchr>:
220264f0:	208000cc 	andi	r2,r4,3
220264f4:	280f883a 	mov	r7,r5
220264f8:	10003526 	beq	r2,zero,220265d0 <memchr+0xe0>
220264fc:	30bfffc4 	addi	r2,r6,-1
22026500:	30001b26 	beq	r6,zero,22026570 <memchr+0x80>
22026504:	21800003 	ldbu	r6,0(r4)
22026508:	28c03fcc 	andi	r3,r5,255
2202650c:	30c01a26 	beq	r6,r3,22026578 <memchr+0x88>
22026510:	180d883a 	mov	r6,r3
22026514:	00000406 	br	22026528 <memchr+0x38>
22026518:	10001526 	beq	r2,zero,22026570 <memchr+0x80>
2202651c:	20c00003 	ldbu	r3,0(r4)
22026520:	10bfffc4 	addi	r2,r2,-1
22026524:	19801426 	beq	r3,r6,22026578 <memchr+0x88>
22026528:	21000044 	addi	r4,r4,1
2202652c:	20c000cc 	andi	r3,r4,3
22026530:	183ff91e 	bne	r3,zero,22026518 <__alt_data_end+0xfffe7118>
22026534:	024000c4 	movi	r9,3
22026538:	48801136 	bltu	r9,r2,22026580 <memchr+0x90>
2202653c:	10000c26 	beq	r2,zero,22026570 <memchr+0x80>
22026540:	20c00003 	ldbu	r3,0(r4)
22026544:	29403fcc 	andi	r5,r5,255
22026548:	19400b26 	beq	r3,r5,22026578 <memchr+0x88>
2202654c:	20c00044 	addi	r3,r4,1
22026550:	2085883a 	add	r2,r4,r2
22026554:	39803fcc 	andi	r6,r7,255
22026558:	00000306 	br	22026568 <memchr+0x78>
2202655c:	18c00044 	addi	r3,r3,1
22026560:	197fffc3 	ldbu	r5,-1(r3)
22026564:	29800426 	beq	r5,r6,22026578 <memchr+0x88>
22026568:	1809883a 	mov	r4,r3
2202656c:	18bffb1e 	bne	r3,r2,2202655c <__alt_data_end+0xfffe715c>
22026570:	0005883a 	mov	r2,zero
22026574:	f800283a 	ret
22026578:	2005883a 	mov	r2,r4
2202657c:	f800283a 	ret
22026580:	28c03fcc 	andi	r3,r5,255
22026584:	1810923a 	slli	r8,r3,8
22026588:	02ffbff4 	movhi	r11,65279
2202658c:	02a02074 	movhi	r10,32897
22026590:	40c6b03a 	or	r3,r8,r3
22026594:	1810943a 	slli	r8,r3,16
22026598:	5affbfc4 	addi	r11,r11,-257
2202659c:	52a02004 	addi	r10,r10,-32640
220265a0:	40d0b03a 	or	r8,r8,r3
220265a4:	20c00017 	ldw	r3,0(r4)
220265a8:	40c6f03a 	xor	r3,r8,r3
220265ac:	1acd883a 	add	r6,r3,r11
220265b0:	00c6303a 	nor	r3,zero,r3
220265b4:	30c6703a 	and	r3,r6,r3
220265b8:	1a86703a 	and	r3,r3,r10
220265bc:	183fdf1e 	bne	r3,zero,2202653c <__alt_data_end+0xfffe713c>
220265c0:	10bfff04 	addi	r2,r2,-4
220265c4:	21000104 	addi	r4,r4,4
220265c8:	48bff636 	bltu	r9,r2,220265a4 <__alt_data_end+0xfffe71a4>
220265cc:	003fdb06 	br	2202653c <__alt_data_end+0xfffe713c>
220265d0:	3005883a 	mov	r2,r6
220265d4:	003fd706 	br	22026534 <__alt_data_end+0xfffe7134>

220265d8 <memmove>:
220265d8:	2005883a 	mov	r2,r4
220265dc:	29000b2e 	bgeu	r5,r4,2202660c <memmove+0x34>
220265e0:	298f883a 	add	r7,r5,r6
220265e4:	21c0092e 	bgeu	r4,r7,2202660c <memmove+0x34>
220265e8:	2187883a 	add	r3,r4,r6
220265ec:	198bc83a 	sub	r5,r3,r6
220265f0:	30004b26 	beq	r6,zero,22026720 <memmove+0x148>
220265f4:	39ffffc4 	addi	r7,r7,-1
220265f8:	39000003 	ldbu	r4,0(r7)
220265fc:	18ffffc4 	addi	r3,r3,-1
22026600:	19000005 	stb	r4,0(r3)
22026604:	197ffb1e 	bne	r3,r5,220265f4 <__alt_data_end+0xfffe71f4>
22026608:	f800283a 	ret
2202660c:	00c003c4 	movi	r3,15
22026610:	1980412e 	bgeu	r3,r6,22026718 <memmove+0x140>
22026614:	1146b03a 	or	r3,r2,r5
22026618:	18c000cc 	andi	r3,r3,3
2202661c:	1800411e 	bne	r3,zero,22026724 <memmove+0x14c>
22026620:	33fffc04 	addi	r15,r6,-16
22026624:	781ed13a 	srli	r15,r15,4
22026628:	28c00104 	addi	r3,r5,4
2202662c:	13400104 	addi	r13,r2,4
22026630:	781c913a 	slli	r14,r15,4
22026634:	2b000204 	addi	r12,r5,8
22026638:	12c00204 	addi	r11,r2,8
2202663c:	73800504 	addi	r14,r14,20
22026640:	2a800304 	addi	r10,r5,12
22026644:	12400304 	addi	r9,r2,12
22026648:	2b9d883a 	add	r14,r5,r14
2202664c:	2811883a 	mov	r8,r5
22026650:	100f883a 	mov	r7,r2
22026654:	41000017 	ldw	r4,0(r8)
22026658:	39c00404 	addi	r7,r7,16
2202665c:	18c00404 	addi	r3,r3,16
22026660:	393ffc15 	stw	r4,-16(r7)
22026664:	193ffc17 	ldw	r4,-16(r3)
22026668:	6b400404 	addi	r13,r13,16
2202666c:	5ac00404 	addi	r11,r11,16
22026670:	693ffc15 	stw	r4,-16(r13)
22026674:	61000017 	ldw	r4,0(r12)
22026678:	4a400404 	addi	r9,r9,16
2202667c:	42000404 	addi	r8,r8,16
22026680:	593ffc15 	stw	r4,-16(r11)
22026684:	51000017 	ldw	r4,0(r10)
22026688:	63000404 	addi	r12,r12,16
2202668c:	52800404 	addi	r10,r10,16
22026690:	493ffc15 	stw	r4,-16(r9)
22026694:	1bbfef1e 	bne	r3,r14,22026654 <__alt_data_end+0xfffe7254>
22026698:	79000044 	addi	r4,r15,1
2202669c:	2008913a 	slli	r4,r4,4
220266a0:	328003cc 	andi	r10,r6,15
220266a4:	02c000c4 	movi	r11,3
220266a8:	1107883a 	add	r3,r2,r4
220266ac:	290b883a 	add	r5,r5,r4
220266b0:	5a801e2e 	bgeu	r11,r10,2202672c <memmove+0x154>
220266b4:	1813883a 	mov	r9,r3
220266b8:	2811883a 	mov	r8,r5
220266bc:	500f883a 	mov	r7,r10
220266c0:	41000017 	ldw	r4,0(r8)
220266c4:	4a400104 	addi	r9,r9,4
220266c8:	39ffff04 	addi	r7,r7,-4
220266cc:	493fff15 	stw	r4,-4(r9)
220266d0:	42000104 	addi	r8,r8,4
220266d4:	59fffa36 	bltu	r11,r7,220266c0 <__alt_data_end+0xfffe72c0>
220266d8:	513fff04 	addi	r4,r10,-4
220266dc:	2008d0ba 	srli	r4,r4,2
220266e0:	318000cc 	andi	r6,r6,3
220266e4:	21000044 	addi	r4,r4,1
220266e8:	2109883a 	add	r4,r4,r4
220266ec:	2109883a 	add	r4,r4,r4
220266f0:	1907883a 	add	r3,r3,r4
220266f4:	290b883a 	add	r5,r5,r4
220266f8:	30000926 	beq	r6,zero,22026720 <memmove+0x148>
220266fc:	198d883a 	add	r6,r3,r6
22026700:	29c00003 	ldbu	r7,0(r5)
22026704:	18c00044 	addi	r3,r3,1
22026708:	29400044 	addi	r5,r5,1
2202670c:	19ffffc5 	stb	r7,-1(r3)
22026710:	19bffb1e 	bne	r3,r6,22026700 <__alt_data_end+0xfffe7300>
22026714:	f800283a 	ret
22026718:	1007883a 	mov	r3,r2
2202671c:	003ff606 	br	220266f8 <__alt_data_end+0xfffe72f8>
22026720:	f800283a 	ret
22026724:	1007883a 	mov	r3,r2
22026728:	003ff406 	br	220266fc <__alt_data_end+0xfffe72fc>
2202672c:	500d883a 	mov	r6,r10
22026730:	003ff106 	br	220266f8 <__alt_data_end+0xfffe72f8>

22026734 <memset>:
22026734:	20c000cc 	andi	r3,r4,3
22026738:	2005883a 	mov	r2,r4
2202673c:	18004326 	beq	r3,zero,2202684c <memset+0x118>
22026740:	31ffffc4 	addi	r7,r6,-1
22026744:	30004026 	beq	r6,zero,22026848 <memset+0x114>
22026748:	2813883a 	mov	r9,r5
2202674c:	200d883a 	mov	r6,r4
22026750:	2007883a 	mov	r3,r4
22026754:	00000406 	br	22026768 <memset+0x34>
22026758:	3a3fffc4 	addi	r8,r7,-1
2202675c:	31800044 	addi	r6,r6,1
22026760:	38003926 	beq	r7,zero,22026848 <memset+0x114>
22026764:	400f883a 	mov	r7,r8
22026768:	18c00044 	addi	r3,r3,1
2202676c:	32400005 	stb	r9,0(r6)
22026770:	1a0000cc 	andi	r8,r3,3
22026774:	403ff81e 	bne	r8,zero,22026758 <__alt_data_end+0xfffe7358>
22026778:	010000c4 	movi	r4,3
2202677c:	21c02d2e 	bgeu	r4,r7,22026834 <memset+0x100>
22026780:	29803fcc 	andi	r6,r5,255
22026784:	3008923a 	slli	r4,r6,8
22026788:	218cb03a 	or	r6,r4,r6
2202678c:	3008943a 	slli	r4,r6,16
22026790:	218cb03a 	or	r6,r4,r6
22026794:	010003c4 	movi	r4,15
22026798:	21c0182e 	bgeu	r4,r7,220267fc <memset+0xc8>
2202679c:	3b3ffc04 	addi	r12,r7,-16
220267a0:	6018d13a 	srli	r12,r12,4
220267a4:	1a000104 	addi	r8,r3,4
220267a8:	1ac00204 	addi	r11,r3,8
220267ac:	6008913a 	slli	r4,r12,4
220267b0:	1a800304 	addi	r10,r3,12
220267b4:	1813883a 	mov	r9,r3
220267b8:	21000504 	addi	r4,r4,20
220267bc:	1909883a 	add	r4,r3,r4
220267c0:	49800015 	stw	r6,0(r9)
220267c4:	41800015 	stw	r6,0(r8)
220267c8:	59800015 	stw	r6,0(r11)
220267cc:	51800015 	stw	r6,0(r10)
220267d0:	42000404 	addi	r8,r8,16
220267d4:	4a400404 	addi	r9,r9,16
220267d8:	5ac00404 	addi	r11,r11,16
220267dc:	52800404 	addi	r10,r10,16
220267e0:	413ff71e 	bne	r8,r4,220267c0 <__alt_data_end+0xfffe73c0>
220267e4:	63000044 	addi	r12,r12,1
220267e8:	6018913a 	slli	r12,r12,4
220267ec:	39c003cc 	andi	r7,r7,15
220267f0:	010000c4 	movi	r4,3
220267f4:	1b07883a 	add	r3,r3,r12
220267f8:	21c00e2e 	bgeu	r4,r7,22026834 <memset+0x100>
220267fc:	1813883a 	mov	r9,r3
22026800:	3811883a 	mov	r8,r7
22026804:	010000c4 	movi	r4,3
22026808:	49800015 	stw	r6,0(r9)
2202680c:	423fff04 	addi	r8,r8,-4
22026810:	4a400104 	addi	r9,r9,4
22026814:	223ffc36 	bltu	r4,r8,22026808 <__alt_data_end+0xfffe7408>
22026818:	393fff04 	addi	r4,r7,-4
2202681c:	2008d0ba 	srli	r4,r4,2
22026820:	39c000cc 	andi	r7,r7,3
22026824:	21000044 	addi	r4,r4,1
22026828:	2109883a 	add	r4,r4,r4
2202682c:	2109883a 	add	r4,r4,r4
22026830:	1907883a 	add	r3,r3,r4
22026834:	38000426 	beq	r7,zero,22026848 <memset+0x114>
22026838:	19cf883a 	add	r7,r3,r7
2202683c:	19400005 	stb	r5,0(r3)
22026840:	18c00044 	addi	r3,r3,1
22026844:	19fffd1e 	bne	r3,r7,2202683c <__alt_data_end+0xfffe743c>
22026848:	f800283a 	ret
2202684c:	2007883a 	mov	r3,r4
22026850:	300f883a 	mov	r7,r6
22026854:	003fc806 	br	22026778 <__alt_data_end+0xfffe7378>

22026858 <_Balloc>:
22026858:	20801317 	ldw	r2,76(r4)
2202685c:	defffc04 	addi	sp,sp,-16
22026860:	dc400115 	stw	r17,4(sp)
22026864:	dc000015 	stw	r16,0(sp)
22026868:	dfc00315 	stw	ra,12(sp)
2202686c:	dc800215 	stw	r18,8(sp)
22026870:	2023883a 	mov	r17,r4
22026874:	2821883a 	mov	r16,r5
22026878:	10000f26 	beq	r2,zero,220268b8 <_Balloc+0x60>
2202687c:	8407883a 	add	r3,r16,r16
22026880:	18c7883a 	add	r3,r3,r3
22026884:	10c7883a 	add	r3,r2,r3
22026888:	18800017 	ldw	r2,0(r3)
2202688c:	10001126 	beq	r2,zero,220268d4 <_Balloc+0x7c>
22026890:	11000017 	ldw	r4,0(r2)
22026894:	19000015 	stw	r4,0(r3)
22026898:	10000415 	stw	zero,16(r2)
2202689c:	10000315 	stw	zero,12(r2)
220268a0:	dfc00317 	ldw	ra,12(sp)
220268a4:	dc800217 	ldw	r18,8(sp)
220268a8:	dc400117 	ldw	r17,4(sp)
220268ac:	dc000017 	ldw	r16,0(sp)
220268b0:	dec00404 	addi	sp,sp,16
220268b4:	f800283a 	ret
220268b8:	01400104 	movi	r5,4
220268bc:	01800844 	movi	r6,33
220268c0:	20298480 	call	22029848 <_calloc_r>
220268c4:	88801315 	stw	r2,76(r17)
220268c8:	103fec1e 	bne	r2,zero,2202687c <__alt_data_end+0xfffe747c>
220268cc:	0005883a 	mov	r2,zero
220268d0:	003ff306 	br	220268a0 <__alt_data_end+0xfffe74a0>
220268d4:	01400044 	movi	r5,1
220268d8:	2c24983a 	sll	r18,r5,r16
220268dc:	8809883a 	mov	r4,r17
220268e0:	91800144 	addi	r6,r18,5
220268e4:	318d883a 	add	r6,r6,r6
220268e8:	318d883a 	add	r6,r6,r6
220268ec:	20298480 	call	22029848 <_calloc_r>
220268f0:	103ff626 	beq	r2,zero,220268cc <__alt_data_end+0xfffe74cc>
220268f4:	14000115 	stw	r16,4(r2)
220268f8:	14800215 	stw	r18,8(r2)
220268fc:	003fe606 	br	22026898 <__alt_data_end+0xfffe7498>

22026900 <_Bfree>:
22026900:	28000826 	beq	r5,zero,22026924 <_Bfree+0x24>
22026904:	28c00117 	ldw	r3,4(r5)
22026908:	20801317 	ldw	r2,76(r4)
2202690c:	18c7883a 	add	r3,r3,r3
22026910:	18c7883a 	add	r3,r3,r3
22026914:	10c5883a 	add	r2,r2,r3
22026918:	10c00017 	ldw	r3,0(r2)
2202691c:	28c00015 	stw	r3,0(r5)
22026920:	11400015 	stw	r5,0(r2)
22026924:	f800283a 	ret

22026928 <__multadd>:
22026928:	defffa04 	addi	sp,sp,-24
2202692c:	dc000115 	stw	r16,4(sp)
22026930:	2c000417 	ldw	r16,16(r5)
22026934:	dc800315 	stw	r18,12(sp)
22026938:	dc400215 	stw	r17,8(sp)
2202693c:	dfc00515 	stw	ra,20(sp)
22026940:	dcc00415 	stw	r19,16(sp)
22026944:	2823883a 	mov	r17,r5
22026948:	2025883a 	mov	r18,r4
2202694c:	2a400504 	addi	r9,r5,20
22026950:	0015883a 	mov	r10,zero
22026954:	4a000017 	ldw	r8,0(r9)
22026958:	4a400104 	addi	r9,r9,4
2202695c:	52800044 	addi	r10,r10,1
22026960:	40ffffcc 	andi	r3,r8,65535
22026964:	1987383a 	mul	r3,r3,r6
22026968:	4010d43a 	srli	r8,r8,16
2202696c:	19cf883a 	add	r7,r3,r7
22026970:	4191383a 	mul	r8,r8,r6
22026974:	3816d43a 	srli	r11,r7,16
22026978:	38ffffcc 	andi	r3,r7,65535
2202697c:	5a0f883a 	add	r7,r11,r8
22026980:	3810943a 	slli	r8,r7,16
22026984:	380ed43a 	srli	r7,r7,16
22026988:	40c7883a 	add	r3,r8,r3
2202698c:	48ffff15 	stw	r3,-4(r9)
22026990:	543ff016 	blt	r10,r16,22026954 <__alt_data_end+0xfffe7554>
22026994:	38000926 	beq	r7,zero,220269bc <__multadd+0x94>
22026998:	88800217 	ldw	r2,8(r17)
2202699c:	80800f0e 	bge	r16,r2,220269dc <__multadd+0xb4>
220269a0:	80800144 	addi	r2,r16,5
220269a4:	1085883a 	add	r2,r2,r2
220269a8:	1085883a 	add	r2,r2,r2
220269ac:	8885883a 	add	r2,r17,r2
220269b0:	11c00015 	stw	r7,0(r2)
220269b4:	84000044 	addi	r16,r16,1
220269b8:	8c000415 	stw	r16,16(r17)
220269bc:	8805883a 	mov	r2,r17
220269c0:	dfc00517 	ldw	ra,20(sp)
220269c4:	dcc00417 	ldw	r19,16(sp)
220269c8:	dc800317 	ldw	r18,12(sp)
220269cc:	dc400217 	ldw	r17,8(sp)
220269d0:	dc000117 	ldw	r16,4(sp)
220269d4:	dec00604 	addi	sp,sp,24
220269d8:	f800283a 	ret
220269dc:	89400117 	ldw	r5,4(r17)
220269e0:	9009883a 	mov	r4,r18
220269e4:	d9c00015 	stw	r7,0(sp)
220269e8:	29400044 	addi	r5,r5,1
220269ec:	20268580 	call	22026858 <_Balloc>
220269f0:	89800417 	ldw	r6,16(r17)
220269f4:	89400304 	addi	r5,r17,12
220269f8:	11000304 	addi	r4,r2,12
220269fc:	31800084 	addi	r6,r6,2
22026a00:	318d883a 	add	r6,r6,r6
22026a04:	318d883a 	add	r6,r6,r6
22026a08:	1027883a 	mov	r19,r2
22026a0c:	2020c780 	call	22020c78 <memcpy>
22026a10:	89000117 	ldw	r4,4(r17)
22026a14:	90c01317 	ldw	r3,76(r18)
22026a18:	d9c00017 	ldw	r7,0(sp)
22026a1c:	2109883a 	add	r4,r4,r4
22026a20:	2109883a 	add	r4,r4,r4
22026a24:	1907883a 	add	r3,r3,r4
22026a28:	18800017 	ldw	r2,0(r3)
22026a2c:	88800015 	stw	r2,0(r17)
22026a30:	1c400015 	stw	r17,0(r3)
22026a34:	9823883a 	mov	r17,r19
22026a38:	003fd906 	br	220269a0 <__alt_data_end+0xfffe75a0>

22026a3c <__s2b>:
22026a3c:	defff904 	addi	sp,sp,-28
22026a40:	dc400115 	stw	r17,4(sp)
22026a44:	dc000015 	stw	r16,0(sp)
22026a48:	2023883a 	mov	r17,r4
22026a4c:	2821883a 	mov	r16,r5
22026a50:	39000204 	addi	r4,r7,8
22026a54:	01400244 	movi	r5,9
22026a58:	dcc00315 	stw	r19,12(sp)
22026a5c:	dc800215 	stw	r18,8(sp)
22026a60:	dfc00615 	stw	ra,24(sp)
22026a64:	dd400515 	stw	r21,20(sp)
22026a68:	dd000415 	stw	r20,16(sp)
22026a6c:	3825883a 	mov	r18,r7
22026a70:	3027883a 	mov	r19,r6
22026a74:	2020bb80 	call	22020bb8 <__divsi3>
22026a78:	00c00044 	movi	r3,1
22026a7c:	000b883a 	mov	r5,zero
22026a80:	1880030e 	bge	r3,r2,22026a90 <__s2b+0x54>
22026a84:	18c7883a 	add	r3,r3,r3
22026a88:	29400044 	addi	r5,r5,1
22026a8c:	18bffd16 	blt	r3,r2,22026a84 <__alt_data_end+0xfffe7684>
22026a90:	8809883a 	mov	r4,r17
22026a94:	20268580 	call	22026858 <_Balloc>
22026a98:	d8c00717 	ldw	r3,28(sp)
22026a9c:	10c00515 	stw	r3,20(r2)
22026aa0:	00c00044 	movi	r3,1
22026aa4:	10c00415 	stw	r3,16(r2)
22026aa8:	00c00244 	movi	r3,9
22026aac:	1cc0210e 	bge	r3,r19,22026b34 <__s2b+0xf8>
22026ab0:	80eb883a 	add	r21,r16,r3
22026ab4:	a829883a 	mov	r20,r21
22026ab8:	84e1883a 	add	r16,r16,r19
22026abc:	a1c00007 	ldb	r7,0(r20)
22026ac0:	8809883a 	mov	r4,r17
22026ac4:	a5000044 	addi	r20,r20,1
22026ac8:	100b883a 	mov	r5,r2
22026acc:	01800284 	movi	r6,10
22026ad0:	39fff404 	addi	r7,r7,-48
22026ad4:	20269280 	call	22026928 <__multadd>
22026ad8:	a43ff81e 	bne	r20,r16,22026abc <__alt_data_end+0xfffe76bc>
22026adc:	ace1883a 	add	r16,r21,r19
22026ae0:	843ffe04 	addi	r16,r16,-8
22026ae4:	9c800a0e 	bge	r19,r18,22026b10 <__s2b+0xd4>
22026ae8:	94e5c83a 	sub	r18,r18,r19
22026aec:	84a5883a 	add	r18,r16,r18
22026af0:	81c00007 	ldb	r7,0(r16)
22026af4:	8809883a 	mov	r4,r17
22026af8:	84000044 	addi	r16,r16,1
22026afc:	100b883a 	mov	r5,r2
22026b00:	01800284 	movi	r6,10
22026b04:	39fff404 	addi	r7,r7,-48
22026b08:	20269280 	call	22026928 <__multadd>
22026b0c:	84bff81e 	bne	r16,r18,22026af0 <__alt_data_end+0xfffe76f0>
22026b10:	dfc00617 	ldw	ra,24(sp)
22026b14:	dd400517 	ldw	r21,20(sp)
22026b18:	dd000417 	ldw	r20,16(sp)
22026b1c:	dcc00317 	ldw	r19,12(sp)
22026b20:	dc800217 	ldw	r18,8(sp)
22026b24:	dc400117 	ldw	r17,4(sp)
22026b28:	dc000017 	ldw	r16,0(sp)
22026b2c:	dec00704 	addi	sp,sp,28
22026b30:	f800283a 	ret
22026b34:	84000284 	addi	r16,r16,10
22026b38:	1827883a 	mov	r19,r3
22026b3c:	003fe906 	br	22026ae4 <__alt_data_end+0xfffe76e4>

22026b40 <__hi0bits>:
22026b40:	20bfffec 	andhi	r2,r4,65535
22026b44:	1000141e 	bne	r2,zero,22026b98 <__hi0bits+0x58>
22026b48:	2008943a 	slli	r4,r4,16
22026b4c:	00800404 	movi	r2,16
22026b50:	20ffc02c 	andhi	r3,r4,65280
22026b54:	1800021e 	bne	r3,zero,22026b60 <__hi0bits+0x20>
22026b58:	2008923a 	slli	r4,r4,8
22026b5c:	10800204 	addi	r2,r2,8
22026b60:	20fc002c 	andhi	r3,r4,61440
22026b64:	1800021e 	bne	r3,zero,22026b70 <__hi0bits+0x30>
22026b68:	2008913a 	slli	r4,r4,4
22026b6c:	10800104 	addi	r2,r2,4
22026b70:	20f0002c 	andhi	r3,r4,49152
22026b74:	1800031e 	bne	r3,zero,22026b84 <__hi0bits+0x44>
22026b78:	2109883a 	add	r4,r4,r4
22026b7c:	10800084 	addi	r2,r2,2
22026b80:	2109883a 	add	r4,r4,r4
22026b84:	20000316 	blt	r4,zero,22026b94 <__hi0bits+0x54>
22026b88:	2110002c 	andhi	r4,r4,16384
22026b8c:	2000041e 	bne	r4,zero,22026ba0 <__hi0bits+0x60>
22026b90:	00800804 	movi	r2,32
22026b94:	f800283a 	ret
22026b98:	0005883a 	mov	r2,zero
22026b9c:	003fec06 	br	22026b50 <__alt_data_end+0xfffe7750>
22026ba0:	10800044 	addi	r2,r2,1
22026ba4:	f800283a 	ret

22026ba8 <__lo0bits>:
22026ba8:	20c00017 	ldw	r3,0(r4)
22026bac:	188001cc 	andi	r2,r3,7
22026bb0:	10000826 	beq	r2,zero,22026bd4 <__lo0bits+0x2c>
22026bb4:	1880004c 	andi	r2,r3,1
22026bb8:	1000211e 	bne	r2,zero,22026c40 <__lo0bits+0x98>
22026bbc:	1880008c 	andi	r2,r3,2
22026bc0:	1000211e 	bne	r2,zero,22026c48 <__lo0bits+0xa0>
22026bc4:	1806d0ba 	srli	r3,r3,2
22026bc8:	00800084 	movi	r2,2
22026bcc:	20c00015 	stw	r3,0(r4)
22026bd0:	f800283a 	ret
22026bd4:	18bfffcc 	andi	r2,r3,65535
22026bd8:	10001326 	beq	r2,zero,22026c28 <__lo0bits+0x80>
22026bdc:	0005883a 	mov	r2,zero
22026be0:	19403fcc 	andi	r5,r3,255
22026be4:	2800021e 	bne	r5,zero,22026bf0 <__lo0bits+0x48>
22026be8:	1806d23a 	srli	r3,r3,8
22026bec:	10800204 	addi	r2,r2,8
22026bf0:	194003cc 	andi	r5,r3,15
22026bf4:	2800021e 	bne	r5,zero,22026c00 <__lo0bits+0x58>
22026bf8:	1806d13a 	srli	r3,r3,4
22026bfc:	10800104 	addi	r2,r2,4
22026c00:	194000cc 	andi	r5,r3,3
22026c04:	2800021e 	bne	r5,zero,22026c10 <__lo0bits+0x68>
22026c08:	1806d0ba 	srli	r3,r3,2
22026c0c:	10800084 	addi	r2,r2,2
22026c10:	1940004c 	andi	r5,r3,1
22026c14:	2800081e 	bne	r5,zero,22026c38 <__lo0bits+0x90>
22026c18:	1806d07a 	srli	r3,r3,1
22026c1c:	1800051e 	bne	r3,zero,22026c34 <__lo0bits+0x8c>
22026c20:	00800804 	movi	r2,32
22026c24:	f800283a 	ret
22026c28:	1806d43a 	srli	r3,r3,16
22026c2c:	00800404 	movi	r2,16
22026c30:	003feb06 	br	22026be0 <__alt_data_end+0xfffe77e0>
22026c34:	10800044 	addi	r2,r2,1
22026c38:	20c00015 	stw	r3,0(r4)
22026c3c:	f800283a 	ret
22026c40:	0005883a 	mov	r2,zero
22026c44:	f800283a 	ret
22026c48:	1806d07a 	srli	r3,r3,1
22026c4c:	00800044 	movi	r2,1
22026c50:	20c00015 	stw	r3,0(r4)
22026c54:	f800283a 	ret

22026c58 <__i2b>:
22026c58:	defffd04 	addi	sp,sp,-12
22026c5c:	dc000015 	stw	r16,0(sp)
22026c60:	04000044 	movi	r16,1
22026c64:	dc400115 	stw	r17,4(sp)
22026c68:	2823883a 	mov	r17,r5
22026c6c:	800b883a 	mov	r5,r16
22026c70:	dfc00215 	stw	ra,8(sp)
22026c74:	20268580 	call	22026858 <_Balloc>
22026c78:	14400515 	stw	r17,20(r2)
22026c7c:	14000415 	stw	r16,16(r2)
22026c80:	dfc00217 	ldw	ra,8(sp)
22026c84:	dc400117 	ldw	r17,4(sp)
22026c88:	dc000017 	ldw	r16,0(sp)
22026c8c:	dec00304 	addi	sp,sp,12
22026c90:	f800283a 	ret

22026c94 <__multiply>:
22026c94:	defffa04 	addi	sp,sp,-24
22026c98:	dcc00315 	stw	r19,12(sp)
22026c9c:	dc800215 	stw	r18,8(sp)
22026ca0:	2cc00417 	ldw	r19,16(r5)
22026ca4:	34800417 	ldw	r18,16(r6)
22026ca8:	dd000415 	stw	r20,16(sp)
22026cac:	dc400115 	stw	r17,4(sp)
22026cb0:	dfc00515 	stw	ra,20(sp)
22026cb4:	dc000015 	stw	r16,0(sp)
22026cb8:	2829883a 	mov	r20,r5
22026cbc:	3023883a 	mov	r17,r6
22026cc0:	9c807016 	blt	r19,r18,22026e84 <__multiply+0x1f0>
22026cc4:	9005883a 	mov	r2,r18
22026cc8:	9825883a 	mov	r18,r19
22026ccc:	1027883a 	mov	r19,r2
22026cd0:	a0800217 	ldw	r2,8(r20)
22026cd4:	94e1883a 	add	r16,r18,r19
22026cd8:	a1400117 	ldw	r5,4(r20)
22026cdc:	1400010e 	bge	r2,r16,22026ce4 <__multiply+0x50>
22026ce0:	29400044 	addi	r5,r5,1
22026ce4:	20268580 	call	22026858 <_Balloc>
22026ce8:	8417883a 	add	r11,r16,r16
22026cec:	13000504 	addi	r12,r2,20
22026cf0:	5ad7883a 	add	r11,r11,r11
22026cf4:	62d7883a 	add	r11,r12,r11
22026cf8:	6007883a 	mov	r3,r12
22026cfc:	62c0032e 	bgeu	r12,r11,22026d0c <__multiply+0x78>
22026d00:	18000015 	stw	zero,0(r3)
22026d04:	18c00104 	addi	r3,r3,4
22026d08:	1afffd36 	bltu	r3,r11,22026d00 <__alt_data_end+0xfffe7900>
22026d0c:	9ce7883a 	add	r19,r19,r19
22026d10:	94a5883a 	add	r18,r18,r18
22026d14:	89800504 	addi	r6,r17,20
22026d18:	9ce7883a 	add	r19,r19,r19
22026d1c:	a3800504 	addi	r14,r20,20
22026d20:	94a5883a 	add	r18,r18,r18
22026d24:	34db883a 	add	r13,r6,r19
22026d28:	7495883a 	add	r10,r14,r18
22026d2c:	3340422e 	bgeu	r6,r13,22026e38 <__multiply+0x1a4>
22026d30:	34400017 	ldw	r17,0(r6)
22026d34:	8cbfffcc 	andi	r18,r17,65535
22026d38:	90001b26 	beq	r18,zero,22026da8 <__multiply+0x114>
22026d3c:	6013883a 	mov	r9,r12
22026d40:	7023883a 	mov	r17,r14
22026d44:	0011883a 	mov	r8,zero
22026d48:	88c00017 	ldw	r3,0(r17)
22026d4c:	4bc00017 	ldw	r15,0(r9)
22026d50:	8c400104 	addi	r17,r17,4
22026d54:	19ffffcc 	andi	r7,r3,65535
22026d58:	3c8f383a 	mul	r7,r7,r18
22026d5c:	1808d43a 	srli	r4,r3,16
22026d60:	797fffcc 	andi	r5,r15,65535
22026d64:	29cb883a 	add	r5,r5,r7
22026d68:	2a0b883a 	add	r5,r5,r8
22026d6c:	2489383a 	mul	r4,r4,r18
22026d70:	7806d43a 	srli	r3,r15,16
22026d74:	2810d43a 	srli	r8,r5,16
22026d78:	297fffcc 	andi	r5,r5,65535
22026d7c:	1907883a 	add	r3,r3,r4
22026d80:	1a07883a 	add	r3,r3,r8
22026d84:	1808943a 	slli	r4,r3,16
22026d88:	480f883a 	mov	r7,r9
22026d8c:	1810d43a 	srli	r8,r3,16
22026d90:	214ab03a 	or	r5,r4,r5
22026d94:	49400015 	stw	r5,0(r9)
22026d98:	4a400104 	addi	r9,r9,4
22026d9c:	8abfea36 	bltu	r17,r10,22026d48 <__alt_data_end+0xfffe7948>
22026da0:	3a000115 	stw	r8,4(r7)
22026da4:	34400017 	ldw	r17,0(r6)
22026da8:	8822d43a 	srli	r17,r17,16
22026dac:	88001f26 	beq	r17,zero,22026e2c <__multiply+0x198>
22026db0:	60c00017 	ldw	r3,0(r12)
22026db4:	7013883a 	mov	r9,r14
22026db8:	601f883a 	mov	r15,r12
22026dbc:	1811883a 	mov	r8,r3
22026dc0:	6027883a 	mov	r19,r12
22026dc4:	000f883a 	mov	r7,zero
22026dc8:	00000106 	br	22026dd0 <__multiply+0x13c>
22026dcc:	9027883a 	mov	r19,r18
22026dd0:	4940000b 	ldhu	r5,0(r9)
22026dd4:	4010d43a 	srli	r8,r8,16
22026dd8:	193fffcc 	andi	r4,r3,65535
22026ddc:	2c4b383a 	mul	r5,r5,r17
22026de0:	7bc00104 	addi	r15,r15,4
22026de4:	4a400104 	addi	r9,r9,4
22026de8:	2a0b883a 	add	r5,r5,r8
22026dec:	29cb883a 	add	r5,r5,r7
22026df0:	2806943a 	slli	r3,r5,16
22026df4:	9c800104 	addi	r18,r19,4
22026df8:	280ad43a 	srli	r5,r5,16
22026dfc:	1908b03a 	or	r4,r3,r4
22026e00:	793fff15 	stw	r4,-4(r15)
22026e04:	48ffff17 	ldw	r3,-4(r9)
22026e08:	92000017 	ldw	r8,0(r18)
22026e0c:	1806d43a 	srli	r3,r3,16
22026e10:	413fffcc 	andi	r4,r8,65535
22026e14:	1c47383a 	mul	r3,r3,r17
22026e18:	1907883a 	add	r3,r3,r4
22026e1c:	1947883a 	add	r3,r3,r5
22026e20:	180ed43a 	srli	r7,r3,16
22026e24:	4abfe936 	bltu	r9,r10,22026dcc <__alt_data_end+0xfffe79cc>
22026e28:	98c00115 	stw	r3,4(r19)
22026e2c:	31800104 	addi	r6,r6,4
22026e30:	63000104 	addi	r12,r12,4
22026e34:	337fbe36 	bltu	r6,r13,22026d30 <__alt_data_end+0xfffe7930>
22026e38:	0400090e 	bge	zero,r16,22026e60 <__multiply+0x1cc>
22026e3c:	58ffff17 	ldw	r3,-4(r11)
22026e40:	5affff04 	addi	r11,r11,-4
22026e44:	18000326 	beq	r3,zero,22026e54 <__multiply+0x1c0>
22026e48:	00000506 	br	22026e60 <__multiply+0x1cc>
22026e4c:	58c00017 	ldw	r3,0(r11)
22026e50:	1800031e 	bne	r3,zero,22026e60 <__multiply+0x1cc>
22026e54:	843fffc4 	addi	r16,r16,-1
22026e58:	5affff04 	addi	r11,r11,-4
22026e5c:	803ffb1e 	bne	r16,zero,22026e4c <__alt_data_end+0xfffe7a4c>
22026e60:	14000415 	stw	r16,16(r2)
22026e64:	dfc00517 	ldw	ra,20(sp)
22026e68:	dd000417 	ldw	r20,16(sp)
22026e6c:	dcc00317 	ldw	r19,12(sp)
22026e70:	dc800217 	ldw	r18,8(sp)
22026e74:	dc400117 	ldw	r17,4(sp)
22026e78:	dc000017 	ldw	r16,0(sp)
22026e7c:	dec00604 	addi	sp,sp,24
22026e80:	f800283a 	ret
22026e84:	3029883a 	mov	r20,r6
22026e88:	2823883a 	mov	r17,r5
22026e8c:	003f9006 	br	22026cd0 <__alt_data_end+0xfffe78d0>

22026e90 <__pow5mult>:
22026e90:	defffa04 	addi	sp,sp,-24
22026e94:	dcc00315 	stw	r19,12(sp)
22026e98:	dc800215 	stw	r18,8(sp)
22026e9c:	dc000015 	stw	r16,0(sp)
22026ea0:	dfc00515 	stw	ra,20(sp)
22026ea4:	dd000415 	stw	r20,16(sp)
22026ea8:	dc400115 	stw	r17,4(sp)
22026eac:	308000cc 	andi	r2,r6,3
22026eb0:	3021883a 	mov	r16,r6
22026eb4:	2027883a 	mov	r19,r4
22026eb8:	2825883a 	mov	r18,r5
22026ebc:	10002e1e 	bne	r2,zero,22026f78 <__pow5mult+0xe8>
22026ec0:	8021d0ba 	srai	r16,r16,2
22026ec4:	80001a26 	beq	r16,zero,22026f30 <__pow5mult+0xa0>
22026ec8:	9c401217 	ldw	r17,72(r19)
22026ecc:	8800061e 	bne	r17,zero,22026ee8 <__pow5mult+0x58>
22026ed0:	00003406 	br	22026fa4 <__pow5mult+0x114>
22026ed4:	8021d07a 	srai	r16,r16,1
22026ed8:	80001526 	beq	r16,zero,22026f30 <__pow5mult+0xa0>
22026edc:	88800017 	ldw	r2,0(r17)
22026ee0:	10001c26 	beq	r2,zero,22026f54 <__pow5mult+0xc4>
22026ee4:	1023883a 	mov	r17,r2
22026ee8:	80c0004c 	andi	r3,r16,1
22026eec:	183ff926 	beq	r3,zero,22026ed4 <__alt_data_end+0xfffe7ad4>
22026ef0:	900b883a 	mov	r5,r18
22026ef4:	880d883a 	mov	r6,r17
22026ef8:	9809883a 	mov	r4,r19
22026efc:	2026c940 	call	22026c94 <__multiply>
22026f00:	90001b26 	beq	r18,zero,22026f70 <__pow5mult+0xe0>
22026f04:	91c00117 	ldw	r7,4(r18)
22026f08:	98c01317 	ldw	r3,76(r19)
22026f0c:	8021d07a 	srai	r16,r16,1
22026f10:	39cf883a 	add	r7,r7,r7
22026f14:	39cf883a 	add	r7,r7,r7
22026f18:	19c7883a 	add	r3,r3,r7
22026f1c:	19000017 	ldw	r4,0(r3)
22026f20:	91000015 	stw	r4,0(r18)
22026f24:	1c800015 	stw	r18,0(r3)
22026f28:	1025883a 	mov	r18,r2
22026f2c:	803feb1e 	bne	r16,zero,22026edc <__alt_data_end+0xfffe7adc>
22026f30:	9005883a 	mov	r2,r18
22026f34:	dfc00517 	ldw	ra,20(sp)
22026f38:	dd000417 	ldw	r20,16(sp)
22026f3c:	dcc00317 	ldw	r19,12(sp)
22026f40:	dc800217 	ldw	r18,8(sp)
22026f44:	dc400117 	ldw	r17,4(sp)
22026f48:	dc000017 	ldw	r16,0(sp)
22026f4c:	dec00604 	addi	sp,sp,24
22026f50:	f800283a 	ret
22026f54:	9809883a 	mov	r4,r19
22026f58:	880b883a 	mov	r5,r17
22026f5c:	880d883a 	mov	r6,r17
22026f60:	2026c940 	call	22026c94 <__multiply>
22026f64:	88800015 	stw	r2,0(r17)
22026f68:	10000015 	stw	zero,0(r2)
22026f6c:	003fdd06 	br	22026ee4 <__alt_data_end+0xfffe7ae4>
22026f70:	1025883a 	mov	r18,r2
22026f74:	003fd706 	br	22026ed4 <__alt_data_end+0xfffe7ad4>
22026f78:	10bfffc4 	addi	r2,r2,-1
22026f7c:	1085883a 	add	r2,r2,r2
22026f80:	00c880f4 	movhi	r3,8707
22026f84:	18ff3c04 	addi	r3,r3,-784
22026f88:	1085883a 	add	r2,r2,r2
22026f8c:	1885883a 	add	r2,r3,r2
22026f90:	11800017 	ldw	r6,0(r2)
22026f94:	000f883a 	mov	r7,zero
22026f98:	20269280 	call	22026928 <__multadd>
22026f9c:	1025883a 	mov	r18,r2
22026fa0:	003fc706 	br	22026ec0 <__alt_data_end+0xfffe7ac0>
22026fa4:	05000044 	movi	r20,1
22026fa8:	9809883a 	mov	r4,r19
22026fac:	a00b883a 	mov	r5,r20
22026fb0:	20268580 	call	22026858 <_Balloc>
22026fb4:	1023883a 	mov	r17,r2
22026fb8:	00809c44 	movi	r2,625
22026fbc:	88800515 	stw	r2,20(r17)
22026fc0:	8d000415 	stw	r20,16(r17)
22026fc4:	9c401215 	stw	r17,72(r19)
22026fc8:	88000015 	stw	zero,0(r17)
22026fcc:	003fc606 	br	22026ee8 <__alt_data_end+0xfffe7ae8>

22026fd0 <__lshift>:
22026fd0:	defff904 	addi	sp,sp,-28
22026fd4:	dd000415 	stw	r20,16(sp)
22026fd8:	dcc00315 	stw	r19,12(sp)
22026fdc:	3029d17a 	srai	r20,r6,5
22026fe0:	2cc00417 	ldw	r19,16(r5)
22026fe4:	28800217 	ldw	r2,8(r5)
22026fe8:	dd400515 	stw	r21,20(sp)
22026fec:	a4e7883a 	add	r19,r20,r19
22026ff0:	dc800215 	stw	r18,8(sp)
22026ff4:	dc400115 	stw	r17,4(sp)
22026ff8:	dc000015 	stw	r16,0(sp)
22026ffc:	dfc00615 	stw	ra,24(sp)
22027000:	9c000044 	addi	r16,r19,1
22027004:	2823883a 	mov	r17,r5
22027008:	302b883a 	mov	r21,r6
2202700c:	2025883a 	mov	r18,r4
22027010:	29400117 	ldw	r5,4(r5)
22027014:	1400030e 	bge	r2,r16,22027024 <__lshift+0x54>
22027018:	1085883a 	add	r2,r2,r2
2202701c:	29400044 	addi	r5,r5,1
22027020:	143ffd16 	blt	r2,r16,22027018 <__alt_data_end+0xfffe7c18>
22027024:	9009883a 	mov	r4,r18
22027028:	20268580 	call	22026858 <_Balloc>
2202702c:	11c00504 	addi	r7,r2,20
22027030:	0500090e 	bge	zero,r20,22027058 <__lshift+0x88>
22027034:	3811883a 	mov	r8,r7
22027038:	0007883a 	mov	r3,zero
2202703c:	40000015 	stw	zero,0(r8)
22027040:	18c00044 	addi	r3,r3,1
22027044:	42000104 	addi	r8,r8,4
22027048:	1d3ffc1e 	bne	r3,r20,2202703c <__alt_data_end+0xfffe7c3c>
2202704c:	18c7883a 	add	r3,r3,r3
22027050:	18c7883a 	add	r3,r3,r3
22027054:	38cf883a 	add	r7,r7,r3
22027058:	89000417 	ldw	r4,16(r17)
2202705c:	88c00504 	addi	r3,r17,20
22027060:	a98007cc 	andi	r6,r21,31
22027064:	2109883a 	add	r4,r4,r4
22027068:	2109883a 	add	r4,r4,r4
2202706c:	1909883a 	add	r4,r3,r4
22027070:	30002326 	beq	r6,zero,22027100 <__lshift+0x130>
22027074:	01400804 	movi	r5,32
22027078:	298bc83a 	sub	r5,r5,r6
2202707c:	0013883a 	mov	r9,zero
22027080:	1a000017 	ldw	r8,0(r3)
22027084:	3815883a 	mov	r10,r7
22027088:	39c00104 	addi	r7,r7,4
2202708c:	4190983a 	sll	r8,r8,r6
22027090:	18c00104 	addi	r3,r3,4
22027094:	4a10b03a 	or	r8,r9,r8
22027098:	3a3fff15 	stw	r8,-4(r7)
2202709c:	1a3fff17 	ldw	r8,-4(r3)
220270a0:	4152d83a 	srl	r9,r8,r5
220270a4:	193ff636 	bltu	r3,r4,22027080 <__alt_data_end+0xfffe7c80>
220270a8:	52400115 	stw	r9,4(r10)
220270ac:	48000126 	beq	r9,zero,220270b4 <__lshift+0xe4>
220270b0:	9c000084 	addi	r16,r19,2
220270b4:	89000117 	ldw	r4,4(r17)
220270b8:	90c01317 	ldw	r3,76(r18)
220270bc:	843fffc4 	addi	r16,r16,-1
220270c0:	2109883a 	add	r4,r4,r4
220270c4:	2109883a 	add	r4,r4,r4
220270c8:	1907883a 	add	r3,r3,r4
220270cc:	19000017 	ldw	r4,0(r3)
220270d0:	14000415 	stw	r16,16(r2)
220270d4:	89000015 	stw	r4,0(r17)
220270d8:	1c400015 	stw	r17,0(r3)
220270dc:	dfc00617 	ldw	ra,24(sp)
220270e0:	dd400517 	ldw	r21,20(sp)
220270e4:	dd000417 	ldw	r20,16(sp)
220270e8:	dcc00317 	ldw	r19,12(sp)
220270ec:	dc800217 	ldw	r18,8(sp)
220270f0:	dc400117 	ldw	r17,4(sp)
220270f4:	dc000017 	ldw	r16,0(sp)
220270f8:	dec00704 	addi	sp,sp,28
220270fc:	f800283a 	ret
22027100:	19400017 	ldw	r5,0(r3)
22027104:	39c00104 	addi	r7,r7,4
22027108:	18c00104 	addi	r3,r3,4
2202710c:	397fff15 	stw	r5,-4(r7)
22027110:	193ffb36 	bltu	r3,r4,22027100 <__alt_data_end+0xfffe7d00>
22027114:	003fe706 	br	220270b4 <__alt_data_end+0xfffe7cb4>

22027118 <__mcmp>:
22027118:	20800417 	ldw	r2,16(r4)
2202711c:	28c00417 	ldw	r3,16(r5)
22027120:	10c5c83a 	sub	r2,r2,r3
22027124:	1000111e 	bne	r2,zero,2202716c <__mcmp+0x54>
22027128:	18c7883a 	add	r3,r3,r3
2202712c:	18c7883a 	add	r3,r3,r3
22027130:	21000504 	addi	r4,r4,20
22027134:	29400504 	addi	r5,r5,20
22027138:	20c5883a 	add	r2,r4,r3
2202713c:	28cb883a 	add	r5,r5,r3
22027140:	00000106 	br	22027148 <__mcmp+0x30>
22027144:	20800a2e 	bgeu	r4,r2,22027170 <__mcmp+0x58>
22027148:	10bfff04 	addi	r2,r2,-4
2202714c:	297fff04 	addi	r5,r5,-4
22027150:	11800017 	ldw	r6,0(r2)
22027154:	28c00017 	ldw	r3,0(r5)
22027158:	30fffa26 	beq	r6,r3,22027144 <__alt_data_end+0xfffe7d44>
2202715c:	30c00236 	bltu	r6,r3,22027168 <__mcmp+0x50>
22027160:	00800044 	movi	r2,1
22027164:	f800283a 	ret
22027168:	00bfffc4 	movi	r2,-1
2202716c:	f800283a 	ret
22027170:	0005883a 	mov	r2,zero
22027174:	f800283a 	ret

22027178 <__mdiff>:
22027178:	defffb04 	addi	sp,sp,-20
2202717c:	dc000015 	stw	r16,0(sp)
22027180:	2821883a 	mov	r16,r5
22027184:	dcc00315 	stw	r19,12(sp)
22027188:	300b883a 	mov	r5,r6
2202718c:	2027883a 	mov	r19,r4
22027190:	8009883a 	mov	r4,r16
22027194:	dc800215 	stw	r18,8(sp)
22027198:	dfc00415 	stw	ra,16(sp)
2202719c:	dc400115 	stw	r17,4(sp)
220271a0:	3025883a 	mov	r18,r6
220271a4:	20271180 	call	22027118 <__mcmp>
220271a8:	10005226 	beq	r2,zero,220272f4 <__mdiff+0x17c>
220271ac:	10004c16 	blt	r2,zero,220272e0 <__mdiff+0x168>
220271b0:	0023883a 	mov	r17,zero
220271b4:	81400117 	ldw	r5,4(r16)
220271b8:	9809883a 	mov	r4,r19
220271bc:	20268580 	call	22026858 <_Balloc>
220271c0:	83400417 	ldw	r13,16(r16)
220271c4:	93800417 	ldw	r14,16(r18)
220271c8:	81000504 	addi	r4,r16,20
220271cc:	6b59883a 	add	r12,r13,r13
220271d0:	739d883a 	add	r14,r14,r14
220271d4:	6319883a 	add	r12,r12,r12
220271d8:	91800504 	addi	r6,r18,20
220271dc:	739d883a 	add	r14,r14,r14
220271e0:	14400315 	stw	r17,12(r2)
220271e4:	2319883a 	add	r12,r4,r12
220271e8:	339d883a 	add	r14,r6,r14
220271ec:	12400504 	addi	r9,r2,20
220271f0:	0007883a 	mov	r3,zero
220271f4:	22000017 	ldw	r8,0(r4)
220271f8:	32800017 	ldw	r10,0(r6)
220271fc:	4ac00104 	addi	r11,r9,4
22027200:	41ffffcc 	andi	r7,r8,65535
22027204:	38c7883a 	add	r3,r7,r3
22027208:	51ffffcc 	andi	r7,r10,65535
2202720c:	19cfc83a 	sub	r7,r3,r7
22027210:	4010d43a 	srli	r8,r8,16
22027214:	5014d43a 	srli	r10,r10,16
22027218:	3807d43a 	srai	r3,r7,16
2202721c:	39ffffcc 	andi	r7,r7,65535
22027220:	4291c83a 	sub	r8,r8,r10
22027224:	40c7883a 	add	r3,r8,r3
22027228:	1810943a 	slli	r8,r3,16
2202722c:	31800104 	addi	r6,r6,4
22027230:	21000104 	addi	r4,r4,4
22027234:	41ceb03a 	or	r7,r8,r7
22027238:	49c00015 	stw	r7,0(r9)
2202723c:	1807d43a 	srai	r3,r3,16
22027240:	580b883a 	mov	r5,r11
22027244:	5813883a 	mov	r9,r11
22027248:	33bfea36 	bltu	r6,r14,220271f4 <__alt_data_end+0xfffe7df4>
2202724c:	2011883a 	mov	r8,r4
22027250:	2300152e 	bgeu	r4,r12,220272a8 <__mdiff+0x130>
22027254:	21400017 	ldw	r5,0(r4)
22027258:	4a400104 	addi	r9,r9,4
2202725c:	21000104 	addi	r4,r4,4
22027260:	29ffffcc 	andi	r7,r5,65535
22027264:	38c7883a 	add	r3,r7,r3
22027268:	280ad43a 	srli	r5,r5,16
2202726c:	180dd43a 	srai	r6,r3,16
22027270:	19ffffcc 	andi	r7,r3,65535
22027274:	3147883a 	add	r3,r6,r5
22027278:	180a943a 	slli	r5,r3,16
2202727c:	1807d43a 	srai	r3,r3,16
22027280:	29ceb03a 	or	r7,r5,r7
22027284:	49ffff15 	stw	r7,-4(r9)
22027288:	233ff236 	bltu	r4,r12,22027254 <__alt_data_end+0xfffe7e54>
2202728c:	0206303a 	nor	r3,zero,r8
22027290:	1b07883a 	add	r3,r3,r12
22027294:	1806d0ba 	srli	r3,r3,2
22027298:	18c00044 	addi	r3,r3,1
2202729c:	18c7883a 	add	r3,r3,r3
220272a0:	18c7883a 	add	r3,r3,r3
220272a4:	58cb883a 	add	r5,r11,r3
220272a8:	28ffff04 	addi	r3,r5,-4
220272ac:	3800041e 	bne	r7,zero,220272c0 <__mdiff+0x148>
220272b0:	18ffff04 	addi	r3,r3,-4
220272b4:	19000017 	ldw	r4,0(r3)
220272b8:	6b7fffc4 	addi	r13,r13,-1
220272bc:	203ffc26 	beq	r4,zero,220272b0 <__alt_data_end+0xfffe7eb0>
220272c0:	13400415 	stw	r13,16(r2)
220272c4:	dfc00417 	ldw	ra,16(sp)
220272c8:	dcc00317 	ldw	r19,12(sp)
220272cc:	dc800217 	ldw	r18,8(sp)
220272d0:	dc400117 	ldw	r17,4(sp)
220272d4:	dc000017 	ldw	r16,0(sp)
220272d8:	dec00504 	addi	sp,sp,20
220272dc:	f800283a 	ret
220272e0:	8005883a 	mov	r2,r16
220272e4:	04400044 	movi	r17,1
220272e8:	9021883a 	mov	r16,r18
220272ec:	1025883a 	mov	r18,r2
220272f0:	003fb006 	br	220271b4 <__alt_data_end+0xfffe7db4>
220272f4:	9809883a 	mov	r4,r19
220272f8:	000b883a 	mov	r5,zero
220272fc:	20268580 	call	22026858 <_Balloc>
22027300:	00c00044 	movi	r3,1
22027304:	10c00415 	stw	r3,16(r2)
22027308:	10000515 	stw	zero,20(r2)
2202730c:	003fed06 	br	220272c4 <__alt_data_end+0xfffe7ec4>

22027310 <__ulp>:
22027310:	295ffc2c 	andhi	r5,r5,32752
22027314:	00bf3034 	movhi	r2,64704
22027318:	2887883a 	add	r3,r5,r2
2202731c:	00c0020e 	bge	zero,r3,22027328 <__ulp+0x18>
22027320:	0005883a 	mov	r2,zero
22027324:	f800283a 	ret
22027328:	00c7c83a 	sub	r3,zero,r3
2202732c:	180bd53a 	srai	r5,r3,20
22027330:	008004c4 	movi	r2,19
22027334:	11400a0e 	bge	r2,r5,22027360 <__ulp+0x50>
22027338:	00800c84 	movi	r2,50
2202733c:	0007883a 	mov	r3,zero
22027340:	11400516 	blt	r2,r5,22027358 <__ulp+0x48>
22027344:	00800cc4 	movi	r2,51
22027348:	114bc83a 	sub	r5,r2,r5
2202734c:	00800044 	movi	r2,1
22027350:	1144983a 	sll	r2,r2,r5
22027354:	f800283a 	ret
22027358:	00800044 	movi	r2,1
2202735c:	f800283a 	ret
22027360:	00800234 	movhi	r2,8
22027364:	1147d83a 	sra	r3,r2,r5
22027368:	0005883a 	mov	r2,zero
2202736c:	f800283a 	ret

22027370 <__b2d>:
22027370:	defffa04 	addi	sp,sp,-24
22027374:	dc000015 	stw	r16,0(sp)
22027378:	24000417 	ldw	r16,16(r4)
2202737c:	dc400115 	stw	r17,4(sp)
22027380:	24400504 	addi	r17,r4,20
22027384:	8421883a 	add	r16,r16,r16
22027388:	8421883a 	add	r16,r16,r16
2202738c:	8c21883a 	add	r16,r17,r16
22027390:	dc800215 	stw	r18,8(sp)
22027394:	84bfff17 	ldw	r18,-4(r16)
22027398:	dd000415 	stw	r20,16(sp)
2202739c:	dcc00315 	stw	r19,12(sp)
220273a0:	9009883a 	mov	r4,r18
220273a4:	2829883a 	mov	r20,r5
220273a8:	dfc00515 	stw	ra,20(sp)
220273ac:	2026b400 	call	22026b40 <__hi0bits>
220273b0:	00c00804 	movi	r3,32
220273b4:	1887c83a 	sub	r3,r3,r2
220273b8:	a0c00015 	stw	r3,0(r20)
220273bc:	00c00284 	movi	r3,10
220273c0:	84ffff04 	addi	r19,r16,-4
220273c4:	18801216 	blt	r3,r2,22027410 <__b2d+0xa0>
220273c8:	014002c4 	movi	r5,11
220273cc:	2889c83a 	sub	r4,r5,r2
220273d0:	9106d83a 	srl	r3,r18,r4
220273d4:	18cffc34 	orhi	r3,r3,16368
220273d8:	8cc0282e 	bgeu	r17,r19,2202747c <__b2d+0x10c>
220273dc:	817ffe17 	ldw	r5,-8(r16)
220273e0:	290ad83a 	srl	r5,r5,r4
220273e4:	10800544 	addi	r2,r2,21
220273e8:	9084983a 	sll	r2,r18,r2
220273ec:	2884b03a 	or	r2,r5,r2
220273f0:	dfc00517 	ldw	ra,20(sp)
220273f4:	dd000417 	ldw	r20,16(sp)
220273f8:	dcc00317 	ldw	r19,12(sp)
220273fc:	dc800217 	ldw	r18,8(sp)
22027400:	dc400117 	ldw	r17,4(sp)
22027404:	dc000017 	ldw	r16,0(sp)
22027408:	dec00604 	addi	sp,sp,24
2202740c:	f800283a 	ret
22027410:	113ffd44 	addi	r4,r2,-11
22027414:	8cc00f2e 	bgeu	r17,r19,22027454 <__b2d+0xe4>
22027418:	81bffe04 	addi	r6,r16,-8
2202741c:	817ffe17 	ldw	r5,-8(r16)
22027420:	20001326 	beq	r4,zero,22027470 <__b2d+0x100>
22027424:	00c00ac4 	movi	r3,43
22027428:	1885c83a 	sub	r2,r3,r2
2202742c:	2886d83a 	srl	r3,r5,r2
22027430:	9124983a 	sll	r18,r18,r4
22027434:	90e4b03a 	or	r18,r18,r3
22027438:	90cffc34 	orhi	r3,r18,16368
2202743c:	8980112e 	bgeu	r17,r6,22027484 <__b2d+0x114>
22027440:	81bffd17 	ldw	r6,-12(r16)
22027444:	308cd83a 	srl	r6,r6,r2
22027448:	2904983a 	sll	r2,r5,r4
2202744c:	1184b03a 	or	r2,r2,r6
22027450:	003fe706 	br	220273f0 <__alt_data_end+0xfffe7ff0>
22027454:	20000526 	beq	r4,zero,2202746c <__b2d+0xfc>
22027458:	9124983a 	sll	r18,r18,r4
2202745c:	000d883a 	mov	r6,zero
22027460:	000b883a 	mov	r5,zero
22027464:	90cffc34 	orhi	r3,r18,16368
22027468:	003ff706 	br	22027448 <__alt_data_end+0xfffe8048>
2202746c:	000b883a 	mov	r5,zero
22027470:	90cffc34 	orhi	r3,r18,16368
22027474:	2805883a 	mov	r2,r5
22027478:	003fdd06 	br	220273f0 <__alt_data_end+0xfffe7ff0>
2202747c:	000b883a 	mov	r5,zero
22027480:	003fd806 	br	220273e4 <__alt_data_end+0xfffe7fe4>
22027484:	000d883a 	mov	r6,zero
22027488:	003fef06 	br	22027448 <__alt_data_end+0xfffe8048>

2202748c <__d2b>:
2202748c:	defff704 	addi	sp,sp,-36
22027490:	dc000215 	stw	r16,8(sp)
22027494:	3021883a 	mov	r16,r6
22027498:	dc400315 	stw	r17,12(sp)
2202749c:	8022907a 	slli	r17,r16,1
220274a0:	dd400715 	stw	r21,28(sp)
220274a4:	282b883a 	mov	r21,r5
220274a8:	01400044 	movi	r5,1
220274ac:	dd000615 	stw	r20,24(sp)
220274b0:	dcc00515 	stw	r19,20(sp)
220274b4:	dc800415 	stw	r18,16(sp)
220274b8:	dfc00815 	stw	ra,32(sp)
220274bc:	3829883a 	mov	r20,r7
220274c0:	dc800917 	ldw	r18,36(sp)
220274c4:	8822d57a 	srli	r17,r17,21
220274c8:	20268580 	call	22026858 <_Balloc>
220274cc:	1027883a 	mov	r19,r2
220274d0:	00800434 	movhi	r2,16
220274d4:	10bfffc4 	addi	r2,r2,-1
220274d8:	808c703a 	and	r6,r16,r2
220274dc:	88000126 	beq	r17,zero,220274e4 <__d2b+0x58>
220274e0:	31800434 	orhi	r6,r6,16
220274e4:	d9800015 	stw	r6,0(sp)
220274e8:	a8001f26 	beq	r21,zero,22027568 <__d2b+0xdc>
220274ec:	d9000104 	addi	r4,sp,4
220274f0:	dd400115 	stw	r21,4(sp)
220274f4:	2026ba80 	call	22026ba8 <__lo0bits>
220274f8:	d8c00017 	ldw	r3,0(sp)
220274fc:	1000291e 	bne	r2,zero,220275a4 <__d2b+0x118>
22027500:	d9000117 	ldw	r4,4(sp)
22027504:	99000515 	stw	r4,20(r19)
22027508:	1820c03a 	cmpne	r16,r3,zero
2202750c:	84000044 	addi	r16,r16,1
22027510:	98c00615 	stw	r3,24(r19)
22027514:	9c000415 	stw	r16,16(r19)
22027518:	88001b1e 	bne	r17,zero,22027588 <__d2b+0xfc>
2202751c:	800690ba 	slli	r3,r16,2
22027520:	10bef384 	addi	r2,r2,-1074
22027524:	a0800015 	stw	r2,0(r20)
22027528:	98c5883a 	add	r2,r19,r3
2202752c:	11000417 	ldw	r4,16(r2)
22027530:	8020917a 	slli	r16,r16,5
22027534:	2026b400 	call	22026b40 <__hi0bits>
22027538:	8085c83a 	sub	r2,r16,r2
2202753c:	90800015 	stw	r2,0(r18)
22027540:	9805883a 	mov	r2,r19
22027544:	dfc00817 	ldw	ra,32(sp)
22027548:	dd400717 	ldw	r21,28(sp)
2202754c:	dd000617 	ldw	r20,24(sp)
22027550:	dcc00517 	ldw	r19,20(sp)
22027554:	dc800417 	ldw	r18,16(sp)
22027558:	dc400317 	ldw	r17,12(sp)
2202755c:	dc000217 	ldw	r16,8(sp)
22027560:	dec00904 	addi	sp,sp,36
22027564:	f800283a 	ret
22027568:	d809883a 	mov	r4,sp
2202756c:	2026ba80 	call	22026ba8 <__lo0bits>
22027570:	d8c00017 	ldw	r3,0(sp)
22027574:	04000044 	movi	r16,1
22027578:	9c000415 	stw	r16,16(r19)
2202757c:	98c00515 	stw	r3,20(r19)
22027580:	10800804 	addi	r2,r2,32
22027584:	883fe526 	beq	r17,zero,2202751c <__alt_data_end+0xfffe811c>
22027588:	8c7ef344 	addi	r17,r17,-1075
2202758c:	88a3883a 	add	r17,r17,r2
22027590:	00c00d44 	movi	r3,53
22027594:	a4400015 	stw	r17,0(r20)
22027598:	1885c83a 	sub	r2,r3,r2
2202759c:	90800015 	stw	r2,0(r18)
220275a0:	003fe706 	br	22027540 <__alt_data_end+0xfffe8140>
220275a4:	01000804 	movi	r4,32
220275a8:	2089c83a 	sub	r4,r4,r2
220275ac:	1908983a 	sll	r4,r3,r4
220275b0:	d9400117 	ldw	r5,4(sp)
220275b4:	1886d83a 	srl	r3,r3,r2
220275b8:	2148b03a 	or	r4,r4,r5
220275bc:	99000515 	stw	r4,20(r19)
220275c0:	d8c00015 	stw	r3,0(sp)
220275c4:	003fd006 	br	22027508 <__alt_data_end+0xfffe8108>

220275c8 <__ratio>:
220275c8:	defff904 	addi	sp,sp,-28
220275cc:	dc400315 	stw	r17,12(sp)
220275d0:	2823883a 	mov	r17,r5
220275d4:	d9400104 	addi	r5,sp,4
220275d8:	dfc00615 	stw	ra,24(sp)
220275dc:	dcc00515 	stw	r19,20(sp)
220275e0:	dc800415 	stw	r18,16(sp)
220275e4:	2027883a 	mov	r19,r4
220275e8:	dc000215 	stw	r16,8(sp)
220275ec:	20273700 	call	22027370 <__b2d>
220275f0:	8809883a 	mov	r4,r17
220275f4:	d80b883a 	mov	r5,sp
220275f8:	1025883a 	mov	r18,r2
220275fc:	1821883a 	mov	r16,r3
22027600:	20273700 	call	22027370 <__b2d>
22027604:	8a400417 	ldw	r9,16(r17)
22027608:	9a000417 	ldw	r8,16(r19)
2202760c:	100d883a 	mov	r6,r2
22027610:	d8800017 	ldw	r2,0(sp)
22027614:	4251c83a 	sub	r8,r8,r9
22027618:	4012917a 	slli	r9,r8,5
2202761c:	da000117 	ldw	r8,4(sp)
22027620:	4091c83a 	sub	r8,r8,r2
22027624:	4251883a 	add	r8,r8,r9
22027628:	02000d0e 	bge	zero,r8,22027660 <__ratio+0x98>
2202762c:	4010953a 	slli	r8,r8,20
22027630:	4421883a 	add	r16,r8,r16
22027634:	9009883a 	mov	r4,r18
22027638:	800b883a 	mov	r5,r16
2202763c:	180f883a 	mov	r7,r3
22027640:	202b3ac0 	call	2202b3ac <__divdf3>
22027644:	dfc00617 	ldw	ra,24(sp)
22027648:	dcc00517 	ldw	r19,20(sp)
2202764c:	dc800417 	ldw	r18,16(sp)
22027650:	dc400317 	ldw	r17,12(sp)
22027654:	dc000217 	ldw	r16,8(sp)
22027658:	dec00704 	addi	sp,sp,28
2202765c:	f800283a 	ret
22027660:	4010953a 	slli	r8,r8,20
22027664:	1a07c83a 	sub	r3,r3,r8
22027668:	003ff206 	br	22027634 <__alt_data_end+0xfffe8234>

2202766c <_mprec_log10>:
2202766c:	defffe04 	addi	sp,sp,-8
22027670:	dc000015 	stw	r16,0(sp)
22027674:	dfc00115 	stw	ra,4(sp)
22027678:	008005c4 	movi	r2,23
2202767c:	2021883a 	mov	r16,r4
22027680:	11000d0e 	bge	r2,r4,220276b8 <_mprec_log10+0x4c>
22027684:	0005883a 	mov	r2,zero
22027688:	00cffc34 	movhi	r3,16368
2202768c:	843fffc4 	addi	r16,r16,-1
22027690:	1009883a 	mov	r4,r2
22027694:	180b883a 	mov	r5,r3
22027698:	000d883a 	mov	r6,zero
2202769c:	01d00934 	movhi	r7,16420
220276a0:	202bebc0 	call	2202bebc <__muldf3>
220276a4:	803ff91e 	bne	r16,zero,2202768c <__alt_data_end+0xfffe828c>
220276a8:	dfc00117 	ldw	ra,4(sp)
220276ac:	dc000017 	ldw	r16,0(sp)
220276b0:	dec00204 	addi	sp,sp,8
220276b4:	f800283a 	ret
220276b8:	202090fa 	slli	r16,r4,3
220276bc:	008880f4 	movhi	r2,8707
220276c0:	10bf5304 	addi	r2,r2,-692
220276c4:	1421883a 	add	r16,r2,r16
220276c8:	80800017 	ldw	r2,0(r16)
220276cc:	80c00117 	ldw	r3,4(r16)
220276d0:	dfc00117 	ldw	ra,4(sp)
220276d4:	dc000017 	ldw	r16,0(sp)
220276d8:	dec00204 	addi	sp,sp,8
220276dc:	f800283a 	ret

220276e0 <__copybits>:
220276e0:	297fffc4 	addi	r5,r5,-1
220276e4:	280fd17a 	srai	r7,r5,5
220276e8:	30c00417 	ldw	r3,16(r6)
220276ec:	30800504 	addi	r2,r6,20
220276f0:	39c00044 	addi	r7,r7,1
220276f4:	18c7883a 	add	r3,r3,r3
220276f8:	39cf883a 	add	r7,r7,r7
220276fc:	18c7883a 	add	r3,r3,r3
22027700:	39cf883a 	add	r7,r7,r7
22027704:	10c7883a 	add	r3,r2,r3
22027708:	21cf883a 	add	r7,r4,r7
2202770c:	10c00d2e 	bgeu	r2,r3,22027744 <__copybits+0x64>
22027710:	200b883a 	mov	r5,r4
22027714:	12000017 	ldw	r8,0(r2)
22027718:	29400104 	addi	r5,r5,4
2202771c:	10800104 	addi	r2,r2,4
22027720:	2a3fff15 	stw	r8,-4(r5)
22027724:	10fffb36 	bltu	r2,r3,22027714 <__alt_data_end+0xfffe8314>
22027728:	1985c83a 	sub	r2,r3,r6
2202772c:	10bffac4 	addi	r2,r2,-21
22027730:	1004d0ba 	srli	r2,r2,2
22027734:	10800044 	addi	r2,r2,1
22027738:	1085883a 	add	r2,r2,r2
2202773c:	1085883a 	add	r2,r2,r2
22027740:	2089883a 	add	r4,r4,r2
22027744:	21c0032e 	bgeu	r4,r7,22027754 <__copybits+0x74>
22027748:	20000015 	stw	zero,0(r4)
2202774c:	21000104 	addi	r4,r4,4
22027750:	21fffd36 	bltu	r4,r7,22027748 <__alt_data_end+0xfffe8348>
22027754:	f800283a 	ret

22027758 <__any_on>:
22027758:	20c00417 	ldw	r3,16(r4)
2202775c:	2805d17a 	srai	r2,r5,5
22027760:	21000504 	addi	r4,r4,20
22027764:	18800d0e 	bge	r3,r2,2202779c <__any_on+0x44>
22027768:	18c7883a 	add	r3,r3,r3
2202776c:	18c7883a 	add	r3,r3,r3
22027770:	20c7883a 	add	r3,r4,r3
22027774:	20c0192e 	bgeu	r4,r3,220277dc <__any_on+0x84>
22027778:	18bfff17 	ldw	r2,-4(r3)
2202777c:	18ffff04 	addi	r3,r3,-4
22027780:	1000041e 	bne	r2,zero,22027794 <__any_on+0x3c>
22027784:	20c0142e 	bgeu	r4,r3,220277d8 <__any_on+0x80>
22027788:	18ffff04 	addi	r3,r3,-4
2202778c:	19400017 	ldw	r5,0(r3)
22027790:	283ffc26 	beq	r5,zero,22027784 <__alt_data_end+0xfffe8384>
22027794:	00800044 	movi	r2,1
22027798:	f800283a 	ret
2202779c:	10c00a0e 	bge	r2,r3,220277c8 <__any_on+0x70>
220277a0:	1085883a 	add	r2,r2,r2
220277a4:	1085883a 	add	r2,r2,r2
220277a8:	294007cc 	andi	r5,r5,31
220277ac:	2087883a 	add	r3,r4,r2
220277b0:	283ff026 	beq	r5,zero,22027774 <__alt_data_end+0xfffe8374>
220277b4:	19800017 	ldw	r6,0(r3)
220277b8:	3144d83a 	srl	r2,r6,r5
220277bc:	114a983a 	sll	r5,r2,r5
220277c0:	29bff41e 	bne	r5,r6,22027794 <__alt_data_end+0xfffe8394>
220277c4:	003feb06 	br	22027774 <__alt_data_end+0xfffe8374>
220277c8:	1085883a 	add	r2,r2,r2
220277cc:	1085883a 	add	r2,r2,r2
220277d0:	2087883a 	add	r3,r4,r2
220277d4:	003fe706 	br	22027774 <__alt_data_end+0xfffe8374>
220277d8:	f800283a 	ret
220277dc:	0005883a 	mov	r2,zero
220277e0:	f800283a 	ret

220277e4 <_putc_r>:
220277e4:	defffc04 	addi	sp,sp,-16
220277e8:	dc000215 	stw	r16,8(sp)
220277ec:	dfc00315 	stw	ra,12(sp)
220277f0:	2021883a 	mov	r16,r4
220277f4:	20000226 	beq	r4,zero,22027800 <_putc_r+0x1c>
220277f8:	20800e17 	ldw	r2,56(r4)
220277fc:	10001b26 	beq	r2,zero,2202786c <_putc_r+0x88>
22027800:	30800217 	ldw	r2,8(r6)
22027804:	10bfffc4 	addi	r2,r2,-1
22027808:	30800215 	stw	r2,8(r6)
2202780c:	10000a16 	blt	r2,zero,22027838 <_putc_r+0x54>
22027810:	30800017 	ldw	r2,0(r6)
22027814:	11400005 	stb	r5,0(r2)
22027818:	30800017 	ldw	r2,0(r6)
2202781c:	10c00044 	addi	r3,r2,1
22027820:	30c00015 	stw	r3,0(r6)
22027824:	10800003 	ldbu	r2,0(r2)
22027828:	dfc00317 	ldw	ra,12(sp)
2202782c:	dc000217 	ldw	r16,8(sp)
22027830:	dec00404 	addi	sp,sp,16
22027834:	f800283a 	ret
22027838:	30c00617 	ldw	r3,24(r6)
2202783c:	10c00616 	blt	r2,r3,22027858 <_putc_r+0x74>
22027840:	30800017 	ldw	r2,0(r6)
22027844:	00c00284 	movi	r3,10
22027848:	11400005 	stb	r5,0(r2)
2202784c:	30800017 	ldw	r2,0(r6)
22027850:	11400003 	ldbu	r5,0(r2)
22027854:	28fff11e 	bne	r5,r3,2202781c <__alt_data_end+0xfffe841c>
22027858:	8009883a 	mov	r4,r16
2202785c:	dfc00317 	ldw	ra,12(sp)
22027860:	dc000217 	ldw	r16,8(sp)
22027864:	dec00404 	addi	sp,sp,16
22027868:	20296281 	jmpi	22029628 <__swbuf_r>
2202786c:	d9400015 	stw	r5,0(sp)
22027870:	d9800115 	stw	r6,4(sp)
22027874:	20250380 	call	22025038 <__sinit>
22027878:	d9800117 	ldw	r6,4(sp)
2202787c:	d9400017 	ldw	r5,0(sp)
22027880:	003fdf06 	br	22027800 <__alt_data_end+0xfffe8400>

22027884 <putc>:
22027884:	defffc04 	addi	sp,sp,-16
22027888:	dc400115 	stw	r17,4(sp)
2202788c:	044880f4 	movhi	r17,8707
22027890:	8c468404 	addi	r17,r17,6672
22027894:	dc800215 	stw	r18,8(sp)
22027898:	2025883a 	mov	r18,r4
2202789c:	89000017 	ldw	r4,0(r17)
220278a0:	dc000015 	stw	r16,0(sp)
220278a4:	dfc00315 	stw	ra,12(sp)
220278a8:	2821883a 	mov	r16,r5
220278ac:	20000226 	beq	r4,zero,220278b8 <putc+0x34>
220278b0:	20c00e17 	ldw	r3,56(r4)
220278b4:	18001a26 	beq	r3,zero,22027920 <putc+0x9c>
220278b8:	80800217 	ldw	r2,8(r16)
220278bc:	10bfffc4 	addi	r2,r2,-1
220278c0:	80800215 	stw	r2,8(r16)
220278c4:	10000c16 	blt	r2,zero,220278f8 <putc+0x74>
220278c8:	80800017 	ldw	r2,0(r16)
220278cc:	14800005 	stb	r18,0(r2)
220278d0:	80800017 	ldw	r2,0(r16)
220278d4:	10c00044 	addi	r3,r2,1
220278d8:	80c00015 	stw	r3,0(r16)
220278dc:	10800003 	ldbu	r2,0(r2)
220278e0:	dfc00317 	ldw	ra,12(sp)
220278e4:	dc800217 	ldw	r18,8(sp)
220278e8:	dc400117 	ldw	r17,4(sp)
220278ec:	dc000017 	ldw	r16,0(sp)
220278f0:	dec00404 	addi	sp,sp,16
220278f4:	f800283a 	ret
220278f8:	80c00617 	ldw	r3,24(r16)
220278fc:	10c00a16 	blt	r2,r3,22027928 <putc+0xa4>
22027900:	80800017 	ldw	r2,0(r16)
22027904:	00c00284 	movi	r3,10
22027908:	14800005 	stb	r18,0(r2)
2202790c:	80800017 	ldw	r2,0(r16)
22027910:	11400003 	ldbu	r5,0(r2)
22027914:	28ffef1e 	bne	r5,r3,220278d4 <__alt_data_end+0xfffe84d4>
22027918:	89000017 	ldw	r4,0(r17)
2202791c:	00000406 	br	22027930 <putc+0xac>
22027920:	20250380 	call	22025038 <__sinit>
22027924:	003fe406 	br	220278b8 <__alt_data_end+0xfffe84b8>
22027928:	89000017 	ldw	r4,0(r17)
2202792c:	900b883a 	mov	r5,r18
22027930:	800d883a 	mov	r6,r16
22027934:	dfc00317 	ldw	ra,12(sp)
22027938:	dc800217 	ldw	r18,8(sp)
2202793c:	dc400117 	ldw	r17,4(sp)
22027940:	dc000017 	ldw	r16,0(sp)
22027944:	dec00404 	addi	sp,sp,16
22027948:	20296281 	jmpi	22029628 <__swbuf_r>

2202794c <_realloc_r>:
2202794c:	defff604 	addi	sp,sp,-40
22027950:	dcc00315 	stw	r19,12(sp)
22027954:	dc400115 	stw	r17,4(sp)
22027958:	dfc00915 	stw	ra,36(sp)
2202795c:	df000815 	stw	fp,32(sp)
22027960:	ddc00715 	stw	r23,28(sp)
22027964:	dd800615 	stw	r22,24(sp)
22027968:	dd400515 	stw	r21,20(sp)
2202796c:	dd000415 	stw	r20,16(sp)
22027970:	dc800215 	stw	r18,8(sp)
22027974:	dc000015 	stw	r16,0(sp)
22027978:	2827883a 	mov	r19,r5
2202797c:	3023883a 	mov	r17,r6
22027980:	2800bf26 	beq	r5,zero,22027c80 <_realloc_r+0x334>
22027984:	2025883a 	mov	r18,r4
22027988:	202d7140 	call	2202d714 <__malloc_lock>
2202798c:	98ffff17 	ldw	r3,-4(r19)
22027990:	01bfff04 	movi	r6,-4
22027994:	890002c4 	addi	r4,r17,11
22027998:	01c00584 	movi	r7,22
2202799c:	9d7ffe04 	addi	r21,r19,-8
220279a0:	19a0703a 	and	r16,r3,r6
220279a4:	39003f2e 	bgeu	r7,r4,22027aa4 <_realloc_r+0x158>
220279a8:	053ffe04 	movi	r20,-8
220279ac:	2528703a 	and	r20,r4,r20
220279b0:	a00f883a 	mov	r7,r20
220279b4:	a0008216 	blt	r20,zero,22027bc0 <_realloc_r+0x274>
220279b8:	a4408136 	bltu	r20,r17,22027bc0 <_realloc_r+0x274>
220279bc:	81c03c0e 	bge	r16,r7,22027ab0 <_realloc_r+0x164>
220279c0:	070880f4 	movhi	fp,8707
220279c4:	e700ff04 	addi	fp,fp,1020
220279c8:	e1000217 	ldw	r4,8(fp)
220279cc:	ac05883a 	add	r2,r21,r16
220279d0:	2080bf26 	beq	r4,r2,22027cd0 <_realloc_r+0x384>
220279d4:	11000117 	ldw	r4,4(r2)
220279d8:	023fff84 	movi	r8,-2
220279dc:	2210703a 	and	r8,r4,r8
220279e0:	1211883a 	add	r8,r2,r8
220279e4:	41400117 	ldw	r5,4(r8)
220279e8:	2940004c 	andi	r5,r5,1
220279ec:	28004a1e 	bne	r5,zero,22027b18 <_realloc_r+0x1cc>
220279f0:	017fff04 	movi	r5,-4
220279f4:	2148703a 	and	r4,r4,r5
220279f8:	2409883a 	add	r4,r4,r16
220279fc:	21c0ad0e 	bge	r4,r7,22027cb4 <_realloc_r+0x368>
22027a00:	18c0004c 	andi	r3,r3,1
22027a04:	18007f1e 	bne	r3,zero,22027c04 <_realloc_r+0x2b8>
22027a08:	9dfffe17 	ldw	r23,-8(r19)
22027a0c:	adefc83a 	sub	r23,r21,r23
22027a10:	bd800117 	ldw	r22,4(r23)
22027a14:	b14a703a 	and	r5,r22,r5
22027a18:	216d883a 	add	r22,r4,r5
22027a1c:	b1c04516 	blt	r22,r7,22027b34 <_realloc_r+0x1e8>
22027a20:	10c00317 	ldw	r3,12(r2)
22027a24:	10800217 	ldw	r2,8(r2)
22027a28:	81bfff04 	addi	r6,r16,-4
22027a2c:	bc400204 	addi	r17,r23,8
22027a30:	10c00315 	stw	r3,12(r2)
22027a34:	18800215 	stw	r2,8(r3)
22027a38:	b9400217 	ldw	r5,8(r23)
22027a3c:	b8c00317 	ldw	r3,12(r23)
22027a40:	00800904 	movi	r2,36
22027a44:	28c00315 	stw	r3,12(r5)
22027a48:	19400215 	stw	r5,8(r3)
22027a4c:	1180ef36 	bltu	r2,r6,22027e0c <_realloc_r+0x4c0>
22027a50:	008004c4 	movi	r2,19
22027a54:	1180da2e 	bgeu	r2,r6,22027dc0 <_realloc_r+0x474>
22027a58:	98800017 	ldw	r2,0(r19)
22027a5c:	b8800215 	stw	r2,8(r23)
22027a60:	98800117 	ldw	r2,4(r19)
22027a64:	b8800315 	stw	r2,12(r23)
22027a68:	008006c4 	movi	r2,27
22027a6c:	1180fc2e 	bgeu	r2,r6,22027e60 <_realloc_r+0x514>
22027a70:	98800217 	ldw	r2,8(r19)
22027a74:	b8800415 	stw	r2,16(r23)
22027a78:	98800317 	ldw	r2,12(r19)
22027a7c:	b8800515 	stw	r2,20(r23)
22027a80:	00800904 	movi	r2,36
22027a84:	3080421e 	bne	r6,r2,22027b90 <_realloc_r+0x244>
22027a88:	98800417 	ldw	r2,16(r19)
22027a8c:	9cc00604 	addi	r19,r19,24
22027a90:	b8c00804 	addi	r3,r23,32
22027a94:	b8800615 	stw	r2,24(r23)
22027a98:	98bfff17 	ldw	r2,-4(r19)
22027a9c:	b8800715 	stw	r2,28(r23)
22027aa0:	00003d06 	br	22027b98 <_realloc_r+0x24c>
22027aa4:	01c00404 	movi	r7,16
22027aa8:	3829883a 	mov	r20,r7
22027aac:	003fc206 	br	220279b8 <__alt_data_end+0xfffe85b8>
22027ab0:	9823883a 	mov	r17,r19
22027ab4:	850fc83a 	sub	r7,r16,r20
22027ab8:	008003c4 	movi	r2,15
22027abc:	18c0004c 	andi	r3,r3,1
22027ac0:	11c04336 	bltu	r2,r7,22027bd0 <_realloc_r+0x284>
22027ac4:	1c06b03a 	or	r3,r3,r16
22027ac8:	a8c00115 	stw	r3,4(r21)
22027acc:	ac21883a 	add	r16,r21,r16
22027ad0:	80c00117 	ldw	r3,4(r16)
22027ad4:	18c00054 	ori	r3,r3,1
22027ad8:	80c00115 	stw	r3,4(r16)
22027adc:	9009883a 	mov	r4,r18
22027ae0:	202d7340 	call	2202d734 <__malloc_unlock>
22027ae4:	8805883a 	mov	r2,r17
22027ae8:	dfc00917 	ldw	ra,36(sp)
22027aec:	df000817 	ldw	fp,32(sp)
22027af0:	ddc00717 	ldw	r23,28(sp)
22027af4:	dd800617 	ldw	r22,24(sp)
22027af8:	dd400517 	ldw	r21,20(sp)
22027afc:	dd000417 	ldw	r20,16(sp)
22027b00:	dcc00317 	ldw	r19,12(sp)
22027b04:	dc800217 	ldw	r18,8(sp)
22027b08:	dc400117 	ldw	r17,4(sp)
22027b0c:	dc000017 	ldw	r16,0(sp)
22027b10:	dec00a04 	addi	sp,sp,40
22027b14:	f800283a 	ret
22027b18:	18c0004c 	andi	r3,r3,1
22027b1c:	1800391e 	bne	r3,zero,22027c04 <_realloc_r+0x2b8>
22027b20:	9dfffe17 	ldw	r23,-8(r19)
22027b24:	00bfff04 	movi	r2,-4
22027b28:	adefc83a 	sub	r23,r21,r23
22027b2c:	b9400117 	ldw	r5,4(r23)
22027b30:	288a703a 	and	r5,r5,r2
22027b34:	2c2d883a 	add	r22,r5,r16
22027b38:	b1c03216 	blt	r22,r7,22027c04 <_realloc_r+0x2b8>
22027b3c:	b8800317 	ldw	r2,12(r23)
22027b40:	b8c00217 	ldw	r3,8(r23)
22027b44:	81bfff04 	addi	r6,r16,-4
22027b48:	01000904 	movi	r4,36
22027b4c:	18800315 	stw	r2,12(r3)
22027b50:	10c00215 	stw	r3,8(r2)
22027b54:	bc400204 	addi	r17,r23,8
22027b58:	2180ac36 	bltu	r4,r6,22027e0c <_realloc_r+0x4c0>
22027b5c:	008004c4 	movi	r2,19
22027b60:	1180972e 	bgeu	r2,r6,22027dc0 <_realloc_r+0x474>
22027b64:	98800017 	ldw	r2,0(r19)
22027b68:	b8800215 	stw	r2,8(r23)
22027b6c:	98800117 	ldw	r2,4(r19)
22027b70:	b8800315 	stw	r2,12(r23)
22027b74:	008006c4 	movi	r2,27
22027b78:	1180b92e 	bgeu	r2,r6,22027e60 <_realloc_r+0x514>
22027b7c:	98800217 	ldw	r2,8(r19)
22027b80:	b8800415 	stw	r2,16(r23)
22027b84:	98800317 	ldw	r2,12(r19)
22027b88:	b8800515 	stw	r2,20(r23)
22027b8c:	313fbe26 	beq	r6,r4,22027a88 <__alt_data_end+0xfffe8688>
22027b90:	b8c00604 	addi	r3,r23,24
22027b94:	9cc00404 	addi	r19,r19,16
22027b98:	98800017 	ldw	r2,0(r19)
22027b9c:	b021883a 	mov	r16,r22
22027ba0:	b82b883a 	mov	r21,r23
22027ba4:	18800015 	stw	r2,0(r3)
22027ba8:	98800117 	ldw	r2,4(r19)
22027bac:	18800115 	stw	r2,4(r3)
22027bb0:	98800217 	ldw	r2,8(r19)
22027bb4:	18800215 	stw	r2,8(r3)
22027bb8:	b8c00117 	ldw	r3,4(r23)
22027bbc:	003fbd06 	br	22027ab4 <__alt_data_end+0xfffe86b4>
22027bc0:	00800304 	movi	r2,12
22027bc4:	90800015 	stw	r2,0(r18)
22027bc8:	0005883a 	mov	r2,zero
22027bcc:	003fc606 	br	22027ae8 <__alt_data_end+0xfffe86e8>
22027bd0:	1d06b03a 	or	r3,r3,r20
22027bd4:	ad0b883a 	add	r5,r21,r20
22027bd8:	a8c00115 	stw	r3,4(r21)
22027bdc:	38800054 	ori	r2,r7,1
22027be0:	28800115 	stw	r2,4(r5)
22027be4:	29cf883a 	add	r7,r5,r7
22027be8:	38800117 	ldw	r2,4(r7)
22027bec:	9009883a 	mov	r4,r18
22027bf0:	29400204 	addi	r5,r5,8
22027bf4:	10800054 	ori	r2,r2,1
22027bf8:	38800115 	stw	r2,4(r7)
22027bfc:	20251ac0 	call	220251ac <_free_r>
22027c00:	003fb606 	br	22027adc <__alt_data_end+0xfffe86dc>
22027c04:	880b883a 	mov	r5,r17
22027c08:	9009883a 	mov	r4,r18
22027c0c:	2025d480 	call	22025d48 <_malloc_r>
22027c10:	1023883a 	mov	r17,r2
22027c14:	1000aa26 	beq	r2,zero,22027ec0 <_realloc_r+0x574>
22027c18:	98ffff17 	ldw	r3,-4(r19)
22027c1c:	113ffe04 	addi	r4,r2,-8
22027c20:	00bfff84 	movi	r2,-2
22027c24:	1884703a 	and	r2,r3,r2
22027c28:	a885883a 	add	r2,r21,r2
22027c2c:	20808626 	beq	r4,r2,22027e48 <_realloc_r+0x4fc>
22027c30:	81bfff04 	addi	r6,r16,-4
22027c34:	00800904 	movi	r2,36
22027c38:	11807036 	bltu	r2,r6,22027dfc <_realloc_r+0x4b0>
22027c3c:	00c004c4 	movi	r3,19
22027c40:	19805636 	bltu	r3,r6,22027d9c <_realloc_r+0x450>
22027c44:	8805883a 	mov	r2,r17
22027c48:	9807883a 	mov	r3,r19
22027c4c:	19000017 	ldw	r4,0(r3)
22027c50:	11000015 	stw	r4,0(r2)
22027c54:	19000117 	ldw	r4,4(r3)
22027c58:	11000115 	stw	r4,4(r2)
22027c5c:	18c00217 	ldw	r3,8(r3)
22027c60:	10c00215 	stw	r3,8(r2)
22027c64:	980b883a 	mov	r5,r19
22027c68:	9009883a 	mov	r4,r18
22027c6c:	20251ac0 	call	220251ac <_free_r>
22027c70:	9009883a 	mov	r4,r18
22027c74:	202d7340 	call	2202d734 <__malloc_unlock>
22027c78:	8805883a 	mov	r2,r17
22027c7c:	003f9a06 	br	22027ae8 <__alt_data_end+0xfffe86e8>
22027c80:	300b883a 	mov	r5,r6
22027c84:	dfc00917 	ldw	ra,36(sp)
22027c88:	df000817 	ldw	fp,32(sp)
22027c8c:	ddc00717 	ldw	r23,28(sp)
22027c90:	dd800617 	ldw	r22,24(sp)
22027c94:	dd400517 	ldw	r21,20(sp)
22027c98:	dd000417 	ldw	r20,16(sp)
22027c9c:	dcc00317 	ldw	r19,12(sp)
22027ca0:	dc800217 	ldw	r18,8(sp)
22027ca4:	dc400117 	ldw	r17,4(sp)
22027ca8:	dc000017 	ldw	r16,0(sp)
22027cac:	dec00a04 	addi	sp,sp,40
22027cb0:	2025d481 	jmpi	22025d48 <_malloc_r>
22027cb4:	11400317 	ldw	r5,12(r2)
22027cb8:	10800217 	ldw	r2,8(r2)
22027cbc:	9823883a 	mov	r17,r19
22027cc0:	2021883a 	mov	r16,r4
22027cc4:	11400315 	stw	r5,12(r2)
22027cc8:	28800215 	stw	r2,8(r5)
22027ccc:	003f7906 	br	22027ab4 <__alt_data_end+0xfffe86b4>
22027cd0:	21000117 	ldw	r4,4(r4)
22027cd4:	00bfff04 	movi	r2,-4
22027cd8:	a1800404 	addi	r6,r20,16
22027cdc:	2088703a 	and	r4,r4,r2
22027ce0:	2409883a 	add	r4,r4,r16
22027ce4:	2180380e 	bge	r4,r6,22027dc8 <_realloc_r+0x47c>
22027ce8:	18c0004c 	andi	r3,r3,1
22027cec:	183fc51e 	bne	r3,zero,22027c04 <__alt_data_end+0xfffe8804>
22027cf0:	9dfffe17 	ldw	r23,-8(r19)
22027cf4:	adefc83a 	sub	r23,r21,r23
22027cf8:	b9400117 	ldw	r5,4(r23)
22027cfc:	288a703a 	and	r5,r5,r2
22027d00:	216d883a 	add	r22,r4,r5
22027d04:	b1bf8b16 	blt	r22,r6,22027b34 <__alt_data_end+0xfffe8734>
22027d08:	b8800317 	ldw	r2,12(r23)
22027d0c:	b8c00217 	ldw	r3,8(r23)
22027d10:	81bfff04 	addi	r6,r16,-4
22027d14:	01000904 	movi	r4,36
22027d18:	18800315 	stw	r2,12(r3)
22027d1c:	10c00215 	stw	r3,8(r2)
22027d20:	bc400204 	addi	r17,r23,8
22027d24:	21805a36 	bltu	r4,r6,22027e90 <_realloc_r+0x544>
22027d28:	008004c4 	movi	r2,19
22027d2c:	1180562e 	bgeu	r2,r6,22027e88 <_realloc_r+0x53c>
22027d30:	98800017 	ldw	r2,0(r19)
22027d34:	b8800215 	stw	r2,8(r23)
22027d38:	98800117 	ldw	r2,4(r19)
22027d3c:	b8800315 	stw	r2,12(r23)
22027d40:	008006c4 	movi	r2,27
22027d44:	11805636 	bltu	r2,r6,22027ea0 <_realloc_r+0x554>
22027d48:	b8800404 	addi	r2,r23,16
22027d4c:	9cc00204 	addi	r19,r19,8
22027d50:	98c00017 	ldw	r3,0(r19)
22027d54:	10c00015 	stw	r3,0(r2)
22027d58:	98c00117 	ldw	r3,4(r19)
22027d5c:	10c00115 	stw	r3,4(r2)
22027d60:	98c00217 	ldw	r3,8(r19)
22027d64:	10c00215 	stw	r3,8(r2)
22027d68:	bd07883a 	add	r3,r23,r20
22027d6c:	b505c83a 	sub	r2,r22,r20
22027d70:	e0c00215 	stw	r3,8(fp)
22027d74:	10800054 	ori	r2,r2,1
22027d78:	18800115 	stw	r2,4(r3)
22027d7c:	b8800117 	ldw	r2,4(r23)
22027d80:	9009883a 	mov	r4,r18
22027d84:	1080004c 	andi	r2,r2,1
22027d88:	a0a8b03a 	or	r20,r20,r2
22027d8c:	bd000115 	stw	r20,4(r23)
22027d90:	202d7340 	call	2202d734 <__malloc_unlock>
22027d94:	8805883a 	mov	r2,r17
22027d98:	003f5306 	br	22027ae8 <__alt_data_end+0xfffe86e8>
22027d9c:	98c00017 	ldw	r3,0(r19)
22027da0:	88c00015 	stw	r3,0(r17)
22027da4:	98c00117 	ldw	r3,4(r19)
22027da8:	88c00115 	stw	r3,4(r17)
22027dac:	00c006c4 	movi	r3,27
22027db0:	19801d36 	bltu	r3,r6,22027e28 <_realloc_r+0x4dc>
22027db4:	88800204 	addi	r2,r17,8
22027db8:	98c00204 	addi	r3,r19,8
22027dbc:	003fa306 	br	22027c4c <__alt_data_end+0xfffe884c>
22027dc0:	8807883a 	mov	r3,r17
22027dc4:	003f7406 	br	22027b98 <__alt_data_end+0xfffe8798>
22027dc8:	ad2b883a 	add	r21,r21,r20
22027dcc:	2505c83a 	sub	r2,r4,r20
22027dd0:	e5400215 	stw	r21,8(fp)
22027dd4:	10800054 	ori	r2,r2,1
22027dd8:	a8800115 	stw	r2,4(r21)
22027ddc:	98bfff17 	ldw	r2,-4(r19)
22027de0:	9009883a 	mov	r4,r18
22027de4:	1080004c 	andi	r2,r2,1
22027de8:	a0a8b03a 	or	r20,r20,r2
22027dec:	9d3fff15 	stw	r20,-4(r19)
22027df0:	202d7340 	call	2202d734 <__malloc_unlock>
22027df4:	9805883a 	mov	r2,r19
22027df8:	003f3b06 	br	22027ae8 <__alt_data_end+0xfffe86e8>
22027dfc:	8809883a 	mov	r4,r17
22027e00:	980b883a 	mov	r5,r19
22027e04:	20265d80 	call	220265d8 <memmove>
22027e08:	003f9606 	br	22027c64 <__alt_data_end+0xfffe8864>
22027e0c:	8809883a 	mov	r4,r17
22027e10:	980b883a 	mov	r5,r19
22027e14:	20265d80 	call	220265d8 <memmove>
22027e18:	b8c00117 	ldw	r3,4(r23)
22027e1c:	b021883a 	mov	r16,r22
22027e20:	b82b883a 	mov	r21,r23
22027e24:	003f2306 	br	22027ab4 <__alt_data_end+0xfffe86b4>
22027e28:	98c00217 	ldw	r3,8(r19)
22027e2c:	88c00215 	stw	r3,8(r17)
22027e30:	98c00317 	ldw	r3,12(r19)
22027e34:	88c00315 	stw	r3,12(r17)
22027e38:	30800c26 	beq	r6,r2,22027e6c <_realloc_r+0x520>
22027e3c:	88800404 	addi	r2,r17,16
22027e40:	98c00404 	addi	r3,r19,16
22027e44:	003f8106 	br	22027c4c <__alt_data_end+0xfffe884c>
22027e48:	893fff17 	ldw	r4,-4(r17)
22027e4c:	00bfff04 	movi	r2,-4
22027e50:	9823883a 	mov	r17,r19
22027e54:	2084703a 	and	r2,r4,r2
22027e58:	80a1883a 	add	r16,r16,r2
22027e5c:	003f1506 	br	22027ab4 <__alt_data_end+0xfffe86b4>
22027e60:	b8c00404 	addi	r3,r23,16
22027e64:	9cc00204 	addi	r19,r19,8
22027e68:	003f4b06 	br	22027b98 <__alt_data_end+0xfffe8798>
22027e6c:	99000417 	ldw	r4,16(r19)
22027e70:	88800604 	addi	r2,r17,24
22027e74:	98c00604 	addi	r3,r19,24
22027e78:	89000415 	stw	r4,16(r17)
22027e7c:	99000517 	ldw	r4,20(r19)
22027e80:	89000515 	stw	r4,20(r17)
22027e84:	003f7106 	br	22027c4c <__alt_data_end+0xfffe884c>
22027e88:	8805883a 	mov	r2,r17
22027e8c:	003fb006 	br	22027d50 <__alt_data_end+0xfffe8950>
22027e90:	8809883a 	mov	r4,r17
22027e94:	980b883a 	mov	r5,r19
22027e98:	20265d80 	call	220265d8 <memmove>
22027e9c:	003fb206 	br	22027d68 <__alt_data_end+0xfffe8968>
22027ea0:	98800217 	ldw	r2,8(r19)
22027ea4:	b8800415 	stw	r2,16(r23)
22027ea8:	98800317 	ldw	r2,12(r19)
22027eac:	b8800515 	stw	r2,20(r23)
22027eb0:	31000726 	beq	r6,r4,22027ed0 <_realloc_r+0x584>
22027eb4:	b8800604 	addi	r2,r23,24
22027eb8:	9cc00404 	addi	r19,r19,16
22027ebc:	003fa406 	br	22027d50 <__alt_data_end+0xfffe8950>
22027ec0:	9009883a 	mov	r4,r18
22027ec4:	202d7340 	call	2202d734 <__malloc_unlock>
22027ec8:	0005883a 	mov	r2,zero
22027ecc:	003f0606 	br	22027ae8 <__alt_data_end+0xfffe86e8>
22027ed0:	98c00417 	ldw	r3,16(r19)
22027ed4:	9cc00604 	addi	r19,r19,24
22027ed8:	b8800804 	addi	r2,r23,32
22027edc:	b8c00615 	stw	r3,24(r23)
22027ee0:	98ffff17 	ldw	r3,-4(r19)
22027ee4:	b8c00715 	stw	r3,28(r23)
22027ee8:	003f9906 	br	22027d50 <__alt_data_end+0xfffe8950>

22027eec <__fpclassifyd>:
22027eec:	00a00034 	movhi	r2,32768
22027ef0:	10bfffc4 	addi	r2,r2,-1
22027ef4:	2884703a 	and	r2,r5,r2
22027ef8:	10000726 	beq	r2,zero,22027f18 <__fpclassifyd+0x2c>
22027efc:	00fffc34 	movhi	r3,65520
22027f00:	019ff834 	movhi	r6,32736
22027f04:	28c7883a 	add	r3,r5,r3
22027f08:	31bfffc4 	addi	r6,r6,-1
22027f0c:	30c00536 	bltu	r6,r3,22027f24 <__fpclassifyd+0x38>
22027f10:	00800104 	movi	r2,4
22027f14:	f800283a 	ret
22027f18:	2000021e 	bne	r4,zero,22027f24 <__fpclassifyd+0x38>
22027f1c:	00800084 	movi	r2,2
22027f20:	f800283a 	ret
22027f24:	00dffc34 	movhi	r3,32752
22027f28:	019ff834 	movhi	r6,32736
22027f2c:	28cb883a 	add	r5,r5,r3
22027f30:	31bfffc4 	addi	r6,r6,-1
22027f34:	317ff62e 	bgeu	r6,r5,22027f10 <__alt_data_end+0xfffe8b10>
22027f38:	01400434 	movhi	r5,16
22027f3c:	297fffc4 	addi	r5,r5,-1
22027f40:	28800236 	bltu	r5,r2,22027f4c <__fpclassifyd+0x60>
22027f44:	008000c4 	movi	r2,3
22027f48:	f800283a 	ret
22027f4c:	10c00226 	beq	r2,r3,22027f58 <__fpclassifyd+0x6c>
22027f50:	0005883a 	mov	r2,zero
22027f54:	f800283a 	ret
22027f58:	2005003a 	cmpeq	r2,r4,zero
22027f5c:	f800283a 	ret

22027f60 <_sbrk_r>:
22027f60:	defffd04 	addi	sp,sp,-12
22027f64:	dc000015 	stw	r16,0(sp)
22027f68:	040880f4 	movhi	r16,8707
22027f6c:	dc400115 	stw	r17,4(sp)
22027f70:	840d5404 	addi	r16,r16,13648
22027f74:	2023883a 	mov	r17,r4
22027f78:	2809883a 	mov	r4,r5
22027f7c:	dfc00215 	stw	ra,8(sp)
22027f80:	80000015 	stw	zero,0(r16)
22027f84:	202d9000 	call	2202d900 <sbrk>
22027f88:	00ffffc4 	movi	r3,-1
22027f8c:	10c00526 	beq	r2,r3,22027fa4 <_sbrk_r+0x44>
22027f90:	dfc00217 	ldw	ra,8(sp)
22027f94:	dc400117 	ldw	r17,4(sp)
22027f98:	dc000017 	ldw	r16,0(sp)
22027f9c:	dec00304 	addi	sp,sp,12
22027fa0:	f800283a 	ret
22027fa4:	80c00017 	ldw	r3,0(r16)
22027fa8:	183ff926 	beq	r3,zero,22027f90 <__alt_data_end+0xfffe8b90>
22027fac:	88c00015 	stw	r3,0(r17)
22027fb0:	003ff706 	br	22027f90 <__alt_data_end+0xfffe8b90>

22027fb4 <__sread>:
22027fb4:	defffe04 	addi	sp,sp,-8
22027fb8:	dc000015 	stw	r16,0(sp)
22027fbc:	2821883a 	mov	r16,r5
22027fc0:	2940038f 	ldh	r5,14(r5)
22027fc4:	dfc00115 	stw	ra,4(sp)
22027fc8:	2029d040 	call	22029d04 <_read_r>
22027fcc:	10000716 	blt	r2,zero,22027fec <__sread+0x38>
22027fd0:	80c01417 	ldw	r3,80(r16)
22027fd4:	1887883a 	add	r3,r3,r2
22027fd8:	80c01415 	stw	r3,80(r16)
22027fdc:	dfc00117 	ldw	ra,4(sp)
22027fe0:	dc000017 	ldw	r16,0(sp)
22027fe4:	dec00204 	addi	sp,sp,8
22027fe8:	f800283a 	ret
22027fec:	80c0030b 	ldhu	r3,12(r16)
22027ff0:	18fbffcc 	andi	r3,r3,61439
22027ff4:	80c0030d 	sth	r3,12(r16)
22027ff8:	dfc00117 	ldw	ra,4(sp)
22027ffc:	dc000017 	ldw	r16,0(sp)
22028000:	dec00204 	addi	sp,sp,8
22028004:	f800283a 	ret

22028008 <__seofread>:
22028008:	0005883a 	mov	r2,zero
2202800c:	f800283a 	ret

22028010 <__swrite>:
22028010:	2880030b 	ldhu	r2,12(r5)
22028014:	defffb04 	addi	sp,sp,-20
22028018:	dcc00315 	stw	r19,12(sp)
2202801c:	dc800215 	stw	r18,8(sp)
22028020:	dc400115 	stw	r17,4(sp)
22028024:	dc000015 	stw	r16,0(sp)
22028028:	dfc00415 	stw	ra,16(sp)
2202802c:	10c0400c 	andi	r3,r2,256
22028030:	2821883a 	mov	r16,r5
22028034:	2027883a 	mov	r19,r4
22028038:	3025883a 	mov	r18,r6
2202803c:	3823883a 	mov	r17,r7
22028040:	18000526 	beq	r3,zero,22028058 <__swrite+0x48>
22028044:	2940038f 	ldh	r5,14(r5)
22028048:	000d883a 	mov	r6,zero
2202804c:	01c00084 	movi	r7,2
22028050:	2029ca80 	call	22029ca8 <_lseek_r>
22028054:	8080030b 	ldhu	r2,12(r16)
22028058:	8140038f 	ldh	r5,14(r16)
2202805c:	10bbffcc 	andi	r2,r2,61439
22028060:	9809883a 	mov	r4,r19
22028064:	900d883a 	mov	r6,r18
22028068:	880f883a 	mov	r7,r17
2202806c:	8080030d 	sth	r2,12(r16)
22028070:	dfc00417 	ldw	ra,16(sp)
22028074:	dcc00317 	ldw	r19,12(sp)
22028078:	dc800217 	ldw	r18,8(sp)
2202807c:	dc400117 	ldw	r17,4(sp)
22028080:	dc000017 	ldw	r16,0(sp)
22028084:	dec00504 	addi	sp,sp,20
22028088:	20297981 	jmpi	22029798 <_write_r>

2202808c <__sseek>:
2202808c:	defffe04 	addi	sp,sp,-8
22028090:	dc000015 	stw	r16,0(sp)
22028094:	2821883a 	mov	r16,r5
22028098:	2940038f 	ldh	r5,14(r5)
2202809c:	dfc00115 	stw	ra,4(sp)
220280a0:	2029ca80 	call	22029ca8 <_lseek_r>
220280a4:	00ffffc4 	movi	r3,-1
220280a8:	10c00826 	beq	r2,r3,220280cc <__sseek+0x40>
220280ac:	80c0030b 	ldhu	r3,12(r16)
220280b0:	80801415 	stw	r2,80(r16)
220280b4:	18c40014 	ori	r3,r3,4096
220280b8:	80c0030d 	sth	r3,12(r16)
220280bc:	dfc00117 	ldw	ra,4(sp)
220280c0:	dc000017 	ldw	r16,0(sp)
220280c4:	dec00204 	addi	sp,sp,8
220280c8:	f800283a 	ret
220280cc:	80c0030b 	ldhu	r3,12(r16)
220280d0:	18fbffcc 	andi	r3,r3,61439
220280d4:	80c0030d 	sth	r3,12(r16)
220280d8:	dfc00117 	ldw	ra,4(sp)
220280dc:	dc000017 	ldw	r16,0(sp)
220280e0:	dec00204 	addi	sp,sp,8
220280e4:	f800283a 	ret

220280e8 <__sclose>:
220280e8:	2940038f 	ldh	r5,14(r5)
220280ec:	20297f41 	jmpi	220297f4 <_close_r>

220280f0 <strcmp>:
220280f0:	2144b03a 	or	r2,r4,r5
220280f4:	108000cc 	andi	r2,r2,3
220280f8:	1000171e 	bne	r2,zero,22028158 <strcmp+0x68>
220280fc:	20800017 	ldw	r2,0(r4)
22028100:	28c00017 	ldw	r3,0(r5)
22028104:	10c0141e 	bne	r2,r3,22028158 <strcmp+0x68>
22028108:	027fbff4 	movhi	r9,65279
2202810c:	4a7fbfc4 	addi	r9,r9,-257
22028110:	0086303a 	nor	r3,zero,r2
22028114:	02202074 	movhi	r8,32897
22028118:	1245883a 	add	r2,r2,r9
2202811c:	42202004 	addi	r8,r8,-32640
22028120:	10c4703a 	and	r2,r2,r3
22028124:	1204703a 	and	r2,r2,r8
22028128:	10000226 	beq	r2,zero,22028134 <strcmp+0x44>
2202812c:	00001706 	br	2202818c <strcmp+0x9c>
22028130:	1000161e 	bne	r2,zero,2202818c <strcmp+0x9c>
22028134:	21000104 	addi	r4,r4,4
22028138:	20c00017 	ldw	r3,0(r4)
2202813c:	29400104 	addi	r5,r5,4
22028140:	29800017 	ldw	r6,0(r5)
22028144:	1a4f883a 	add	r7,r3,r9
22028148:	00c4303a 	nor	r2,zero,r3
2202814c:	3884703a 	and	r2,r7,r2
22028150:	1204703a 	and	r2,r2,r8
22028154:	19bff626 	beq	r3,r6,22028130 <__alt_data_end+0xfffe8d30>
22028158:	20800007 	ldb	r2,0(r4)
2202815c:	1000051e 	bne	r2,zero,22028174 <strcmp+0x84>
22028160:	00000606 	br	2202817c <strcmp+0x8c>
22028164:	21000044 	addi	r4,r4,1
22028168:	20800007 	ldb	r2,0(r4)
2202816c:	29400044 	addi	r5,r5,1
22028170:	10000226 	beq	r2,zero,2202817c <strcmp+0x8c>
22028174:	28c00007 	ldb	r3,0(r5)
22028178:	10fffa26 	beq	r2,r3,22028164 <__alt_data_end+0xfffe8d64>
2202817c:	20800003 	ldbu	r2,0(r4)
22028180:	28c00003 	ldbu	r3,0(r5)
22028184:	10c5c83a 	sub	r2,r2,r3
22028188:	f800283a 	ret
2202818c:	0005883a 	mov	r2,zero
22028190:	f800283a 	ret

22028194 <__sprint_r.part.0>:
22028194:	28801917 	ldw	r2,100(r5)
22028198:	defff604 	addi	sp,sp,-40
2202819c:	dd400515 	stw	r21,20(sp)
220281a0:	dcc00315 	stw	r19,12(sp)
220281a4:	dfc00915 	stw	ra,36(sp)
220281a8:	df000815 	stw	fp,32(sp)
220281ac:	ddc00715 	stw	r23,28(sp)
220281b0:	dd800615 	stw	r22,24(sp)
220281b4:	dd000415 	stw	r20,16(sp)
220281b8:	dc800215 	stw	r18,8(sp)
220281bc:	dc400115 	stw	r17,4(sp)
220281c0:	dc000015 	stw	r16,0(sp)
220281c4:	1088000c 	andi	r2,r2,8192
220281c8:	2827883a 	mov	r19,r5
220281cc:	302b883a 	mov	r21,r6
220281d0:	10002d26 	beq	r2,zero,22028288 <__sprint_r.part.0+0xf4>
220281d4:	30800217 	ldw	r2,8(r6)
220281d8:	35800017 	ldw	r22,0(r6)
220281dc:	10002826 	beq	r2,zero,22028280 <__sprint_r.part.0+0xec>
220281e0:	2029883a 	mov	r20,r4
220281e4:	b5c00104 	addi	r23,r22,4
220281e8:	04bfffc4 	movi	r18,-1
220281ec:	bc400017 	ldw	r17,0(r23)
220281f0:	b4000017 	ldw	r16,0(r22)
220281f4:	0039883a 	mov	fp,zero
220281f8:	8822d0ba 	srli	r17,r17,2
220281fc:	04400316 	blt	zero,r17,2202820c <__sprint_r.part.0+0x78>
22028200:	00001706 	br	22028260 <__sprint_r.part.0+0xcc>
22028204:	84000104 	addi	r16,r16,4
22028208:	8f001526 	beq	r17,fp,22028260 <__sprint_r.part.0+0xcc>
2202820c:	81400017 	ldw	r5,0(r16)
22028210:	a009883a 	mov	r4,r20
22028214:	980d883a 	mov	r6,r19
22028218:	2029a200 	call	22029a20 <_fputwc_r>
2202821c:	e7000044 	addi	fp,fp,1
22028220:	14bff81e 	bne	r2,r18,22028204 <__alt_data_end+0xfffe8e04>
22028224:	9005883a 	mov	r2,r18
22028228:	a8000215 	stw	zero,8(r21)
2202822c:	a8000115 	stw	zero,4(r21)
22028230:	dfc00917 	ldw	ra,36(sp)
22028234:	df000817 	ldw	fp,32(sp)
22028238:	ddc00717 	ldw	r23,28(sp)
2202823c:	dd800617 	ldw	r22,24(sp)
22028240:	dd400517 	ldw	r21,20(sp)
22028244:	dd000417 	ldw	r20,16(sp)
22028248:	dcc00317 	ldw	r19,12(sp)
2202824c:	dc800217 	ldw	r18,8(sp)
22028250:	dc400117 	ldw	r17,4(sp)
22028254:	dc000017 	ldw	r16,0(sp)
22028258:	dec00a04 	addi	sp,sp,40
2202825c:	f800283a 	ret
22028260:	a8c00217 	ldw	r3,8(r21)
22028264:	8c63883a 	add	r17,r17,r17
22028268:	8c63883a 	add	r17,r17,r17
2202826c:	1c45c83a 	sub	r2,r3,r17
22028270:	a8800215 	stw	r2,8(r21)
22028274:	b5800204 	addi	r22,r22,8
22028278:	bdc00204 	addi	r23,r23,8
2202827c:	103fdb1e 	bne	r2,zero,220281ec <__alt_data_end+0xfffe8dec>
22028280:	0005883a 	mov	r2,zero
22028284:	003fe806 	br	22028228 <__alt_data_end+0xfffe8e28>
22028288:	202549c0 	call	2202549c <__sfvwrite_r>
2202828c:	003fe606 	br	22028228 <__alt_data_end+0xfffe8e28>

22028290 <__sprint_r>:
22028290:	30c00217 	ldw	r3,8(r6)
22028294:	18000126 	beq	r3,zero,2202829c <__sprint_r+0xc>
22028298:	20281941 	jmpi	22028194 <__sprint_r.part.0>
2202829c:	30000115 	stw	zero,4(r6)
220282a0:	0005883a 	mov	r2,zero
220282a4:	f800283a 	ret

220282a8 <___vfiprintf_internal_r>:
220282a8:	defeca04 	addi	sp,sp,-1240
220282ac:	dd813215 	stw	r22,1224(sp)
220282b0:	dd013015 	stw	r20,1216(sp)
220282b4:	dfc13515 	stw	ra,1236(sp)
220282b8:	df013415 	stw	fp,1232(sp)
220282bc:	ddc13315 	stw	r23,1228(sp)
220282c0:	dd413115 	stw	r21,1220(sp)
220282c4:	dcc12f15 	stw	r19,1212(sp)
220282c8:	dc812e15 	stw	r18,1208(sp)
220282cc:	dc412d15 	stw	r17,1204(sp)
220282d0:	dc012c15 	stw	r16,1200(sp)
220282d4:	d9012015 	stw	r4,1152(sp)
220282d8:	d9c12115 	stw	r7,1156(sp)
220282dc:	2829883a 	mov	r20,r5
220282e0:	302d883a 	mov	r22,r6
220282e4:	20000226 	beq	r4,zero,220282f0 <___vfiprintf_internal_r+0x48>
220282e8:	20800e17 	ldw	r2,56(r4)
220282ec:	1001d326 	beq	r2,zero,22028a3c <___vfiprintf_internal_r+0x794>
220282f0:	a0c0030b 	ldhu	r3,12(r20)
220282f4:	1908000c 	andi	r4,r3,8192
220282f8:	1805883a 	mov	r2,r3
220282fc:	2000071e 	bne	r4,zero,2202831c <___vfiprintf_internal_r+0x74>
22028300:	a1001917 	ldw	r4,100(r20)
22028304:	18880014 	ori	r2,r3,8192
22028308:	00f7ffc4 	movi	r3,-8193
2202830c:	20c8703a 	and	r4,r4,r3
22028310:	a080030d 	sth	r2,12(r20)
22028314:	1007883a 	mov	r3,r2
22028318:	a1001915 	stw	r4,100(r20)
2202831c:	1100020c 	andi	r4,r2,8
22028320:	20018926 	beq	r4,zero,22028948 <___vfiprintf_internal_r+0x6a0>
22028324:	a1000417 	ldw	r4,16(r20)
22028328:	20018726 	beq	r4,zero,22028948 <___vfiprintf_internal_r+0x6a0>
2202832c:	1080068c 	andi	r2,r2,26
22028330:	01000284 	movi	r4,10
22028334:	11018d26 	beq	r2,r4,2202896c <___vfiprintf_internal_r+0x6c4>
22028338:	da810a04 	addi	r10,sp,1064
2202833c:	dac109c4 	addi	r11,sp,1063
22028340:	070880f4 	movhi	fp,8707
22028344:	05c880f4 	movhi	r23,8707
22028348:	da811e15 	stw	r10,1144(sp)
2202834c:	52d5c83a 	sub	r10,r10,r11
22028350:	e73f8904 	addi	fp,fp,-476
22028354:	bdff8504 	addi	r23,r23,-492
22028358:	dac11f15 	stw	r11,1148(sp)
2202835c:	dec11a15 	stw	sp,1128(sp)
22028360:	d8011c15 	stw	zero,1136(sp)
22028364:	d8011b15 	stw	zero,1132(sp)
22028368:	d8012615 	stw	zero,1176(sp)
2202836c:	d8012215 	stw	zero,1160(sp)
22028370:	da812715 	stw	r10,1180(sp)
22028374:	d811883a 	mov	r8,sp
22028378:	b021883a 	mov	r16,r22
2202837c:	80800007 	ldb	r2,0(r16)
22028380:	10039c26 	beq	r2,zero,220291f4 <___vfiprintf_internal_r+0xf4c>
22028384:	01000944 	movi	r4,37
22028388:	11039a26 	beq	r2,r4,220291f4 <___vfiprintf_internal_r+0xf4c>
2202838c:	8005883a 	mov	r2,r16
22028390:	00000106 	br	22028398 <___vfiprintf_internal_r+0xf0>
22028394:	19000326 	beq	r3,r4,220283a4 <___vfiprintf_internal_r+0xfc>
22028398:	10800044 	addi	r2,r2,1
2202839c:	10c00007 	ldb	r3,0(r2)
220283a0:	183ffc1e 	bne	r3,zero,22028394 <__alt_data_end+0xfffe8f94>
220283a4:	1425c83a 	sub	r18,r2,r16
220283a8:	1023883a 	mov	r17,r2
220283ac:	90001026 	beq	r18,zero,220283f0 <___vfiprintf_internal_r+0x148>
220283b0:	d8c11c17 	ldw	r3,1136(sp)
220283b4:	d8811b17 	ldw	r2,1132(sp)
220283b8:	44000015 	stw	r16,0(r8)
220283bc:	90c7883a 	add	r3,r18,r3
220283c0:	10800044 	addi	r2,r2,1
220283c4:	44800115 	stw	r18,4(r8)
220283c8:	d8c11c15 	stw	r3,1136(sp)
220283cc:	d8811b15 	stw	r2,1132(sp)
220283d0:	010001c4 	movi	r4,7
220283d4:	2080750e 	bge	r4,r2,220285ac <___vfiprintf_internal_r+0x304>
220283d8:	18039d1e 	bne	r3,zero,22029250 <___vfiprintf_internal_r+0xfa8>
220283dc:	dac12217 	ldw	r11,1160(sp)
220283e0:	d8011b15 	stw	zero,1132(sp)
220283e4:	d811883a 	mov	r8,sp
220283e8:	5c97883a 	add	r11,r11,r18
220283ec:	dac12215 	stw	r11,1160(sp)
220283f0:	88800007 	ldb	r2,0(r17)
220283f4:	1002e026 	beq	r2,zero,22028f78 <___vfiprintf_internal_r+0xcd0>
220283f8:	88c00047 	ldb	r3,1(r17)
220283fc:	8c000044 	addi	r16,r17,1
22028400:	d8011d85 	stb	zero,1142(sp)
22028404:	000d883a 	mov	r6,zero
22028408:	027fffc4 	movi	r9,-1
2202840c:	0027883a 	mov	r19,zero
22028410:	002b883a 	mov	r21,zero
22028414:	01001604 	movi	r4,88
22028418:	01400244 	movi	r5,9
2202841c:	03000a84 	movi	r12,42
22028420:	01c01b04 	movi	r7,108
22028424:	84000044 	addi	r16,r16,1
22028428:	18bff804 	addi	r2,r3,-32
2202842c:	20825f36 	bltu	r4,r2,22028dac <___vfiprintf_internal_r+0xb04>
22028430:	100490ba 	slli	r2,r2,2
22028434:	028880f4 	movhi	r10,8707
22028438:	52a11204 	addi	r10,r10,-31672
2202843c:	1285883a 	add	r2,r2,r10
22028440:	10800017 	ldw	r2,0(r2)
22028444:	1000683a 	jmp	r2
22028448:	22028c1c 	xori	r8,r4,2608
2202844c:	22028dac 	andhi	r8,r4,2614
22028450:	22028dac 	andhi	r8,r4,2614
22028454:	22028da0 	cmpeqi	r8,r4,2614
22028458:	22028dac 	andhi	r8,r4,2614
2202845c:	22028dac 	andhi	r8,r4,2614
22028460:	22028dac 	andhi	r8,r4,2614
22028464:	22028dac 	andhi	r8,r4,2614
22028468:	22028dac 	andhi	r8,r4,2614
2202846c:	22028dac 	andhi	r8,r4,2614
22028470:	22028d78 	rdprs	r8,r4,2613
22028474:	22028d94 	ori	r8,r4,2614
22028478:	22028dac 	andhi	r8,r4,2614
2202847c:	22028a4c 	andi	r8,r4,2601
22028480:	22028bac 	andhi	r8,r4,2606
22028484:	22028dac 	andhi	r8,r4,2614
22028488:	22028b30 	cmpltui	r8,r4,2604
2202848c:	22028b3c 	xorhi	r8,r4,2604
22028490:	22028b3c 	xorhi	r8,r4,2604
22028494:	22028b3c 	xorhi	r8,r4,2604
22028498:	22028b3c 	xorhi	r8,r4,2604
2202849c:	22028b3c 	xorhi	r8,r4,2604
220284a0:	22028b3c 	xorhi	r8,r4,2604
220284a4:	22028b3c 	xorhi	r8,r4,2604
220284a8:	22028b3c 	xorhi	r8,r4,2604
220284ac:	22028b3c 	xorhi	r8,r4,2604
220284b0:	22028dac 	andhi	r8,r4,2614
220284b4:	22028dac 	andhi	r8,r4,2614
220284b8:	22028dac 	andhi	r8,r4,2614
220284bc:	22028dac 	andhi	r8,r4,2614
220284c0:	22028dac 	andhi	r8,r4,2614
220284c4:	22028dac 	andhi	r8,r4,2614
220284c8:	22028dac 	andhi	r8,r4,2614
220284cc:	22028dac 	andhi	r8,r4,2614
220284d0:	22028dac 	andhi	r8,r4,2614
220284d4:	22028dac 	andhi	r8,r4,2614
220284d8:	22028b68 	cmpgeui	r8,r4,2605
220284dc:	22028dac 	andhi	r8,r4,2614
220284e0:	22028dac 	andhi	r8,r4,2614
220284e4:	22028dac 	andhi	r8,r4,2614
220284e8:	22028dac 	andhi	r8,r4,2614
220284ec:	22028dac 	andhi	r8,r4,2614
220284f0:	22028dac 	andhi	r8,r4,2614
220284f4:	22028dac 	andhi	r8,r4,2614
220284f8:	22028dac 	andhi	r8,r4,2614
220284fc:	22028dac 	andhi	r8,r4,2614
22028500:	22028dac 	andhi	r8,r4,2614
22028504:	220285fc 	xorhi	r8,r4,2583
22028508:	22028dac 	andhi	r8,r4,2614
2202850c:	22028dac 	andhi	r8,r4,2614
22028510:	22028dac 	andhi	r8,r4,2614
22028514:	22028dac 	andhi	r8,r4,2614
22028518:	22028dac 	andhi	r8,r4,2614
2202851c:	220285c0 	call	2220285c <__alt_data_end+0x1c345c>
22028520:	22028dac 	andhi	r8,r4,2614
22028524:	22028dac 	andhi	r8,r4,2614
22028528:	22028aa8 	cmpgeui	r8,r4,2602
2202852c:	22028dac 	andhi	r8,r4,2614
22028530:	22028dac 	andhi	r8,r4,2614
22028534:	22028dac 	andhi	r8,r4,2614
22028538:	22028dac 	andhi	r8,r4,2614
2202853c:	22028dac 	andhi	r8,r4,2614
22028540:	22028dac 	andhi	r8,r4,2614
22028544:	22028dac 	andhi	r8,r4,2614
22028548:	22028dac 	andhi	r8,r4,2614
2202854c:	22028dac 	andhi	r8,r4,2614
22028550:	22028dac 	andhi	r8,r4,2614
22028554:	22028b00 	call	222028b0 <__alt_data_end+0x1c34b0>
22028558:	22028c98 	cmpnei	r8,r4,2610
2202855c:	22028dac 	andhi	r8,r4,2614
22028560:	22028dac 	andhi	r8,r4,2614
22028564:	22028dac 	andhi	r8,r4,2614
22028568:	22028d20 	cmpeqi	r8,r4,2612
2202856c:	22028c98 	cmpnei	r8,r4,2610
22028570:	22028dac 	andhi	r8,r4,2614
22028574:	22028dac 	andhi	r8,r4,2614
22028578:	22028d2c 	andhi	r8,r4,2612
2202857c:	22028dac 	andhi	r8,r4,2614
22028580:	22028bec 	andhi	r8,r4,2607
22028584:	22028600 	call	22202860 <__alt_data_end+0x1c3460>
22028588:	22028cd4 	ori	r8,r4,2611
2202858c:	22028d14 	ori	r8,r4,2612
22028590:	22028dac 	andhi	r8,r4,2614
22028594:	22028c38 	rdprs	r8,r4,2608
22028598:	22028dac 	andhi	r8,r4,2614
2202859c:	220285c4 	addi	r8,r4,2583
220285a0:	22028dac 	andhi	r8,r4,2614
220285a4:	22028dac 	andhi	r8,r4,2614
220285a8:	22028d3c 	xorhi	r8,r4,2612
220285ac:	42000204 	addi	r8,r8,8
220285b0:	dac12217 	ldw	r11,1160(sp)
220285b4:	5c97883a 	add	r11,r11,r18
220285b8:	dac12215 	stw	r11,1160(sp)
220285bc:	003f8c06 	br	220283f0 <__alt_data_end+0xfffe8ff0>
220285c0:	ad400414 	ori	r21,r21,16
220285c4:	a880080c 	andi	r2,r21,32
220285c8:	10012f1e 	bne	r2,zero,22028a88 <___vfiprintf_internal_r+0x7e0>
220285cc:	a880040c 	andi	r2,r21,16
220285d0:	1001ff1e 	bne	r2,zero,22028dd0 <___vfiprintf_internal_r+0xb28>
220285d4:	a880100c 	andi	r2,r21,64
220285d8:	1001fd26 	beq	r2,zero,22028dd0 <___vfiprintf_internal_r+0xb28>
220285dc:	da812117 	ldw	r10,1156(sp)
220285e0:	002d883a 	mov	r22,zero
220285e4:	00800044 	movi	r2,1
220285e8:	5480000b 	ldhu	r18,0(r10)
220285ec:	52800104 	addi	r10,r10,4
220285f0:	da812115 	stw	r10,1156(sp)
220285f4:	9009883a 	mov	r4,r18
220285f8:	00000a06 	br	22028624 <___vfiprintf_internal_r+0x37c>
220285fc:	ad400414 	ori	r21,r21,16
22028600:	a880080c 	andi	r2,r21,32
22028604:	10011426 	beq	r2,zero,22028a58 <___vfiprintf_internal_r+0x7b0>
22028608:	da812117 	ldw	r10,1156(sp)
2202860c:	0005883a 	mov	r2,zero
22028610:	54800017 	ldw	r18,0(r10)
22028614:	55800117 	ldw	r22,4(r10)
22028618:	52800204 	addi	r10,r10,8
2202861c:	da812115 	stw	r10,1156(sp)
22028620:	9588b03a 	or	r4,r18,r22
22028624:	d8011d85 	stb	zero,1142(sp)
22028628:	4823883a 	mov	r17,r9
2202862c:	0019883a 	mov	r12,zero
22028630:	48000216 	blt	r9,zero,2202863c <___vfiprintf_internal_r+0x394>
22028634:	00ffdfc4 	movi	r3,-129
22028638:	a8ea703a 	and	r21,r21,r3
2202863c:	2002221e 	bne	r4,zero,22028ec8 <___vfiprintf_internal_r+0xc20>
22028640:	4802c726 	beq	r9,zero,22029160 <___vfiprintf_internal_r+0xeb8>
22028644:	10803fcc 	andi	r2,r2,255
22028648:	00c00044 	movi	r3,1
2202864c:	10c24426 	beq	r2,r3,22028f60 <___vfiprintf_internal_r+0xcb8>
22028650:	00c00084 	movi	r3,2
22028654:	10c2cc26 	beq	r2,r3,22029188 <___vfiprintf_internal_r+0xee0>
22028658:	d8c10a04 	addi	r3,sp,1064
2202865c:	9008d0fa 	srli	r4,r18,3
22028660:	b00a977a 	slli	r5,r22,29
22028664:	b02cd0fa 	srli	r22,r22,3
22028668:	948001cc 	andi	r18,r18,7
2202866c:	90800c04 	addi	r2,r18,48
22028670:	18ffffc4 	addi	r3,r3,-1
22028674:	2924b03a 	or	r18,r5,r4
22028678:	18800005 	stb	r2,0(r3)
2202867c:	9588b03a 	or	r4,r18,r22
22028680:	203ff61e 	bne	r4,zero,2202865c <__alt_data_end+0xfffe925c>
22028684:	a900004c 	andi	r4,r21,1
22028688:	d8c12415 	stw	r3,1168(sp)
2202868c:	2002fb1e 	bne	r4,zero,2202927c <___vfiprintf_internal_r+0xfd4>
22028690:	da811e17 	ldw	r10,1144(sp)
22028694:	50e3c83a 	sub	r17,r10,r3
22028698:	8825883a 	mov	r18,r17
2202869c:	8a40010e 	bge	r17,r9,220286a4 <___vfiprintf_internal_r+0x3fc>
220286a0:	4825883a 	mov	r18,r9
220286a4:	63003fcc 	andi	r12,r12,255
220286a8:	6300201c 	xori	r12,r12,128
220286ac:	633fe004 	addi	r12,r12,-128
220286b0:	60000126 	beq	r12,zero,220286b8 <___vfiprintf_internal_r+0x410>
220286b4:	94800044 	addi	r18,r18,1
220286b8:	ab80008c 	andi	r14,r21,2
220286bc:	70000126 	beq	r14,zero,220286c4 <___vfiprintf_internal_r+0x41c>
220286c0:	94800084 	addi	r18,r18,2
220286c4:	ad80210c 	andi	r22,r21,132
220286c8:	b001df1e 	bne	r22,zero,22028e48 <___vfiprintf_internal_r+0xba0>
220286cc:	9c8fc83a 	sub	r7,r19,r18
220286d0:	01c1dd0e 	bge	zero,r7,22028e48 <___vfiprintf_internal_r+0xba0>
220286d4:	03000404 	movi	r12,16
220286d8:	d8811c17 	ldw	r2,1136(sp)
220286dc:	61c3920e 	bge	r12,r7,22029528 <___vfiprintf_internal_r+0x1280>
220286e0:	028880f4 	movhi	r10,8707
220286e4:	52bf8904 	addi	r10,r10,-476
220286e8:	dc012915 	stw	r16,1188(sp)
220286ec:	d9811b17 	ldw	r6,1132(sp)
220286f0:	da812315 	stw	r10,1164(sp)
220286f4:	00c001c4 	movi	r3,7
220286f8:	da412515 	stw	r9,1172(sp)
220286fc:	db812815 	stw	r14,1184(sp)
22028700:	3821883a 	mov	r16,r7
22028704:	00000506 	br	2202871c <___vfiprintf_internal_r+0x474>
22028708:	31400084 	addi	r5,r6,2
2202870c:	42000204 	addi	r8,r8,8
22028710:	200d883a 	mov	r6,r4
22028714:	843ffc04 	addi	r16,r16,-16
22028718:	64000d0e 	bge	r12,r16,22028750 <___vfiprintf_internal_r+0x4a8>
2202871c:	10800404 	addi	r2,r2,16
22028720:	31000044 	addi	r4,r6,1
22028724:	47000015 	stw	fp,0(r8)
22028728:	43000115 	stw	r12,4(r8)
2202872c:	d8811c15 	stw	r2,1136(sp)
22028730:	d9011b15 	stw	r4,1132(sp)
22028734:	193ff40e 	bge	r3,r4,22028708 <__alt_data_end+0xfffe9308>
22028738:	1001b51e 	bne	r2,zero,22028e10 <___vfiprintf_internal_r+0xb68>
2202873c:	843ffc04 	addi	r16,r16,-16
22028740:	000d883a 	mov	r6,zero
22028744:	01400044 	movi	r5,1
22028748:	d811883a 	mov	r8,sp
2202874c:	643ff316 	blt	r12,r16,2202871c <__alt_data_end+0xfffe931c>
22028750:	800f883a 	mov	r7,r16
22028754:	da412517 	ldw	r9,1172(sp)
22028758:	db812817 	ldw	r14,1184(sp)
2202875c:	dc012917 	ldw	r16,1188(sp)
22028760:	dac12317 	ldw	r11,1164(sp)
22028764:	3887883a 	add	r3,r7,r2
22028768:	41c00115 	stw	r7,4(r8)
2202876c:	42c00015 	stw	r11,0(r8)
22028770:	d8c11c15 	stw	r3,1136(sp)
22028774:	d9411b15 	stw	r5,1132(sp)
22028778:	008001c4 	movi	r2,7
2202877c:	11429316 	blt	r2,r5,220291cc <___vfiprintf_internal_r+0xf24>
22028780:	d9011d87 	ldb	r4,1142(sp)
22028784:	42000204 	addi	r8,r8,8
22028788:	28800044 	addi	r2,r5,1
2202878c:	2001b31e 	bne	r4,zero,22028e5c <___vfiprintf_internal_r+0xbb4>
22028790:	70000c26 	beq	r14,zero,220287c4 <___vfiprintf_internal_r+0x51c>
22028794:	d9011d04 	addi	r4,sp,1140
22028798:	18c00084 	addi	r3,r3,2
2202879c:	41000015 	stw	r4,0(r8)
220287a0:	01000084 	movi	r4,2
220287a4:	41000115 	stw	r4,4(r8)
220287a8:	d8c11c15 	stw	r3,1136(sp)
220287ac:	d8811b15 	stw	r2,1132(sp)
220287b0:	010001c4 	movi	r4,7
220287b4:	20826516 	blt	r4,r2,2202914c <___vfiprintf_internal_r+0xea4>
220287b8:	100b883a 	mov	r5,r2
220287bc:	42000204 	addi	r8,r8,8
220287c0:	10800044 	addi	r2,r2,1
220287c4:	01002004 	movi	r4,128
220287c8:	b1021a26 	beq	r22,r4,22029034 <___vfiprintf_internal_r+0xd8c>
220287cc:	4c6dc83a 	sub	r22,r9,r17
220287d0:	0580230e 	bge	zero,r22,22028860 <___vfiprintf_internal_r+0x5b8>
220287d4:	01c00404 	movi	r7,16
220287d8:	3d83300e 	bge	r7,r22,2202949c <___vfiprintf_internal_r+0x11f4>
220287dc:	008880f4 	movhi	r2,8707
220287e0:	10bf8504 	addi	r2,r2,-492
220287e4:	d8812315 	stw	r2,1164(sp)
220287e8:	030001c4 	movi	r12,7
220287ec:	00000506 	br	22028804 <___vfiprintf_internal_r+0x55c>
220287f0:	28800084 	addi	r2,r5,2
220287f4:	42000204 	addi	r8,r8,8
220287f8:	200b883a 	mov	r5,r4
220287fc:	b5bffc04 	addi	r22,r22,-16
22028800:	3d800d0e 	bge	r7,r22,22028838 <___vfiprintf_internal_r+0x590>
22028804:	18c00404 	addi	r3,r3,16
22028808:	29000044 	addi	r4,r5,1
2202880c:	45c00015 	stw	r23,0(r8)
22028810:	41c00115 	stw	r7,4(r8)
22028814:	d8c11c15 	stw	r3,1136(sp)
22028818:	d9011b15 	stw	r4,1132(sp)
2202881c:	613ff40e 	bge	r12,r4,220287f0 <__alt_data_end+0xfffe93f0>
22028820:	18019b1e 	bne	r3,zero,22028e90 <___vfiprintf_internal_r+0xbe8>
22028824:	b5bffc04 	addi	r22,r22,-16
22028828:	000b883a 	mov	r5,zero
2202882c:	00800044 	movi	r2,1
22028830:	d811883a 	mov	r8,sp
22028834:	3dbff316 	blt	r7,r22,22028804 <__alt_data_end+0xfffe9404>
22028838:	da812317 	ldw	r10,1164(sp)
2202883c:	1d87883a 	add	r3,r3,r22
22028840:	45800115 	stw	r22,4(r8)
22028844:	42800015 	stw	r10,0(r8)
22028848:	d8c11c15 	stw	r3,1136(sp)
2202884c:	d8811b15 	stw	r2,1132(sp)
22028850:	010001c4 	movi	r4,7
22028854:	2081dd16 	blt	r4,r2,22028fcc <___vfiprintf_internal_r+0xd24>
22028858:	42000204 	addi	r8,r8,8
2202885c:	10800044 	addi	r2,r2,1
22028860:	da812417 	ldw	r10,1168(sp)
22028864:	1c47883a 	add	r3,r3,r17
22028868:	44400115 	stw	r17,4(r8)
2202886c:	42800015 	stw	r10,0(r8)
22028870:	d8c11c15 	stw	r3,1136(sp)
22028874:	d8811b15 	stw	r2,1132(sp)
22028878:	010001c4 	movi	r4,7
2202887c:	2081dc0e 	bge	r4,r2,22028ff0 <___vfiprintf_internal_r+0xd48>
22028880:	1802611e 	bne	r3,zero,22029208 <___vfiprintf_internal_r+0xf60>
22028884:	d8011b15 	stw	zero,1132(sp)
22028888:	aac0010c 	andi	r11,r21,4
2202888c:	58002726 	beq	r11,zero,2202892c <___vfiprintf_internal_r+0x684>
22028890:	9ca3c83a 	sub	r17,r19,r18
22028894:	d811883a 	mov	r8,sp
22028898:	0443510e 	bge	zero,r17,220295e0 <___vfiprintf_internal_r+0x1338>
2202889c:	01c00404 	movi	r7,16
220288a0:	3c43320e 	bge	r7,r17,2202956c <___vfiprintf_internal_r+0x12c4>
220288a4:	008880f4 	movhi	r2,8707
220288a8:	10bf8904 	addi	r2,r2,-476
220288ac:	d9011b17 	ldw	r4,1132(sp)
220288b0:	d8812315 	stw	r2,1164(sp)
220288b4:	382d883a 	mov	r22,r7
220288b8:	054001c4 	movi	r21,7
220288bc:	00000506 	br	220288d4 <___vfiprintf_internal_r+0x62c>
220288c0:	21400084 	addi	r5,r4,2
220288c4:	42000204 	addi	r8,r8,8
220288c8:	1009883a 	mov	r4,r2
220288cc:	8c7ffc04 	addi	r17,r17,-16
220288d0:	b4400d0e 	bge	r22,r17,22028908 <___vfiprintf_internal_r+0x660>
220288d4:	18c00404 	addi	r3,r3,16
220288d8:	20800044 	addi	r2,r4,1
220288dc:	47000015 	stw	fp,0(r8)
220288e0:	45800115 	stw	r22,4(r8)
220288e4:	d8c11c15 	stw	r3,1136(sp)
220288e8:	d8811b15 	stw	r2,1132(sp)
220288ec:	a8bff40e 	bge	r21,r2,220288c0 <__alt_data_end+0xfffe94c0>
220288f0:	1801ac1e 	bne	r3,zero,22028fa4 <___vfiprintf_internal_r+0xcfc>
220288f4:	8c7ffc04 	addi	r17,r17,-16
220288f8:	0009883a 	mov	r4,zero
220288fc:	01400044 	movi	r5,1
22028900:	d811883a 	mov	r8,sp
22028904:	b47ff316 	blt	r22,r17,220288d4 <__alt_data_end+0xfffe94d4>
22028908:	da812317 	ldw	r10,1164(sp)
2202890c:	1c47883a 	add	r3,r3,r17
22028910:	44400115 	stw	r17,4(r8)
22028914:	42800015 	stw	r10,0(r8)
22028918:	d8c11c15 	stw	r3,1136(sp)
2202891c:	d9411b15 	stw	r5,1132(sp)
22028920:	008001c4 	movi	r2,7
22028924:	1141b70e 	bge	r2,r5,22029004 <___vfiprintf_internal_r+0xd5c>
22028928:	1802cf1e 	bne	r3,zero,22029468 <___vfiprintf_internal_r+0x11c0>
2202892c:	94c2ca16 	blt	r18,r19,22029458 <___vfiprintf_internal_r+0x11b0>
22028930:	dac12217 	ldw	r11,1160(sp)
22028934:	5c97883a 	add	r11,r11,r18
22028938:	dac12215 	stw	r11,1160(sp)
2202893c:	d8011b15 	stw	zero,1132(sp)
22028940:	d811883a 	mov	r8,sp
22028944:	003e8d06 	br	2202837c <__alt_data_end+0xfffe8f7c>
22028948:	d9012017 	ldw	r4,1152(sp)
2202894c:	a00b883a 	mov	r5,r20
22028950:	20230380 	call	22023038 <__swsetup_r>
22028954:	10002c1e 	bne	r2,zero,22028a08 <___vfiprintf_internal_r+0x760>
22028958:	a0c0030b 	ldhu	r3,12(r20)
2202895c:	01000284 	movi	r4,10
22028960:	1805883a 	mov	r2,r3
22028964:	1080068c 	andi	r2,r2,26
22028968:	113e731e 	bne	r2,r4,22028338 <__alt_data_end+0xfffe8f38>
2202896c:	a080038b 	ldhu	r2,14(r20)
22028970:	113fffcc 	andi	r4,r2,65535
22028974:	2120001c 	xori	r4,r4,32768
22028978:	21200004 	addi	r4,r4,-32768
2202897c:	203e6e16 	blt	r4,zero,22028338 <__alt_data_end+0xfffe8f38>
22028980:	a3001917 	ldw	r12,100(r20)
22028984:	a2c00717 	ldw	r11,28(r20)
22028988:	a2800917 	ldw	r10,36(r20)
2202898c:	d9012017 	ldw	r4,1152(sp)
22028990:	d9c12117 	ldw	r7,1156(sp)
22028994:	02410004 	movi	r9,1024
22028998:	18ffff4c 	andi	r3,r3,65533
2202899c:	da4b883a 	add	r5,sp,r9
220289a0:	b00d883a 	mov	r6,r22
220289a4:	d8c1030d 	sth	r3,1036(sp)
220289a8:	db011915 	stw	r12,1124(sp)
220289ac:	d881038d 	sth	r2,1038(sp)
220289b0:	dac10715 	stw	r11,1052(sp)
220289b4:	da810915 	stw	r10,1060(sp)
220289b8:	dec10015 	stw	sp,1024(sp)
220289bc:	dec10415 	stw	sp,1040(sp)
220289c0:	da410215 	stw	r9,1032(sp)
220289c4:	da410515 	stw	r9,1044(sp)
220289c8:	d8010615 	stw	zero,1048(sp)
220289cc:	20282a80 	call	220282a8 <___vfiprintf_internal_r>
220289d0:	1021883a 	mov	r16,r2
220289d4:	10000416 	blt	r2,zero,220289e8 <___vfiprintf_internal_r+0x740>
220289d8:	d9012017 	ldw	r4,1152(sp)
220289dc:	d9410004 	addi	r5,sp,1024
220289e0:	2024a900 	call	22024a90 <_fflush_r>
220289e4:	1002fc1e 	bne	r2,zero,220295d8 <___vfiprintf_internal_r+0x1330>
220289e8:	d881030b 	ldhu	r2,1036(sp)
220289ec:	1080100c 	andi	r2,r2,64
220289f0:	10000326 	beq	r2,zero,22028a00 <___vfiprintf_internal_r+0x758>
220289f4:	a080030b 	ldhu	r2,12(r20)
220289f8:	10801014 	ori	r2,r2,64
220289fc:	a080030d 	sth	r2,12(r20)
22028a00:	8005883a 	mov	r2,r16
22028a04:	00000106 	br	22028a0c <___vfiprintf_internal_r+0x764>
22028a08:	00bfffc4 	movi	r2,-1
22028a0c:	dfc13517 	ldw	ra,1236(sp)
22028a10:	df013417 	ldw	fp,1232(sp)
22028a14:	ddc13317 	ldw	r23,1228(sp)
22028a18:	dd813217 	ldw	r22,1224(sp)
22028a1c:	dd413117 	ldw	r21,1220(sp)
22028a20:	dd013017 	ldw	r20,1216(sp)
22028a24:	dcc12f17 	ldw	r19,1212(sp)
22028a28:	dc812e17 	ldw	r18,1208(sp)
22028a2c:	dc412d17 	ldw	r17,1204(sp)
22028a30:	dc012c17 	ldw	r16,1200(sp)
22028a34:	dec13604 	addi	sp,sp,1240
22028a38:	f800283a 	ret
22028a3c:	20250380 	call	22025038 <__sinit>
22028a40:	003e2b06 	br	220282f0 <__alt_data_end+0xfffe8ef0>
22028a44:	04e7c83a 	sub	r19,zero,r19
22028a48:	d8812115 	stw	r2,1156(sp)
22028a4c:	ad400114 	ori	r21,r21,4
22028a50:	80c00007 	ldb	r3,0(r16)
22028a54:	003e7306 	br	22028424 <__alt_data_end+0xfffe9024>
22028a58:	a880040c 	andi	r2,r21,16
22028a5c:	1000e41e 	bne	r2,zero,22028df0 <___vfiprintf_internal_r+0xb48>
22028a60:	a880100c 	andi	r2,r21,64
22028a64:	1000e226 	beq	r2,zero,22028df0 <___vfiprintf_internal_r+0xb48>
22028a68:	da812117 	ldw	r10,1156(sp)
22028a6c:	002d883a 	mov	r22,zero
22028a70:	0005883a 	mov	r2,zero
22028a74:	5480000b 	ldhu	r18,0(r10)
22028a78:	52800104 	addi	r10,r10,4
22028a7c:	da812115 	stw	r10,1156(sp)
22028a80:	9009883a 	mov	r4,r18
22028a84:	003ee706 	br	22028624 <__alt_data_end+0xfffe9224>
22028a88:	da812117 	ldw	r10,1156(sp)
22028a8c:	00800044 	movi	r2,1
22028a90:	54800017 	ldw	r18,0(r10)
22028a94:	55800117 	ldw	r22,4(r10)
22028a98:	52800204 	addi	r10,r10,8
22028a9c:	da812115 	stw	r10,1156(sp)
22028aa0:	9588b03a 	or	r4,r18,r22
22028aa4:	003edf06 	br	22028624 <__alt_data_end+0xfffe9224>
22028aa8:	02c880f4 	movhi	r11,8707
22028aac:	5aff1f04 	addi	r11,r11,-900
22028ab0:	d9811d85 	stb	r6,1142(sp)
22028ab4:	dac12615 	stw	r11,1176(sp)
22028ab8:	a900080c 	andi	r4,r21,32
22028abc:	d8812117 	ldw	r2,1156(sp)
22028ac0:	2000a526 	beq	r4,zero,22028d58 <___vfiprintf_internal_r+0xab0>
22028ac4:	da812117 	ldw	r10,1156(sp)
22028ac8:	14800017 	ldw	r18,0(r2)
22028acc:	15800117 	ldw	r22,4(r2)
22028ad0:	52800204 	addi	r10,r10,8
22028ad4:	da812115 	stw	r10,1156(sp)
22028ad8:	a880004c 	andi	r2,r21,1
22028adc:	1001d926 	beq	r2,zero,22029244 <___vfiprintf_internal_r+0xf9c>
22028ae0:	9588b03a 	or	r4,r18,r22
22028ae4:	20024426 	beq	r4,zero,220293f8 <___vfiprintf_internal_r+0x1150>
22028ae8:	00800c04 	movi	r2,48
22028aec:	d8811d05 	stb	r2,1140(sp)
22028af0:	d8c11d45 	stb	r3,1141(sp)
22028af4:	ad400094 	ori	r21,r21,2
22028af8:	00800084 	movi	r2,2
22028afc:	003ec906 	br	22028624 <__alt_data_end+0xfffe9224>
22028b00:	da812117 	ldw	r10,1156(sp)
22028b04:	04800044 	movi	r18,1
22028b08:	dac10004 	addi	r11,sp,1024
22028b0c:	50800017 	ldw	r2,0(r10)
22028b10:	52800104 	addi	r10,r10,4
22028b14:	d8011d85 	stb	zero,1142(sp)
22028b18:	d8810005 	stb	r2,1024(sp)
22028b1c:	da812115 	stw	r10,1156(sp)
22028b20:	9023883a 	mov	r17,r18
22028b24:	dac12415 	stw	r11,1168(sp)
22028b28:	0013883a 	mov	r9,zero
22028b2c:	003ee206 	br	220286b8 <__alt_data_end+0xfffe92b8>
22028b30:	ad402014 	ori	r21,r21,128
22028b34:	80c00007 	ldb	r3,0(r16)
22028b38:	003e3a06 	br	22028424 <__alt_data_end+0xfffe9024>
22028b3c:	8015883a 	mov	r10,r16
22028b40:	0027883a 	mov	r19,zero
22028b44:	18bff404 	addi	r2,r3,-48
22028b48:	50c00007 	ldb	r3,0(r10)
22028b4c:	9cc002a4 	muli	r19,r19,10
22028b50:	84000044 	addi	r16,r16,1
22028b54:	8015883a 	mov	r10,r16
22028b58:	98a7883a 	add	r19,r19,r2
22028b5c:	18bff404 	addi	r2,r3,-48
22028b60:	28bff92e 	bgeu	r5,r2,22028b48 <__alt_data_end+0xfffe9748>
22028b64:	003e3006 	br	22028428 <__alt_data_end+0xfffe9028>
22028b68:	ad400414 	ori	r21,r21,16
22028b6c:	d9811d85 	stb	r6,1142(sp)
22028b70:	a880080c 	andi	r2,r21,32
22028b74:	d8c12117 	ldw	r3,1156(sp)
22028b78:	10004b26 	beq	r2,zero,22028ca8 <___vfiprintf_internal_r+0xa00>
22028b7c:	da812117 	ldw	r10,1156(sp)
22028b80:	18800117 	ldw	r2,4(r3)
22028b84:	1c800017 	ldw	r18,0(r3)
22028b88:	52800204 	addi	r10,r10,8
22028b8c:	da812115 	stw	r10,1156(sp)
22028b90:	102d883a 	mov	r22,r2
22028b94:	1001f116 	blt	r2,zero,2202935c <___vfiprintf_internal_r+0x10b4>
22028b98:	db011d83 	ldbu	r12,1142(sp)
22028b9c:	4823883a 	mov	r17,r9
22028ba0:	00800044 	movi	r2,1
22028ba4:	9588b03a 	or	r4,r18,r22
22028ba8:	003ea106 	br	22028630 <__alt_data_end+0xfffe9230>
22028bac:	80c00007 	ldb	r3,0(r16)
22028bb0:	82800044 	addi	r10,r16,1
22028bb4:	1b027f26 	beq	r3,r12,220295b4 <___vfiprintf_internal_r+0x130c>
22028bb8:	18bff404 	addi	r2,r3,-48
22028bbc:	5021883a 	mov	r16,r10
22028bc0:	0013883a 	mov	r9,zero
22028bc4:	28be1836 	bltu	r5,r2,22028428 <__alt_data_end+0xfffe9028>
22028bc8:	80c00007 	ldb	r3,0(r16)
22028bcc:	4a4002a4 	muli	r9,r9,10
22028bd0:	84000044 	addi	r16,r16,1
22028bd4:	1253883a 	add	r9,r2,r9
22028bd8:	18bff404 	addi	r2,r3,-48
22028bdc:	28bffa2e 	bgeu	r5,r2,22028bc8 <__alt_data_end+0xfffe97c8>
22028be0:	483e110e 	bge	r9,zero,22028428 <__alt_data_end+0xfffe9028>
22028be4:	027fffc4 	movi	r9,-1
22028be8:	003e0f06 	br	22028428 <__alt_data_end+0xfffe9028>
22028bec:	d9811d85 	stb	r6,1142(sp)
22028bf0:	a880080c 	andi	r2,r21,32
22028bf4:	1001ee26 	beq	r2,zero,220293b0 <___vfiprintf_internal_r+0x1108>
22028bf8:	da812117 	ldw	r10,1156(sp)
22028bfc:	dac12217 	ldw	r11,1160(sp)
22028c00:	50800017 	ldw	r2,0(r10)
22028c04:	5807d7fa 	srai	r3,r11,31
22028c08:	52800104 	addi	r10,r10,4
22028c0c:	da812115 	stw	r10,1156(sp)
22028c10:	12c00015 	stw	r11,0(r2)
22028c14:	10c00115 	stw	r3,4(r2)
22028c18:	003dd806 	br	2202837c <__alt_data_end+0xfffe8f7c>
22028c1c:	30803fcc 	andi	r2,r6,255
22028c20:	1080201c 	xori	r2,r2,128
22028c24:	10bfe004 	addi	r2,r2,-128
22028c28:	1001df1e 	bne	r2,zero,220293a8 <___vfiprintf_internal_r+0x1100>
22028c2c:	01800804 	movi	r6,32
22028c30:	80c00007 	ldb	r3,0(r16)
22028c34:	003dfb06 	br	22028424 <__alt_data_end+0xfffe9024>
22028c38:	da812117 	ldw	r10,1156(sp)
22028c3c:	dac12117 	ldw	r11,1156(sp)
22028c40:	d8011d85 	stb	zero,1142(sp)
22028c44:	52800017 	ldw	r10,0(r10)
22028c48:	5d800104 	addi	r22,r11,4
22028c4c:	da812415 	stw	r10,1168(sp)
22028c50:	50023b26 	beq	r10,zero,22029540 <___vfiprintf_internal_r+0x1298>
22028c54:	d9012417 	ldw	r4,1168(sp)
22028c58:	48021f16 	blt	r9,zero,220294d8 <___vfiprintf_internal_r+0x1230>
22028c5c:	480d883a 	mov	r6,r9
22028c60:	000b883a 	mov	r5,zero
22028c64:	da012a15 	stw	r8,1192(sp)
22028c68:	da412b15 	stw	r9,1196(sp)
22028c6c:	20264f00 	call	220264f0 <memchr>
22028c70:	da012a17 	ldw	r8,1192(sp)
22028c74:	da412b17 	ldw	r9,1196(sp)
22028c78:	10024726 	beq	r2,zero,22029598 <___vfiprintf_internal_r+0x12f0>
22028c7c:	d8c12417 	ldw	r3,1168(sp)
22028c80:	10e3c83a 	sub	r17,r2,r3
22028c84:	4c41f616 	blt	r9,r17,22029460 <___vfiprintf_internal_r+0x11b8>
22028c88:	db011d83 	ldbu	r12,1142(sp)
22028c8c:	dd812115 	stw	r22,1156(sp)
22028c90:	0013883a 	mov	r9,zero
22028c94:	003e8006 	br	22028698 <__alt_data_end+0xfffe9298>
22028c98:	d9811d85 	stb	r6,1142(sp)
22028c9c:	a880080c 	andi	r2,r21,32
22028ca0:	d8c12117 	ldw	r3,1156(sp)
22028ca4:	103fb51e 	bne	r2,zero,22028b7c <__alt_data_end+0xfffe977c>
22028ca8:	a880040c 	andi	r2,r21,16
22028cac:	10015e1e 	bne	r2,zero,22029228 <___vfiprintf_internal_r+0xf80>
22028cb0:	a880100c 	andi	r2,r21,64
22028cb4:	10015c26 	beq	r2,zero,22029228 <___vfiprintf_internal_r+0xf80>
22028cb8:	1c80000f 	ldh	r18,0(r3)
22028cbc:	da812117 	ldw	r10,1156(sp)
22028cc0:	902dd7fa 	srai	r22,r18,31
22028cc4:	52800104 	addi	r10,r10,4
22028cc8:	da812115 	stw	r10,1156(sp)
22028ccc:	b005883a 	mov	r2,r22
22028cd0:	003fb006 	br	22028b94 <__alt_data_end+0xfffe9794>
22028cd4:	da812117 	ldw	r10,1156(sp)
22028cd8:	00800c04 	movi	r2,48
22028cdc:	02c880f4 	movhi	r11,8707
22028ce0:	54800017 	ldw	r18,0(r10)
22028ce4:	d8811d05 	stb	r2,1140(sp)
22028ce8:	52800104 	addi	r10,r10,4
22028cec:	00801e04 	movi	r2,120
22028cf0:	5aff2404 	addi	r11,r11,-880
22028cf4:	d8811d45 	stb	r2,1141(sp)
22028cf8:	002d883a 	mov	r22,zero
22028cfc:	ad400094 	ori	r21,r21,2
22028d00:	da812115 	stw	r10,1156(sp)
22028d04:	dac12615 	stw	r11,1176(sp)
22028d08:	00800084 	movi	r2,2
22028d0c:	9009883a 	mov	r4,r18
22028d10:	003e4406 	br	22028624 <__alt_data_end+0xfffe9224>
22028d14:	ad400814 	ori	r21,r21,32
22028d18:	80c00007 	ldb	r3,0(r16)
22028d1c:	003dc106 	br	22028424 <__alt_data_end+0xfffe9024>
22028d20:	ad401014 	ori	r21,r21,64
22028d24:	80c00007 	ldb	r3,0(r16)
22028d28:	003dbe06 	br	22028424 <__alt_data_end+0xfffe9024>
22028d2c:	80c00007 	ldb	r3,0(r16)
22028d30:	19c1de26 	beq	r3,r7,220294ac <___vfiprintf_internal_r+0x1204>
22028d34:	ad400414 	ori	r21,r21,16
22028d38:	003dba06 	br	22028424 <__alt_data_end+0xfffe9024>
22028d3c:	008880f4 	movhi	r2,8707
22028d40:	10bf2404 	addi	r2,r2,-880
22028d44:	d8812615 	stw	r2,1176(sp)
22028d48:	d9811d85 	stb	r6,1142(sp)
22028d4c:	a900080c 	andi	r4,r21,32
22028d50:	d8812117 	ldw	r2,1156(sp)
22028d54:	203f5b1e 	bne	r4,zero,22028ac4 <__alt_data_end+0xfffe96c4>
22028d58:	a900040c 	andi	r4,r21,16
22028d5c:	2001a826 	beq	r4,zero,22029400 <___vfiprintf_internal_r+0x1158>
22028d60:	dac12117 	ldw	r11,1156(sp)
22028d64:	14800017 	ldw	r18,0(r2)
22028d68:	002d883a 	mov	r22,zero
22028d6c:	5ac00104 	addi	r11,r11,4
22028d70:	dac12115 	stw	r11,1156(sp)
22028d74:	003f5806 	br	22028ad8 <__alt_data_end+0xfffe96d8>
22028d78:	da812117 	ldw	r10,1156(sp)
22028d7c:	54c00017 	ldw	r19,0(r10)
22028d80:	50800104 	addi	r2,r10,4
22028d84:	983f2f16 	blt	r19,zero,22028a44 <__alt_data_end+0xfffe9644>
22028d88:	d8812115 	stw	r2,1156(sp)
22028d8c:	80c00007 	ldb	r3,0(r16)
22028d90:	003da406 	br	22028424 <__alt_data_end+0xfffe9024>
22028d94:	01800ac4 	movi	r6,43
22028d98:	80c00007 	ldb	r3,0(r16)
22028d9c:	003da106 	br	22028424 <__alt_data_end+0xfffe9024>
22028da0:	ad400054 	ori	r21,r21,1
22028da4:	80c00007 	ldb	r3,0(r16)
22028da8:	003d9e06 	br	22028424 <__alt_data_end+0xfffe9024>
22028dac:	d9811d85 	stb	r6,1142(sp)
22028db0:	18007126 	beq	r3,zero,22028f78 <___vfiprintf_internal_r+0xcd0>
22028db4:	04800044 	movi	r18,1
22028db8:	d8c10005 	stb	r3,1024(sp)
22028dbc:	d8c10004 	addi	r3,sp,1024
22028dc0:	d8011d85 	stb	zero,1142(sp)
22028dc4:	9023883a 	mov	r17,r18
22028dc8:	d8c12415 	stw	r3,1168(sp)
22028dcc:	003f5606 	br	22028b28 <__alt_data_end+0xfffe9728>
22028dd0:	dac12117 	ldw	r11,1156(sp)
22028dd4:	002d883a 	mov	r22,zero
22028dd8:	00800044 	movi	r2,1
22028ddc:	5c800017 	ldw	r18,0(r11)
22028de0:	5ac00104 	addi	r11,r11,4
22028de4:	dac12115 	stw	r11,1156(sp)
22028de8:	9009883a 	mov	r4,r18
22028dec:	003e0d06 	br	22028624 <__alt_data_end+0xfffe9224>
22028df0:	dac12117 	ldw	r11,1156(sp)
22028df4:	002d883a 	mov	r22,zero
22028df8:	0005883a 	mov	r2,zero
22028dfc:	5c800017 	ldw	r18,0(r11)
22028e00:	5ac00104 	addi	r11,r11,4
22028e04:	dac12115 	stw	r11,1156(sp)
22028e08:	9009883a 	mov	r4,r18
22028e0c:	003e0506 	br	22028624 <__alt_data_end+0xfffe9224>
22028e10:	d9012017 	ldw	r4,1152(sp)
22028e14:	a00b883a 	mov	r5,r20
22028e18:	d9811a04 	addi	r6,sp,1128
22028e1c:	d8c12a15 	stw	r3,1192(sp)
22028e20:	db012b15 	stw	r12,1196(sp)
22028e24:	20281940 	call	22028194 <__sprint_r.part.0>
22028e28:	d8c12a17 	ldw	r3,1192(sp)
22028e2c:	db012b17 	ldw	r12,1196(sp)
22028e30:	1000571e 	bne	r2,zero,22028f90 <___vfiprintf_internal_r+0xce8>
22028e34:	d9811b17 	ldw	r6,1132(sp)
22028e38:	d8811c17 	ldw	r2,1136(sp)
22028e3c:	d811883a 	mov	r8,sp
22028e40:	31400044 	addi	r5,r6,1
22028e44:	003e3306 	br	22028714 <__alt_data_end+0xfffe9314>
22028e48:	d9411b17 	ldw	r5,1132(sp)
22028e4c:	d8c11c17 	ldw	r3,1136(sp)
22028e50:	28800044 	addi	r2,r5,1
22028e54:	d9011d87 	ldb	r4,1142(sp)
22028e58:	203e4d26 	beq	r4,zero,22028790 <__alt_data_end+0xfffe9390>
22028e5c:	01000044 	movi	r4,1
22028e60:	d9411d84 	addi	r5,sp,1142
22028e64:	1907883a 	add	r3,r3,r4
22028e68:	41400015 	stw	r5,0(r8)
22028e6c:	41000115 	stw	r4,4(r8)
22028e70:	d8c11c15 	stw	r3,1136(sp)
22028e74:	d8811b15 	stw	r2,1132(sp)
22028e78:	014001c4 	movi	r5,7
22028e7c:	2880aa16 	blt	r5,r2,22029128 <___vfiprintf_internal_r+0xe80>
22028e80:	100b883a 	mov	r5,r2
22028e84:	42000204 	addi	r8,r8,8
22028e88:	10800044 	addi	r2,r2,1
22028e8c:	003e4006 	br	22028790 <__alt_data_end+0xfffe9390>
22028e90:	d9012017 	ldw	r4,1152(sp)
22028e94:	a00b883a 	mov	r5,r20
22028e98:	d9811a04 	addi	r6,sp,1128
22028e9c:	d9c12a15 	stw	r7,1192(sp)
22028ea0:	db012b15 	stw	r12,1196(sp)
22028ea4:	20281940 	call	22028194 <__sprint_r.part.0>
22028ea8:	d9c12a17 	ldw	r7,1192(sp)
22028eac:	db012b17 	ldw	r12,1196(sp)
22028eb0:	1000371e 	bne	r2,zero,22028f90 <___vfiprintf_internal_r+0xce8>
22028eb4:	d9411b17 	ldw	r5,1132(sp)
22028eb8:	d8c11c17 	ldw	r3,1136(sp)
22028ebc:	d811883a 	mov	r8,sp
22028ec0:	28800044 	addi	r2,r5,1
22028ec4:	003e4d06 	br	220287fc <__alt_data_end+0xfffe93fc>
22028ec8:	10803fcc 	andi	r2,r2,255
22028ecc:	00c00044 	movi	r3,1
22028ed0:	10fddf1e 	bne	r2,r3,22028650 <__alt_data_end+0xfffe9250>
22028ed4:	b000021e 	bne	r22,zero,22028ee0 <___vfiprintf_internal_r+0xc38>
22028ed8:	00800244 	movi	r2,9
22028edc:	1480202e 	bgeu	r2,r18,22028f60 <___vfiprintf_internal_r+0xcb8>
22028ee0:	dc012515 	stw	r16,1172(sp)
22028ee4:	dc410a04 	addi	r17,sp,1064
22028ee8:	9021883a 	mov	r16,r18
22028eec:	da012415 	stw	r8,1168(sp)
22028ef0:	b025883a 	mov	r18,r22
22028ef4:	da412315 	stw	r9,1164(sp)
22028ef8:	602d883a 	mov	r22,r12
22028efc:	8009883a 	mov	r4,r16
22028f00:	900b883a 	mov	r5,r18
22028f04:	01800284 	movi	r6,10
22028f08:	000f883a 	mov	r7,zero
22028f0c:	202a5800 	call	2202a580 <__umoddi3>
22028f10:	10800c04 	addi	r2,r2,48
22028f14:	8c7fffc4 	addi	r17,r17,-1
22028f18:	8009883a 	mov	r4,r16
22028f1c:	900b883a 	mov	r5,r18
22028f20:	01800284 	movi	r6,10
22028f24:	000f883a 	mov	r7,zero
22028f28:	88800005 	stb	r2,0(r17)
22028f2c:	2029fc00 	call	22029fc0 <__udivdi3>
22028f30:	1021883a 	mov	r16,r2
22028f34:	10c4b03a 	or	r2,r2,r3
22028f38:	1825883a 	mov	r18,r3
22028f3c:	103fef1e 	bne	r2,zero,22028efc <__alt_data_end+0xfffe9afc>
22028f40:	da811e17 	ldw	r10,1144(sp)
22028f44:	da012417 	ldw	r8,1168(sp)
22028f48:	da412317 	ldw	r9,1164(sp)
22028f4c:	dc412415 	stw	r17,1168(sp)
22028f50:	b019883a 	mov	r12,r22
22028f54:	dc012517 	ldw	r16,1172(sp)
22028f58:	5463c83a 	sub	r17,r10,r17
22028f5c:	003dce06 	br	22028698 <__alt_data_end+0xfffe9298>
22028f60:	94800c04 	addi	r18,r18,48
22028f64:	d8c109c4 	addi	r3,sp,1063
22028f68:	dc8109c5 	stb	r18,1063(sp)
22028f6c:	dc412717 	ldw	r17,1180(sp)
22028f70:	d8c12415 	stw	r3,1168(sp)
22028f74:	003dc806 	br	22028698 <__alt_data_end+0xfffe9298>
22028f78:	d8811c17 	ldw	r2,1136(sp)
22028f7c:	10000426 	beq	r2,zero,22028f90 <___vfiprintf_internal_r+0xce8>
22028f80:	d9012017 	ldw	r4,1152(sp)
22028f84:	a00b883a 	mov	r5,r20
22028f88:	d9811a04 	addi	r6,sp,1128
22028f8c:	20281940 	call	22028194 <__sprint_r.part.0>
22028f90:	a080030b 	ldhu	r2,12(r20)
22028f94:	1080100c 	andi	r2,r2,64
22028f98:	103e9b1e 	bne	r2,zero,22028a08 <__alt_data_end+0xfffe9608>
22028f9c:	d8812217 	ldw	r2,1160(sp)
22028fa0:	003e9a06 	br	22028a0c <__alt_data_end+0xfffe960c>
22028fa4:	d9012017 	ldw	r4,1152(sp)
22028fa8:	a00b883a 	mov	r5,r20
22028fac:	d9811a04 	addi	r6,sp,1128
22028fb0:	20281940 	call	22028194 <__sprint_r.part.0>
22028fb4:	103ff61e 	bne	r2,zero,22028f90 <__alt_data_end+0xfffe9b90>
22028fb8:	d9011b17 	ldw	r4,1132(sp)
22028fbc:	d8c11c17 	ldw	r3,1136(sp)
22028fc0:	d811883a 	mov	r8,sp
22028fc4:	21400044 	addi	r5,r4,1
22028fc8:	003e4006 	br	220288cc <__alt_data_end+0xfffe94cc>
22028fcc:	1800d61e 	bne	r3,zero,22029328 <___vfiprintf_internal_r+0x1080>
22028fd0:	dac12417 	ldw	r11,1168(sp)
22028fd4:	00800044 	movi	r2,1
22028fd8:	dc400115 	stw	r17,4(sp)
22028fdc:	dac00015 	stw	r11,0(sp)
22028fe0:	dc411c15 	stw	r17,1136(sp)
22028fe4:	d8811b15 	stw	r2,1132(sp)
22028fe8:	8807883a 	mov	r3,r17
22028fec:	d811883a 	mov	r8,sp
22028ff0:	42000204 	addi	r8,r8,8
22028ff4:	aac0010c 	andi	r11,r21,4
22028ff8:	58000226 	beq	r11,zero,22029004 <___vfiprintf_internal_r+0xd5c>
22028ffc:	9ca3c83a 	sub	r17,r19,r18
22029000:	047e2616 	blt	zero,r17,2202889c <__alt_data_end+0xfffe949c>
22029004:	94c0010e 	bge	r18,r19,2202900c <___vfiprintf_internal_r+0xd64>
22029008:	9825883a 	mov	r18,r19
2202900c:	da812217 	ldw	r10,1160(sp)
22029010:	5495883a 	add	r10,r10,r18
22029014:	da812215 	stw	r10,1160(sp)
22029018:	183e4826 	beq	r3,zero,2202893c <__alt_data_end+0xfffe953c>
2202901c:	d9012017 	ldw	r4,1152(sp)
22029020:	a00b883a 	mov	r5,r20
22029024:	d9811a04 	addi	r6,sp,1128
22029028:	20281940 	call	22028194 <__sprint_r.part.0>
2202902c:	103e4326 	beq	r2,zero,2202893c <__alt_data_end+0xfffe953c>
22029030:	003fd706 	br	22028f90 <__alt_data_end+0xfffe9b90>
22029034:	9cadc83a 	sub	r22,r19,r18
22029038:	05bde40e 	bge	zero,r22,220287cc <__alt_data_end+0xfffe93cc>
2202903c:	03000404 	movi	r12,16
22029040:	6581500e 	bge	r12,r22,22029584 <___vfiprintf_internal_r+0x12dc>
22029044:	008880f4 	movhi	r2,8707
22029048:	10bf8504 	addi	r2,r2,-492
2202904c:	d8812315 	stw	r2,1164(sp)
22029050:	8005883a 	mov	r2,r16
22029054:	038001c4 	movi	r14,7
22029058:	b021883a 	mov	r16,r22
2202905c:	da412515 	stw	r9,1172(sp)
22029060:	102d883a 	mov	r22,r2
22029064:	00000506 	br	2202907c <___vfiprintf_internal_r+0xdd4>
22029068:	29000084 	addi	r4,r5,2
2202906c:	42000204 	addi	r8,r8,8
22029070:	100b883a 	mov	r5,r2
22029074:	843ffc04 	addi	r16,r16,-16
22029078:	64000d0e 	bge	r12,r16,220290b0 <___vfiprintf_internal_r+0xe08>
2202907c:	18c00404 	addi	r3,r3,16
22029080:	28800044 	addi	r2,r5,1
22029084:	45c00015 	stw	r23,0(r8)
22029088:	43000115 	stw	r12,4(r8)
2202908c:	d8c11c15 	stw	r3,1136(sp)
22029090:	d8811b15 	stw	r2,1132(sp)
22029094:	70bff40e 	bge	r14,r2,22029068 <__alt_data_end+0xfffe9c68>
22029098:	1800151e 	bne	r3,zero,220290f0 <___vfiprintf_internal_r+0xe48>
2202909c:	843ffc04 	addi	r16,r16,-16
220290a0:	000b883a 	mov	r5,zero
220290a4:	01000044 	movi	r4,1
220290a8:	d811883a 	mov	r8,sp
220290ac:	643ff316 	blt	r12,r16,2202907c <__alt_data_end+0xfffe9c7c>
220290b0:	da412517 	ldw	r9,1172(sp)
220290b4:	b005883a 	mov	r2,r22
220290b8:	802d883a 	mov	r22,r16
220290bc:	1021883a 	mov	r16,r2
220290c0:	da812317 	ldw	r10,1164(sp)
220290c4:	1d87883a 	add	r3,r3,r22
220290c8:	45800115 	stw	r22,4(r8)
220290cc:	42800015 	stw	r10,0(r8)
220290d0:	d8c11c15 	stw	r3,1136(sp)
220290d4:	d9011b15 	stw	r4,1132(sp)
220290d8:	008001c4 	movi	r2,7
220290dc:	11008d16 	blt	r2,r4,22029314 <___vfiprintf_internal_r+0x106c>
220290e0:	42000204 	addi	r8,r8,8
220290e4:	20800044 	addi	r2,r4,1
220290e8:	200b883a 	mov	r5,r4
220290ec:	003db706 	br	220287cc <__alt_data_end+0xfffe93cc>
220290f0:	d9012017 	ldw	r4,1152(sp)
220290f4:	a00b883a 	mov	r5,r20
220290f8:	d9811a04 	addi	r6,sp,1128
220290fc:	db012b15 	stw	r12,1196(sp)
22029100:	db812a15 	stw	r14,1192(sp)
22029104:	20281940 	call	22028194 <__sprint_r.part.0>
22029108:	db012b17 	ldw	r12,1196(sp)
2202910c:	db812a17 	ldw	r14,1192(sp)
22029110:	103f9f1e 	bne	r2,zero,22028f90 <__alt_data_end+0xfffe9b90>
22029114:	d9411b17 	ldw	r5,1132(sp)
22029118:	d8c11c17 	ldw	r3,1136(sp)
2202911c:	d811883a 	mov	r8,sp
22029120:	29000044 	addi	r4,r5,1
22029124:	003fd306 	br	22029074 <__alt_data_end+0xfffe9c74>
22029128:	18006c1e 	bne	r3,zero,220292dc <___vfiprintf_internal_r+0x1034>
2202912c:	70004f26 	beq	r14,zero,2202926c <___vfiprintf_internal_r+0xfc4>
22029130:	d8811d04 	addi	r2,sp,1140
22029134:	00c00084 	movi	r3,2
22029138:	d8800015 	stw	r2,0(sp)
2202913c:	d8c00115 	stw	r3,4(sp)
22029140:	2005883a 	mov	r2,r4
22029144:	d811883a 	mov	r8,sp
22029148:	003d9b06 	br	220287b8 <__alt_data_end+0xfffe93b8>
2202914c:	1800571e 	bne	r3,zero,220292ac <___vfiprintf_internal_r+0x1004>
22029150:	000b883a 	mov	r5,zero
22029154:	00800044 	movi	r2,1
22029158:	d811883a 	mov	r8,sp
2202915c:	003d9906 	br	220287c4 <__alt_data_end+0xfffe93c4>
22029160:	10803fcc 	andi	r2,r2,255
22029164:	1000251e 	bne	r2,zero,220291fc <___vfiprintf_internal_r+0xf54>
22029168:	a880004c 	andi	r2,r21,1
2202916c:	10007826 	beq	r2,zero,22029350 <___vfiprintf_internal_r+0x10a8>
22029170:	00800c04 	movi	r2,48
22029174:	d8c109c4 	addi	r3,sp,1063
22029178:	d88109c5 	stb	r2,1063(sp)
2202917c:	dc412717 	ldw	r17,1180(sp)
22029180:	d8c12415 	stw	r3,1168(sp)
22029184:	003d4406 	br	22028698 <__alt_data_end+0xfffe9298>
22029188:	d9012617 	ldw	r4,1176(sp)
2202918c:	dc410a04 	addi	r17,sp,1064
22029190:	908003cc 	andi	r2,r18,15
22029194:	b006973a 	slli	r3,r22,28
22029198:	2085883a 	add	r2,r4,r2
2202919c:	9024d13a 	srli	r18,r18,4
220291a0:	10800003 	ldbu	r2,0(r2)
220291a4:	b02cd13a 	srli	r22,r22,4
220291a8:	8c7fffc4 	addi	r17,r17,-1
220291ac:	1ca4b03a 	or	r18,r3,r18
220291b0:	88800005 	stb	r2,0(r17)
220291b4:	9584b03a 	or	r2,r18,r22
220291b8:	103ff51e 	bne	r2,zero,22029190 <__alt_data_end+0xfffe9d90>
220291bc:	dac11e17 	ldw	r11,1144(sp)
220291c0:	dc412415 	stw	r17,1168(sp)
220291c4:	5c63c83a 	sub	r17,r11,r17
220291c8:	003d3306 	br	22028698 <__alt_data_end+0xfffe9298>
220291cc:	1800941e 	bne	r3,zero,22029420 <___vfiprintf_internal_r+0x1178>
220291d0:	d8811d87 	ldb	r2,1142(sp)
220291d4:	10006b26 	beq	r2,zero,22029384 <___vfiprintf_internal_r+0x10dc>
220291d8:	00c00044 	movi	r3,1
220291dc:	d9011d84 	addi	r4,sp,1142
220291e0:	1805883a 	mov	r2,r3
220291e4:	d9000015 	stw	r4,0(sp)
220291e8:	d8c00115 	stw	r3,4(sp)
220291ec:	d811883a 	mov	r8,sp
220291f0:	003f2306 	br	22028e80 <__alt_data_end+0xfffe9a80>
220291f4:	8023883a 	mov	r17,r16
220291f8:	003c7d06 	br	220283f0 <__alt_data_end+0xfffe8ff0>
220291fc:	da810a04 	addi	r10,sp,1064
22029200:	da812415 	stw	r10,1168(sp)
22029204:	003d2406 	br	22028698 <__alt_data_end+0xfffe9298>
22029208:	d9012017 	ldw	r4,1152(sp)
2202920c:	a00b883a 	mov	r5,r20
22029210:	d9811a04 	addi	r6,sp,1128
22029214:	20281940 	call	22028194 <__sprint_r.part.0>
22029218:	103f5d1e 	bne	r2,zero,22028f90 <__alt_data_end+0xfffe9b90>
2202921c:	d8c11c17 	ldw	r3,1136(sp)
22029220:	d811883a 	mov	r8,sp
22029224:	003f7306 	br	22028ff4 <__alt_data_end+0xfffe9bf4>
22029228:	1c800017 	ldw	r18,0(r3)
2202922c:	dac12117 	ldw	r11,1156(sp)
22029230:	902dd7fa 	srai	r22,r18,31
22029234:	5ac00104 	addi	r11,r11,4
22029238:	dac12115 	stw	r11,1156(sp)
2202923c:	b005883a 	mov	r2,r22
22029240:	003e5406 	br	22028b94 <__alt_data_end+0xfffe9794>
22029244:	00800084 	movi	r2,2
22029248:	9588b03a 	or	r4,r18,r22
2202924c:	003cf506 	br	22028624 <__alt_data_end+0xfffe9224>
22029250:	d9012017 	ldw	r4,1152(sp)
22029254:	a00b883a 	mov	r5,r20
22029258:	d9811a04 	addi	r6,sp,1128
2202925c:	20281940 	call	22028194 <__sprint_r.part.0>
22029260:	103f4b1e 	bne	r2,zero,22028f90 <__alt_data_end+0xfffe9b90>
22029264:	d811883a 	mov	r8,sp
22029268:	003cd106 	br	220285b0 <__alt_data_end+0xfffe91b0>
2202926c:	000b883a 	mov	r5,zero
22029270:	2005883a 	mov	r2,r4
22029274:	d811883a 	mov	r8,sp
22029278:	003d5206 	br	220287c4 <__alt_data_end+0xfffe93c4>
2202927c:	10803fcc 	andi	r2,r2,255
22029280:	1080201c 	xori	r2,r2,128
22029284:	10bfe004 	addi	r2,r2,-128
22029288:	01000c04 	movi	r4,48
2202928c:	11008e26 	beq	r2,r4,220294c8 <___vfiprintf_internal_r+0x1220>
22029290:	da812417 	ldw	r10,1168(sp)
22029294:	dac11e17 	ldw	r11,1144(sp)
22029298:	193fffc5 	stb	r4,-1(r3)
2202929c:	52bfffc4 	addi	r10,r10,-1
220292a0:	da812415 	stw	r10,1168(sp)
220292a4:	5aa3c83a 	sub	r17,r11,r10
220292a8:	003cfb06 	br	22028698 <__alt_data_end+0xfffe9298>
220292ac:	d9012017 	ldw	r4,1152(sp)
220292b0:	a00b883a 	mov	r5,r20
220292b4:	d9811a04 	addi	r6,sp,1128
220292b8:	da412b15 	stw	r9,1196(sp)
220292bc:	20281940 	call	22028194 <__sprint_r.part.0>
220292c0:	da412b17 	ldw	r9,1196(sp)
220292c4:	103f321e 	bne	r2,zero,22028f90 <__alt_data_end+0xfffe9b90>
220292c8:	d9411b17 	ldw	r5,1132(sp)
220292cc:	d8c11c17 	ldw	r3,1136(sp)
220292d0:	d811883a 	mov	r8,sp
220292d4:	28800044 	addi	r2,r5,1
220292d8:	003d3a06 	br	220287c4 <__alt_data_end+0xfffe93c4>
220292dc:	d9012017 	ldw	r4,1152(sp)
220292e0:	a00b883a 	mov	r5,r20
220292e4:	d9811a04 	addi	r6,sp,1128
220292e8:	da412b15 	stw	r9,1196(sp)
220292ec:	db812a15 	stw	r14,1192(sp)
220292f0:	20281940 	call	22028194 <__sprint_r.part.0>
220292f4:	da412b17 	ldw	r9,1196(sp)
220292f8:	db812a17 	ldw	r14,1192(sp)
220292fc:	103f241e 	bne	r2,zero,22028f90 <__alt_data_end+0xfffe9b90>
22029300:	d9411b17 	ldw	r5,1132(sp)
22029304:	d8c11c17 	ldw	r3,1136(sp)
22029308:	d811883a 	mov	r8,sp
2202930c:	28800044 	addi	r2,r5,1
22029310:	003d1f06 	br	22028790 <__alt_data_end+0xfffe9390>
22029314:	1800781e 	bne	r3,zero,220294f8 <___vfiprintf_internal_r+0x1250>
22029318:	000b883a 	mov	r5,zero
2202931c:	00800044 	movi	r2,1
22029320:	d811883a 	mov	r8,sp
22029324:	003d2906 	br	220287cc <__alt_data_end+0xfffe93cc>
22029328:	d9012017 	ldw	r4,1152(sp)
2202932c:	a00b883a 	mov	r5,r20
22029330:	d9811a04 	addi	r6,sp,1128
22029334:	20281940 	call	22028194 <__sprint_r.part.0>
22029338:	103f151e 	bne	r2,zero,22028f90 <__alt_data_end+0xfffe9b90>
2202933c:	d8811b17 	ldw	r2,1132(sp)
22029340:	d8c11c17 	ldw	r3,1136(sp)
22029344:	d811883a 	mov	r8,sp
22029348:	10800044 	addi	r2,r2,1
2202934c:	003d4406 	br	22028860 <__alt_data_end+0xfffe9460>
22029350:	dac10a04 	addi	r11,sp,1064
22029354:	dac12415 	stw	r11,1168(sp)
22029358:	003ccf06 	br	22028698 <__alt_data_end+0xfffe9298>
2202935c:	04a5c83a 	sub	r18,zero,r18
22029360:	9004c03a 	cmpne	r2,r18,zero
22029364:	05adc83a 	sub	r22,zero,r22
22029368:	b0adc83a 	sub	r22,r22,r2
2202936c:	03000b44 	movi	r12,45
22029370:	db011d85 	stb	r12,1142(sp)
22029374:	4823883a 	mov	r17,r9
22029378:	00800044 	movi	r2,1
2202937c:	9588b03a 	or	r4,r18,r22
22029380:	003cab06 	br	22028630 <__alt_data_end+0xfffe9230>
22029384:	000b883a 	mov	r5,zero
22029388:	00800044 	movi	r2,1
2202938c:	d811883a 	mov	r8,sp
22029390:	703d0c26 	beq	r14,zero,220287c4 <__alt_data_end+0xfffe93c4>
22029394:	00c00084 	movi	r3,2
22029398:	d9011d04 	addi	r4,sp,1140
2202939c:	d9000015 	stw	r4,0(sp)
220293a0:	d8c00115 	stw	r3,4(sp)
220293a4:	003d0406 	br	220287b8 <__alt_data_end+0xfffe93b8>
220293a8:	80c00007 	ldb	r3,0(r16)
220293ac:	003c1d06 	br	22028424 <__alt_data_end+0xfffe9024>
220293b0:	a880040c 	andi	r2,r21,16
220293b4:	1000091e 	bne	r2,zero,220293dc <___vfiprintf_internal_r+0x1134>
220293b8:	aac0100c 	andi	r11,r21,64
220293bc:	58000726 	beq	r11,zero,220293dc <___vfiprintf_internal_r+0x1134>
220293c0:	da812117 	ldw	r10,1156(sp)
220293c4:	dac12217 	ldw	r11,1160(sp)
220293c8:	50800017 	ldw	r2,0(r10)
220293cc:	52800104 	addi	r10,r10,4
220293d0:	da812115 	stw	r10,1156(sp)
220293d4:	12c0000d 	sth	r11,0(r2)
220293d8:	003be806 	br	2202837c <__alt_data_end+0xfffe8f7c>
220293dc:	da812117 	ldw	r10,1156(sp)
220293e0:	dac12217 	ldw	r11,1160(sp)
220293e4:	50800017 	ldw	r2,0(r10)
220293e8:	52800104 	addi	r10,r10,4
220293ec:	da812115 	stw	r10,1156(sp)
220293f0:	12c00015 	stw	r11,0(r2)
220293f4:	003be106 	br	2202837c <__alt_data_end+0xfffe8f7c>
220293f8:	00800084 	movi	r2,2
220293fc:	003c8906 	br	22028624 <__alt_data_end+0xfffe9224>
22029400:	a900100c 	andi	r4,r21,64
22029404:	20001f26 	beq	r4,zero,22029484 <___vfiprintf_internal_r+0x11dc>
22029408:	da812117 	ldw	r10,1156(sp)
2202940c:	1480000b 	ldhu	r18,0(r2)
22029410:	002d883a 	mov	r22,zero
22029414:	52800104 	addi	r10,r10,4
22029418:	da812115 	stw	r10,1156(sp)
2202941c:	003dae06 	br	22028ad8 <__alt_data_end+0xfffe96d8>
22029420:	d9012017 	ldw	r4,1152(sp)
22029424:	a00b883a 	mov	r5,r20
22029428:	d9811a04 	addi	r6,sp,1128
2202942c:	da412b15 	stw	r9,1196(sp)
22029430:	db812a15 	stw	r14,1192(sp)
22029434:	20281940 	call	22028194 <__sprint_r.part.0>
22029438:	da412b17 	ldw	r9,1196(sp)
2202943c:	db812a17 	ldw	r14,1192(sp)
22029440:	103ed31e 	bne	r2,zero,22028f90 <__alt_data_end+0xfffe9b90>
22029444:	d9411b17 	ldw	r5,1132(sp)
22029448:	d8c11c17 	ldw	r3,1136(sp)
2202944c:	d811883a 	mov	r8,sp
22029450:	28800044 	addi	r2,r5,1
22029454:	003e7f06 	br	22028e54 <__alt_data_end+0xfffe9a54>
22029458:	9825883a 	mov	r18,r19
2202945c:	003d3406 	br	22028930 <__alt_data_end+0xfffe9530>
22029460:	4823883a 	mov	r17,r9
22029464:	003e0806 	br	22028c88 <__alt_data_end+0xfffe9888>
22029468:	d9012017 	ldw	r4,1152(sp)
2202946c:	a00b883a 	mov	r5,r20
22029470:	d9811a04 	addi	r6,sp,1128
22029474:	20281940 	call	22028194 <__sprint_r.part.0>
22029478:	103ec51e 	bne	r2,zero,22028f90 <__alt_data_end+0xfffe9b90>
2202947c:	d8c11c17 	ldw	r3,1136(sp)
22029480:	003ee006 	br	22029004 <__alt_data_end+0xfffe9c04>
22029484:	dac12117 	ldw	r11,1156(sp)
22029488:	14800017 	ldw	r18,0(r2)
2202948c:	002d883a 	mov	r22,zero
22029490:	5ac00104 	addi	r11,r11,4
22029494:	dac12115 	stw	r11,1156(sp)
22029498:	003d8f06 	br	22028ad8 <__alt_data_end+0xfffe96d8>
2202949c:	02c880f4 	movhi	r11,8707
220294a0:	5aff8504 	addi	r11,r11,-492
220294a4:	dac12315 	stw	r11,1164(sp)
220294a8:	003ce306 	br	22028838 <__alt_data_end+0xfffe9438>
220294ac:	80c00043 	ldbu	r3,1(r16)
220294b0:	ad400814 	ori	r21,r21,32
220294b4:	84000044 	addi	r16,r16,1
220294b8:	18c03fcc 	andi	r3,r3,255
220294bc:	18c0201c 	xori	r3,r3,128
220294c0:	18ffe004 	addi	r3,r3,-128
220294c4:	003bd706 	br	22028424 <__alt_data_end+0xfffe9024>
220294c8:	dac11e17 	ldw	r11,1144(sp)
220294cc:	d8c12417 	ldw	r3,1168(sp)
220294d0:	58e3c83a 	sub	r17,r11,r3
220294d4:	003c7006 	br	22028698 <__alt_data_end+0xfffe9298>
220294d8:	da012a15 	stw	r8,1192(sp)
220294dc:	2020f800 	call	22020f80 <strlen>
220294e0:	1023883a 	mov	r17,r2
220294e4:	db011d83 	ldbu	r12,1142(sp)
220294e8:	dd812115 	stw	r22,1156(sp)
220294ec:	0013883a 	mov	r9,zero
220294f0:	da012a17 	ldw	r8,1192(sp)
220294f4:	003c6806 	br	22028698 <__alt_data_end+0xfffe9298>
220294f8:	d9012017 	ldw	r4,1152(sp)
220294fc:	a00b883a 	mov	r5,r20
22029500:	d9811a04 	addi	r6,sp,1128
22029504:	da412b15 	stw	r9,1196(sp)
22029508:	20281940 	call	22028194 <__sprint_r.part.0>
2202950c:	da412b17 	ldw	r9,1196(sp)
22029510:	103e9f1e 	bne	r2,zero,22028f90 <__alt_data_end+0xfffe9b90>
22029514:	d9411b17 	ldw	r5,1132(sp)
22029518:	d8c11c17 	ldw	r3,1136(sp)
2202951c:	d811883a 	mov	r8,sp
22029520:	28800044 	addi	r2,r5,1
22029524:	003ca906 	br	220287cc <__alt_data_end+0xfffe93cc>
22029528:	d9411b17 	ldw	r5,1132(sp)
2202952c:	010880f4 	movhi	r4,8707
22029530:	213f8904 	addi	r4,r4,-476
22029534:	d9012315 	stw	r4,1164(sp)
22029538:	29400044 	addi	r5,r5,1
2202953c:	003c8806 	br	22028760 <__alt_data_end+0xfffe9360>
22029540:	00800184 	movi	r2,6
22029544:	1240012e 	bgeu	r2,r9,2202954c <___vfiprintf_internal_r+0x12a4>
22029548:	1013883a 	mov	r9,r2
2202954c:	4823883a 	mov	r17,r9
22029550:	4825883a 	mov	r18,r9
22029554:	48001516 	blt	r9,zero,220295ac <___vfiprintf_internal_r+0x1304>
22029558:	008880f4 	movhi	r2,8707
2202955c:	10bf2904 	addi	r2,r2,-860
22029560:	dd812115 	stw	r22,1156(sp)
22029564:	d8812415 	stw	r2,1168(sp)
22029568:	003d6f06 	br	22028b28 <__alt_data_end+0xfffe9728>
2202956c:	d9411b17 	ldw	r5,1132(sp)
22029570:	02c880f4 	movhi	r11,8707
22029574:	5aff8904 	addi	r11,r11,-476
22029578:	dac12315 	stw	r11,1164(sp)
2202957c:	29400044 	addi	r5,r5,1
22029580:	003ce106 	br	22028908 <__alt_data_end+0xfffe9508>
22029584:	010880f4 	movhi	r4,8707
22029588:	213f8504 	addi	r4,r4,-492
2202958c:	d9012315 	stw	r4,1164(sp)
22029590:	1009883a 	mov	r4,r2
22029594:	003eca06 	br	220290c0 <__alt_data_end+0xfffe9cc0>
22029598:	4823883a 	mov	r17,r9
2202959c:	db011d83 	ldbu	r12,1142(sp)
220295a0:	dd812115 	stw	r22,1156(sp)
220295a4:	0013883a 	mov	r9,zero
220295a8:	003c3b06 	br	22028698 <__alt_data_end+0xfffe9298>
220295ac:	0025883a 	mov	r18,zero
220295b0:	003fe906 	br	22029558 <__alt_data_end+0xfffea158>
220295b4:	dac12117 	ldw	r11,1156(sp)
220295b8:	8005883a 	mov	r2,r16
220295bc:	5021883a 	mov	r16,r10
220295c0:	5a400017 	ldw	r9,0(r11)
220295c4:	58c00104 	addi	r3,r11,4
220295c8:	d8c12115 	stw	r3,1156(sp)
220295cc:	48000a16 	blt	r9,zero,220295f8 <___vfiprintf_internal_r+0x1350>
220295d0:	10c00047 	ldb	r3,1(r2)
220295d4:	003b9306 	br	22028424 <__alt_data_end+0xfffe9024>
220295d8:	043fffc4 	movi	r16,-1
220295dc:	003d0206 	br	220289e8 <__alt_data_end+0xfffe95e8>
220295e0:	94c0010e 	bge	r18,r19,220295e8 <___vfiprintf_internal_r+0x1340>
220295e4:	9825883a 	mov	r18,r19
220295e8:	da812217 	ldw	r10,1160(sp)
220295ec:	5495883a 	add	r10,r10,r18
220295f0:	da812215 	stw	r10,1160(sp)
220295f4:	003cd106 	br	2202893c <__alt_data_end+0xfffe953c>
220295f8:	027fffc4 	movi	r9,-1
220295fc:	10c00047 	ldb	r3,1(r2)
22029600:	003b8806 	br	22028424 <__alt_data_end+0xfffe9024>

22029604 <__vfiprintf_internal>:
22029604:	2007883a 	mov	r3,r4
22029608:	010880f4 	movhi	r4,8707
2202960c:	21068404 	addi	r4,r4,6672
22029610:	21000017 	ldw	r4,0(r4)
22029614:	2805883a 	mov	r2,r5
22029618:	300f883a 	mov	r7,r6
2202961c:	180b883a 	mov	r5,r3
22029620:	100d883a 	mov	r6,r2
22029624:	20282a81 	jmpi	220282a8 <___vfiprintf_internal_r>

22029628 <__swbuf_r>:
22029628:	defffc04 	addi	sp,sp,-16
2202962c:	dc800215 	stw	r18,8(sp)
22029630:	dc400115 	stw	r17,4(sp)
22029634:	dc000015 	stw	r16,0(sp)
22029638:	dfc00315 	stw	ra,12(sp)
2202963c:	2025883a 	mov	r18,r4
22029640:	2823883a 	mov	r17,r5
22029644:	3021883a 	mov	r16,r6
22029648:	20000226 	beq	r4,zero,22029654 <__swbuf_r+0x2c>
2202964c:	20800e17 	ldw	r2,56(r4)
22029650:	10004126 	beq	r2,zero,22029758 <__swbuf_r+0x130>
22029654:	80c00617 	ldw	r3,24(r16)
22029658:	8180030b 	ldhu	r6,12(r16)
2202965c:	80c00215 	stw	r3,8(r16)
22029660:	30c0020c 	andi	r3,r6,8
22029664:	18003526 	beq	r3,zero,2202973c <__swbuf_r+0x114>
22029668:	80c00417 	ldw	r3,16(r16)
2202966c:	18003326 	beq	r3,zero,2202973c <__swbuf_r+0x114>
22029670:	3088000c 	andi	r2,r6,8192
22029674:	8c403fcc 	andi	r17,r17,255
22029678:	10001726 	beq	r2,zero,220296d8 <__swbuf_r+0xb0>
2202967c:	80800017 	ldw	r2,0(r16)
22029680:	81000517 	ldw	r4,20(r16)
22029684:	10c7c83a 	sub	r3,r2,r3
22029688:	19001d0e 	bge	r3,r4,22029700 <__swbuf_r+0xd8>
2202968c:	18c00044 	addi	r3,r3,1
22029690:	81400217 	ldw	r5,8(r16)
22029694:	11000044 	addi	r4,r2,1
22029698:	81000015 	stw	r4,0(r16)
2202969c:	297fffc4 	addi	r5,r5,-1
220296a0:	81400215 	stw	r5,8(r16)
220296a4:	14400005 	stb	r17,0(r2)
220296a8:	80800517 	ldw	r2,20(r16)
220296ac:	10c01d26 	beq	r2,r3,22029724 <__swbuf_r+0xfc>
220296b0:	8080030b 	ldhu	r2,12(r16)
220296b4:	1080004c 	andi	r2,r2,1
220296b8:	1000181e 	bne	r2,zero,2202971c <__swbuf_r+0xf4>
220296bc:	8805883a 	mov	r2,r17
220296c0:	dfc00317 	ldw	ra,12(sp)
220296c4:	dc800217 	ldw	r18,8(sp)
220296c8:	dc400117 	ldw	r17,4(sp)
220296cc:	dc000017 	ldw	r16,0(sp)
220296d0:	dec00404 	addi	sp,sp,16
220296d4:	f800283a 	ret
220296d8:	81001917 	ldw	r4,100(r16)
220296dc:	00b7ffc4 	movi	r2,-8193
220296e0:	31880014 	ori	r6,r6,8192
220296e4:	2084703a 	and	r2,r4,r2
220296e8:	80801915 	stw	r2,100(r16)
220296ec:	80800017 	ldw	r2,0(r16)
220296f0:	81000517 	ldw	r4,20(r16)
220296f4:	8180030d 	sth	r6,12(r16)
220296f8:	10c7c83a 	sub	r3,r2,r3
220296fc:	193fe316 	blt	r3,r4,2202968c <__alt_data_end+0xfffea28c>
22029700:	9009883a 	mov	r4,r18
22029704:	800b883a 	mov	r5,r16
22029708:	2024a900 	call	22024a90 <_fflush_r>
2202970c:	1000091e 	bne	r2,zero,22029734 <__swbuf_r+0x10c>
22029710:	80800017 	ldw	r2,0(r16)
22029714:	00c00044 	movi	r3,1
22029718:	003fdd06 	br	22029690 <__alt_data_end+0xfffea290>
2202971c:	00800284 	movi	r2,10
22029720:	88bfe61e 	bne	r17,r2,220296bc <__alt_data_end+0xfffea2bc>
22029724:	9009883a 	mov	r4,r18
22029728:	800b883a 	mov	r5,r16
2202972c:	2024a900 	call	22024a90 <_fflush_r>
22029730:	103fe226 	beq	r2,zero,220296bc <__alt_data_end+0xfffea2bc>
22029734:	00bfffc4 	movi	r2,-1
22029738:	003fe106 	br	220296c0 <__alt_data_end+0xfffea2c0>
2202973c:	9009883a 	mov	r4,r18
22029740:	800b883a 	mov	r5,r16
22029744:	20230380 	call	22023038 <__swsetup_r>
22029748:	1000051e 	bne	r2,zero,22029760 <__swbuf_r+0x138>
2202974c:	8180030b 	ldhu	r6,12(r16)
22029750:	80c00417 	ldw	r3,16(r16)
22029754:	003fc606 	br	22029670 <__alt_data_end+0xfffea270>
22029758:	20250380 	call	22025038 <__sinit>
2202975c:	003fbd06 	br	22029654 <__alt_data_end+0xfffea254>
22029760:	80c0030b 	ldhu	r3,12(r16)
22029764:	00bfffc4 	movi	r2,-1
22029768:	18c01014 	ori	r3,r3,64
2202976c:	80c0030d 	sth	r3,12(r16)
22029770:	00c00244 	movi	r3,9
22029774:	90c00015 	stw	r3,0(r18)
22029778:	003fd106 	br	220296c0 <__alt_data_end+0xfffea2c0>

2202977c <__swbuf>:
2202977c:	00c880f4 	movhi	r3,8707
22029780:	18c68404 	addi	r3,r3,6672
22029784:	2005883a 	mov	r2,r4
22029788:	19000017 	ldw	r4,0(r3)
2202978c:	280d883a 	mov	r6,r5
22029790:	100b883a 	mov	r5,r2
22029794:	20296281 	jmpi	22029628 <__swbuf_r>

22029798 <_write_r>:
22029798:	defffd04 	addi	sp,sp,-12
2202979c:	dc000015 	stw	r16,0(sp)
220297a0:	040880f4 	movhi	r16,8707
220297a4:	dc400115 	stw	r17,4(sp)
220297a8:	840d5404 	addi	r16,r16,13648
220297ac:	2023883a 	mov	r17,r4
220297b0:	2809883a 	mov	r4,r5
220297b4:	300b883a 	mov	r5,r6
220297b8:	380d883a 	mov	r6,r7
220297bc:	dfc00215 	stw	ra,8(sp)
220297c0:	80000015 	stw	zero,0(r16)
220297c4:	202dbcc0 	call	2202dbcc <write>
220297c8:	00ffffc4 	movi	r3,-1
220297cc:	10c00526 	beq	r2,r3,220297e4 <_write_r+0x4c>
220297d0:	dfc00217 	ldw	ra,8(sp)
220297d4:	dc400117 	ldw	r17,4(sp)
220297d8:	dc000017 	ldw	r16,0(sp)
220297dc:	dec00304 	addi	sp,sp,12
220297e0:	f800283a 	ret
220297e4:	80c00017 	ldw	r3,0(r16)
220297e8:	183ff926 	beq	r3,zero,220297d0 <__alt_data_end+0xfffea3d0>
220297ec:	88c00015 	stw	r3,0(r17)
220297f0:	003ff706 	br	220297d0 <__alt_data_end+0xfffea3d0>

220297f4 <_close_r>:
220297f4:	defffd04 	addi	sp,sp,-12
220297f8:	dc000015 	stw	r16,0(sp)
220297fc:	040880f4 	movhi	r16,8707
22029800:	dc400115 	stw	r17,4(sp)
22029804:	840d5404 	addi	r16,r16,13648
22029808:	2023883a 	mov	r17,r4
2202980c:	2809883a 	mov	r4,r5
22029810:	dfc00215 	stw	ra,8(sp)
22029814:	80000015 	stw	zero,0(r16)
22029818:	202d1600 	call	2202d160 <close>
2202981c:	00ffffc4 	movi	r3,-1
22029820:	10c00526 	beq	r2,r3,22029838 <_close_r+0x44>
22029824:	dfc00217 	ldw	ra,8(sp)
22029828:	dc400117 	ldw	r17,4(sp)
2202982c:	dc000017 	ldw	r16,0(sp)
22029830:	dec00304 	addi	sp,sp,12
22029834:	f800283a 	ret
22029838:	80c00017 	ldw	r3,0(r16)
2202983c:	183ff926 	beq	r3,zero,22029824 <__alt_data_end+0xfffea424>
22029840:	88c00015 	stw	r3,0(r17)
22029844:	003ff706 	br	22029824 <__alt_data_end+0xfffea424>

22029848 <_calloc_r>:
22029848:	298b383a 	mul	r5,r5,r6
2202984c:	defffe04 	addi	sp,sp,-8
22029850:	dc000015 	stw	r16,0(sp)
22029854:	dfc00115 	stw	ra,4(sp)
22029858:	2025d480 	call	22025d48 <_malloc_r>
2202985c:	1021883a 	mov	r16,r2
22029860:	10002826 	beq	r2,zero,22029904 <_calloc_r+0xbc>
22029864:	11bfff17 	ldw	r6,-4(r2)
22029868:	00bfff04 	movi	r2,-4
2202986c:	00c00904 	movi	r3,36
22029870:	308c703a 	and	r6,r6,r2
22029874:	308d883a 	add	r6,r6,r2
22029878:	19801436 	bltu	r3,r6,220298cc <_calloc_r+0x84>
2202987c:	008004c4 	movi	r2,19
22029880:	11800936 	bltu	r2,r6,220298a8 <_calloc_r+0x60>
22029884:	8005883a 	mov	r2,r16
22029888:	10000015 	stw	zero,0(r2)
2202988c:	10000115 	stw	zero,4(r2)
22029890:	10000215 	stw	zero,8(r2)
22029894:	8005883a 	mov	r2,r16
22029898:	dfc00117 	ldw	ra,4(sp)
2202989c:	dc000017 	ldw	r16,0(sp)
220298a0:	dec00204 	addi	sp,sp,8
220298a4:	f800283a 	ret
220298a8:	80000015 	stw	zero,0(r16)
220298ac:	80000115 	stw	zero,4(r16)
220298b0:	008006c4 	movi	r2,27
220298b4:	11800d2e 	bgeu	r2,r6,220298ec <_calloc_r+0xa4>
220298b8:	80000215 	stw	zero,8(r16)
220298bc:	80000315 	stw	zero,12(r16)
220298c0:	30c00c26 	beq	r6,r3,220298f4 <_calloc_r+0xac>
220298c4:	80800404 	addi	r2,r16,16
220298c8:	003fef06 	br	22029888 <__alt_data_end+0xfffea488>
220298cc:	8009883a 	mov	r4,r16
220298d0:	000b883a 	mov	r5,zero
220298d4:	20267340 	call	22026734 <memset>
220298d8:	8005883a 	mov	r2,r16
220298dc:	dfc00117 	ldw	ra,4(sp)
220298e0:	dc000017 	ldw	r16,0(sp)
220298e4:	dec00204 	addi	sp,sp,8
220298e8:	f800283a 	ret
220298ec:	80800204 	addi	r2,r16,8
220298f0:	003fe506 	br	22029888 <__alt_data_end+0xfffea488>
220298f4:	80000415 	stw	zero,16(r16)
220298f8:	80800604 	addi	r2,r16,24
220298fc:	80000515 	stw	zero,20(r16)
22029900:	003fe106 	br	22029888 <__alt_data_end+0xfffea488>
22029904:	0005883a 	mov	r2,zero
22029908:	003fe306 	br	22029898 <__alt_data_end+0xfffea498>

2202990c <_fclose_r>:
2202990c:	28003226 	beq	r5,zero,220299d8 <_fclose_r+0xcc>
22029910:	defffc04 	addi	sp,sp,-16
22029914:	dc400115 	stw	r17,4(sp)
22029918:	2023883a 	mov	r17,r4
2202991c:	dc000015 	stw	r16,0(sp)
22029920:	dfc00315 	stw	ra,12(sp)
22029924:	dc800215 	stw	r18,8(sp)
22029928:	2821883a 	mov	r16,r5
2202992c:	20250480 	call	22025048 <__sfp_lock_acquire>
22029930:	88000226 	beq	r17,zero,2202993c <_fclose_r+0x30>
22029934:	88800e17 	ldw	r2,56(r17)
22029938:	10002926 	beq	r2,zero,220299e0 <_fclose_r+0xd4>
2202993c:	8080030f 	ldh	r2,12(r16)
22029940:	10002226 	beq	r2,zero,220299cc <_fclose_r+0xc0>
22029944:	8809883a 	mov	r4,r17
22029948:	800b883a 	mov	r5,r16
2202994c:	2024a900 	call	22024a90 <_fflush_r>
22029950:	1025883a 	mov	r18,r2
22029954:	80800b17 	ldw	r2,44(r16)
22029958:	10000426 	beq	r2,zero,2202996c <_fclose_r+0x60>
2202995c:	81400717 	ldw	r5,28(r16)
22029960:	8809883a 	mov	r4,r17
22029964:	103ee83a 	callr	r2
22029968:	10002616 	blt	r2,zero,22029a04 <_fclose_r+0xf8>
2202996c:	8080030b 	ldhu	r2,12(r16)
22029970:	1080200c 	andi	r2,r2,128
22029974:	10001f1e 	bne	r2,zero,220299f4 <_fclose_r+0xe8>
22029978:	81400c17 	ldw	r5,48(r16)
2202997c:	28000526 	beq	r5,zero,22029994 <_fclose_r+0x88>
22029980:	80801004 	addi	r2,r16,64
22029984:	28800226 	beq	r5,r2,22029990 <_fclose_r+0x84>
22029988:	8809883a 	mov	r4,r17
2202998c:	20251ac0 	call	220251ac <_free_r>
22029990:	80000c15 	stw	zero,48(r16)
22029994:	81401117 	ldw	r5,68(r16)
22029998:	28000326 	beq	r5,zero,220299a8 <_fclose_r+0x9c>
2202999c:	8809883a 	mov	r4,r17
220299a0:	20251ac0 	call	220251ac <_free_r>
220299a4:	80001115 	stw	zero,68(r16)
220299a8:	8000030d 	sth	zero,12(r16)
220299ac:	202504c0 	call	2202504c <__sfp_lock_release>
220299b0:	9005883a 	mov	r2,r18
220299b4:	dfc00317 	ldw	ra,12(sp)
220299b8:	dc800217 	ldw	r18,8(sp)
220299bc:	dc400117 	ldw	r17,4(sp)
220299c0:	dc000017 	ldw	r16,0(sp)
220299c4:	dec00404 	addi	sp,sp,16
220299c8:	f800283a 	ret
220299cc:	202504c0 	call	2202504c <__sfp_lock_release>
220299d0:	0005883a 	mov	r2,zero
220299d4:	003ff706 	br	220299b4 <__alt_data_end+0xfffea5b4>
220299d8:	0005883a 	mov	r2,zero
220299dc:	f800283a 	ret
220299e0:	8809883a 	mov	r4,r17
220299e4:	20250380 	call	22025038 <__sinit>
220299e8:	8080030f 	ldh	r2,12(r16)
220299ec:	103fd51e 	bne	r2,zero,22029944 <__alt_data_end+0xfffea544>
220299f0:	003ff606 	br	220299cc <__alt_data_end+0xfffea5cc>
220299f4:	81400417 	ldw	r5,16(r16)
220299f8:	8809883a 	mov	r4,r17
220299fc:	20251ac0 	call	220251ac <_free_r>
22029a00:	003fdd06 	br	22029978 <__alt_data_end+0xfffea578>
22029a04:	04bfffc4 	movi	r18,-1
22029a08:	003fd806 	br	2202996c <__alt_data_end+0xfffea56c>

22029a0c <fclose>:
22029a0c:	008880f4 	movhi	r2,8707
22029a10:	10868404 	addi	r2,r2,6672
22029a14:	200b883a 	mov	r5,r4
22029a18:	11000017 	ldw	r4,0(r2)
22029a1c:	202990c1 	jmpi	2202990c <_fclose_r>

22029a20 <_fputwc_r>:
22029a20:	3080030b 	ldhu	r2,12(r6)
22029a24:	defff804 	addi	sp,sp,-32
22029a28:	dcc00415 	stw	r19,16(sp)
22029a2c:	dc800315 	stw	r18,12(sp)
22029a30:	dc000115 	stw	r16,4(sp)
22029a34:	dfc00715 	stw	ra,28(sp)
22029a38:	dd400615 	stw	r21,24(sp)
22029a3c:	dd000515 	stw	r20,20(sp)
22029a40:	dc400215 	stw	r17,8(sp)
22029a44:	10c8000c 	andi	r3,r2,8192
22029a48:	3021883a 	mov	r16,r6
22029a4c:	2027883a 	mov	r19,r4
22029a50:	2825883a 	mov	r18,r5
22029a54:	1800051e 	bne	r3,zero,22029a6c <_fputwc_r+0x4c>
22029a58:	30c01917 	ldw	r3,100(r6)
22029a5c:	10880014 	ori	r2,r2,8192
22029a60:	3080030d 	sth	r2,12(r6)
22029a64:	18880014 	ori	r2,r3,8192
22029a68:	30801915 	stw	r2,100(r6)
22029a6c:	2025b380 	call	22025b38 <__locale_mb_cur_max>
22029a70:	00c00044 	movi	r3,1
22029a74:	10c03e26 	beq	r2,r3,22029b70 <_fputwc_r+0x150>
22029a78:	9809883a 	mov	r4,r19
22029a7c:	d80b883a 	mov	r5,sp
22029a80:	900d883a 	mov	r6,r18
22029a84:	81c01704 	addi	r7,r16,92
22029a88:	2029d600 	call	22029d60 <_wcrtomb_r>
22029a8c:	1029883a 	mov	r20,r2
22029a90:	00bfffc4 	movi	r2,-1
22029a94:	a0802026 	beq	r20,r2,22029b18 <_fputwc_r+0xf8>
22029a98:	d9400003 	ldbu	r5,0(sp)
22029a9c:	a0001c26 	beq	r20,zero,22029b10 <_fputwc_r+0xf0>
22029aa0:	0023883a 	mov	r17,zero
22029aa4:	05400284 	movi	r21,10
22029aa8:	00000906 	br	22029ad0 <_fputwc_r+0xb0>
22029aac:	80800017 	ldw	r2,0(r16)
22029ab0:	11400005 	stb	r5,0(r2)
22029ab4:	80c00017 	ldw	r3,0(r16)
22029ab8:	18c00044 	addi	r3,r3,1
22029abc:	80c00015 	stw	r3,0(r16)
22029ac0:	8c400044 	addi	r17,r17,1
22029ac4:	dc45883a 	add	r2,sp,r17
22029ac8:	8d00112e 	bgeu	r17,r20,22029b10 <_fputwc_r+0xf0>
22029acc:	11400003 	ldbu	r5,0(r2)
22029ad0:	80c00217 	ldw	r3,8(r16)
22029ad4:	18ffffc4 	addi	r3,r3,-1
22029ad8:	80c00215 	stw	r3,8(r16)
22029adc:	183ff30e 	bge	r3,zero,22029aac <__alt_data_end+0xfffea6ac>
22029ae0:	80800617 	ldw	r2,24(r16)
22029ae4:	18801916 	blt	r3,r2,22029b4c <_fputwc_r+0x12c>
22029ae8:	80800017 	ldw	r2,0(r16)
22029aec:	11400005 	stb	r5,0(r2)
22029af0:	80800017 	ldw	r2,0(r16)
22029af4:	10c00003 	ldbu	r3,0(r2)
22029af8:	10800044 	addi	r2,r2,1
22029afc:	1d402326 	beq	r3,r21,22029b8c <_fputwc_r+0x16c>
22029b00:	80800015 	stw	r2,0(r16)
22029b04:	8c400044 	addi	r17,r17,1
22029b08:	dc45883a 	add	r2,sp,r17
22029b0c:	8d3fef36 	bltu	r17,r20,22029acc <__alt_data_end+0xfffea6cc>
22029b10:	9005883a 	mov	r2,r18
22029b14:	00000406 	br	22029b28 <_fputwc_r+0x108>
22029b18:	80c0030b 	ldhu	r3,12(r16)
22029b1c:	a005883a 	mov	r2,r20
22029b20:	18c01014 	ori	r3,r3,64
22029b24:	80c0030d 	sth	r3,12(r16)
22029b28:	dfc00717 	ldw	ra,28(sp)
22029b2c:	dd400617 	ldw	r21,24(sp)
22029b30:	dd000517 	ldw	r20,20(sp)
22029b34:	dcc00417 	ldw	r19,16(sp)
22029b38:	dc800317 	ldw	r18,12(sp)
22029b3c:	dc400217 	ldw	r17,8(sp)
22029b40:	dc000117 	ldw	r16,4(sp)
22029b44:	dec00804 	addi	sp,sp,32
22029b48:	f800283a 	ret
22029b4c:	9809883a 	mov	r4,r19
22029b50:	29403fcc 	andi	r5,r5,255
22029b54:	800d883a 	mov	r6,r16
22029b58:	20296280 	call	22029628 <__swbuf_r>
22029b5c:	10bfffe0 	cmpeqi	r2,r2,-1
22029b60:	10803fcc 	andi	r2,r2,255
22029b64:	103fd626 	beq	r2,zero,22029ac0 <__alt_data_end+0xfffea6c0>
22029b68:	00bfffc4 	movi	r2,-1
22029b6c:	003fee06 	br	22029b28 <__alt_data_end+0xfffea728>
22029b70:	90ffffc4 	addi	r3,r18,-1
22029b74:	01003f84 	movi	r4,254
22029b78:	20ffbf36 	bltu	r4,r3,22029a78 <__alt_data_end+0xfffea678>
22029b7c:	900b883a 	mov	r5,r18
22029b80:	dc800005 	stb	r18,0(sp)
22029b84:	1029883a 	mov	r20,r2
22029b88:	003fc506 	br	22029aa0 <__alt_data_end+0xfffea6a0>
22029b8c:	9809883a 	mov	r4,r19
22029b90:	a80b883a 	mov	r5,r21
22029b94:	800d883a 	mov	r6,r16
22029b98:	20296280 	call	22029628 <__swbuf_r>
22029b9c:	10bfffe0 	cmpeqi	r2,r2,-1
22029ba0:	003fef06 	br	22029b60 <__alt_data_end+0xfffea760>

22029ba4 <fputwc>:
22029ba4:	defffc04 	addi	sp,sp,-16
22029ba8:	dc000115 	stw	r16,4(sp)
22029bac:	040880f4 	movhi	r16,8707
22029bb0:	84068404 	addi	r16,r16,6672
22029bb4:	dc400215 	stw	r17,8(sp)
22029bb8:	2023883a 	mov	r17,r4
22029bbc:	81000017 	ldw	r4,0(r16)
22029bc0:	dfc00315 	stw	ra,12(sp)
22029bc4:	280d883a 	mov	r6,r5
22029bc8:	20000626 	beq	r4,zero,22029be4 <fputwc+0x40>
22029bcc:	20800e17 	ldw	r2,56(r4)
22029bd0:	1000041e 	bne	r2,zero,22029be4 <fputwc+0x40>
22029bd4:	d9400015 	stw	r5,0(sp)
22029bd8:	20250380 	call	22025038 <__sinit>
22029bdc:	81000017 	ldw	r4,0(r16)
22029be0:	d9800017 	ldw	r6,0(sp)
22029be4:	880b883a 	mov	r5,r17
22029be8:	dfc00317 	ldw	ra,12(sp)
22029bec:	dc400217 	ldw	r17,8(sp)
22029bf0:	dc000117 	ldw	r16,4(sp)
22029bf4:	dec00404 	addi	sp,sp,16
22029bf8:	2029a201 	jmpi	22029a20 <_fputwc_r>

22029bfc <_fstat_r>:
22029bfc:	defffd04 	addi	sp,sp,-12
22029c00:	dc000015 	stw	r16,0(sp)
22029c04:	040880f4 	movhi	r16,8707
22029c08:	dc400115 	stw	r17,4(sp)
22029c0c:	840d5404 	addi	r16,r16,13648
22029c10:	2023883a 	mov	r17,r4
22029c14:	2809883a 	mov	r4,r5
22029c18:	300b883a 	mov	r5,r6
22029c1c:	dfc00215 	stw	ra,8(sp)
22029c20:	80000015 	stw	zero,0(r16)
22029c24:	202d2f00 	call	2202d2f0 <fstat>
22029c28:	00ffffc4 	movi	r3,-1
22029c2c:	10c00526 	beq	r2,r3,22029c44 <_fstat_r+0x48>
22029c30:	dfc00217 	ldw	ra,8(sp)
22029c34:	dc400117 	ldw	r17,4(sp)
22029c38:	dc000017 	ldw	r16,0(sp)
22029c3c:	dec00304 	addi	sp,sp,12
22029c40:	f800283a 	ret
22029c44:	80c00017 	ldw	r3,0(r16)
22029c48:	183ff926 	beq	r3,zero,22029c30 <__alt_data_end+0xfffea830>
22029c4c:	88c00015 	stw	r3,0(r17)
22029c50:	003ff706 	br	22029c30 <__alt_data_end+0xfffea830>

22029c54 <_isatty_r>:
22029c54:	defffd04 	addi	sp,sp,-12
22029c58:	dc000015 	stw	r16,0(sp)
22029c5c:	040880f4 	movhi	r16,8707
22029c60:	dc400115 	stw	r17,4(sp)
22029c64:	840d5404 	addi	r16,r16,13648
22029c68:	2023883a 	mov	r17,r4
22029c6c:	2809883a 	mov	r4,r5
22029c70:	dfc00215 	stw	ra,8(sp)
22029c74:	80000015 	stw	zero,0(r16)
22029c78:	202d3f00 	call	2202d3f0 <isatty>
22029c7c:	00ffffc4 	movi	r3,-1
22029c80:	10c00526 	beq	r2,r3,22029c98 <_isatty_r+0x44>
22029c84:	dfc00217 	ldw	ra,8(sp)
22029c88:	dc400117 	ldw	r17,4(sp)
22029c8c:	dc000017 	ldw	r16,0(sp)
22029c90:	dec00304 	addi	sp,sp,12
22029c94:	f800283a 	ret
22029c98:	80c00017 	ldw	r3,0(r16)
22029c9c:	183ff926 	beq	r3,zero,22029c84 <__alt_data_end+0xfffea884>
22029ca0:	88c00015 	stw	r3,0(r17)
22029ca4:	003ff706 	br	22029c84 <__alt_data_end+0xfffea884>

22029ca8 <_lseek_r>:
22029ca8:	defffd04 	addi	sp,sp,-12
22029cac:	dc000015 	stw	r16,0(sp)
22029cb0:	040880f4 	movhi	r16,8707
22029cb4:	dc400115 	stw	r17,4(sp)
22029cb8:	840d5404 	addi	r16,r16,13648
22029cbc:	2023883a 	mov	r17,r4
22029cc0:	2809883a 	mov	r4,r5
22029cc4:	300b883a 	mov	r5,r6
22029cc8:	380d883a 	mov	r6,r7
22029ccc:	dfc00215 	stw	ra,8(sp)
22029cd0:	80000015 	stw	zero,0(r16)
22029cd4:	202d5c80 	call	2202d5c8 <lseek>
22029cd8:	00ffffc4 	movi	r3,-1
22029cdc:	10c00526 	beq	r2,r3,22029cf4 <_lseek_r+0x4c>
22029ce0:	dfc00217 	ldw	ra,8(sp)
22029ce4:	dc400117 	ldw	r17,4(sp)
22029ce8:	dc000017 	ldw	r16,0(sp)
22029cec:	dec00304 	addi	sp,sp,12
22029cf0:	f800283a 	ret
22029cf4:	80c00017 	ldw	r3,0(r16)
22029cf8:	183ff926 	beq	r3,zero,22029ce0 <__alt_data_end+0xfffea8e0>
22029cfc:	88c00015 	stw	r3,0(r17)
22029d00:	003ff706 	br	22029ce0 <__alt_data_end+0xfffea8e0>

22029d04 <_read_r>:
22029d04:	defffd04 	addi	sp,sp,-12
22029d08:	dc000015 	stw	r16,0(sp)
22029d0c:	040880f4 	movhi	r16,8707
22029d10:	dc400115 	stw	r17,4(sp)
22029d14:	840d5404 	addi	r16,r16,13648
22029d18:	2023883a 	mov	r17,r4
22029d1c:	2809883a 	mov	r4,r5
22029d20:	300b883a 	mov	r5,r6
22029d24:	380d883a 	mov	r6,r7
22029d28:	dfc00215 	stw	ra,8(sp)
22029d2c:	80000015 	stw	zero,0(r16)
22029d30:	202d7a40 	call	2202d7a4 <read>
22029d34:	00ffffc4 	movi	r3,-1
22029d38:	10c00526 	beq	r2,r3,22029d50 <_read_r+0x4c>
22029d3c:	dfc00217 	ldw	ra,8(sp)
22029d40:	dc400117 	ldw	r17,4(sp)
22029d44:	dc000017 	ldw	r16,0(sp)
22029d48:	dec00304 	addi	sp,sp,12
22029d4c:	f800283a 	ret
22029d50:	80c00017 	ldw	r3,0(r16)
22029d54:	183ff926 	beq	r3,zero,22029d3c <__alt_data_end+0xfffea93c>
22029d58:	88c00015 	stw	r3,0(r17)
22029d5c:	003ff706 	br	22029d3c <__alt_data_end+0xfffea93c>

22029d60 <_wcrtomb_r>:
22029d60:	defff604 	addi	sp,sp,-40
22029d64:	008880f4 	movhi	r2,8707
22029d68:	dc800815 	stw	r18,32(sp)
22029d6c:	dc400715 	stw	r17,28(sp)
22029d70:	dc000615 	stw	r16,24(sp)
22029d74:	10868804 	addi	r2,r2,6688
22029d78:	dfc00915 	stw	ra,36(sp)
22029d7c:	2021883a 	mov	r16,r4
22029d80:	3823883a 	mov	r17,r7
22029d84:	14800017 	ldw	r18,0(r2)
22029d88:	28001426 	beq	r5,zero,22029ddc <_wcrtomb_r+0x7c>
22029d8c:	d9400415 	stw	r5,16(sp)
22029d90:	d9800515 	stw	r6,20(sp)
22029d94:	2025b2c0 	call	22025b2c <__locale_charset>
22029d98:	d9400417 	ldw	r5,16(sp)
22029d9c:	d9800517 	ldw	r6,20(sp)
22029da0:	8009883a 	mov	r4,r16
22029da4:	dc400015 	stw	r17,0(sp)
22029da8:	100f883a 	mov	r7,r2
22029dac:	903ee83a 	callr	r18
22029db0:	00ffffc4 	movi	r3,-1
22029db4:	10c0031e 	bne	r2,r3,22029dc4 <_wcrtomb_r+0x64>
22029db8:	88000015 	stw	zero,0(r17)
22029dbc:	00c02284 	movi	r3,138
22029dc0:	80c00015 	stw	r3,0(r16)
22029dc4:	dfc00917 	ldw	ra,36(sp)
22029dc8:	dc800817 	ldw	r18,32(sp)
22029dcc:	dc400717 	ldw	r17,28(sp)
22029dd0:	dc000617 	ldw	r16,24(sp)
22029dd4:	dec00a04 	addi	sp,sp,40
22029dd8:	f800283a 	ret
22029ddc:	2025b2c0 	call	22025b2c <__locale_charset>
22029de0:	8009883a 	mov	r4,r16
22029de4:	dc400015 	stw	r17,0(sp)
22029de8:	d9400104 	addi	r5,sp,4
22029dec:	000d883a 	mov	r6,zero
22029df0:	100f883a 	mov	r7,r2
22029df4:	903ee83a 	callr	r18
22029df8:	003fed06 	br	22029db0 <__alt_data_end+0xfffea9b0>

22029dfc <wcrtomb>:
22029dfc:	defff504 	addi	sp,sp,-44
22029e00:	dc400515 	stw	r17,20(sp)
22029e04:	dc000415 	stw	r16,16(sp)
22029e08:	dfc00a15 	stw	ra,40(sp)
22029e0c:	dd400915 	stw	r21,36(sp)
22029e10:	dd000815 	stw	r20,32(sp)
22029e14:	dcc00715 	stw	r19,28(sp)
22029e18:	dc800615 	stw	r18,24(sp)
22029e1c:	2021883a 	mov	r16,r4
22029e20:	3023883a 	mov	r17,r6
22029e24:	20001d26 	beq	r4,zero,22029e9c <wcrtomb+0xa0>
22029e28:	048880f4 	movhi	r18,8707
22029e2c:	94868404 	addi	r18,r18,6672
22029e30:	008880f4 	movhi	r2,8707
22029e34:	95400017 	ldw	r21,0(r18)
22029e38:	10868804 	addi	r2,r2,6688
22029e3c:	15000017 	ldw	r20,0(r2)
22029e40:	2827883a 	mov	r19,r5
22029e44:	2025b2c0 	call	22025b2c <__locale_charset>
22029e48:	a809883a 	mov	r4,r21
22029e4c:	dc400015 	stw	r17,0(sp)
22029e50:	800b883a 	mov	r5,r16
22029e54:	980d883a 	mov	r6,r19
22029e58:	100f883a 	mov	r7,r2
22029e5c:	a03ee83a 	callr	r20
22029e60:	00ffffc4 	movi	r3,-1
22029e64:	10c0041e 	bne	r2,r3,22029e78 <wcrtomb+0x7c>
22029e68:	90c00017 	ldw	r3,0(r18)
22029e6c:	01002284 	movi	r4,138
22029e70:	88000015 	stw	zero,0(r17)
22029e74:	19000015 	stw	r4,0(r3)
22029e78:	dfc00a17 	ldw	ra,40(sp)
22029e7c:	dd400917 	ldw	r21,36(sp)
22029e80:	dd000817 	ldw	r20,32(sp)
22029e84:	dcc00717 	ldw	r19,28(sp)
22029e88:	dc800617 	ldw	r18,24(sp)
22029e8c:	dc400517 	ldw	r17,20(sp)
22029e90:	dc000417 	ldw	r16,16(sp)
22029e94:	dec00b04 	addi	sp,sp,44
22029e98:	f800283a 	ret
22029e9c:	048880f4 	movhi	r18,8707
22029ea0:	94868404 	addi	r18,r18,6672
22029ea4:	008880f4 	movhi	r2,8707
22029ea8:	94c00017 	ldw	r19,0(r18)
22029eac:	10868804 	addi	r2,r2,6688
22029eb0:	14000017 	ldw	r16,0(r2)
22029eb4:	2025b2c0 	call	22025b2c <__locale_charset>
22029eb8:	9809883a 	mov	r4,r19
22029ebc:	dc400015 	stw	r17,0(sp)
22029ec0:	d9400104 	addi	r5,sp,4
22029ec4:	000d883a 	mov	r6,zero
22029ec8:	100f883a 	mov	r7,r2
22029ecc:	803ee83a 	callr	r16
22029ed0:	003fe306 	br	22029e60 <__alt_data_end+0xfffeaa60>

22029ed4 <__ascii_wctomb>:
22029ed4:	28000526 	beq	r5,zero,22029eec <__ascii_wctomb+0x18>
22029ed8:	00803fc4 	movi	r2,255
22029edc:	11800536 	bltu	r2,r6,22029ef4 <__ascii_wctomb+0x20>
22029ee0:	29800005 	stb	r6,0(r5)
22029ee4:	00800044 	movi	r2,1
22029ee8:	f800283a 	ret
22029eec:	0005883a 	mov	r2,zero
22029ef0:	f800283a 	ret
22029ef4:	00802284 	movi	r2,138
22029ef8:	20800015 	stw	r2,0(r4)
22029efc:	00bfffc4 	movi	r2,-1
22029f00:	f800283a 	ret

22029f04 <_wctomb_r>:
22029f04:	008880f4 	movhi	r2,8707
22029f08:	defff904 	addi	sp,sp,-28
22029f0c:	10868804 	addi	r2,r2,6688
22029f10:	dfc00615 	stw	ra,24(sp)
22029f14:	dc400515 	stw	r17,20(sp)
22029f18:	dc000415 	stw	r16,16(sp)
22029f1c:	3823883a 	mov	r17,r7
22029f20:	14000017 	ldw	r16,0(r2)
22029f24:	d9000115 	stw	r4,4(sp)
22029f28:	d9400215 	stw	r5,8(sp)
22029f2c:	d9800315 	stw	r6,12(sp)
22029f30:	2025b2c0 	call	22025b2c <__locale_charset>
22029f34:	d9000117 	ldw	r4,4(sp)
22029f38:	d9400217 	ldw	r5,8(sp)
22029f3c:	d9800317 	ldw	r6,12(sp)
22029f40:	dc400015 	stw	r17,0(sp)
22029f44:	100f883a 	mov	r7,r2
22029f48:	803ee83a 	callr	r16
22029f4c:	dfc00617 	ldw	ra,24(sp)
22029f50:	dc400517 	ldw	r17,20(sp)
22029f54:	dc000417 	ldw	r16,16(sp)
22029f58:	dec00704 	addi	sp,sp,28
22029f5c:	f800283a 	ret

22029f60 <__muldi3>:
22029f60:	223fffcc 	andi	r8,r4,65535
22029f64:	2012d43a 	srli	r9,r4,16
22029f68:	32bfffcc 	andi	r10,r6,65535
22029f6c:	3006d43a 	srli	r3,r6,16
22029f70:	5217383a 	mul	r11,r10,r8
22029f74:	5255383a 	mul	r10,r10,r9
22029f78:	1a05383a 	mul	r2,r3,r8
22029f7c:	5810d43a 	srli	r8,r11,16
22029f80:	5085883a 	add	r2,r10,r2
22029f84:	1205883a 	add	r2,r2,r8
22029f88:	1a51383a 	mul	r8,r3,r9
22029f8c:	1280022e 	bgeu	r2,r10,22029f98 <__muldi3+0x38>
22029f90:	00c00074 	movhi	r3,1
22029f94:	40d1883a 	add	r8,r8,r3
22029f98:	1006d43a 	srli	r3,r2,16
22029f9c:	21cf383a 	mul	r7,r4,r7
22029fa0:	314b383a 	mul	r5,r6,r5
22029fa4:	1004943a 	slli	r2,r2,16
22029fa8:	40c7883a 	add	r3,r8,r3
22029fac:	5affffcc 	andi	r11,r11,65535
22029fb0:	3949883a 	add	r4,r7,r5
22029fb4:	12c5883a 	add	r2,r2,r11
22029fb8:	20c7883a 	add	r3,r4,r3
22029fbc:	f800283a 	ret

22029fc0 <__udivdi3>:
22029fc0:	defff504 	addi	sp,sp,-44
22029fc4:	dcc00415 	stw	r19,16(sp)
22029fc8:	dc000115 	stw	r16,4(sp)
22029fcc:	dfc00a15 	stw	ra,40(sp)
22029fd0:	df000915 	stw	fp,36(sp)
22029fd4:	ddc00815 	stw	r23,32(sp)
22029fd8:	dd800715 	stw	r22,28(sp)
22029fdc:	dd400615 	stw	r21,24(sp)
22029fe0:	dd000515 	stw	r20,20(sp)
22029fe4:	dc800315 	stw	r18,12(sp)
22029fe8:	dc400215 	stw	r17,8(sp)
22029fec:	2027883a 	mov	r19,r4
22029ff0:	2821883a 	mov	r16,r5
22029ff4:	3800421e 	bne	r7,zero,2202a100 <__udivdi3+0x140>
22029ff8:	3025883a 	mov	r18,r6
22029ffc:	2023883a 	mov	r17,r4
2202a000:	2980542e 	bgeu	r5,r6,2202a154 <__udivdi3+0x194>
2202a004:	00bfffd4 	movui	r2,65535
2202a008:	282d883a 	mov	r22,r5
2202a00c:	1180a836 	bltu	r2,r6,2202a2b0 <__udivdi3+0x2f0>
2202a010:	00803fc4 	movi	r2,255
2202a014:	1181422e 	bgeu	r2,r6,2202a520 <__udivdi3+0x560>
2202a018:	00800204 	movi	r2,8
2202a01c:	1007883a 	mov	r3,r2
2202a020:	3084d83a 	srl	r2,r6,r2
2202a024:	010880f4 	movhi	r4,8707
2202a028:	213f8d04 	addi	r4,r4,-460
2202a02c:	2085883a 	add	r2,r4,r2
2202a030:	10800003 	ldbu	r2,0(r2)
2202a034:	10c7883a 	add	r3,r2,r3
2202a038:	00800804 	movi	r2,32
2202a03c:	10c5c83a 	sub	r2,r2,r3
2202a040:	10000526 	beq	r2,zero,2202a058 <__udivdi3+0x98>
2202a044:	80a0983a 	sll	r16,r16,r2
2202a048:	98c6d83a 	srl	r3,r19,r3
2202a04c:	30a4983a 	sll	r18,r6,r2
2202a050:	98a2983a 	sll	r17,r19,r2
2202a054:	80ecb03a 	or	r22,r16,r3
2202a058:	902ad43a 	srli	r21,r18,16
2202a05c:	b009883a 	mov	r4,r22
2202a060:	953fffcc 	andi	r20,r18,65535
2202a064:	a80b883a 	mov	r5,r21
2202a068:	2020c700 	call	22020c70 <__umodsi3>
2202a06c:	b009883a 	mov	r4,r22
2202a070:	a80b883a 	mov	r5,r21
2202a074:	1027883a 	mov	r19,r2
2202a078:	2020c680 	call	22020c68 <__udivsi3>
2202a07c:	1021883a 	mov	r16,r2
2202a080:	8806d43a 	srli	r3,r17,16
2202a084:	9804943a 	slli	r2,r19,16
2202a088:	8527383a 	mul	r19,r16,r20
2202a08c:	10c4b03a 	or	r2,r2,r3
2202a090:	14c0052e 	bgeu	r2,r19,2202a0a8 <__udivdi3+0xe8>
2202a094:	1485883a 	add	r2,r2,r18
2202a098:	80ffffc4 	addi	r3,r16,-1
2202a09c:	14800136 	bltu	r2,r18,2202a0a4 <__udivdi3+0xe4>
2202a0a0:	14c13436 	bltu	r2,r19,2202a574 <__udivdi3+0x5b4>
2202a0a4:	1821883a 	mov	r16,r3
2202a0a8:	14e7c83a 	sub	r19,r2,r19
2202a0ac:	9809883a 	mov	r4,r19
2202a0b0:	a80b883a 	mov	r5,r21
2202a0b4:	2020c700 	call	22020c70 <__umodsi3>
2202a0b8:	102d883a 	mov	r22,r2
2202a0bc:	9809883a 	mov	r4,r19
2202a0c0:	a80b883a 	mov	r5,r21
2202a0c4:	2020c680 	call	22020c68 <__udivsi3>
2202a0c8:	b02c943a 	slli	r22,r22,16
2202a0cc:	1529383a 	mul	r20,r2,r20
2202a0d0:	8c7fffcc 	andi	r17,r17,65535
2202a0d4:	b462b03a 	or	r17,r22,r17
2202a0d8:	8d00052e 	bgeu	r17,r20,2202a0f0 <__udivdi3+0x130>
2202a0dc:	8ca3883a 	add	r17,r17,r18
2202a0e0:	10ffffc4 	addi	r3,r2,-1
2202a0e4:	8c80f636 	bltu	r17,r18,2202a4c0 <__udivdi3+0x500>
2202a0e8:	8d00f52e 	bgeu	r17,r20,2202a4c0 <__udivdi3+0x500>
2202a0ec:	10bfff84 	addi	r2,r2,-2
2202a0f0:	8020943a 	slli	r16,r16,16
2202a0f4:	0007883a 	mov	r3,zero
2202a0f8:	1404b03a 	or	r2,r2,r16
2202a0fc:	00005b06 	br	2202a26c <__udivdi3+0x2ac>
2202a100:	29c05836 	bltu	r5,r7,2202a264 <__udivdi3+0x2a4>
2202a104:	00bfffd4 	movui	r2,65535
2202a108:	11c0642e 	bgeu	r2,r7,2202a29c <__udivdi3+0x2dc>
2202a10c:	00804034 	movhi	r2,256
2202a110:	10bfffc4 	addi	r2,r2,-1
2202a114:	11c0f32e 	bgeu	r2,r7,2202a4e4 <__udivdi3+0x524>
2202a118:	00c00604 	movi	r3,24
2202a11c:	180b883a 	mov	r5,r3
2202a120:	38c6d83a 	srl	r3,r7,r3
2202a124:	008880f4 	movhi	r2,8707
2202a128:	10bf8d04 	addi	r2,r2,-460
2202a12c:	10c7883a 	add	r3,r2,r3
2202a130:	18c00003 	ldbu	r3,0(r3)
2202a134:	01000804 	movi	r4,32
2202a138:	1947883a 	add	r3,r3,r5
2202a13c:	20e5c83a 	sub	r18,r4,r3
2202a140:	9000661e 	bne	r18,zero,2202a2dc <__udivdi3+0x31c>
2202a144:	3c00f936 	bltu	r7,r16,2202a52c <__udivdi3+0x56c>
2202a148:	9985403a 	cmpgeu	r2,r19,r6
2202a14c:	0007883a 	mov	r3,zero
2202a150:	00004606 	br	2202a26c <__udivdi3+0x2ac>
2202a154:	3000041e 	bne	r6,zero,2202a168 <__udivdi3+0x1a8>
2202a158:	01000044 	movi	r4,1
2202a15c:	000b883a 	mov	r5,zero
2202a160:	2020c680 	call	22020c68 <__udivsi3>
2202a164:	1025883a 	mov	r18,r2
2202a168:	00bfffd4 	movui	r2,65535
2202a16c:	1480562e 	bgeu	r2,r18,2202a2c8 <__udivdi3+0x308>
2202a170:	00804034 	movhi	r2,256
2202a174:	10bfffc4 	addi	r2,r2,-1
2202a178:	1480e32e 	bgeu	r2,r18,2202a508 <__udivdi3+0x548>
2202a17c:	00800604 	movi	r2,24
2202a180:	1007883a 	mov	r3,r2
2202a184:	9084d83a 	srl	r2,r18,r2
2202a188:	010880f4 	movhi	r4,8707
2202a18c:	213f8d04 	addi	r4,r4,-460
2202a190:	2085883a 	add	r2,r4,r2
2202a194:	10800003 	ldbu	r2,0(r2)
2202a198:	10c5883a 	add	r2,r2,r3
2202a19c:	00c00804 	movi	r3,32
2202a1a0:	1887c83a 	sub	r3,r3,r2
2202a1a4:	1800911e 	bne	r3,zero,2202a3ec <__udivdi3+0x42c>
2202a1a8:	9028d43a 	srli	r20,r18,16
2202a1ac:	84a1c83a 	sub	r16,r16,r18
2202a1b0:	957fffcc 	andi	r21,r18,65535
2202a1b4:	00c00044 	movi	r3,1
2202a1b8:	8009883a 	mov	r4,r16
2202a1bc:	a00b883a 	mov	r5,r20
2202a1c0:	d8c00015 	stw	r3,0(sp)
2202a1c4:	2020c700 	call	22020c70 <__umodsi3>
2202a1c8:	8009883a 	mov	r4,r16
2202a1cc:	a00b883a 	mov	r5,r20
2202a1d0:	1027883a 	mov	r19,r2
2202a1d4:	2020c680 	call	22020c68 <__udivsi3>
2202a1d8:	1021883a 	mov	r16,r2
2202a1dc:	880cd43a 	srli	r6,r17,16
2202a1e0:	9804943a 	slli	r2,r19,16
2202a1e4:	8567383a 	mul	r19,r16,r21
2202a1e8:	d8c00017 	ldw	r3,0(sp)
2202a1ec:	1188b03a 	or	r4,r2,r6
2202a1f0:	24c0052e 	bgeu	r4,r19,2202a208 <__udivdi3+0x248>
2202a1f4:	2489883a 	add	r4,r4,r18
2202a1f8:	80bfffc4 	addi	r2,r16,-1
2202a1fc:	24800136 	bltu	r4,r18,2202a204 <__udivdi3+0x244>
2202a200:	24c0d936 	bltu	r4,r19,2202a568 <__udivdi3+0x5a8>
2202a204:	1021883a 	mov	r16,r2
2202a208:	24e7c83a 	sub	r19,r4,r19
2202a20c:	9809883a 	mov	r4,r19
2202a210:	a00b883a 	mov	r5,r20
2202a214:	d8c00015 	stw	r3,0(sp)
2202a218:	2020c700 	call	22020c70 <__umodsi3>
2202a21c:	102d883a 	mov	r22,r2
2202a220:	9809883a 	mov	r4,r19
2202a224:	a00b883a 	mov	r5,r20
2202a228:	2020c680 	call	22020c68 <__udivsi3>
2202a22c:	b02c943a 	slli	r22,r22,16
2202a230:	156b383a 	mul	r21,r2,r21
2202a234:	8c7fffcc 	andi	r17,r17,65535
2202a238:	b462b03a 	or	r17,r22,r17
2202a23c:	d8c00017 	ldw	r3,0(sp)
2202a240:	8d40052e 	bgeu	r17,r21,2202a258 <__udivdi3+0x298>
2202a244:	8ca3883a 	add	r17,r17,r18
2202a248:	113fffc4 	addi	r4,r2,-1
2202a24c:	8c809a36 	bltu	r17,r18,2202a4b8 <__udivdi3+0x4f8>
2202a250:	8d40992e 	bgeu	r17,r21,2202a4b8 <__udivdi3+0x4f8>
2202a254:	10bfff84 	addi	r2,r2,-2
2202a258:	8020943a 	slli	r16,r16,16
2202a25c:	1404b03a 	or	r2,r2,r16
2202a260:	00000206 	br	2202a26c <__udivdi3+0x2ac>
2202a264:	0007883a 	mov	r3,zero
2202a268:	0005883a 	mov	r2,zero
2202a26c:	dfc00a17 	ldw	ra,40(sp)
2202a270:	df000917 	ldw	fp,36(sp)
2202a274:	ddc00817 	ldw	r23,32(sp)
2202a278:	dd800717 	ldw	r22,28(sp)
2202a27c:	dd400617 	ldw	r21,24(sp)
2202a280:	dd000517 	ldw	r20,20(sp)
2202a284:	dcc00417 	ldw	r19,16(sp)
2202a288:	dc800317 	ldw	r18,12(sp)
2202a28c:	dc400217 	ldw	r17,8(sp)
2202a290:	dc000117 	ldw	r16,4(sp)
2202a294:	dec00b04 	addi	sp,sp,44
2202a298:	f800283a 	ret
2202a29c:	00803fc4 	movi	r2,255
2202a2a0:	11c0932e 	bgeu	r2,r7,2202a4f0 <__udivdi3+0x530>
2202a2a4:	00c00204 	movi	r3,8
2202a2a8:	180b883a 	mov	r5,r3
2202a2ac:	003f9c06 	br	2202a120 <__alt_data_end+0xfffead20>
2202a2b0:	00804034 	movhi	r2,256
2202a2b4:	10bfffc4 	addi	r2,r2,-1
2202a2b8:	1180902e 	bgeu	r2,r6,2202a4fc <__udivdi3+0x53c>
2202a2bc:	00800604 	movi	r2,24
2202a2c0:	1007883a 	mov	r3,r2
2202a2c4:	003f5606 	br	2202a020 <__alt_data_end+0xfffeac20>
2202a2c8:	00803fc4 	movi	r2,255
2202a2cc:	1480912e 	bgeu	r2,r18,2202a514 <__udivdi3+0x554>
2202a2d0:	00800204 	movi	r2,8
2202a2d4:	1007883a 	mov	r3,r2
2202a2d8:	003faa06 	br	2202a184 <__alt_data_end+0xfffead84>
2202a2dc:	30eed83a 	srl	r23,r6,r3
2202a2e0:	3c8e983a 	sll	r7,r7,r18
2202a2e4:	80f8d83a 	srl	fp,r16,r3
2202a2e8:	98c6d83a 	srl	r3,r19,r3
2202a2ec:	3deeb03a 	or	r23,r7,r23
2202a2f0:	b828d43a 	srli	r20,r23,16
2202a2f4:	84a0983a 	sll	r16,r16,r18
2202a2f8:	e009883a 	mov	r4,fp
2202a2fc:	a00b883a 	mov	r5,r20
2202a300:	80e2b03a 	or	r17,r16,r3
2202a304:	34aa983a 	sll	r21,r6,r18
2202a308:	2020c700 	call	22020c70 <__umodsi3>
2202a30c:	e009883a 	mov	r4,fp
2202a310:	a00b883a 	mov	r5,r20
2202a314:	102d883a 	mov	r22,r2
2202a318:	2020c680 	call	22020c68 <__udivsi3>
2202a31c:	1021883a 	mov	r16,r2
2202a320:	bf3fffcc 	andi	fp,r23,65535
2202a324:	b004943a 	slli	r2,r22,16
2202a328:	8808d43a 	srli	r4,r17,16
2202a32c:	872d383a 	mul	r22,r16,fp
2202a330:	1104b03a 	or	r2,r2,r4
2202a334:	1580042e 	bgeu	r2,r22,2202a348 <__udivdi3+0x388>
2202a338:	15c5883a 	add	r2,r2,r23
2202a33c:	80ffffc4 	addi	r3,r16,-1
2202a340:	15c0812e 	bgeu	r2,r23,2202a548 <__udivdi3+0x588>
2202a344:	1821883a 	mov	r16,r3
2202a348:	15adc83a 	sub	r22,r2,r22
2202a34c:	b009883a 	mov	r4,r22
2202a350:	a00b883a 	mov	r5,r20
2202a354:	2020c700 	call	22020c70 <__umodsi3>
2202a358:	a00b883a 	mov	r5,r20
2202a35c:	b009883a 	mov	r4,r22
2202a360:	d8800015 	stw	r2,0(sp)
2202a364:	2020c680 	call	22020c68 <__udivsi3>
2202a368:	d8c00017 	ldw	r3,0(sp)
2202a36c:	170b383a 	mul	r5,r2,fp
2202a370:	8c7fffcc 	andi	r17,r17,65535
2202a374:	1806943a 	slli	r3,r3,16
2202a378:	1c46b03a 	or	r3,r3,r17
2202a37c:	1940042e 	bgeu	r3,r5,2202a390 <__udivdi3+0x3d0>
2202a380:	1dc7883a 	add	r3,r3,r23
2202a384:	113fffc4 	addi	r4,r2,-1
2202a388:	1dc06b2e 	bgeu	r3,r23,2202a538 <__udivdi3+0x578>
2202a38c:	2005883a 	mov	r2,r4
2202a390:	8020943a 	slli	r16,r16,16
2202a394:	a9ffffcc 	andi	r7,r21,65535
2202a398:	a82ad43a 	srli	r21,r21,16
2202a39c:	1404b03a 	or	r2,r2,r16
2202a3a0:	113fffcc 	andi	r4,r2,65535
2202a3a4:	100cd43a 	srli	r6,r2,16
2202a3a8:	21d3383a 	mul	r9,r4,r7
2202a3ac:	2549383a 	mul	r4,r4,r21
2202a3b0:	31cf383a 	mul	r7,r6,r7
2202a3b4:	4810d43a 	srli	r8,r9,16
2202a3b8:	1947c83a 	sub	r3,r3,r5
2202a3bc:	3909883a 	add	r4,r7,r4
2202a3c0:	2209883a 	add	r4,r4,r8
2202a3c4:	354d383a 	mul	r6,r6,r21
2202a3c8:	21c0022e 	bgeu	r4,r7,2202a3d4 <__udivdi3+0x414>
2202a3cc:	01400074 	movhi	r5,1
2202a3d0:	314d883a 	add	r6,r6,r5
2202a3d4:	202ad43a 	srli	r21,r4,16
2202a3d8:	354d883a 	add	r6,r6,r21
2202a3dc:	19803f36 	bltu	r3,r6,2202a4dc <__udivdi3+0x51c>
2202a3e0:	19803926 	beq	r3,r6,2202a4c8 <__udivdi3+0x508>
2202a3e4:	0007883a 	mov	r3,zero
2202a3e8:	003fa006 	br	2202a26c <__alt_data_end+0xfffeae6c>
2202a3ec:	90e4983a 	sll	r18,r18,r3
2202a3f0:	80aad83a 	srl	r21,r16,r2
2202a3f4:	80e0983a 	sll	r16,r16,r3
2202a3f8:	9028d43a 	srli	r20,r18,16
2202a3fc:	9884d83a 	srl	r2,r19,r2
2202a400:	a809883a 	mov	r4,r21
2202a404:	a00b883a 	mov	r5,r20
2202a408:	80acb03a 	or	r22,r16,r2
2202a40c:	98e2983a 	sll	r17,r19,r3
2202a410:	2020c700 	call	22020c70 <__umodsi3>
2202a414:	a809883a 	mov	r4,r21
2202a418:	a00b883a 	mov	r5,r20
2202a41c:	1021883a 	mov	r16,r2
2202a420:	2020c680 	call	22020c68 <__udivsi3>
2202a424:	957fffcc 	andi	r21,r18,65535
2202a428:	8020943a 	slli	r16,r16,16
2202a42c:	b00ad43a 	srli	r5,r22,16
2202a430:	1567383a 	mul	r19,r2,r21
2202a434:	102f883a 	mov	r23,r2
2202a438:	8148b03a 	or	r4,r16,r5
2202a43c:	24c0062e 	bgeu	r4,r19,2202a458 <__udivdi3+0x498>
2202a440:	2489883a 	add	r4,r4,r18
2202a444:	10bfffc4 	addi	r2,r2,-1
2202a448:	24804536 	bltu	r4,r18,2202a560 <__udivdi3+0x5a0>
2202a44c:	24c0442e 	bgeu	r4,r19,2202a560 <__udivdi3+0x5a0>
2202a450:	bdffff84 	addi	r23,r23,-2
2202a454:	2489883a 	add	r4,r4,r18
2202a458:	24e7c83a 	sub	r19,r4,r19
2202a45c:	9809883a 	mov	r4,r19
2202a460:	a00b883a 	mov	r5,r20
2202a464:	2020c700 	call	22020c70 <__umodsi3>
2202a468:	1021883a 	mov	r16,r2
2202a46c:	9809883a 	mov	r4,r19
2202a470:	a00b883a 	mov	r5,r20
2202a474:	2020c680 	call	22020c68 <__udivsi3>
2202a478:	8020943a 	slli	r16,r16,16
2202a47c:	1007883a 	mov	r3,r2
2202a480:	1545383a 	mul	r2,r2,r21
2202a484:	b13fffcc 	andi	r4,r22,65535
2202a488:	8108b03a 	or	r4,r16,r4
2202a48c:	2080062e 	bgeu	r4,r2,2202a4a8 <__udivdi3+0x4e8>
2202a490:	2489883a 	add	r4,r4,r18
2202a494:	197fffc4 	addi	r5,r3,-1
2202a498:	24802f36 	bltu	r4,r18,2202a558 <__udivdi3+0x598>
2202a49c:	20802e2e 	bgeu	r4,r2,2202a558 <__udivdi3+0x598>
2202a4a0:	18ffff84 	addi	r3,r3,-2
2202a4a4:	2489883a 	add	r4,r4,r18
2202a4a8:	b82e943a 	slli	r23,r23,16
2202a4ac:	20a1c83a 	sub	r16,r4,r2
2202a4b0:	1dc6b03a 	or	r3,r3,r23
2202a4b4:	003f4006 	br	2202a1b8 <__alt_data_end+0xfffeadb8>
2202a4b8:	2005883a 	mov	r2,r4
2202a4bc:	003f6606 	br	2202a258 <__alt_data_end+0xfffeae58>
2202a4c0:	1805883a 	mov	r2,r3
2202a4c4:	003f0a06 	br	2202a0f0 <__alt_data_end+0xfffeacf0>
2202a4c8:	2006943a 	slli	r3,r4,16
2202a4cc:	9c88983a 	sll	r4,r19,r18
2202a4d0:	4a7fffcc 	andi	r9,r9,65535
2202a4d4:	1a47883a 	add	r3,r3,r9
2202a4d8:	20ffc22e 	bgeu	r4,r3,2202a3e4 <__alt_data_end+0xfffeafe4>
2202a4dc:	10bfffc4 	addi	r2,r2,-1
2202a4e0:	003fc006 	br	2202a3e4 <__alt_data_end+0xfffeafe4>
2202a4e4:	00c00404 	movi	r3,16
2202a4e8:	180b883a 	mov	r5,r3
2202a4ec:	003f0c06 	br	2202a120 <__alt_data_end+0xfffead20>
2202a4f0:	0007883a 	mov	r3,zero
2202a4f4:	000b883a 	mov	r5,zero
2202a4f8:	003f0906 	br	2202a120 <__alt_data_end+0xfffead20>
2202a4fc:	00800404 	movi	r2,16
2202a500:	1007883a 	mov	r3,r2
2202a504:	003ec606 	br	2202a020 <__alt_data_end+0xfffeac20>
2202a508:	00800404 	movi	r2,16
2202a50c:	1007883a 	mov	r3,r2
2202a510:	003f1c06 	br	2202a184 <__alt_data_end+0xfffead84>
2202a514:	0005883a 	mov	r2,zero
2202a518:	0007883a 	mov	r3,zero
2202a51c:	003f1906 	br	2202a184 <__alt_data_end+0xfffead84>
2202a520:	0005883a 	mov	r2,zero
2202a524:	0007883a 	mov	r3,zero
2202a528:	003ebd06 	br	2202a020 <__alt_data_end+0xfffeac20>
2202a52c:	0007883a 	mov	r3,zero
2202a530:	00800044 	movi	r2,1
2202a534:	003f4d06 	br	2202a26c <__alt_data_end+0xfffeae6c>
2202a538:	197f942e 	bgeu	r3,r5,2202a38c <__alt_data_end+0xfffeaf8c>
2202a53c:	10bfff84 	addi	r2,r2,-2
2202a540:	1dc7883a 	add	r3,r3,r23
2202a544:	003f9206 	br	2202a390 <__alt_data_end+0xfffeaf90>
2202a548:	15bf7e2e 	bgeu	r2,r22,2202a344 <__alt_data_end+0xfffeaf44>
2202a54c:	843fff84 	addi	r16,r16,-2
2202a550:	15c5883a 	add	r2,r2,r23
2202a554:	003f7c06 	br	2202a348 <__alt_data_end+0xfffeaf48>
2202a558:	2807883a 	mov	r3,r5
2202a55c:	003fd206 	br	2202a4a8 <__alt_data_end+0xfffeb0a8>
2202a560:	102f883a 	mov	r23,r2
2202a564:	003fbc06 	br	2202a458 <__alt_data_end+0xfffeb058>
2202a568:	843fff84 	addi	r16,r16,-2
2202a56c:	2489883a 	add	r4,r4,r18
2202a570:	003f2506 	br	2202a208 <__alt_data_end+0xfffeae08>
2202a574:	843fff84 	addi	r16,r16,-2
2202a578:	1485883a 	add	r2,r2,r18
2202a57c:	003eca06 	br	2202a0a8 <__alt_data_end+0xfffeaca8>

2202a580 <__umoddi3>:
2202a580:	defff404 	addi	sp,sp,-48
2202a584:	ddc00915 	stw	r23,36(sp)
2202a588:	dc400315 	stw	r17,12(sp)
2202a58c:	dc000215 	stw	r16,8(sp)
2202a590:	dfc00b15 	stw	ra,44(sp)
2202a594:	df000a15 	stw	fp,40(sp)
2202a598:	dd800815 	stw	r22,32(sp)
2202a59c:	dd400715 	stw	r21,28(sp)
2202a5a0:	dd000615 	stw	r20,24(sp)
2202a5a4:	dcc00515 	stw	r19,20(sp)
2202a5a8:	dc800415 	stw	r18,16(sp)
2202a5ac:	2021883a 	mov	r16,r4
2202a5b0:	2823883a 	mov	r17,r5
2202a5b4:	282f883a 	mov	r23,r5
2202a5b8:	3800381e 	bne	r7,zero,2202a69c <__umoddi3+0x11c>
2202a5bc:	3027883a 	mov	r19,r6
2202a5c0:	2029883a 	mov	r20,r4
2202a5c4:	29804e2e 	bgeu	r5,r6,2202a700 <__umoddi3+0x180>
2202a5c8:	00bfffd4 	movui	r2,65535
2202a5cc:	11809c36 	bltu	r2,r6,2202a840 <__umoddi3+0x2c0>
2202a5d0:	00803fc4 	movi	r2,255
2202a5d4:	11813b2e 	bgeu	r2,r6,2202aac4 <__umoddi3+0x544>
2202a5d8:	01400204 	movi	r5,8
2202a5dc:	2805883a 	mov	r2,r5
2202a5e0:	314ad83a 	srl	r5,r6,r5
2202a5e4:	00c880f4 	movhi	r3,8707
2202a5e8:	18ff8d04 	addi	r3,r3,-460
2202a5ec:	194b883a 	add	r5,r3,r5
2202a5f0:	29000003 	ldbu	r4,0(r5)
2202a5f4:	2089883a 	add	r4,r4,r2
2202a5f8:	00800804 	movi	r2,32
2202a5fc:	1105c83a 	sub	r2,r2,r4
2202a600:	1000ec26 	beq	r2,zero,2202a9b4 <__umoddi3+0x434>
2202a604:	88a2983a 	sll	r17,r17,r2
2202a608:	8108d83a 	srl	r4,r16,r4
2202a60c:	30a6983a 	sll	r19,r6,r2
2202a610:	80a8983a 	sll	r20,r16,r2
2202a614:	1025883a 	mov	r18,r2
2202a618:	892eb03a 	or	r23,r17,r4
2202a61c:	982cd43a 	srli	r22,r19,16
2202a620:	b809883a 	mov	r4,r23
2202a624:	9d7fffcc 	andi	r21,r19,65535
2202a628:	b00b883a 	mov	r5,r22
2202a62c:	2020c700 	call	22020c70 <__umodsi3>
2202a630:	b809883a 	mov	r4,r23
2202a634:	b00b883a 	mov	r5,r22
2202a638:	1021883a 	mov	r16,r2
2202a63c:	2020c680 	call	22020c68 <__udivsi3>
2202a640:	8020943a 	slli	r16,r16,16
2202a644:	a00cd43a 	srli	r6,r20,16
2202a648:	1545383a 	mul	r2,r2,r21
2202a64c:	8188b03a 	or	r4,r16,r6
2202a650:	2080042e 	bgeu	r4,r2,2202a664 <__umoddi3+0xe4>
2202a654:	24c9883a 	add	r4,r4,r19
2202a658:	24c00236 	bltu	r4,r19,2202a664 <__umoddi3+0xe4>
2202a65c:	2080012e 	bgeu	r4,r2,2202a664 <__umoddi3+0xe4>
2202a660:	24c9883a 	add	r4,r4,r19
2202a664:	20a3c83a 	sub	r17,r4,r2
2202a668:	8809883a 	mov	r4,r17
2202a66c:	b00b883a 	mov	r5,r22
2202a670:	2020c700 	call	22020c70 <__umodsi3>
2202a674:	8809883a 	mov	r4,r17
2202a678:	b00b883a 	mov	r5,r22
2202a67c:	1021883a 	mov	r16,r2
2202a680:	2020c680 	call	22020c68 <__udivsi3>
2202a684:	8006943a 	slli	r3,r16,16
2202a688:	1545383a 	mul	r2,r2,r21
2202a68c:	a13fffcc 	andi	r4,r20,65535
2202a690:	1906b03a 	or	r3,r3,r4
2202a694:	1880532e 	bgeu	r3,r2,2202a7e4 <__umoddi3+0x264>
2202a698:	00004e06 	br	2202a7d4 <__umoddi3+0x254>
2202a69c:	29c05536 	bltu	r5,r7,2202a7f4 <__umoddi3+0x274>
2202a6a0:	00bfffd4 	movui	r2,65535
2202a6a4:	11c0612e 	bgeu	r2,r7,2202a82c <__umoddi3+0x2ac>
2202a6a8:	00804034 	movhi	r2,256
2202a6ac:	10bfffc4 	addi	r2,r2,-1
2202a6b0:	11c0f82e 	bgeu	r2,r7,2202aa94 <__umoddi3+0x514>
2202a6b4:	01400604 	movi	r5,24
2202a6b8:	282b883a 	mov	r21,r5
2202a6bc:	394ad83a 	srl	r5,r7,r5
2202a6c0:	00c880f4 	movhi	r3,8707
2202a6c4:	18ff8d04 	addi	r3,r3,-460
2202a6c8:	194b883a 	add	r5,r3,r5
2202a6cc:	28800003 	ldbu	r2,0(r5)
2202a6d0:	00c00804 	movi	r3,32
2202a6d4:	156b883a 	add	r21,r2,r21
2202a6d8:	1d69c83a 	sub	r20,r3,r21
2202a6dc:	a000631e 	bne	r20,zero,2202a86c <__umoddi3+0x2ec>
2202a6e0:	3c400136 	bltu	r7,r17,2202a6e8 <__umoddi3+0x168>
2202a6e4:	81810436 	bltu	r16,r6,2202aaf8 <__umoddi3+0x578>
2202a6e8:	8185c83a 	sub	r2,r16,r6
2202a6ec:	89e3c83a 	sub	r17,r17,r7
2202a6f0:	8087803a 	cmpltu	r3,r16,r2
2202a6f4:	88efc83a 	sub	r23,r17,r3
2202a6f8:	b807883a 	mov	r3,r23
2202a6fc:	00003f06 	br	2202a7fc <__umoddi3+0x27c>
2202a700:	3000041e 	bne	r6,zero,2202a714 <__umoddi3+0x194>
2202a704:	01000044 	movi	r4,1
2202a708:	000b883a 	mov	r5,zero
2202a70c:	2020c680 	call	22020c68 <__udivsi3>
2202a710:	1027883a 	mov	r19,r2
2202a714:	00bfffd4 	movui	r2,65535
2202a718:	14c04f2e 	bgeu	r2,r19,2202a858 <__umoddi3+0x2d8>
2202a71c:	00804034 	movhi	r2,256
2202a720:	10bfffc4 	addi	r2,r2,-1
2202a724:	14c0e42e 	bgeu	r2,r19,2202aab8 <__umoddi3+0x538>
2202a728:	00800604 	movi	r2,24
2202a72c:	1007883a 	mov	r3,r2
2202a730:	9884d83a 	srl	r2,r19,r2
2202a734:	010880f4 	movhi	r4,8707
2202a738:	213f8d04 	addi	r4,r4,-460
2202a73c:	2085883a 	add	r2,r4,r2
2202a740:	11000003 	ldbu	r4,0(r2)
2202a744:	00800804 	movi	r2,32
2202a748:	20c7883a 	add	r3,r4,r3
2202a74c:	10c5c83a 	sub	r2,r2,r3
2202a750:	10009a1e 	bne	r2,zero,2202a9bc <__umoddi3+0x43c>
2202a754:	982cd43a 	srli	r22,r19,16
2202a758:	8ce3c83a 	sub	r17,r17,r19
2202a75c:	9c3fffcc 	andi	r16,r19,65535
2202a760:	0025883a 	mov	r18,zero
2202a764:	8809883a 	mov	r4,r17
2202a768:	b00b883a 	mov	r5,r22
2202a76c:	2020c700 	call	22020c70 <__umodsi3>
2202a770:	8809883a 	mov	r4,r17
2202a774:	b00b883a 	mov	r5,r22
2202a778:	102b883a 	mov	r21,r2
2202a77c:	2020c680 	call	22020c68 <__udivsi3>
2202a780:	a806943a 	slli	r3,r21,16
2202a784:	a008d43a 	srli	r4,r20,16
2202a788:	1405383a 	mul	r2,r2,r16
2202a78c:	190cb03a 	or	r6,r3,r4
2202a790:	3080032e 	bgeu	r6,r2,2202a7a0 <__umoddi3+0x220>
2202a794:	34cd883a 	add	r6,r6,r19
2202a798:	34c00136 	bltu	r6,r19,2202a7a0 <__umoddi3+0x220>
2202a79c:	3080d436 	bltu	r6,r2,2202aaf0 <__umoddi3+0x570>
2202a7a0:	30abc83a 	sub	r21,r6,r2
2202a7a4:	a809883a 	mov	r4,r21
2202a7a8:	b00b883a 	mov	r5,r22
2202a7ac:	2020c700 	call	22020c70 <__umodsi3>
2202a7b0:	1023883a 	mov	r17,r2
2202a7b4:	a809883a 	mov	r4,r21
2202a7b8:	b00b883a 	mov	r5,r22
2202a7bc:	2020c680 	call	22020c68 <__udivsi3>
2202a7c0:	8822943a 	slli	r17,r17,16
2202a7c4:	1405383a 	mul	r2,r2,r16
2202a7c8:	a13fffcc 	andi	r4,r20,65535
2202a7cc:	8906b03a 	or	r3,r17,r4
2202a7d0:	1880042e 	bgeu	r3,r2,2202a7e4 <__umoddi3+0x264>
2202a7d4:	1cc7883a 	add	r3,r3,r19
2202a7d8:	1cc00236 	bltu	r3,r19,2202a7e4 <__umoddi3+0x264>
2202a7dc:	1880012e 	bgeu	r3,r2,2202a7e4 <__umoddi3+0x264>
2202a7e0:	1cc7883a 	add	r3,r3,r19
2202a7e4:	1887c83a 	sub	r3,r3,r2
2202a7e8:	1c84d83a 	srl	r2,r3,r18
2202a7ec:	0007883a 	mov	r3,zero
2202a7f0:	00000206 	br	2202a7fc <__umoddi3+0x27c>
2202a7f4:	2005883a 	mov	r2,r4
2202a7f8:	2807883a 	mov	r3,r5
2202a7fc:	dfc00b17 	ldw	ra,44(sp)
2202a800:	df000a17 	ldw	fp,40(sp)
2202a804:	ddc00917 	ldw	r23,36(sp)
2202a808:	dd800817 	ldw	r22,32(sp)
2202a80c:	dd400717 	ldw	r21,28(sp)
2202a810:	dd000617 	ldw	r20,24(sp)
2202a814:	dcc00517 	ldw	r19,20(sp)
2202a818:	dc800417 	ldw	r18,16(sp)
2202a81c:	dc400317 	ldw	r17,12(sp)
2202a820:	dc000217 	ldw	r16,8(sp)
2202a824:	dec00c04 	addi	sp,sp,48
2202a828:	f800283a 	ret
2202a82c:	00803fc4 	movi	r2,255
2202a830:	11c0952e 	bgeu	r2,r7,2202aa88 <__umoddi3+0x508>
2202a834:	01400204 	movi	r5,8
2202a838:	282b883a 	mov	r21,r5
2202a83c:	003f9f06 	br	2202a6bc <__alt_data_end+0xfffeb2bc>
2202a840:	00804034 	movhi	r2,256
2202a844:	10bfffc4 	addi	r2,r2,-1
2202a848:	1180952e 	bgeu	r2,r6,2202aaa0 <__umoddi3+0x520>
2202a84c:	01400604 	movi	r5,24
2202a850:	2805883a 	mov	r2,r5
2202a854:	003f6206 	br	2202a5e0 <__alt_data_end+0xfffeb1e0>
2202a858:	00803fc4 	movi	r2,255
2202a85c:	14c0932e 	bgeu	r2,r19,2202aaac <__umoddi3+0x52c>
2202a860:	00800204 	movi	r2,8
2202a864:	1007883a 	mov	r3,r2
2202a868:	003fb106 	br	2202a730 <__alt_data_end+0xfffeb330>
2202a86c:	3548d83a 	srl	r4,r6,r21
2202a870:	3d0e983a 	sll	r7,r7,r20
2202a874:	8d10983a 	sll	r8,r17,r20
2202a878:	8d6cd83a 	srl	r22,r17,r21
2202a87c:	3922b03a 	or	r17,r7,r4
2202a880:	882ed43a 	srli	r23,r17,16
2202a884:	8564d83a 	srl	r18,r16,r21
2202a888:	b009883a 	mov	r4,r22
2202a88c:	b80b883a 	mov	r5,r23
2202a890:	44a4b03a 	or	r18,r8,r18
2202a894:	3526983a 	sll	r19,r6,r20
2202a898:	2020c700 	call	22020c70 <__umodsi3>
2202a89c:	b009883a 	mov	r4,r22
2202a8a0:	b80b883a 	mov	r5,r23
2202a8a4:	1039883a 	mov	fp,r2
2202a8a8:	2020c680 	call	22020c68 <__udivsi3>
2202a8ac:	102d883a 	mov	r22,r2
2202a8b0:	8a3fffcc 	andi	r8,r17,65535
2202a8b4:	e004943a 	slli	r2,fp,16
2202a8b8:	900cd43a 	srli	r6,r18,16
2202a8bc:	b239383a 	mul	fp,r22,r8
2202a8c0:	8520983a 	sll	r16,r16,r20
2202a8c4:	118ab03a 	or	r5,r2,r6
2202a8c8:	2f00042e 	bgeu	r5,fp,2202a8dc <__umoddi3+0x35c>
2202a8cc:	2c4b883a 	add	r5,r5,r17
2202a8d0:	b0bfffc4 	addi	r2,r22,-1
2202a8d4:	2c40822e 	bgeu	r5,r17,2202aae0 <__umoddi3+0x560>
2202a8d8:	102d883a 	mov	r22,r2
2202a8dc:	2f39c83a 	sub	fp,r5,fp
2202a8e0:	e009883a 	mov	r4,fp
2202a8e4:	b80b883a 	mov	r5,r23
2202a8e8:	da000115 	stw	r8,4(sp)
2202a8ec:	2020c700 	call	22020c70 <__umodsi3>
2202a8f0:	e009883a 	mov	r4,fp
2202a8f4:	b80b883a 	mov	r5,r23
2202a8f8:	d8800015 	stw	r2,0(sp)
2202a8fc:	2020c680 	call	22020c68 <__udivsi3>
2202a900:	d9800017 	ldw	r6,0(sp)
2202a904:	da000117 	ldw	r8,4(sp)
2202a908:	94bfffcc 	andi	r18,r18,65535
2202a90c:	300c943a 	slli	r6,r6,16
2202a910:	1209383a 	mul	r4,r2,r8
2202a914:	3490b03a 	or	r8,r6,r18
2202a918:	4100042e 	bgeu	r8,r4,2202a92c <__umoddi3+0x3ac>
2202a91c:	4451883a 	add	r8,r8,r17
2202a920:	10ffffc4 	addi	r3,r2,-1
2202a924:	44406a2e 	bgeu	r8,r17,2202aad0 <__umoddi3+0x550>
2202a928:	1805883a 	mov	r2,r3
2202a92c:	b012943a 	slli	r9,r22,16
2202a930:	9abfffcc 	andi	r10,r19,65535
2202a934:	980ed43a 	srli	r7,r19,16
2202a938:	124ab03a 	or	r5,r2,r9
2202a93c:	2a7fffcc 	andi	r9,r5,65535
2202a940:	280ad43a 	srli	r5,r5,16
2202a944:	4a8d383a 	mul	r6,r9,r10
2202a948:	49d3383a 	mul	r9,r9,r7
2202a94c:	2a95383a 	mul	r10,r5,r10
2202a950:	3004d43a 	srli	r2,r6,16
2202a954:	4111c83a 	sub	r8,r8,r4
2202a958:	5253883a 	add	r9,r10,r9
2202a95c:	4893883a 	add	r9,r9,r2
2202a960:	29cb383a 	mul	r5,r5,r7
2202a964:	4a80022e 	bgeu	r9,r10,2202a970 <__umoddi3+0x3f0>
2202a968:	00800074 	movhi	r2,1
2202a96c:	288b883a 	add	r5,r5,r2
2202a970:	4808d43a 	srli	r4,r9,16
2202a974:	4812943a 	slli	r9,r9,16
2202a978:	31bfffcc 	andi	r6,r6,65535
2202a97c:	290b883a 	add	r5,r5,r4
2202a980:	498d883a 	add	r6,r9,r6
2202a984:	41403a36 	bltu	r8,r5,2202aa70 <__umoddi3+0x4f0>
2202a988:	41405d26 	beq	r8,r5,2202ab00 <__umoddi3+0x580>
2202a98c:	4149c83a 	sub	r4,r8,r5
2202a990:	300f883a 	mov	r7,r6
2202a994:	81cfc83a 	sub	r7,r16,r7
2202a998:	81c7803a 	cmpltu	r3,r16,r7
2202a99c:	20c7c83a 	sub	r3,r4,r3
2202a9a0:	1d44983a 	sll	r2,r3,r21
2202a9a4:	3d0ed83a 	srl	r7,r7,r20
2202a9a8:	1d06d83a 	srl	r3,r3,r20
2202a9ac:	11c4b03a 	or	r2,r2,r7
2202a9b0:	003f9206 	br	2202a7fc <__alt_data_end+0xfffeb3fc>
2202a9b4:	0025883a 	mov	r18,zero
2202a9b8:	003f1806 	br	2202a61c <__alt_data_end+0xfffeb21c>
2202a9bc:	98a6983a 	sll	r19,r19,r2
2202a9c0:	88e8d83a 	srl	r20,r17,r3
2202a9c4:	80c6d83a 	srl	r3,r16,r3
2202a9c8:	982cd43a 	srli	r22,r19,16
2202a9cc:	88a2983a 	sll	r17,r17,r2
2202a9d0:	a009883a 	mov	r4,r20
2202a9d4:	b00b883a 	mov	r5,r22
2202a9d8:	88eab03a 	or	r21,r17,r3
2202a9dc:	1025883a 	mov	r18,r2
2202a9e0:	2020c700 	call	22020c70 <__umodsi3>
2202a9e4:	a009883a 	mov	r4,r20
2202a9e8:	b00b883a 	mov	r5,r22
2202a9ec:	1023883a 	mov	r17,r2
2202a9f0:	2020c680 	call	22020c68 <__udivsi3>
2202a9f4:	9f3fffcc 	andi	fp,r19,65535
2202a9f8:	8822943a 	slli	r17,r17,16
2202a9fc:	a80ad43a 	srli	r5,r21,16
2202aa00:	1705383a 	mul	r2,r2,fp
2202aa04:	84a8983a 	sll	r20,r16,r18
2202aa08:	8948b03a 	or	r4,r17,r5
2202aa0c:	2080042e 	bgeu	r4,r2,2202aa20 <__umoddi3+0x4a0>
2202aa10:	24c9883a 	add	r4,r4,r19
2202aa14:	24c00236 	bltu	r4,r19,2202aa20 <__umoddi3+0x4a0>
2202aa18:	2080012e 	bgeu	r4,r2,2202aa20 <__umoddi3+0x4a0>
2202aa1c:	24c9883a 	add	r4,r4,r19
2202aa20:	20afc83a 	sub	r23,r4,r2
2202aa24:	b809883a 	mov	r4,r23
2202aa28:	b00b883a 	mov	r5,r22
2202aa2c:	2020c700 	call	22020c70 <__umodsi3>
2202aa30:	1023883a 	mov	r17,r2
2202aa34:	b809883a 	mov	r4,r23
2202aa38:	b00b883a 	mov	r5,r22
2202aa3c:	2020c680 	call	22020c68 <__udivsi3>
2202aa40:	8822943a 	slli	r17,r17,16
2202aa44:	1705383a 	mul	r2,r2,fp
2202aa48:	a93fffcc 	andi	r4,r21,65535
2202aa4c:	8908b03a 	or	r4,r17,r4
2202aa50:	2080042e 	bgeu	r4,r2,2202aa64 <__umoddi3+0x4e4>
2202aa54:	24c9883a 	add	r4,r4,r19
2202aa58:	24c00236 	bltu	r4,r19,2202aa64 <__umoddi3+0x4e4>
2202aa5c:	2080012e 	bgeu	r4,r2,2202aa64 <__umoddi3+0x4e4>
2202aa60:	24c9883a 	add	r4,r4,r19
2202aa64:	20a3c83a 	sub	r17,r4,r2
2202aa68:	e021883a 	mov	r16,fp
2202aa6c:	003f3d06 	br	2202a764 <__alt_data_end+0xfffeb364>
2202aa70:	34cfc83a 	sub	r7,r6,r19
2202aa74:	2c4bc83a 	sub	r5,r5,r17
2202aa78:	31cd803a 	cmpltu	r6,r6,r7
2202aa7c:	298dc83a 	sub	r6,r5,r6
2202aa80:	4189c83a 	sub	r4,r8,r6
2202aa84:	003fc306 	br	2202a994 <__alt_data_end+0xfffeb594>
2202aa88:	000b883a 	mov	r5,zero
2202aa8c:	002b883a 	mov	r21,zero
2202aa90:	003f0a06 	br	2202a6bc <__alt_data_end+0xfffeb2bc>
2202aa94:	01400404 	movi	r5,16
2202aa98:	282b883a 	mov	r21,r5
2202aa9c:	003f0706 	br	2202a6bc <__alt_data_end+0xfffeb2bc>
2202aaa0:	01400404 	movi	r5,16
2202aaa4:	2805883a 	mov	r2,r5
2202aaa8:	003ecd06 	br	2202a5e0 <__alt_data_end+0xfffeb1e0>
2202aaac:	0005883a 	mov	r2,zero
2202aab0:	0007883a 	mov	r3,zero
2202aab4:	003f1e06 	br	2202a730 <__alt_data_end+0xfffeb330>
2202aab8:	00800404 	movi	r2,16
2202aabc:	1007883a 	mov	r3,r2
2202aac0:	003f1b06 	br	2202a730 <__alt_data_end+0xfffeb330>
2202aac4:	000b883a 	mov	r5,zero
2202aac8:	0005883a 	mov	r2,zero
2202aacc:	003ec406 	br	2202a5e0 <__alt_data_end+0xfffeb1e0>
2202aad0:	413f952e 	bgeu	r8,r4,2202a928 <__alt_data_end+0xfffeb528>
2202aad4:	10bfff84 	addi	r2,r2,-2
2202aad8:	4451883a 	add	r8,r8,r17
2202aadc:	003f9306 	br	2202a92c <__alt_data_end+0xfffeb52c>
2202aae0:	2f3f7d2e 	bgeu	r5,fp,2202a8d8 <__alt_data_end+0xfffeb4d8>
2202aae4:	b5bfff84 	addi	r22,r22,-2
2202aae8:	2c4b883a 	add	r5,r5,r17
2202aaec:	003f7b06 	br	2202a8dc <__alt_data_end+0xfffeb4dc>
2202aaf0:	34cd883a 	add	r6,r6,r19
2202aaf4:	003f2a06 	br	2202a7a0 <__alt_data_end+0xfffeb3a0>
2202aaf8:	8005883a 	mov	r2,r16
2202aafc:	003efe06 	br	2202a6f8 <__alt_data_end+0xfffeb2f8>
2202ab00:	81bfdb36 	bltu	r16,r6,2202aa70 <__alt_data_end+0xfffeb670>
2202ab04:	300f883a 	mov	r7,r6
2202ab08:	0009883a 	mov	r4,zero
2202ab0c:	003fa106 	br	2202a994 <__alt_data_end+0xfffeb594>

2202ab10 <__adddf3>:
2202ab10:	02000434 	movhi	r8,16
2202ab14:	423fffc4 	addi	r8,r8,-1
2202ab18:	defffb04 	addi	sp,sp,-20
2202ab1c:	2a12703a 	and	r9,r5,r8
2202ab20:	2806d7fa 	srli	r3,r5,31
2202ab24:	3a10703a 	and	r8,r7,r8
2202ab28:	3804d53a 	srli	r2,r7,20
2202ab2c:	3014d77a 	srli	r10,r6,29
2202ab30:	dc000015 	stw	r16,0(sp)
2202ab34:	481290fa 	slli	r9,r9,3
2202ab38:	2820d53a 	srli	r16,r5,20
2202ab3c:	401090fa 	slli	r8,r8,3
2202ab40:	200ad77a 	srli	r5,r4,29
2202ab44:	380ed7fa 	srli	r7,r7,31
2202ab48:	dc800215 	stw	r18,8(sp)
2202ab4c:	dc400115 	stw	r17,4(sp)
2202ab50:	dfc00415 	stw	ra,16(sp)
2202ab54:	dcc00315 	stw	r19,12(sp)
2202ab58:	1c803fcc 	andi	r18,r3,255
2202ab5c:	8401ffcc 	andi	r16,r16,2047
2202ab60:	494ab03a 	or	r5,r9,r5
2202ab64:	202290fa 	slli	r17,r4,3
2202ab68:	1081ffcc 	andi	r2,r2,2047
2202ab6c:	4290b03a 	or	r8,r8,r10
2202ab70:	300c90fa 	slli	r6,r6,3
2202ab74:	91c07026 	beq	r18,r7,2202ad38 <__adddf3+0x228>
2202ab78:	8087c83a 	sub	r3,r16,r2
2202ab7c:	00c0b30e 	bge	zero,r3,2202ae4c <__adddf3+0x33c>
2202ab80:	10002a1e 	bne	r2,zero,2202ac2c <__adddf3+0x11c>
2202ab84:	4184b03a 	or	r2,r8,r6
2202ab88:	1000991e 	bne	r2,zero,2202adf0 <__adddf3+0x2e0>
2202ab8c:	888001cc 	andi	r2,r17,7
2202ab90:	10005b26 	beq	r2,zero,2202ad00 <__adddf3+0x1f0>
2202ab94:	88c003cc 	andi	r3,r17,15
2202ab98:	00800104 	movi	r2,4
2202ab9c:	18805826 	beq	r3,r2,2202ad00 <__adddf3+0x1f0>
2202aba0:	89800104 	addi	r6,r17,4
2202aba4:	3463803a 	cmpltu	r17,r6,r17
2202aba8:	2c4b883a 	add	r5,r5,r17
2202abac:	2880202c 	andhi	r2,r5,128
2202abb0:	9007883a 	mov	r3,r18
2202abb4:	3023883a 	mov	r17,r6
2202abb8:	10005426 	beq	r2,zero,2202ad0c <__adddf3+0x1fc>
2202abbc:	84000044 	addi	r16,r16,1
2202abc0:	0081ffc4 	movi	r2,2047
2202abc4:	8080c126 	beq	r16,r2,2202aecc <__adddf3+0x3bc>
2202abc8:	013fe034 	movhi	r4,65408
2202abcc:	213fffc4 	addi	r4,r4,-1
2202abd0:	290a703a 	and	r5,r5,r4
2202abd4:	2804977a 	slli	r2,r5,29
2202abd8:	280a927a 	slli	r5,r5,9
2202abdc:	8822d0fa 	srli	r17,r17,3
2202abe0:	8401ffcc 	andi	r16,r16,2047
2202abe4:	2808d33a 	srli	r4,r5,12
2202abe8:	1444b03a 	or	r2,r2,r17
2202abec:	8401ffcc 	andi	r16,r16,2047
2202abf0:	800a953a 	slli	r5,r16,20
2202abf4:	18c03fcc 	andi	r3,r3,255
2202abf8:	04000434 	movhi	r16,16
2202abfc:	180697fa 	slli	r3,r3,31
2202ac00:	843fffc4 	addi	r16,r16,-1
2202ac04:	2420703a 	and	r16,r4,r16
2202ac08:	8160b03a 	or	r16,r16,r5
2202ac0c:	80c6b03a 	or	r3,r16,r3
2202ac10:	dfc00417 	ldw	ra,16(sp)
2202ac14:	dcc00317 	ldw	r19,12(sp)
2202ac18:	dc800217 	ldw	r18,8(sp)
2202ac1c:	dc400117 	ldw	r17,4(sp)
2202ac20:	dc000017 	ldw	r16,0(sp)
2202ac24:	dec00504 	addi	sp,sp,20
2202ac28:	f800283a 	ret
2202ac2c:	0081ffc4 	movi	r2,2047
2202ac30:	80bfd626 	beq	r16,r2,2202ab8c <__alt_data_end+0xfffeb78c>
2202ac34:	42002034 	orhi	r8,r8,128
2202ac38:	00800e04 	movi	r2,56
2202ac3c:	10c0a616 	blt	r2,r3,2202aed8 <__adddf3+0x3c8>
2202ac40:	008007c4 	movi	r2,31
2202ac44:	10c0c916 	blt	r2,r3,2202af6c <__adddf3+0x45c>
2202ac48:	00800804 	movi	r2,32
2202ac4c:	10c5c83a 	sub	r2,r2,r3
2202ac50:	408e983a 	sll	r7,r8,r2
2202ac54:	30c8d83a 	srl	r4,r6,r3
2202ac58:	3084983a 	sll	r2,r6,r2
2202ac5c:	40c6d83a 	srl	r3,r8,r3
2202ac60:	390cb03a 	or	r6,r7,r4
2202ac64:	1004c03a 	cmpne	r2,r2,zero
2202ac68:	308cb03a 	or	r6,r6,r2
2202ac6c:	898dc83a 	sub	r6,r17,r6
2202ac70:	89a3803a 	cmpltu	r17,r17,r6
2202ac74:	28cbc83a 	sub	r5,r5,r3
2202ac78:	2c4bc83a 	sub	r5,r5,r17
2202ac7c:	3023883a 	mov	r17,r6
2202ac80:	2880202c 	andhi	r2,r5,128
2202ac84:	10006d26 	beq	r2,zero,2202ae3c <__adddf3+0x32c>
2202ac88:	04c02034 	movhi	r19,128
2202ac8c:	9cffffc4 	addi	r19,r19,-1
2202ac90:	2ce6703a 	and	r19,r5,r19
2202ac94:	98007e26 	beq	r19,zero,2202ae90 <__adddf3+0x380>
2202ac98:	9809883a 	mov	r4,r19
2202ac9c:	202d0ac0 	call	2202d0ac <__clzsi2>
2202aca0:	10fffe04 	addi	r3,r2,-8
2202aca4:	010007c4 	movi	r4,31
2202aca8:	20c07f16 	blt	r4,r3,2202aea8 <__adddf3+0x398>
2202acac:	01400a04 	movi	r5,40
2202acb0:	2885c83a 	sub	r2,r5,r2
2202acb4:	888ad83a 	srl	r5,r17,r2
2202acb8:	98e6983a 	sll	r19,r19,r3
2202acbc:	88e2983a 	sll	r17,r17,r3
2202acc0:	2ce6b03a 	or	r19,r5,r19
2202acc4:	1c007c16 	blt	r3,r16,2202aeb8 <__adddf3+0x3a8>
2202acc8:	1c21c83a 	sub	r16,r3,r16
2202accc:	81400044 	addi	r5,r16,1
2202acd0:	00c007c4 	movi	r3,31
2202acd4:	19409816 	blt	r3,r5,2202af38 <__adddf3+0x428>
2202acd8:	1c21c83a 	sub	r16,r3,r16
2202acdc:	8c08983a 	sll	r4,r17,r16
2202ace0:	8946d83a 	srl	r3,r17,r5
2202ace4:	9c20983a 	sll	r16,r19,r16
2202ace8:	2008c03a 	cmpne	r4,r4,zero
2202acec:	994ad83a 	srl	r5,r19,r5
2202acf0:	1c06b03a 	or	r3,r3,r16
2202acf4:	1922b03a 	or	r17,r3,r4
2202acf8:	0021883a 	mov	r16,zero
2202acfc:	003fa306 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202ad00:	2880202c 	andhi	r2,r5,128
2202ad04:	9007883a 	mov	r3,r18
2202ad08:	103fac1e 	bne	r2,zero,2202abbc <__alt_data_end+0xfffeb7bc>
2202ad0c:	2804977a 	slli	r2,r5,29
2202ad10:	8822d0fa 	srli	r17,r17,3
2202ad14:	0101ffc4 	movi	r4,2047
2202ad18:	280ad0fa 	srli	r5,r5,3
2202ad1c:	1444b03a 	or	r2,r2,r17
2202ad20:	81002c26 	beq	r16,r4,2202add4 <__adddf3+0x2c4>
2202ad24:	8120703a 	and	r16,r16,r4
2202ad28:	01000434 	movhi	r4,16
2202ad2c:	213fffc4 	addi	r4,r4,-1
2202ad30:	2908703a 	and	r4,r5,r4
2202ad34:	003fad06 	br	2202abec <__alt_data_end+0xfffeb7ec>
2202ad38:	8089c83a 	sub	r4,r16,r2
2202ad3c:	01006a0e 	bge	zero,r4,2202aee8 <__adddf3+0x3d8>
2202ad40:	10003326 	beq	r2,zero,2202ae10 <__adddf3+0x300>
2202ad44:	0081ffc4 	movi	r2,2047
2202ad48:	80bf9026 	beq	r16,r2,2202ab8c <__alt_data_end+0xfffeb78c>
2202ad4c:	42002034 	orhi	r8,r8,128
2202ad50:	00800e04 	movi	r2,56
2202ad54:	1100b116 	blt	r2,r4,2202b01c <__adddf3+0x50c>
2202ad58:	008007c4 	movi	r2,31
2202ad5c:	1100e216 	blt	r2,r4,2202b0e8 <__adddf3+0x5d8>
2202ad60:	00800804 	movi	r2,32
2202ad64:	1105c83a 	sub	r2,r2,r4
2202ad68:	4092983a 	sll	r9,r8,r2
2202ad6c:	310ed83a 	srl	r7,r6,r4
2202ad70:	3084983a 	sll	r2,r6,r2
2202ad74:	4110d83a 	srl	r8,r8,r4
2202ad78:	49ccb03a 	or	r6,r9,r7
2202ad7c:	1004c03a 	cmpne	r2,r2,zero
2202ad80:	308cb03a 	or	r6,r6,r2
2202ad84:	344d883a 	add	r6,r6,r17
2202ad88:	3463803a 	cmpltu	r17,r6,r17
2202ad8c:	414b883a 	add	r5,r8,r5
2202ad90:	2c4b883a 	add	r5,r5,r17
2202ad94:	3023883a 	mov	r17,r6
2202ad98:	2880202c 	andhi	r2,r5,128
2202ad9c:	10002726 	beq	r2,zero,2202ae3c <__adddf3+0x32c>
2202ada0:	84000044 	addi	r16,r16,1
2202ada4:	0081ffc4 	movi	r2,2047
2202ada8:	8080ae26 	beq	r16,r2,2202b064 <__adddf3+0x554>
2202adac:	00bfe034 	movhi	r2,65408
2202adb0:	10bfffc4 	addi	r2,r2,-1
2202adb4:	288a703a 	and	r5,r5,r2
2202adb8:	880cd07a 	srli	r6,r17,1
2202adbc:	280897fa 	slli	r4,r5,31
2202adc0:	88c0004c 	andi	r3,r17,1
2202adc4:	30e2b03a 	or	r17,r6,r3
2202adc8:	280ad07a 	srli	r5,r5,1
2202adcc:	8922b03a 	or	r17,r17,r4
2202add0:	003f6e06 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202add4:	1148b03a 	or	r4,r2,r5
2202add8:	20003c26 	beq	r4,zero,2202aecc <__adddf3+0x3bc>
2202addc:	29000234 	orhi	r4,r5,8
2202ade0:	01400434 	movhi	r5,16
2202ade4:	297fffc4 	addi	r5,r5,-1
2202ade8:	2148703a 	and	r4,r4,r5
2202adec:	003f7f06 	br	2202abec <__alt_data_end+0xfffeb7ec>
2202adf0:	18ffffc4 	addi	r3,r3,-1
2202adf4:	18004d1e 	bne	r3,zero,2202af2c <__adddf3+0x41c>
2202adf8:	898dc83a 	sub	r6,r17,r6
2202adfc:	89a3803a 	cmpltu	r17,r17,r6
2202ae00:	2a0bc83a 	sub	r5,r5,r8
2202ae04:	2c4bc83a 	sub	r5,r5,r17
2202ae08:	3023883a 	mov	r17,r6
2202ae0c:	003f9c06 	br	2202ac80 <__alt_data_end+0xfffeb880>
2202ae10:	4184b03a 	or	r2,r8,r6
2202ae14:	103f5d26 	beq	r2,zero,2202ab8c <__alt_data_end+0xfffeb78c>
2202ae18:	213fffc4 	addi	r4,r4,-1
2202ae1c:	203fd926 	beq	r4,zero,2202ad84 <__alt_data_end+0xfffeb984>
2202ae20:	0081ffc4 	movi	r2,2047
2202ae24:	80bfca1e 	bne	r16,r2,2202ad50 <__alt_data_end+0xfffeb950>
2202ae28:	003f5806 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202ae2c:	10c8b03a 	or	r4,r2,r3
2202ae30:	20008b26 	beq	r4,zero,2202b060 <__adddf3+0x550>
2202ae34:	100b883a 	mov	r5,r2
2202ae38:	1823883a 	mov	r17,r3
2202ae3c:	888001cc 	andi	r2,r17,7
2202ae40:	103f541e 	bne	r2,zero,2202ab94 <__alt_data_end+0xfffeb794>
2202ae44:	9007883a 	mov	r3,r18
2202ae48:	003fb006 	br	2202ad0c <__alt_data_end+0xfffeb90c>
2202ae4c:	1800531e 	bne	r3,zero,2202af9c <__adddf3+0x48c>
2202ae50:	80800044 	addi	r2,r16,1
2202ae54:	1081ffcc 	andi	r2,r2,2047
2202ae58:	00c00044 	movi	r3,1
2202ae5c:	1880990e 	bge	r3,r2,2202b0c4 <__adddf3+0x5b4>
2202ae60:	8985c83a 	sub	r2,r17,r6
2202ae64:	8887803a 	cmpltu	r3,r17,r2
2202ae68:	2a27c83a 	sub	r19,r5,r8
2202ae6c:	98e7c83a 	sub	r19,r19,r3
2202ae70:	98c0202c 	andhi	r3,r19,128
2202ae74:	18006226 	beq	r3,zero,2202b000 <__adddf3+0x4f0>
2202ae78:	3463c83a 	sub	r17,r6,r17
2202ae7c:	4151c83a 	sub	r8,r8,r5
2202ae80:	344d803a 	cmpltu	r6,r6,r17
2202ae84:	41a7c83a 	sub	r19,r8,r6
2202ae88:	3825883a 	mov	r18,r7
2202ae8c:	983f821e 	bne	r19,zero,2202ac98 <__alt_data_end+0xfffeb898>
2202ae90:	8809883a 	mov	r4,r17
2202ae94:	202d0ac0 	call	2202d0ac <__clzsi2>
2202ae98:	10800804 	addi	r2,r2,32
2202ae9c:	10fffe04 	addi	r3,r2,-8
2202aea0:	010007c4 	movi	r4,31
2202aea4:	20ff810e 	bge	r4,r3,2202acac <__alt_data_end+0xfffeb8ac>
2202aea8:	14fff604 	addi	r19,r2,-40
2202aeac:	8ce6983a 	sll	r19,r17,r19
2202aeb0:	0023883a 	mov	r17,zero
2202aeb4:	1c3f840e 	bge	r3,r16,2202acc8 <__alt_data_end+0xfffeb8c8>
2202aeb8:	017fe034 	movhi	r5,65408
2202aebc:	297fffc4 	addi	r5,r5,-1
2202aec0:	80e1c83a 	sub	r16,r16,r3
2202aec4:	994a703a 	and	r5,r19,r5
2202aec8:	003f3006 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202aecc:	0009883a 	mov	r4,zero
2202aed0:	0005883a 	mov	r2,zero
2202aed4:	003f4506 	br	2202abec <__alt_data_end+0xfffeb7ec>
2202aed8:	418cb03a 	or	r6,r8,r6
2202aedc:	300cc03a 	cmpne	r6,r6,zero
2202aee0:	0007883a 	mov	r3,zero
2202aee4:	003f6106 	br	2202ac6c <__alt_data_end+0xfffeb86c>
2202aee8:	2000921e 	bne	r4,zero,2202b134 <__adddf3+0x624>
2202aeec:	80800044 	addi	r2,r16,1
2202aef0:	11c1ffcc 	andi	r7,r2,2047
2202aef4:	01000044 	movi	r4,1
2202aef8:	21c0610e 	bge	r4,r7,2202b080 <__adddf3+0x570>
2202aefc:	0101ffc4 	movi	r4,2047
2202af00:	1100a326 	beq	r2,r4,2202b190 <__adddf3+0x680>
2202af04:	344d883a 	add	r6,r6,r17
2202af08:	3463803a 	cmpltu	r17,r6,r17
2202af0c:	414b883a 	add	r5,r8,r5
2202af10:	2c4b883a 	add	r5,r5,r17
2202af14:	282297fa 	slli	r17,r5,31
2202af18:	300cd07a 	srli	r6,r6,1
2202af1c:	280ad07a 	srli	r5,r5,1
2202af20:	1021883a 	mov	r16,r2
2202af24:	89a2b03a 	or	r17,r17,r6
2202af28:	003f1806 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202af2c:	0081ffc4 	movi	r2,2047
2202af30:	80bf411e 	bne	r16,r2,2202ac38 <__alt_data_end+0xfffeb838>
2202af34:	003f1506 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202af38:	80bff844 	addi	r2,r16,-31
2202af3c:	00c00804 	movi	r3,32
2202af40:	9884d83a 	srl	r2,r19,r2
2202af44:	28c04a26 	beq	r5,r3,2202b070 <__adddf3+0x560>
2202af48:	00c00fc4 	movi	r3,63
2202af4c:	1c21c83a 	sub	r16,r3,r16
2202af50:	9c26983a 	sll	r19,r19,r16
2202af54:	9c62b03a 	or	r17,r19,r17
2202af58:	8822c03a 	cmpne	r17,r17,zero
2202af5c:	88a2b03a 	or	r17,r17,r2
2202af60:	000b883a 	mov	r5,zero
2202af64:	0021883a 	mov	r16,zero
2202af68:	003fb406 	br	2202ae3c <__alt_data_end+0xfffeba3c>
2202af6c:	18bff804 	addi	r2,r3,-32
2202af70:	01000804 	movi	r4,32
2202af74:	4084d83a 	srl	r2,r8,r2
2202af78:	19003f26 	beq	r3,r4,2202b078 <__adddf3+0x568>
2202af7c:	01001004 	movi	r4,64
2202af80:	20c7c83a 	sub	r3,r4,r3
2202af84:	40d0983a 	sll	r8,r8,r3
2202af88:	418cb03a 	or	r6,r8,r6
2202af8c:	300cc03a 	cmpne	r6,r6,zero
2202af90:	308cb03a 	or	r6,r6,r2
2202af94:	0007883a 	mov	r3,zero
2202af98:	003f3406 	br	2202ac6c <__alt_data_end+0xfffeb86c>
2202af9c:	80002326 	beq	r16,zero,2202b02c <__adddf3+0x51c>
2202afa0:	0101ffc4 	movi	r4,2047
2202afa4:	11005e26 	beq	r2,r4,2202b120 <__adddf3+0x610>
2202afa8:	00c7c83a 	sub	r3,zero,r3
2202afac:	29402034 	orhi	r5,r5,128
2202afb0:	01000e04 	movi	r4,56
2202afb4:	20c07216 	blt	r4,r3,2202b180 <__adddf3+0x670>
2202afb8:	010007c4 	movi	r4,31
2202afbc:	20c0ce16 	blt	r4,r3,2202b2f8 <__adddf3+0x7e8>
2202afc0:	01000804 	movi	r4,32
2202afc4:	20c9c83a 	sub	r4,r4,r3
2202afc8:	2914983a 	sll	r10,r5,r4
2202afcc:	88d2d83a 	srl	r9,r17,r3
2202afd0:	8908983a 	sll	r4,r17,r4
2202afd4:	28c6d83a 	srl	r3,r5,r3
2202afd8:	5262b03a 	or	r17,r10,r9
2202afdc:	2008c03a 	cmpne	r4,r4,zero
2202afe0:	8922b03a 	or	r17,r17,r4
2202afe4:	3463c83a 	sub	r17,r6,r17
2202afe8:	40c7c83a 	sub	r3,r8,r3
2202afec:	344d803a 	cmpltu	r6,r6,r17
2202aff0:	198bc83a 	sub	r5,r3,r6
2202aff4:	1021883a 	mov	r16,r2
2202aff8:	3825883a 	mov	r18,r7
2202affc:	003f2006 	br	2202ac80 <__alt_data_end+0xfffeb880>
2202b000:	9886b03a 	or	r3,r19,r2
2202b004:	1800141e 	bne	r3,zero,2202b058 <__adddf3+0x548>
2202b008:	0007883a 	mov	r3,zero
2202b00c:	000b883a 	mov	r5,zero
2202b010:	0023883a 	mov	r17,zero
2202b014:	0021883a 	mov	r16,zero
2202b018:	003f3c06 	br	2202ad0c <__alt_data_end+0xfffeb90c>
2202b01c:	418cb03a 	or	r6,r8,r6
2202b020:	300cc03a 	cmpne	r6,r6,zero
2202b024:	0011883a 	mov	r8,zero
2202b028:	003f5606 	br	2202ad84 <__alt_data_end+0xfffeb984>
2202b02c:	2c48b03a 	or	r4,r5,r17
2202b030:	20003b26 	beq	r4,zero,2202b120 <__adddf3+0x610>
2202b034:	00c6303a 	nor	r3,zero,r3
2202b038:	1800371e 	bne	r3,zero,2202b118 <__adddf3+0x608>
2202b03c:	3463c83a 	sub	r17,r6,r17
2202b040:	414bc83a 	sub	r5,r8,r5
2202b044:	344d803a 	cmpltu	r6,r6,r17
2202b048:	298bc83a 	sub	r5,r5,r6
2202b04c:	1021883a 	mov	r16,r2
2202b050:	3825883a 	mov	r18,r7
2202b054:	003f0a06 	br	2202ac80 <__alt_data_end+0xfffeb880>
2202b058:	1023883a 	mov	r17,r2
2202b05c:	003f0d06 	br	2202ac94 <__alt_data_end+0xfffeb894>
2202b060:	0007883a 	mov	r3,zero
2202b064:	000b883a 	mov	r5,zero
2202b068:	0023883a 	mov	r17,zero
2202b06c:	003f2706 	br	2202ad0c <__alt_data_end+0xfffeb90c>
2202b070:	0027883a 	mov	r19,zero
2202b074:	003fb706 	br	2202af54 <__alt_data_end+0xfffebb54>
2202b078:	0011883a 	mov	r8,zero
2202b07c:	003fc206 	br	2202af88 <__alt_data_end+0xfffebb88>
2202b080:	2c44b03a 	or	r2,r5,r17
2202b084:	8000871e 	bne	r16,zero,2202b2a4 <__adddf3+0x794>
2202b088:	1000b126 	beq	r2,zero,2202b350 <__adddf3+0x840>
2202b08c:	4184b03a 	or	r2,r8,r6
2202b090:	103ebe26 	beq	r2,zero,2202ab8c <__alt_data_end+0xfffeb78c>
2202b094:	3445883a 	add	r2,r6,r17
2202b098:	1463803a 	cmpltu	r17,r2,r17
2202b09c:	414b883a 	add	r5,r8,r5
2202b0a0:	2c4b883a 	add	r5,r5,r17
2202b0a4:	28c0202c 	andhi	r3,r5,128
2202b0a8:	1023883a 	mov	r17,r2
2202b0ac:	183f6326 	beq	r3,zero,2202ae3c <__alt_data_end+0xfffeba3c>
2202b0b0:	00bfe034 	movhi	r2,65408
2202b0b4:	10bfffc4 	addi	r2,r2,-1
2202b0b8:	2021883a 	mov	r16,r4
2202b0bc:	288a703a 	and	r5,r5,r2
2202b0c0:	003eb206 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202b0c4:	2c44b03a 	or	r2,r5,r17
2202b0c8:	8000251e 	bne	r16,zero,2202b160 <__adddf3+0x650>
2202b0cc:	10004b1e 	bne	r2,zero,2202b1fc <__adddf3+0x6ec>
2202b0d0:	4184b03a 	or	r2,r8,r6
2202b0d4:	103fe226 	beq	r2,zero,2202b060 <__alt_data_end+0xfffebc60>
2202b0d8:	400b883a 	mov	r5,r8
2202b0dc:	3023883a 	mov	r17,r6
2202b0e0:	3825883a 	mov	r18,r7
2202b0e4:	003ea906 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202b0e8:	20bff804 	addi	r2,r4,-32
2202b0ec:	01c00804 	movi	r7,32
2202b0f0:	4084d83a 	srl	r2,r8,r2
2202b0f4:	21c07e26 	beq	r4,r7,2202b2f0 <__adddf3+0x7e0>
2202b0f8:	01c01004 	movi	r7,64
2202b0fc:	3909c83a 	sub	r4,r7,r4
2202b100:	4110983a 	sll	r8,r8,r4
2202b104:	418cb03a 	or	r6,r8,r6
2202b108:	300cc03a 	cmpne	r6,r6,zero
2202b10c:	308cb03a 	or	r6,r6,r2
2202b110:	0011883a 	mov	r8,zero
2202b114:	003f1b06 	br	2202ad84 <__alt_data_end+0xfffeb984>
2202b118:	0101ffc4 	movi	r4,2047
2202b11c:	113fa41e 	bne	r2,r4,2202afb0 <__alt_data_end+0xfffebbb0>
2202b120:	400b883a 	mov	r5,r8
2202b124:	3023883a 	mov	r17,r6
2202b128:	1021883a 	mov	r16,r2
2202b12c:	3825883a 	mov	r18,r7
2202b130:	003e9606 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202b134:	80001a1e 	bne	r16,zero,2202b1a0 <__adddf3+0x690>
2202b138:	2c4eb03a 	or	r7,r5,r17
2202b13c:	38005526 	beq	r7,zero,2202b294 <__adddf3+0x784>
2202b140:	0108303a 	nor	r4,zero,r4
2202b144:	2000511e 	bne	r4,zero,2202b28c <__adddf3+0x77c>
2202b148:	89a3883a 	add	r17,r17,r6
2202b14c:	414b883a 	add	r5,r8,r5
2202b150:	898d803a 	cmpltu	r6,r17,r6
2202b154:	298b883a 	add	r5,r5,r6
2202b158:	1021883a 	mov	r16,r2
2202b15c:	003f0e06 	br	2202ad98 <__alt_data_end+0xfffeb998>
2202b160:	1000341e 	bne	r2,zero,2202b234 <__adddf3+0x724>
2202b164:	4184b03a 	or	r2,r8,r6
2202b168:	10006f26 	beq	r2,zero,2202b328 <__adddf3+0x818>
2202b16c:	400b883a 	mov	r5,r8
2202b170:	3023883a 	mov	r17,r6
2202b174:	3825883a 	mov	r18,r7
2202b178:	0401ffc4 	movi	r16,2047
2202b17c:	003e8306 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202b180:	2c62b03a 	or	r17,r5,r17
2202b184:	8822c03a 	cmpne	r17,r17,zero
2202b188:	0007883a 	mov	r3,zero
2202b18c:	003f9506 	br	2202afe4 <__alt_data_end+0xfffebbe4>
2202b190:	1021883a 	mov	r16,r2
2202b194:	000b883a 	mov	r5,zero
2202b198:	0023883a 	mov	r17,zero
2202b19c:	003edb06 	br	2202ad0c <__alt_data_end+0xfffeb90c>
2202b1a0:	01c1ffc4 	movi	r7,2047
2202b1a4:	11c03b26 	beq	r2,r7,2202b294 <__adddf3+0x784>
2202b1a8:	0109c83a 	sub	r4,zero,r4
2202b1ac:	29402034 	orhi	r5,r5,128
2202b1b0:	01c00e04 	movi	r7,56
2202b1b4:	39006216 	blt	r7,r4,2202b340 <__adddf3+0x830>
2202b1b8:	01c007c4 	movi	r7,31
2202b1bc:	39006b16 	blt	r7,r4,2202b36c <__adddf3+0x85c>
2202b1c0:	01c00804 	movi	r7,32
2202b1c4:	390fc83a 	sub	r7,r7,r4
2202b1c8:	29d4983a 	sll	r10,r5,r7
2202b1cc:	8912d83a 	srl	r9,r17,r4
2202b1d0:	89ce983a 	sll	r7,r17,r7
2202b1d4:	2908d83a 	srl	r4,r5,r4
2202b1d8:	5262b03a 	or	r17,r10,r9
2202b1dc:	380ac03a 	cmpne	r5,r7,zero
2202b1e0:	8962b03a 	or	r17,r17,r5
2202b1e4:	89a3883a 	add	r17,r17,r6
2202b1e8:	2211883a 	add	r8,r4,r8
2202b1ec:	898d803a 	cmpltu	r6,r17,r6
2202b1f0:	418b883a 	add	r5,r8,r6
2202b1f4:	1021883a 	mov	r16,r2
2202b1f8:	003ee706 	br	2202ad98 <__alt_data_end+0xfffeb998>
2202b1fc:	4184b03a 	or	r2,r8,r6
2202b200:	103e6226 	beq	r2,zero,2202ab8c <__alt_data_end+0xfffeb78c>
2202b204:	8987c83a 	sub	r3,r17,r6
2202b208:	88c9803a 	cmpltu	r4,r17,r3
2202b20c:	2a05c83a 	sub	r2,r5,r8
2202b210:	1105c83a 	sub	r2,r2,r4
2202b214:	1100202c 	andhi	r4,r2,128
2202b218:	203f0426 	beq	r4,zero,2202ae2c <__alt_data_end+0xfffeba2c>
2202b21c:	3463c83a 	sub	r17,r6,r17
2202b220:	414bc83a 	sub	r5,r8,r5
2202b224:	344d803a 	cmpltu	r6,r6,r17
2202b228:	298bc83a 	sub	r5,r5,r6
2202b22c:	3825883a 	mov	r18,r7
2202b230:	003e5606 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202b234:	4184b03a 	or	r2,r8,r6
2202b238:	10002b26 	beq	r2,zero,2202b2e8 <__adddf3+0x7d8>
2202b23c:	2804d0fa 	srli	r2,r5,3
2202b240:	8822d0fa 	srli	r17,r17,3
2202b244:	280a977a 	slli	r5,r5,29
2202b248:	10c0022c 	andhi	r3,r2,8
2202b24c:	2c62b03a 	or	r17,r5,r17
2202b250:	18000826 	beq	r3,zero,2202b274 <__adddf3+0x764>
2202b254:	4008d0fa 	srli	r4,r8,3
2202b258:	20c0022c 	andhi	r3,r4,8
2202b25c:	1800051e 	bne	r3,zero,2202b274 <__adddf3+0x764>
2202b260:	300cd0fa 	srli	r6,r6,3
2202b264:	4010977a 	slli	r8,r8,29
2202b268:	2005883a 	mov	r2,r4
2202b26c:	3825883a 	mov	r18,r7
2202b270:	41a2b03a 	or	r17,r8,r6
2202b274:	880ad77a 	srli	r5,r17,29
2202b278:	100490fa 	slli	r2,r2,3
2202b27c:	882290fa 	slli	r17,r17,3
2202b280:	0401ffc4 	movi	r16,2047
2202b284:	288ab03a 	or	r5,r5,r2
2202b288:	003e4006 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202b28c:	01c1ffc4 	movi	r7,2047
2202b290:	11ffc71e 	bne	r2,r7,2202b1b0 <__alt_data_end+0xfffebdb0>
2202b294:	400b883a 	mov	r5,r8
2202b298:	3023883a 	mov	r17,r6
2202b29c:	1021883a 	mov	r16,r2
2202b2a0:	003e3a06 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202b2a4:	10002d26 	beq	r2,zero,2202b35c <__adddf3+0x84c>
2202b2a8:	4184b03a 	or	r2,r8,r6
2202b2ac:	10000e26 	beq	r2,zero,2202b2e8 <__adddf3+0x7d8>
2202b2b0:	2804d0fa 	srli	r2,r5,3
2202b2b4:	8822d0fa 	srli	r17,r17,3
2202b2b8:	280a977a 	slli	r5,r5,29
2202b2bc:	10c0022c 	andhi	r3,r2,8
2202b2c0:	2c62b03a 	or	r17,r5,r17
2202b2c4:	183feb26 	beq	r3,zero,2202b274 <__alt_data_end+0xfffebe74>
2202b2c8:	4008d0fa 	srli	r4,r8,3
2202b2cc:	20c0022c 	andhi	r3,r4,8
2202b2d0:	183fe81e 	bne	r3,zero,2202b274 <__alt_data_end+0xfffebe74>
2202b2d4:	300cd0fa 	srli	r6,r6,3
2202b2d8:	4010977a 	slli	r8,r8,29
2202b2dc:	2005883a 	mov	r2,r4
2202b2e0:	41a2b03a 	or	r17,r8,r6
2202b2e4:	003fe306 	br	2202b274 <__alt_data_end+0xfffebe74>
2202b2e8:	0401ffc4 	movi	r16,2047
2202b2ec:	003e2706 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202b2f0:	0011883a 	mov	r8,zero
2202b2f4:	003f8306 	br	2202b104 <__alt_data_end+0xfffebd04>
2202b2f8:	193ff804 	addi	r4,r3,-32
2202b2fc:	02400804 	movi	r9,32
2202b300:	2908d83a 	srl	r4,r5,r4
2202b304:	1a402526 	beq	r3,r9,2202b39c <__adddf3+0x88c>
2202b308:	02401004 	movi	r9,64
2202b30c:	48c7c83a 	sub	r3,r9,r3
2202b310:	28ca983a 	sll	r5,r5,r3
2202b314:	2c62b03a 	or	r17,r5,r17
2202b318:	8822c03a 	cmpne	r17,r17,zero
2202b31c:	8922b03a 	or	r17,r17,r4
2202b320:	0007883a 	mov	r3,zero
2202b324:	003f2f06 	br	2202afe4 <__alt_data_end+0xfffebbe4>
2202b328:	01402034 	movhi	r5,128
2202b32c:	0007883a 	mov	r3,zero
2202b330:	297fffc4 	addi	r5,r5,-1
2202b334:	047ffe04 	movi	r17,-8
2202b338:	0401ffc4 	movi	r16,2047
2202b33c:	003e7306 	br	2202ad0c <__alt_data_end+0xfffeb90c>
2202b340:	2c62b03a 	or	r17,r5,r17
2202b344:	8822c03a 	cmpne	r17,r17,zero
2202b348:	0009883a 	mov	r4,zero
2202b34c:	003fa506 	br	2202b1e4 <__alt_data_end+0xfffebde4>
2202b350:	400b883a 	mov	r5,r8
2202b354:	3023883a 	mov	r17,r6
2202b358:	003e0c06 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202b35c:	400b883a 	mov	r5,r8
2202b360:	3023883a 	mov	r17,r6
2202b364:	0401ffc4 	movi	r16,2047
2202b368:	003e0806 	br	2202ab8c <__alt_data_end+0xfffeb78c>
2202b36c:	21fff804 	addi	r7,r4,-32
2202b370:	02400804 	movi	r9,32
2202b374:	29ced83a 	srl	r7,r5,r7
2202b378:	22400a26 	beq	r4,r9,2202b3a4 <__adddf3+0x894>
2202b37c:	02401004 	movi	r9,64
2202b380:	4909c83a 	sub	r4,r9,r4
2202b384:	290a983a 	sll	r5,r5,r4
2202b388:	2c62b03a 	or	r17,r5,r17
2202b38c:	8822c03a 	cmpne	r17,r17,zero
2202b390:	89e2b03a 	or	r17,r17,r7
2202b394:	0009883a 	mov	r4,zero
2202b398:	003f9206 	br	2202b1e4 <__alt_data_end+0xfffebde4>
2202b39c:	000b883a 	mov	r5,zero
2202b3a0:	003fdc06 	br	2202b314 <__alt_data_end+0xfffebf14>
2202b3a4:	000b883a 	mov	r5,zero
2202b3a8:	003ff706 	br	2202b388 <__alt_data_end+0xfffebf88>

2202b3ac <__divdf3>:
2202b3ac:	defff204 	addi	sp,sp,-56
2202b3b0:	dd000815 	stw	r20,32(sp)
2202b3b4:	2828d53a 	srli	r20,r5,20
2202b3b8:	dd800a15 	stw	r22,40(sp)
2202b3bc:	282cd7fa 	srli	r22,r5,31
2202b3c0:	dc000415 	stw	r16,16(sp)
2202b3c4:	04000434 	movhi	r16,16
2202b3c8:	df000c15 	stw	fp,48(sp)
2202b3cc:	dcc00715 	stw	r19,28(sp)
2202b3d0:	dc800615 	stw	r18,24(sp)
2202b3d4:	dc400515 	stw	r17,20(sp)
2202b3d8:	843fffc4 	addi	r16,r16,-1
2202b3dc:	dfc00d15 	stw	ra,52(sp)
2202b3e0:	ddc00b15 	stw	r23,44(sp)
2202b3e4:	dd400915 	stw	r21,36(sp)
2202b3e8:	a501ffcc 	andi	r20,r20,2047
2202b3ec:	2025883a 	mov	r18,r4
2202b3f0:	2027883a 	mov	r19,r4
2202b3f4:	2c22703a 	and	r17,r5,r16
2202b3f8:	b7003fcc 	andi	fp,r22,255
2202b3fc:	a0005e26 	beq	r20,zero,2202b578 <__divdf3+0x1cc>
2202b400:	0081ffc4 	movi	r2,2047
2202b404:	a0803526 	beq	r20,r2,2202b4dc <__divdf3+0x130>
2202b408:	8c000434 	orhi	r16,r17,16
2202b40c:	2004d77a 	srli	r2,r4,29
2202b410:	802090fa 	slli	r16,r16,3
2202b414:	202690fa 	slli	r19,r4,3
2202b418:	a53f0044 	addi	r20,r20,-1023
2202b41c:	80a2b03a 	or	r17,r16,r2
2202b420:	0025883a 	mov	r18,zero
2202b424:	0011883a 	mov	r8,zero
2202b428:	380ad53a 	srli	r5,r7,20
2202b42c:	382ed7fa 	srli	r23,r7,31
2202b430:	04000434 	movhi	r16,16
2202b434:	843fffc4 	addi	r16,r16,-1
2202b438:	2941ffcc 	andi	r5,r5,2047
2202b43c:	302b883a 	mov	r21,r6
2202b440:	3c20703a 	and	r16,r7,r16
2202b444:	ba403fcc 	andi	r9,r23,255
2202b448:	28006726 	beq	r5,zero,2202b5e8 <__divdf3+0x23c>
2202b44c:	0081ffc4 	movi	r2,2047
2202b450:	28805f26 	beq	r5,r2,2202b5d0 <__divdf3+0x224>
2202b454:	84000434 	orhi	r16,r16,16
2202b458:	3004d77a 	srli	r2,r6,29
2202b45c:	802090fa 	slli	r16,r16,3
2202b460:	302a90fa 	slli	r21,r6,3
2202b464:	297f0044 	addi	r5,r5,-1023
2202b468:	80a0b03a 	or	r16,r16,r2
2202b46c:	000f883a 	mov	r7,zero
2202b470:	3c86b03a 	or	r3,r7,r18
2202b474:	180690ba 	slli	r3,r3,2
2202b478:	008880f4 	movhi	r2,8707
2202b47c:	10ad2704 	addi	r2,r2,-19300
2202b480:	1887883a 	add	r3,r3,r2
2202b484:	18c00017 	ldw	r3,0(r3)
2202b488:	b5c8f03a 	xor	r4,r22,r23
2202b48c:	200d883a 	mov	r6,r4
2202b490:	24803fcc 	andi	r18,r4,255
2202b494:	a169c83a 	sub	r20,r20,r5
2202b498:	1800683a 	jmp	r3
2202b49c:	2202b6e4 	muli	r8,r4,2779
2202b4a0:	2202b514 	ori	r8,r4,2772
2202b4a4:	2202b6a8 	cmpgeui	r8,r4,2778
2202b4a8:	2202b4f8 	rdprs	r8,r4,2771
2202b4ac:	2202b6a8 	cmpgeui	r8,r4,2778
2202b4b0:	2202b67c 	xorhi	r8,r4,2777
2202b4b4:	2202b6a8 	cmpgeui	r8,r4,2778
2202b4b8:	2202b4f8 	rdprs	r8,r4,2771
2202b4bc:	2202b514 	ori	r8,r4,2772
2202b4c0:	2202b514 	ori	r8,r4,2772
2202b4c4:	2202b67c 	xorhi	r8,r4,2777
2202b4c8:	2202b4f8 	rdprs	r8,r4,2771
2202b4cc:	2202b508 	cmpgei	r8,r4,2772
2202b4d0:	2202b508 	cmpgei	r8,r4,2772
2202b4d4:	2202b508 	cmpgei	r8,r4,2772
2202b4d8:	2202b6b8 	rdprs	r8,r4,2778
2202b4dc:	8904b03a 	or	r2,r17,r4
2202b4e0:	1000631e 	bne	r2,zero,2202b670 <__divdf3+0x2c4>
2202b4e4:	04800204 	movi	r18,8
2202b4e8:	0023883a 	mov	r17,zero
2202b4ec:	0027883a 	mov	r19,zero
2202b4f0:	02000084 	movi	r8,2
2202b4f4:	003fcc06 	br	2202b428 <__alt_data_end+0xfffec028>
2202b4f8:	8023883a 	mov	r17,r16
2202b4fc:	a827883a 	mov	r19,r21
2202b500:	4839883a 	mov	fp,r9
2202b504:	3811883a 	mov	r8,r7
2202b508:	00800084 	movi	r2,2
2202b50c:	40812a1e 	bne	r8,r2,2202b9b8 <__divdf3+0x60c>
2202b510:	e025883a 	mov	r18,fp
2202b514:	9180004c 	andi	r6,r18,1
2202b518:	0101ffc4 	movi	r4,2047
2202b51c:	000b883a 	mov	r5,zero
2202b520:	0027883a 	mov	r19,zero
2202b524:	2008953a 	slli	r4,r4,20
2202b528:	30c03fcc 	andi	r3,r6,255
2202b52c:	04000434 	movhi	r16,16
2202b530:	180697fa 	slli	r3,r3,31
2202b534:	843fffc4 	addi	r16,r16,-1
2202b538:	2c20703a 	and	r16,r5,r16
2202b53c:	8120b03a 	or	r16,r16,r4
2202b540:	80c6b03a 	or	r3,r16,r3
2202b544:	9805883a 	mov	r2,r19
2202b548:	dfc00d17 	ldw	ra,52(sp)
2202b54c:	df000c17 	ldw	fp,48(sp)
2202b550:	ddc00b17 	ldw	r23,44(sp)
2202b554:	dd800a17 	ldw	r22,40(sp)
2202b558:	dd400917 	ldw	r21,36(sp)
2202b55c:	dd000817 	ldw	r20,32(sp)
2202b560:	dcc00717 	ldw	r19,28(sp)
2202b564:	dc800617 	ldw	r18,24(sp)
2202b568:	dc400517 	ldw	r17,20(sp)
2202b56c:	dc000417 	ldw	r16,16(sp)
2202b570:	dec00e04 	addi	sp,sp,56
2202b574:	f800283a 	ret
2202b578:	8904b03a 	or	r2,r17,r4
2202b57c:	10003726 	beq	r2,zero,2202b65c <__divdf3+0x2b0>
2202b580:	88011c26 	beq	r17,zero,2202b9f4 <__divdf3+0x648>
2202b584:	8809883a 	mov	r4,r17
2202b588:	d9800315 	stw	r6,12(sp)
2202b58c:	d9c00115 	stw	r7,4(sp)
2202b590:	202d0ac0 	call	2202d0ac <__clzsi2>
2202b594:	d9800317 	ldw	r6,12(sp)
2202b598:	d9c00117 	ldw	r7,4(sp)
2202b59c:	1007883a 	mov	r3,r2
2202b5a0:	01000a04 	movi	r4,40
2202b5a4:	1cfffe04 	addi	r19,r3,-8
2202b5a8:	20c9c83a 	sub	r4,r4,r3
2202b5ac:	8cca983a 	sll	r5,r17,r19
2202b5b0:	9108d83a 	srl	r4,r18,r4
2202b5b4:	94e6983a 	sll	r19,r18,r19
2202b5b8:	2162b03a 	or	r17,r4,r5
2202b5bc:	053f0344 	movi	r20,-1011
2202b5c0:	a0e9c83a 	sub	r20,r20,r3
2202b5c4:	0025883a 	mov	r18,zero
2202b5c8:	0011883a 	mov	r8,zero
2202b5cc:	003f9606 	br	2202b428 <__alt_data_end+0xfffec028>
2202b5d0:	8184b03a 	or	r2,r16,r6
2202b5d4:	10001f1e 	bne	r2,zero,2202b654 <__divdf3+0x2a8>
2202b5d8:	0021883a 	mov	r16,zero
2202b5dc:	002b883a 	mov	r21,zero
2202b5e0:	01c00084 	movi	r7,2
2202b5e4:	003fa206 	br	2202b470 <__alt_data_end+0xfffec070>
2202b5e8:	8184b03a 	or	r2,r16,r6
2202b5ec:	10001526 	beq	r2,zero,2202b644 <__divdf3+0x298>
2202b5f0:	80010c26 	beq	r16,zero,2202ba24 <__divdf3+0x678>
2202b5f4:	8009883a 	mov	r4,r16
2202b5f8:	d9800315 	stw	r6,12(sp)
2202b5fc:	da000215 	stw	r8,8(sp)
2202b600:	da400015 	stw	r9,0(sp)
2202b604:	202d0ac0 	call	2202d0ac <__clzsi2>
2202b608:	d9800317 	ldw	r6,12(sp)
2202b60c:	da000217 	ldw	r8,8(sp)
2202b610:	da400017 	ldw	r9,0(sp)
2202b614:	1007883a 	mov	r3,r2
2202b618:	01000a04 	movi	r4,40
2202b61c:	1d7ffe04 	addi	r21,r3,-8
2202b620:	20c9c83a 	sub	r4,r4,r3
2202b624:	8560983a 	sll	r16,r16,r21
2202b628:	3108d83a 	srl	r4,r6,r4
2202b62c:	356a983a 	sll	r21,r6,r21
2202b630:	2420b03a 	or	r16,r4,r16
2202b634:	017f0344 	movi	r5,-1011
2202b638:	28cbc83a 	sub	r5,r5,r3
2202b63c:	000f883a 	mov	r7,zero
2202b640:	003f8b06 	br	2202b470 <__alt_data_end+0xfffec070>
2202b644:	0021883a 	mov	r16,zero
2202b648:	002b883a 	mov	r21,zero
2202b64c:	01c00044 	movi	r7,1
2202b650:	003f8706 	br	2202b470 <__alt_data_end+0xfffec070>
2202b654:	01c000c4 	movi	r7,3
2202b658:	003f8506 	br	2202b470 <__alt_data_end+0xfffec070>
2202b65c:	04800104 	movi	r18,4
2202b660:	0023883a 	mov	r17,zero
2202b664:	0027883a 	mov	r19,zero
2202b668:	02000044 	movi	r8,1
2202b66c:	003f6e06 	br	2202b428 <__alt_data_end+0xfffec028>
2202b670:	04800304 	movi	r18,12
2202b674:	020000c4 	movi	r8,3
2202b678:	003f6b06 	br	2202b428 <__alt_data_end+0xfffec028>
2202b67c:	01400434 	movhi	r5,16
2202b680:	000d883a 	mov	r6,zero
2202b684:	297fffc4 	addi	r5,r5,-1
2202b688:	04ffffc4 	movi	r19,-1
2202b68c:	0101ffc4 	movi	r4,2047
2202b690:	003fa406 	br	2202b524 <__alt_data_end+0xfffec124>
2202b694:	043f0084 	movi	r16,-1022
2202b698:	8521c83a 	sub	r16,r16,r20
2202b69c:	00800e04 	movi	r2,56
2202b6a0:	1401200e 	bge	r2,r16,2202bb24 <__divdf3+0x778>
2202b6a4:	9180004c 	andi	r6,r18,1
2202b6a8:	0009883a 	mov	r4,zero
2202b6ac:	000b883a 	mov	r5,zero
2202b6b0:	0027883a 	mov	r19,zero
2202b6b4:	003f9b06 	br	2202b524 <__alt_data_end+0xfffec124>
2202b6b8:	8880022c 	andhi	r2,r17,8
2202b6bc:	1000c726 	beq	r2,zero,2202b9dc <__divdf3+0x630>
2202b6c0:	8080022c 	andhi	r2,r16,8
2202b6c4:	1000c51e 	bne	r2,zero,2202b9dc <__divdf3+0x630>
2202b6c8:	00800434 	movhi	r2,16
2202b6cc:	81400234 	orhi	r5,r16,8
2202b6d0:	10bfffc4 	addi	r2,r2,-1
2202b6d4:	b80d883a 	mov	r6,r23
2202b6d8:	288a703a 	and	r5,r5,r2
2202b6dc:	a827883a 	mov	r19,r21
2202b6e0:	003fea06 	br	2202b68c <__alt_data_end+0xfffec28c>
2202b6e4:	8440ea36 	bltu	r16,r17,2202ba90 <__divdf3+0x6e4>
2202b6e8:	8c00e826 	beq	r17,r16,2202ba8c <__divdf3+0x6e0>
2202b6ec:	a53fffc4 	addi	r20,r20,-1
2202b6f0:	882d883a 	mov	r22,r17
2202b6f4:	000d883a 	mov	r6,zero
2202b6f8:	a804d63a 	srli	r2,r21,24
2202b6fc:	8020923a 	slli	r16,r16,8
2202b700:	b009883a 	mov	r4,r22
2202b704:	d9800315 	stw	r6,12(sp)
2202b708:	1420b03a 	or	r16,r2,r16
2202b70c:	802ed43a 	srli	r23,r16,16
2202b710:	873fffcc 	andi	fp,r16,65535
2202b714:	a82a923a 	slli	r21,r21,8
2202b718:	b80b883a 	mov	r5,r23
2202b71c:	2020c680 	call	22020c68 <__udivsi3>
2202b720:	b009883a 	mov	r4,r22
2202b724:	b80b883a 	mov	r5,r23
2202b728:	1023883a 	mov	r17,r2
2202b72c:	2020c700 	call	22020c70 <__umodsi3>
2202b730:	1004943a 	slli	r2,r2,16
2202b734:	9808d43a 	srli	r4,r19,16
2202b738:	8f2d383a 	mul	r22,r17,fp
2202b73c:	d9800317 	ldw	r6,12(sp)
2202b740:	1106b03a 	or	r3,r2,r4
2202b744:	1d80062e 	bgeu	r3,r22,2202b760 <__divdf3+0x3b4>
2202b748:	1c07883a 	add	r3,r3,r16
2202b74c:	88bfffc4 	addi	r2,r17,-1
2202b750:	1c00dc36 	bltu	r3,r16,2202bac4 <__divdf3+0x718>
2202b754:	1d80db2e 	bgeu	r3,r22,2202bac4 <__divdf3+0x718>
2202b758:	8c7fff84 	addi	r17,r17,-2
2202b75c:	1c07883a 	add	r3,r3,r16
2202b760:	1dadc83a 	sub	r22,r3,r22
2202b764:	b009883a 	mov	r4,r22
2202b768:	b80b883a 	mov	r5,r23
2202b76c:	d9800315 	stw	r6,12(sp)
2202b770:	2020c680 	call	22020c68 <__udivsi3>
2202b774:	b009883a 	mov	r4,r22
2202b778:	b80b883a 	mov	r5,r23
2202b77c:	d8800015 	stw	r2,0(sp)
2202b780:	2020c700 	call	22020c70 <__umodsi3>
2202b784:	da400017 	ldw	r9,0(sp)
2202b788:	1004943a 	slli	r2,r2,16
2202b78c:	9cffffcc 	andi	r19,r19,65535
2202b790:	4f07383a 	mul	r3,r9,fp
2202b794:	14c8b03a 	or	r4,r2,r19
2202b798:	d9800317 	ldw	r6,12(sp)
2202b79c:	20c0062e 	bgeu	r4,r3,2202b7b8 <__divdf3+0x40c>
2202b7a0:	2409883a 	add	r4,r4,r16
2202b7a4:	48bfffc4 	addi	r2,r9,-1
2202b7a8:	2400c436 	bltu	r4,r16,2202babc <__divdf3+0x710>
2202b7ac:	20c0c32e 	bgeu	r4,r3,2202babc <__divdf3+0x710>
2202b7b0:	4a7fff84 	addi	r9,r9,-2
2202b7b4:	2409883a 	add	r4,r4,r16
2202b7b8:	8822943a 	slli	r17,r17,16
2202b7bc:	a80ed43a 	srli	r7,r21,16
2202b7c0:	aa3fffcc 	andi	r8,r21,65535
2202b7c4:	4c62b03a 	or	r17,r9,r17
2202b7c8:	8816d43a 	srli	r11,r17,16
2202b7cc:	897fffcc 	andi	r5,r17,65535
2202b7d0:	2a15383a 	mul	r10,r5,r8
2202b7d4:	5a19383a 	mul	r12,r11,r8
2202b7d8:	29cb383a 	mul	r5,r5,r7
2202b7dc:	5012d43a 	srli	r9,r10,16
2202b7e0:	20c5c83a 	sub	r2,r4,r3
2202b7e4:	614b883a 	add	r5,r12,r5
2202b7e8:	2a4b883a 	add	r5,r5,r9
2202b7ec:	59c7383a 	mul	r3,r11,r7
2202b7f0:	2b00022e 	bgeu	r5,r12,2202b7fc <__divdf3+0x450>
2202b7f4:	01000074 	movhi	r4,1
2202b7f8:	1907883a 	add	r3,r3,r4
2202b7fc:	2808d43a 	srli	r4,r5,16
2202b800:	280a943a 	slli	r5,r5,16
2202b804:	54ffffcc 	andi	r19,r10,65535
2202b808:	1907883a 	add	r3,r3,r4
2202b80c:	2ccb883a 	add	r5,r5,r19
2202b810:	10c09336 	bltu	r2,r3,2202ba60 <__divdf3+0x6b4>
2202b814:	10c0ad26 	beq	r2,r3,2202bacc <__divdf3+0x720>
2202b818:	10c7c83a 	sub	r3,r2,r3
2202b81c:	3167c83a 	sub	r19,r6,r5
2202b820:	34ed803a 	cmpltu	r22,r6,r19
2202b824:	1dadc83a 	sub	r22,r3,r22
2202b828:	b400b226 	beq	r22,r16,2202baf4 <__divdf3+0x748>
2202b82c:	b009883a 	mov	r4,r22
2202b830:	b80b883a 	mov	r5,r23
2202b834:	d9c00115 	stw	r7,4(sp)
2202b838:	da000215 	stw	r8,8(sp)
2202b83c:	2020c680 	call	22020c68 <__udivsi3>
2202b840:	b009883a 	mov	r4,r22
2202b844:	b80b883a 	mov	r5,r23
2202b848:	d8800315 	stw	r2,12(sp)
2202b84c:	2020c700 	call	22020c70 <__umodsi3>
2202b850:	d9800317 	ldw	r6,12(sp)
2202b854:	1004943a 	slli	r2,r2,16
2202b858:	9808d43a 	srli	r4,r19,16
2202b85c:	372d383a 	mul	r22,r6,fp
2202b860:	d9c00117 	ldw	r7,4(sp)
2202b864:	1106b03a 	or	r3,r2,r4
2202b868:	da000217 	ldw	r8,8(sp)
2202b86c:	1d80062e 	bgeu	r3,r22,2202b888 <__divdf3+0x4dc>
2202b870:	1c07883a 	add	r3,r3,r16
2202b874:	30bfffc4 	addi	r2,r6,-1
2202b878:	1c00a036 	bltu	r3,r16,2202bafc <__divdf3+0x750>
2202b87c:	1d809f2e 	bgeu	r3,r22,2202bafc <__divdf3+0x750>
2202b880:	31bfff84 	addi	r6,r6,-2
2202b884:	1c07883a 	add	r3,r3,r16
2202b888:	1dadc83a 	sub	r22,r3,r22
2202b88c:	b009883a 	mov	r4,r22
2202b890:	b80b883a 	mov	r5,r23
2202b894:	d9800315 	stw	r6,12(sp)
2202b898:	d9c00115 	stw	r7,4(sp)
2202b89c:	da000215 	stw	r8,8(sp)
2202b8a0:	2020c680 	call	22020c68 <__udivsi3>
2202b8a4:	b009883a 	mov	r4,r22
2202b8a8:	b80b883a 	mov	r5,r23
2202b8ac:	d8800015 	stw	r2,0(sp)
2202b8b0:	2020c700 	call	22020c70 <__umodsi3>
2202b8b4:	da400017 	ldw	r9,0(sp)
2202b8b8:	1004943a 	slli	r2,r2,16
2202b8bc:	993fffcc 	andi	r4,r19,65535
2202b8c0:	4f39383a 	mul	fp,r9,fp
2202b8c4:	1106b03a 	or	r3,r2,r4
2202b8c8:	d9800317 	ldw	r6,12(sp)
2202b8cc:	d9c00117 	ldw	r7,4(sp)
2202b8d0:	da000217 	ldw	r8,8(sp)
2202b8d4:	1f00062e 	bgeu	r3,fp,2202b8f0 <__divdf3+0x544>
2202b8d8:	1c07883a 	add	r3,r3,r16
2202b8dc:	48bfffc4 	addi	r2,r9,-1
2202b8e0:	1c008836 	bltu	r3,r16,2202bb04 <__divdf3+0x758>
2202b8e4:	1f00872e 	bgeu	r3,fp,2202bb04 <__divdf3+0x758>
2202b8e8:	4a7fff84 	addi	r9,r9,-2
2202b8ec:	1c07883a 	add	r3,r3,r16
2202b8f0:	3008943a 	slli	r4,r6,16
2202b8f4:	1f07c83a 	sub	r3,r3,fp
2202b8f8:	4926b03a 	or	r19,r9,r4
2202b8fc:	993fffcc 	andi	r4,r19,65535
2202b900:	980cd43a 	srli	r6,r19,16
2202b904:	220b383a 	mul	r5,r4,r8
2202b908:	21c5383a 	mul	r2,r4,r7
2202b90c:	3211383a 	mul	r8,r6,r8
2202b910:	2808d43a 	srli	r4,r5,16
2202b914:	31cf383a 	mul	r7,r6,r7
2202b918:	4085883a 	add	r2,r8,r2
2202b91c:	1105883a 	add	r2,r2,r4
2202b920:	1200022e 	bgeu	r2,r8,2202b92c <__divdf3+0x580>
2202b924:	01000074 	movhi	r4,1
2202b928:	390f883a 	add	r7,r7,r4
2202b92c:	1008d43a 	srli	r4,r2,16
2202b930:	1004943a 	slli	r2,r2,16
2202b934:	297fffcc 	andi	r5,r5,65535
2202b938:	390f883a 	add	r7,r7,r4
2202b93c:	1145883a 	add	r2,r2,r5
2202b940:	19c06536 	bltu	r3,r7,2202bad8 <__divdf3+0x72c>
2202b944:	19c09f26 	beq	r3,r7,2202bbc4 <__divdf3+0x818>
2202b948:	9cc00054 	ori	r19,r19,1
2202b94c:	a100ffc4 	addi	r4,r20,1023
2202b950:	013f500e 	bge	zero,r4,2202b694 <__alt_data_end+0xfffec294>
2202b954:	988001cc 	andi	r2,r19,7
2202b958:	10000726 	beq	r2,zero,2202b978 <__divdf3+0x5cc>
2202b95c:	98c003cc 	andi	r3,r19,15
2202b960:	00800104 	movi	r2,4
2202b964:	18800426 	beq	r3,r2,2202b978 <__divdf3+0x5cc>
2202b968:	9885883a 	add	r2,r19,r2
2202b96c:	14e1803a 	cmpltu	r16,r2,r19
2202b970:	8c23883a 	add	r17,r17,r16
2202b974:	1027883a 	mov	r19,r2
2202b978:	8880402c 	andhi	r2,r17,256
2202b97c:	10000426 	beq	r2,zero,2202b990 <__divdf3+0x5e4>
2202b980:	00bfc034 	movhi	r2,65280
2202b984:	10bfffc4 	addi	r2,r2,-1
2202b988:	a1010004 	addi	r4,r20,1024
2202b98c:	88a2703a 	and	r17,r17,r2
2202b990:	0081ff84 	movi	r2,2046
2202b994:	113edf16 	blt	r2,r4,2202b514 <__alt_data_end+0xfffec114>
2202b998:	9826d0fa 	srli	r19,r19,3
2202b99c:	8804977a 	slli	r2,r17,29
2202b9a0:	8820927a 	slli	r16,r17,9
2202b9a4:	2101ffcc 	andi	r4,r4,2047
2202b9a8:	14e6b03a 	or	r19,r2,r19
2202b9ac:	800ad33a 	srli	r5,r16,12
2202b9b0:	9180004c 	andi	r6,r18,1
2202b9b4:	003edb06 	br	2202b524 <__alt_data_end+0xfffec124>
2202b9b8:	008000c4 	movi	r2,3
2202b9bc:	4080a826 	beq	r8,r2,2202bc60 <__divdf3+0x8b4>
2202b9c0:	00800044 	movi	r2,1
2202b9c4:	4080551e 	bne	r8,r2,2202bb1c <__divdf3+0x770>
2202b9c8:	e00d883a 	mov	r6,fp
2202b9cc:	0009883a 	mov	r4,zero
2202b9d0:	000b883a 	mov	r5,zero
2202b9d4:	0027883a 	mov	r19,zero
2202b9d8:	003ed206 	br	2202b524 <__alt_data_end+0xfffec124>
2202b9dc:	00800434 	movhi	r2,16
2202b9e0:	89400234 	orhi	r5,r17,8
2202b9e4:	10bfffc4 	addi	r2,r2,-1
2202b9e8:	b00d883a 	mov	r6,r22
2202b9ec:	288a703a 	and	r5,r5,r2
2202b9f0:	003f2606 	br	2202b68c <__alt_data_end+0xfffec28c>
2202b9f4:	d9800315 	stw	r6,12(sp)
2202b9f8:	d9c00115 	stw	r7,4(sp)
2202b9fc:	202d0ac0 	call	2202d0ac <__clzsi2>
2202ba00:	10c00804 	addi	r3,r2,32
2202ba04:	010009c4 	movi	r4,39
2202ba08:	d9800317 	ldw	r6,12(sp)
2202ba0c:	d9c00117 	ldw	r7,4(sp)
2202ba10:	20fee30e 	bge	r4,r3,2202b5a0 <__alt_data_end+0xfffec1a0>
2202ba14:	117ffe04 	addi	r5,r2,-8
2202ba18:	9162983a 	sll	r17,r18,r5
2202ba1c:	0027883a 	mov	r19,zero
2202ba20:	003ee606 	br	2202b5bc <__alt_data_end+0xfffec1bc>
2202ba24:	3009883a 	mov	r4,r6
2202ba28:	d9800315 	stw	r6,12(sp)
2202ba2c:	da000215 	stw	r8,8(sp)
2202ba30:	da400015 	stw	r9,0(sp)
2202ba34:	202d0ac0 	call	2202d0ac <__clzsi2>
2202ba38:	10c00804 	addi	r3,r2,32
2202ba3c:	010009c4 	movi	r4,39
2202ba40:	d9800317 	ldw	r6,12(sp)
2202ba44:	da000217 	ldw	r8,8(sp)
2202ba48:	da400017 	ldw	r9,0(sp)
2202ba4c:	20fef20e 	bge	r4,r3,2202b618 <__alt_data_end+0xfffec218>
2202ba50:	10bffe04 	addi	r2,r2,-8
2202ba54:	a8a0983a 	sll	r16,r21,r2
2202ba58:	002b883a 	mov	r21,zero
2202ba5c:	003ef506 	br	2202b634 <__alt_data_end+0xfffec234>
2202ba60:	354d883a 	add	r6,r6,r21
2202ba64:	3549803a 	cmpltu	r4,r6,r21
2202ba68:	2409883a 	add	r4,r4,r16
2202ba6c:	2089883a 	add	r4,r4,r2
2202ba70:	88bfffc4 	addi	r2,r17,-1
2202ba74:	81000c2e 	bgeu	r16,r4,2202baa8 <__divdf3+0x6fc>
2202ba78:	20c04436 	bltu	r4,r3,2202bb8c <__divdf3+0x7e0>
2202ba7c:	19006f26 	beq	r3,r4,2202bc3c <__divdf3+0x890>
2202ba80:	20c7c83a 	sub	r3,r4,r3
2202ba84:	1023883a 	mov	r17,r2
2202ba88:	003f6406 	br	2202b81c <__alt_data_end+0xfffec41c>
2202ba8c:	9d7f1736 	bltu	r19,r21,2202b6ec <__alt_data_end+0xfffec2ec>
2202ba90:	9806d07a 	srli	r3,r19,1
2202ba94:	880497fa 	slli	r2,r17,31
2202ba98:	980c97fa 	slli	r6,r19,31
2202ba9c:	882cd07a 	srli	r22,r17,1
2202baa0:	18a6b03a 	or	r19,r3,r2
2202baa4:	003f1406 	br	2202b6f8 <__alt_data_end+0xfffec2f8>
2202baa8:	243ff51e 	bne	r4,r16,2202ba80 <__alt_data_end+0xfffec680>
2202baac:	357ff22e 	bgeu	r6,r21,2202ba78 <__alt_data_end+0xfffec678>
2202bab0:	80c7c83a 	sub	r3,r16,r3
2202bab4:	1023883a 	mov	r17,r2
2202bab8:	003f5806 	br	2202b81c <__alt_data_end+0xfffec41c>
2202babc:	1013883a 	mov	r9,r2
2202bac0:	003f3d06 	br	2202b7b8 <__alt_data_end+0xfffec3b8>
2202bac4:	1023883a 	mov	r17,r2
2202bac8:	003f2506 	br	2202b760 <__alt_data_end+0xfffec360>
2202bacc:	317fe436 	bltu	r6,r5,2202ba60 <__alt_data_end+0xfffec660>
2202bad0:	0007883a 	mov	r3,zero
2202bad4:	003f5106 	br	2202b81c <__alt_data_end+0xfffec41c>
2202bad8:	1c07883a 	add	r3,r3,r16
2202badc:	993fffc4 	addi	r4,r19,-1
2202bae0:	1c000a2e 	bgeu	r3,r16,2202bb0c <__divdf3+0x760>
2202bae4:	2027883a 	mov	r19,r4
2202bae8:	19ff971e 	bne	r3,r7,2202b948 <__alt_data_end+0xfffec548>
2202baec:	a8bf961e 	bne	r21,r2,2202b948 <__alt_data_end+0xfffec548>
2202baf0:	003f9606 	br	2202b94c <__alt_data_end+0xfffec54c>
2202baf4:	04ffffc4 	movi	r19,-1
2202baf8:	003f9406 	br	2202b94c <__alt_data_end+0xfffec54c>
2202bafc:	100d883a 	mov	r6,r2
2202bb00:	003f6106 	br	2202b888 <__alt_data_end+0xfffec488>
2202bb04:	1013883a 	mov	r9,r2
2202bb08:	003f7906 	br	2202b8f0 <__alt_data_end+0xfffec4f0>
2202bb0c:	19c02636 	bltu	r3,r7,2202bba8 <__divdf3+0x7fc>
2202bb10:	38c04d26 	beq	r7,r3,2202bc48 <__divdf3+0x89c>
2202bb14:	2027883a 	mov	r19,r4
2202bb18:	003f8b06 	br	2202b948 <__alt_data_end+0xfffec548>
2202bb1c:	e025883a 	mov	r18,fp
2202bb20:	003f8a06 	br	2202b94c <__alt_data_end+0xfffec54c>
2202bb24:	008007c4 	movi	r2,31
2202bb28:	14002a16 	blt	r2,r16,2202bbd4 <__divdf3+0x828>
2202bb2c:	a5010784 	addi	r20,r20,1054
2202bb30:	8d04983a 	sll	r2,r17,r20
2202bb34:	9c06d83a 	srl	r3,r19,r16
2202bb38:	9d28983a 	sll	r20,r19,r20
2202bb3c:	8c20d83a 	srl	r16,r17,r16
2202bb40:	1886b03a 	or	r3,r3,r2
2202bb44:	a004c03a 	cmpne	r2,r20,zero
2202bb48:	1884b03a 	or	r2,r3,r2
2202bb4c:	10c001cc 	andi	r3,r2,7
2202bb50:	18000726 	beq	r3,zero,2202bb70 <__divdf3+0x7c4>
2202bb54:	110003cc 	andi	r4,r2,15
2202bb58:	00c00104 	movi	r3,4
2202bb5c:	20c00426 	beq	r4,r3,2202bb70 <__divdf3+0x7c4>
2202bb60:	10c00104 	addi	r3,r2,4
2202bb64:	1885803a 	cmpltu	r2,r3,r2
2202bb68:	80a1883a 	add	r16,r16,r2
2202bb6c:	1805883a 	mov	r2,r3
2202bb70:	80c0202c 	andhi	r3,r16,128
2202bb74:	18002d26 	beq	r3,zero,2202bc2c <__divdf3+0x880>
2202bb78:	9180004c 	andi	r6,r18,1
2202bb7c:	01000044 	movi	r4,1
2202bb80:	000b883a 	mov	r5,zero
2202bb84:	0027883a 	mov	r19,zero
2202bb88:	003e6606 	br	2202b524 <__alt_data_end+0xfffec124>
2202bb8c:	354d883a 	add	r6,r6,r21
2202bb90:	356d803a 	cmpltu	r22,r6,r21
2202bb94:	b42d883a 	add	r22,r22,r16
2202bb98:	b12d883a 	add	r22,r22,r4
2202bb9c:	8c7fff84 	addi	r17,r17,-2
2202bba0:	b0c7c83a 	sub	r3,r22,r3
2202bba4:	003f1d06 	br	2202b81c <__alt_data_end+0xfffec41c>
2202bba8:	ad4b883a 	add	r5,r21,r21
2202bbac:	2d6b803a 	cmpltu	r21,r5,r21
2202bbb0:	ac2b883a 	add	r21,r21,r16
2202bbb4:	1d47883a 	add	r3,r3,r21
2202bbb8:	993fff84 	addi	r4,r19,-2
2202bbbc:	282b883a 	mov	r21,r5
2202bbc0:	003fc806 	br	2202bae4 <__alt_data_end+0xfffec6e4>
2202bbc4:	103fc41e 	bne	r2,zero,2202bad8 <__alt_data_end+0xfffec6d8>
2202bbc8:	002b883a 	mov	r21,zero
2202bbcc:	a8bf5e1e 	bne	r21,r2,2202b948 <__alt_data_end+0xfffec548>
2202bbd0:	003f5e06 	br	2202b94c <__alt_data_end+0xfffec54c>
2202bbd4:	00bef884 	movi	r2,-1054
2202bbd8:	1505c83a 	sub	r2,r2,r20
2202bbdc:	00c00804 	movi	r3,32
2202bbe0:	8884d83a 	srl	r2,r17,r2
2202bbe4:	80c01c26 	beq	r16,r3,2202bc58 <__divdf3+0x8ac>
2202bbe8:	a0c10f84 	addi	r3,r20,1086
2202bbec:	88c6983a 	sll	r3,r17,r3
2202bbf0:	1cc6b03a 	or	r3,r3,r19
2202bbf4:	1806c03a 	cmpne	r3,r3,zero
2202bbf8:	1884b03a 	or	r2,r3,r2
2202bbfc:	140001cc 	andi	r16,r2,7
2202bc00:	8000061e 	bne	r16,zero,2202bc1c <__divdf3+0x870>
2202bc04:	000b883a 	mov	r5,zero
2202bc08:	1004d0fa 	srli	r2,r2,3
2202bc0c:	9180004c 	andi	r6,r18,1
2202bc10:	0009883a 	mov	r4,zero
2202bc14:	1426b03a 	or	r19,r2,r16
2202bc18:	003e4206 	br	2202b524 <__alt_data_end+0xfffec124>
2202bc1c:	110003cc 	andi	r4,r2,15
2202bc20:	00c00104 	movi	r3,4
2202bc24:	0021883a 	mov	r16,zero
2202bc28:	20ffcd1e 	bne	r4,r3,2202bb60 <__alt_data_end+0xfffec760>
2202bc2c:	800a927a 	slli	r5,r16,9
2202bc30:	8020977a 	slli	r16,r16,29
2202bc34:	280ad33a 	srli	r5,r5,12
2202bc38:	003ff306 	br	2202bc08 <__alt_data_end+0xfffec808>
2202bc3c:	317fd336 	bltu	r6,r5,2202bb8c <__alt_data_end+0xfffec78c>
2202bc40:	1023883a 	mov	r17,r2
2202bc44:	003fa206 	br	2202bad0 <__alt_data_end+0xfffec6d0>
2202bc48:	a8bfd736 	bltu	r21,r2,2202bba8 <__alt_data_end+0xfffec7a8>
2202bc4c:	2027883a 	mov	r19,r4
2202bc50:	a8bf3d1e 	bne	r21,r2,2202b948 <__alt_data_end+0xfffec548>
2202bc54:	003f3d06 	br	2202b94c <__alt_data_end+0xfffec54c>
2202bc58:	0007883a 	mov	r3,zero
2202bc5c:	003fe406 	br	2202bbf0 <__alt_data_end+0xfffec7f0>
2202bc60:	00800434 	movhi	r2,16
2202bc64:	89400234 	orhi	r5,r17,8
2202bc68:	10bfffc4 	addi	r2,r2,-1
2202bc6c:	e00d883a 	mov	r6,fp
2202bc70:	288a703a 	and	r5,r5,r2
2202bc74:	003e8506 	br	2202b68c <__alt_data_end+0xfffec28c>

2202bc78 <__eqdf2>:
2202bc78:	2804d53a 	srli	r2,r5,20
2202bc7c:	3806d53a 	srli	r3,r7,20
2202bc80:	02000434 	movhi	r8,16
2202bc84:	423fffc4 	addi	r8,r8,-1
2202bc88:	1081ffcc 	andi	r2,r2,2047
2202bc8c:	0241ffc4 	movi	r9,2047
2202bc90:	2a14703a 	and	r10,r5,r8
2202bc94:	18c1ffcc 	andi	r3,r3,2047
2202bc98:	3a10703a 	and	r8,r7,r8
2202bc9c:	280ad7fa 	srli	r5,r5,31
2202bca0:	380ed7fa 	srli	r7,r7,31
2202bca4:	12400f26 	beq	r2,r9,2202bce4 <__eqdf2+0x6c>
2202bca8:	0241ffc4 	movi	r9,2047
2202bcac:	1a400326 	beq	r3,r9,2202bcbc <__eqdf2+0x44>
2202bcb0:	10c00526 	beq	r2,r3,2202bcc8 <__eqdf2+0x50>
2202bcb4:	00800044 	movi	r2,1
2202bcb8:	f800283a 	ret
2202bcbc:	4192b03a 	or	r9,r8,r6
2202bcc0:	483ffc1e 	bne	r9,zero,2202bcb4 <__alt_data_end+0xfffec8b4>
2202bcc4:	10fffb1e 	bne	r2,r3,2202bcb4 <__alt_data_end+0xfffec8b4>
2202bcc8:	523ffa1e 	bne	r10,r8,2202bcb4 <__alt_data_end+0xfffec8b4>
2202bccc:	21bff91e 	bne	r4,r6,2202bcb4 <__alt_data_end+0xfffec8b4>
2202bcd0:	29c00826 	beq	r5,r7,2202bcf4 <__eqdf2+0x7c>
2202bcd4:	103ff71e 	bne	r2,zero,2202bcb4 <__alt_data_end+0xfffec8b4>
2202bcd8:	5104b03a 	or	r2,r10,r4
2202bcdc:	1004c03a 	cmpne	r2,r2,zero
2202bce0:	f800283a 	ret
2202bce4:	5112b03a 	or	r9,r10,r4
2202bce8:	483fef26 	beq	r9,zero,2202bca8 <__alt_data_end+0xfffec8a8>
2202bcec:	00800044 	movi	r2,1
2202bcf0:	f800283a 	ret
2202bcf4:	0005883a 	mov	r2,zero
2202bcf8:	f800283a 	ret

2202bcfc <__gedf2>:
2202bcfc:	2804d53a 	srli	r2,r5,20
2202bd00:	3806d53a 	srli	r3,r7,20
2202bd04:	02000434 	movhi	r8,16
2202bd08:	423fffc4 	addi	r8,r8,-1
2202bd0c:	0241ffc4 	movi	r9,2047
2202bd10:	1081ffcc 	andi	r2,r2,2047
2202bd14:	2a14703a 	and	r10,r5,r8
2202bd18:	1a46703a 	and	r3,r3,r9
2202bd1c:	3a10703a 	and	r8,r7,r8
2202bd20:	280ad7fa 	srli	r5,r5,31
2202bd24:	380ed7fa 	srli	r7,r7,31
2202bd28:	12400b26 	beq	r2,r9,2202bd58 <__gedf2+0x5c>
2202bd2c:	1a401626 	beq	r3,r9,2202bd88 <__gedf2+0x8c>
2202bd30:	10000c1e 	bne	r2,zero,2202bd64 <__gedf2+0x68>
2202bd34:	5112b03a 	or	r9,r10,r4
2202bd38:	4813003a 	cmpeq	r9,r9,zero
2202bd3c:	4817883a 	mov	r11,r9
2202bd40:	18000c1e 	bne	r3,zero,2202bd74 <__gedf2+0x78>
2202bd44:	4198b03a 	or	r12,r8,r6
2202bd48:	60000a1e 	bne	r12,zero,2202bd74 <__gedf2+0x78>
2202bd4c:	48001326 	beq	r9,zero,2202bd9c <__gedf2+0xa0>
2202bd50:	0005883a 	mov	r2,zero
2202bd54:	f800283a 	ret
2202bd58:	5112b03a 	or	r9,r10,r4
2202bd5c:	4800191e 	bne	r9,zero,2202bdc4 <__gedf2+0xc8>
2202bd60:	18800926 	beq	r3,r2,2202bd88 <__gedf2+0x8c>
2202bd64:	18000b1e 	bne	r3,zero,2202bd94 <__gedf2+0x98>
2202bd68:	4192b03a 	or	r9,r8,r6
2202bd6c:	0017883a 	mov	r11,zero
2202bd70:	48000a26 	beq	r9,zero,2202bd9c <__gedf2+0xa0>
2202bd74:	39c03fcc 	andi	r7,r7,255
2202bd78:	58000726 	beq	r11,zero,2202bd98 <__gedf2+0x9c>
2202bd7c:	3800081e 	bne	r7,zero,2202bda0 <__gedf2+0xa4>
2202bd80:	00bfffc4 	movi	r2,-1
2202bd84:	f800283a 	ret
2202bd88:	4192b03a 	or	r9,r8,r6
2202bd8c:	48000d1e 	bne	r9,zero,2202bdc4 <__gedf2+0xc8>
2202bd90:	103fe826 	beq	r2,zero,2202bd34 <__alt_data_end+0xfffec934>
2202bd94:	39c03fcc 	andi	r7,r7,255
2202bd98:	29c00326 	beq	r5,r7,2202bda8 <__gedf2+0xac>
2202bd9c:	283ff81e 	bne	r5,zero,2202bd80 <__alt_data_end+0xfffec980>
2202bda0:	00800044 	movi	r2,1
2202bda4:	f800283a 	ret
2202bda8:	18bffc16 	blt	r3,r2,2202bd9c <__alt_data_end+0xfffec99c>
2202bdac:	10c00316 	blt	r2,r3,2202bdbc <__gedf2+0xc0>
2202bdb0:	42bffa36 	bltu	r8,r10,2202bd9c <__alt_data_end+0xfffec99c>
2202bdb4:	52000526 	beq	r10,r8,2202bdcc <__gedf2+0xd0>
2202bdb8:	523fe52e 	bgeu	r10,r8,2202bd50 <__alt_data_end+0xfffec950>
2202bdbc:	283ff026 	beq	r5,zero,2202bd80 <__alt_data_end+0xfffec980>
2202bdc0:	003ff706 	br	2202bda0 <__alt_data_end+0xfffec9a0>
2202bdc4:	00bfff84 	movi	r2,-2
2202bdc8:	f800283a 	ret
2202bdcc:	313ff336 	bltu	r6,r4,2202bd9c <__alt_data_end+0xfffec99c>
2202bdd0:	21bfdf2e 	bgeu	r4,r6,2202bd50 <__alt_data_end+0xfffec950>
2202bdd4:	283fea26 	beq	r5,zero,2202bd80 <__alt_data_end+0xfffec980>
2202bdd8:	003ff106 	br	2202bda0 <__alt_data_end+0xfffec9a0>

2202bddc <__ledf2>:
2202bddc:	2804d53a 	srli	r2,r5,20
2202bde0:	3810d53a 	srli	r8,r7,20
2202bde4:	00c00434 	movhi	r3,16
2202bde8:	18ffffc4 	addi	r3,r3,-1
2202bdec:	0241ffc4 	movi	r9,2047
2202bdf0:	1081ffcc 	andi	r2,r2,2047
2202bdf4:	28d4703a 	and	r10,r5,r3
2202bdf8:	4250703a 	and	r8,r8,r9
2202bdfc:	38c6703a 	and	r3,r7,r3
2202be00:	280ad7fa 	srli	r5,r5,31
2202be04:	380ed7fa 	srli	r7,r7,31
2202be08:	12400b26 	beq	r2,r9,2202be38 <__ledf2+0x5c>
2202be0c:	42401926 	beq	r8,r9,2202be74 <__ledf2+0x98>
2202be10:	10000c1e 	bne	r2,zero,2202be44 <__ledf2+0x68>
2202be14:	5112b03a 	or	r9,r10,r4
2202be18:	4813003a 	cmpeq	r9,r9,zero
2202be1c:	4817883a 	mov	r11,r9
2202be20:	40000f26 	beq	r8,zero,2202be60 <__ledf2+0x84>
2202be24:	39c03fcc 	andi	r7,r7,255
2202be28:	58001826 	beq	r11,zero,2202be8c <__ledf2+0xb0>
2202be2c:	38000a1e 	bne	r7,zero,2202be58 <__ledf2+0x7c>
2202be30:	00bfffc4 	movi	r2,-1
2202be34:	f800283a 	ret
2202be38:	5112b03a 	or	r9,r10,r4
2202be3c:	48000f1e 	bne	r9,zero,2202be7c <__ledf2+0xa0>
2202be40:	40800c26 	beq	r8,r2,2202be74 <__ledf2+0x98>
2202be44:	4000101e 	bne	r8,zero,2202be88 <__ledf2+0xac>
2202be48:	1992b03a 	or	r9,r3,r6
2202be4c:	0017883a 	mov	r11,zero
2202be50:	483ff41e 	bne	r9,zero,2202be24 <__alt_data_end+0xfffeca24>
2202be54:	283ff61e 	bne	r5,zero,2202be30 <__alt_data_end+0xfffeca30>
2202be58:	00800044 	movi	r2,1
2202be5c:	f800283a 	ret
2202be60:	1998b03a 	or	r12,r3,r6
2202be64:	603fef1e 	bne	r12,zero,2202be24 <__alt_data_end+0xfffeca24>
2202be68:	483ffa26 	beq	r9,zero,2202be54 <__alt_data_end+0xfffeca54>
2202be6c:	0005883a 	mov	r2,zero
2202be70:	f800283a 	ret
2202be74:	1992b03a 	or	r9,r3,r6
2202be78:	48000226 	beq	r9,zero,2202be84 <__ledf2+0xa8>
2202be7c:	00800084 	movi	r2,2
2202be80:	f800283a 	ret
2202be84:	103fe326 	beq	r2,zero,2202be14 <__alt_data_end+0xfffeca14>
2202be88:	39c03fcc 	andi	r7,r7,255
2202be8c:	29fff11e 	bne	r5,r7,2202be54 <__alt_data_end+0xfffeca54>
2202be90:	40bff016 	blt	r8,r2,2202be54 <__alt_data_end+0xfffeca54>
2202be94:	12000316 	blt	r2,r8,2202bea4 <__ledf2+0xc8>
2202be98:	1abfee36 	bltu	r3,r10,2202be54 <__alt_data_end+0xfffeca54>
2202be9c:	50c00326 	beq	r10,r3,2202beac <__ledf2+0xd0>
2202bea0:	50fff22e 	bgeu	r10,r3,2202be6c <__alt_data_end+0xfffeca6c>
2202bea4:	283fe226 	beq	r5,zero,2202be30 <__alt_data_end+0xfffeca30>
2202bea8:	003feb06 	br	2202be58 <__alt_data_end+0xfffeca58>
2202beac:	313fe936 	bltu	r6,r4,2202be54 <__alt_data_end+0xfffeca54>
2202beb0:	21bfee2e 	bgeu	r4,r6,2202be6c <__alt_data_end+0xfffeca6c>
2202beb4:	283fde26 	beq	r5,zero,2202be30 <__alt_data_end+0xfffeca30>
2202beb8:	003fe706 	br	2202be58 <__alt_data_end+0xfffeca58>

2202bebc <__muldf3>:
2202bebc:	defff204 	addi	sp,sp,-56
2202bec0:	2804d53a 	srli	r2,r5,20
2202bec4:	dd800a15 	stw	r22,40(sp)
2202bec8:	282cd7fa 	srli	r22,r5,31
2202becc:	dc000415 	stw	r16,16(sp)
2202bed0:	04000434 	movhi	r16,16
2202bed4:	df000c15 	stw	fp,48(sp)
2202bed8:	dd000815 	stw	r20,32(sp)
2202bedc:	dcc00715 	stw	r19,28(sp)
2202bee0:	dc800615 	stw	r18,24(sp)
2202bee4:	dc400515 	stw	r17,20(sp)
2202bee8:	843fffc4 	addi	r16,r16,-1
2202beec:	dfc00d15 	stw	ra,52(sp)
2202bef0:	ddc00b15 	stw	r23,44(sp)
2202bef4:	dd400915 	stw	r21,36(sp)
2202bef8:	1501ffcc 	andi	r20,r2,2047
2202befc:	2023883a 	mov	r17,r4
2202bf00:	2025883a 	mov	r18,r4
2202bf04:	2c20703a 	and	r16,r5,r16
2202bf08:	b027883a 	mov	r19,r22
2202bf0c:	b7003fcc 	andi	fp,r22,255
2202bf10:	a0005926 	beq	r20,zero,2202c078 <__muldf3+0x1bc>
2202bf14:	0081ffc4 	movi	r2,2047
2202bf18:	a0803426 	beq	r20,r2,2202bfec <__muldf3+0x130>
2202bf1c:	84000434 	orhi	r16,r16,16
2202bf20:	2004d77a 	srli	r2,r4,29
2202bf24:	802090fa 	slli	r16,r16,3
2202bf28:	202490fa 	slli	r18,r4,3
2202bf2c:	a53f0044 	addi	r20,r20,-1023
2202bf30:	80a0b03a 	or	r16,r16,r2
2202bf34:	002b883a 	mov	r21,zero
2202bf38:	0015883a 	mov	r10,zero
2202bf3c:	3812d53a 	srli	r9,r7,20
2202bf40:	3806d7fa 	srli	r3,r7,31
2202bf44:	02000434 	movhi	r8,16
2202bf48:	423fffc4 	addi	r8,r8,-1
2202bf4c:	4941ffcc 	andi	r5,r9,2047
2202bf50:	302f883a 	mov	r23,r6
2202bf54:	3a22703a 	and	r17,r7,r8
2202bf58:	1ac03fcc 	andi	r11,r3,255
2202bf5c:	28006226 	beq	r5,zero,2202c0e8 <__muldf3+0x22c>
2202bf60:	0081ffc4 	movi	r2,2047
2202bf64:	28805a26 	beq	r5,r2,2202c0d0 <__muldf3+0x214>
2202bf68:	8a000434 	orhi	r8,r17,16
2202bf6c:	3004d77a 	srli	r2,r6,29
2202bf70:	401090fa 	slli	r8,r8,3
2202bf74:	302e90fa 	slli	r23,r6,3
2202bf78:	297f0044 	addi	r5,r5,-1023
2202bf7c:	40a2b03a 	or	r17,r8,r2
2202bf80:	0013883a 	mov	r9,zero
2202bf84:	4d4cb03a 	or	r6,r9,r21
2202bf88:	300c90ba 	slli	r6,r6,2
2202bf8c:	020880f4 	movhi	r8,8707
2202bf90:	422feb04 	addi	r8,r8,-16468
2202bf94:	320d883a 	add	r6,r6,r8
2202bf98:	31800017 	ldw	r6,0(r6)
2202bf9c:	a14b883a 	add	r5,r20,r5
2202bfa0:	1dacf03a 	xor	r22,r3,r22
2202bfa4:	2b000044 	addi	r12,r5,1
2202bfa8:	3000683a 	jmp	r6
2202bfac:	2202c1e8 	cmpgeui	r8,r4,2823
2202bfb0:	2202c1d4 	ori	r8,r4,2823
2202bfb4:	2202c1d4 	ori	r8,r4,2823
2202bfb8:	2202c1c0 	call	22202c1c <__alt_data_end+0x1c381c>
2202bfbc:	2202c008 	cmpgei	r8,r4,2816
2202bfc0:	2202c008 	cmpgei	r8,r4,2816
2202bfc4:	2202c1a8 	cmpgeui	r8,r4,2822
2202bfc8:	2202c1c0 	call	22202c1c <__alt_data_end+0x1c381c>
2202bfcc:	2202c008 	cmpgei	r8,r4,2816
2202bfd0:	2202c1a8 	cmpgeui	r8,r4,2822
2202bfd4:	2202c008 	cmpgei	r8,r4,2816
2202bfd8:	2202c1c0 	call	22202c1c <__alt_data_end+0x1c381c>
2202bfdc:	2202c00c 	andi	r8,r4,2816
2202bfe0:	2202c00c 	andi	r8,r4,2816
2202bfe4:	2202c00c 	andi	r8,r4,2816
2202bfe8:	2202c3e4 	muli	r8,r4,2831
2202bfec:	8104b03a 	or	r2,r16,r4
2202bff0:	10006a1e 	bne	r2,zero,2202c19c <__muldf3+0x2e0>
2202bff4:	05400204 	movi	r21,8
2202bff8:	0021883a 	mov	r16,zero
2202bffc:	0025883a 	mov	r18,zero
2202c000:	02800084 	movi	r10,2
2202c004:	003fcd06 	br	2202bf3c <__alt_data_end+0xfffecb3c>
2202c008:	b039883a 	mov	fp,r22
2202c00c:	00800084 	movi	r2,2
2202c010:	50804e1e 	bne	r10,r2,2202c14c <__muldf3+0x290>
2202c014:	e4c0004c 	andi	r19,fp,1
2202c018:	0101ffc4 	movi	r4,2047
2202c01c:	0021883a 	mov	r16,zero
2202c020:	0025883a 	mov	r18,zero
2202c024:	2008953a 	slli	r4,r4,20
2202c028:	98c03fcc 	andi	r3,r19,255
2202c02c:	01400434 	movhi	r5,16
2202c030:	297fffc4 	addi	r5,r5,-1
2202c034:	180697fa 	slli	r3,r3,31
2202c038:	8160703a 	and	r16,r16,r5
2202c03c:	8120b03a 	or	r16,r16,r4
2202c040:	80c6b03a 	or	r3,r16,r3
2202c044:	9005883a 	mov	r2,r18
2202c048:	dfc00d17 	ldw	ra,52(sp)
2202c04c:	df000c17 	ldw	fp,48(sp)
2202c050:	ddc00b17 	ldw	r23,44(sp)
2202c054:	dd800a17 	ldw	r22,40(sp)
2202c058:	dd400917 	ldw	r21,36(sp)
2202c05c:	dd000817 	ldw	r20,32(sp)
2202c060:	dcc00717 	ldw	r19,28(sp)
2202c064:	dc800617 	ldw	r18,24(sp)
2202c068:	dc400517 	ldw	r17,20(sp)
2202c06c:	dc000417 	ldw	r16,16(sp)
2202c070:	dec00e04 	addi	sp,sp,56
2202c074:	f800283a 	ret
2202c078:	8104b03a 	or	r2,r16,r4
2202c07c:	10004226 	beq	r2,zero,2202c188 <__muldf3+0x2cc>
2202c080:	8000f926 	beq	r16,zero,2202c468 <__muldf3+0x5ac>
2202c084:	8009883a 	mov	r4,r16
2202c088:	d9800315 	stw	r6,12(sp)
2202c08c:	d9c00015 	stw	r7,0(sp)
2202c090:	202d0ac0 	call	2202d0ac <__clzsi2>
2202c094:	d9800317 	ldw	r6,12(sp)
2202c098:	d9c00017 	ldw	r7,0(sp)
2202c09c:	1007883a 	mov	r3,r2
2202c0a0:	01000a04 	movi	r4,40
2202c0a4:	18bffe04 	addi	r2,r3,-8
2202c0a8:	20c9c83a 	sub	r4,r4,r3
2202c0ac:	80a0983a 	sll	r16,r16,r2
2202c0b0:	8908d83a 	srl	r4,r17,r4
2202c0b4:	88a4983a 	sll	r18,r17,r2
2202c0b8:	2420b03a 	or	r16,r4,r16
2202c0bc:	017f0344 	movi	r5,-1011
2202c0c0:	28e9c83a 	sub	r20,r5,r3
2202c0c4:	002b883a 	mov	r21,zero
2202c0c8:	0015883a 	mov	r10,zero
2202c0cc:	003f9b06 	br	2202bf3c <__alt_data_end+0xfffecb3c>
2202c0d0:	8984b03a 	or	r2,r17,r6
2202c0d4:	10002a1e 	bne	r2,zero,2202c180 <__muldf3+0x2c4>
2202c0d8:	0023883a 	mov	r17,zero
2202c0dc:	002f883a 	mov	r23,zero
2202c0e0:	02400084 	movi	r9,2
2202c0e4:	003fa706 	br	2202bf84 <__alt_data_end+0xfffecb84>
2202c0e8:	8984b03a 	or	r2,r17,r6
2202c0ec:	10002026 	beq	r2,zero,2202c170 <__muldf3+0x2b4>
2202c0f0:	8800cc26 	beq	r17,zero,2202c424 <__muldf3+0x568>
2202c0f4:	8809883a 	mov	r4,r17
2202c0f8:	d8c00215 	stw	r3,8(sp)
2202c0fc:	d9800315 	stw	r6,12(sp)
2202c100:	da800015 	stw	r10,0(sp)
2202c104:	dac00115 	stw	r11,4(sp)
2202c108:	202d0ac0 	call	2202d0ac <__clzsi2>
2202c10c:	d8c00217 	ldw	r3,8(sp)
2202c110:	d9800317 	ldw	r6,12(sp)
2202c114:	da800017 	ldw	r10,0(sp)
2202c118:	dac00117 	ldw	r11,4(sp)
2202c11c:	1009883a 	mov	r4,r2
2202c120:	01400a04 	movi	r5,40
2202c124:	25fffe04 	addi	r23,r4,-8
2202c128:	290bc83a 	sub	r5,r5,r4
2202c12c:	8dd0983a 	sll	r8,r17,r23
2202c130:	314ad83a 	srl	r5,r6,r5
2202c134:	35ee983a 	sll	r23,r6,r23
2202c138:	2a22b03a 	or	r17,r5,r8
2202c13c:	017f0344 	movi	r5,-1011
2202c140:	290bc83a 	sub	r5,r5,r4
2202c144:	0013883a 	mov	r9,zero
2202c148:	003f8e06 	br	2202bf84 <__alt_data_end+0xfffecb84>
2202c14c:	008000c4 	movi	r2,3
2202c150:	50811d26 	beq	r10,r2,2202c5c8 <__muldf3+0x70c>
2202c154:	00800044 	movi	r2,1
2202c158:	5080e01e 	bne	r10,r2,2202c4dc <__muldf3+0x620>
2202c15c:	e0a6703a 	and	r19,fp,r2
2202c160:	0009883a 	mov	r4,zero
2202c164:	0021883a 	mov	r16,zero
2202c168:	0025883a 	mov	r18,zero
2202c16c:	003fad06 	br	2202c024 <__alt_data_end+0xfffecc24>
2202c170:	0023883a 	mov	r17,zero
2202c174:	002f883a 	mov	r23,zero
2202c178:	02400044 	movi	r9,1
2202c17c:	003f8106 	br	2202bf84 <__alt_data_end+0xfffecb84>
2202c180:	024000c4 	movi	r9,3
2202c184:	003f7f06 	br	2202bf84 <__alt_data_end+0xfffecb84>
2202c188:	05400104 	movi	r21,4
2202c18c:	0021883a 	mov	r16,zero
2202c190:	0025883a 	mov	r18,zero
2202c194:	02800044 	movi	r10,1
2202c198:	003f6806 	br	2202bf3c <__alt_data_end+0xfffecb3c>
2202c19c:	05400304 	movi	r21,12
2202c1a0:	028000c4 	movi	r10,3
2202c1a4:	003f6506 	br	2202bf3c <__alt_data_end+0xfffecb3c>
2202c1a8:	04000434 	movhi	r16,16
2202c1ac:	0027883a 	mov	r19,zero
2202c1b0:	843fffc4 	addi	r16,r16,-1
2202c1b4:	04bfffc4 	movi	r18,-1
2202c1b8:	0101ffc4 	movi	r4,2047
2202c1bc:	003f9906 	br	2202c024 <__alt_data_end+0xfffecc24>
2202c1c0:	8821883a 	mov	r16,r17
2202c1c4:	b825883a 	mov	r18,r23
2202c1c8:	5839883a 	mov	fp,r11
2202c1cc:	4815883a 	mov	r10,r9
2202c1d0:	003f8e06 	br	2202c00c <__alt_data_end+0xfffecc0c>
2202c1d4:	8821883a 	mov	r16,r17
2202c1d8:	b825883a 	mov	r18,r23
2202c1dc:	b039883a 	mov	fp,r22
2202c1e0:	4815883a 	mov	r10,r9
2202c1e4:	003f8906 	br	2202c00c <__alt_data_end+0xfffecc0c>
2202c1e8:	b80cd43a 	srli	r6,r23,16
2202c1ec:	9006d43a 	srli	r3,r18,16
2202c1f0:	90bfffcc 	andi	r2,r18,65535
2202c1f4:	bdffffcc 	andi	r23,r23,65535
2202c1f8:	b891383a 	mul	r8,r23,r2
2202c1fc:	b8c9383a 	mul	r4,r23,r3
2202c200:	309b383a 	mul	r13,r6,r2
2202c204:	400ed43a 	srli	r7,r8,16
2202c208:	30df383a 	mul	r15,r6,r3
2202c20c:	235b883a 	add	r13,r4,r13
2202c210:	69db883a 	add	r13,r13,r7
2202c214:	6900022e 	bgeu	r13,r4,2202c220 <__muldf3+0x364>
2202c218:	01000074 	movhi	r4,1
2202c21c:	791f883a 	add	r15,r15,r4
2202c220:	8828d43a 	srli	r20,r17,16
2202c224:	8c7fffcc 	andi	r17,r17,65535
2202c228:	888f383a 	mul	r7,r17,r2
2202c22c:	88d3383a 	mul	r9,r17,r3
2202c230:	a0a5383a 	mul	r18,r20,r2
2202c234:	3816d43a 	srli	r11,r7,16
2202c238:	6814943a 	slli	r10,r13,16
2202c23c:	4ca5883a 	add	r18,r9,r18
2202c240:	423fffcc 	andi	r8,r8,65535
2202c244:	92e5883a 	add	r18,r18,r11
2202c248:	6808d43a 	srli	r4,r13,16
2202c24c:	5215883a 	add	r10,r10,r8
2202c250:	a0c7383a 	mul	r3,r20,r3
2202c254:	9240022e 	bgeu	r18,r9,2202c260 <__muldf3+0x3a4>
2202c258:	00800074 	movhi	r2,1
2202c25c:	1887883a 	add	r3,r3,r2
2202c260:	802ad43a 	srli	r21,r16,16
2202c264:	80bfffcc 	andi	r2,r16,65535
2202c268:	b893383a 	mul	r9,r23,r2
2202c26c:	3091383a 	mul	r8,r6,r2
2202c270:	bd6f383a 	mul	r23,r23,r21
2202c274:	9026943a 	slli	r19,r18,16
2202c278:	481ad43a 	srli	r13,r9,16
2202c27c:	9024d43a 	srli	r18,r18,16
2202c280:	39ffffcc 	andi	r7,r7,65535
2202c284:	ba11883a 	add	r8,r23,r8
2202c288:	99e7883a 	add	r19,r19,r7
2202c28c:	4351883a 	add	r8,r8,r13
2202c290:	1c97883a 	add	r11,r3,r18
2202c294:	354d383a 	mul	r6,r6,r21
2202c298:	9925883a 	add	r18,r19,r4
2202c29c:	45c0022e 	bgeu	r8,r23,2202c2a8 <__muldf3+0x3ec>
2202c2a0:	00c00074 	movhi	r3,1
2202c2a4:	30cd883a 	add	r6,r6,r3
2202c2a8:	8889383a 	mul	r4,r17,r2
2202c2ac:	8d63383a 	mul	r17,r17,r21
2202c2b0:	a085383a 	mul	r2,r20,r2
2202c2b4:	200ed43a 	srli	r7,r4,16
2202c2b8:	401cd43a 	srli	r14,r8,16
2202c2bc:	401a943a 	slli	r13,r8,16
2202c2c0:	8885883a 	add	r2,r17,r2
2202c2c4:	4a3fffcc 	andi	r8,r9,65535
2202c2c8:	11c5883a 	add	r2,r2,r7
2202c2cc:	339d883a 	add	r14,r6,r14
2202c2d0:	6a11883a 	add	r8,r13,r8
2202c2d4:	a561383a 	mul	r16,r20,r21
2202c2d8:	1440022e 	bgeu	r2,r17,2202c2e4 <__muldf3+0x428>
2202c2dc:	00c00074 	movhi	r3,1
2202c2e0:	80e1883a 	add	r16,r16,r3
2202c2e4:	1006943a 	slli	r3,r2,16
2202c2e8:	213fffcc 	andi	r4,r4,65535
2202c2ec:	93db883a 	add	r13,r18,r15
2202c2f0:	1909883a 	add	r4,r3,r4
2202c2f4:	22c7883a 	add	r3,r4,r11
2202c2f8:	6cd3803a 	cmpltu	r9,r13,r19
2202c2fc:	6a09883a 	add	r4,r13,r8
2202c300:	1a5b883a 	add	r13,r3,r9
2202c304:	2211803a 	cmpltu	r8,r4,r8
2202c308:	734d883a 	add	r6,r14,r13
2202c30c:	100ed43a 	srli	r7,r2,16
2202c310:	6a53803a 	cmpltu	r9,r13,r9
2202c314:	3205883a 	add	r2,r6,r8
2202c318:	1ac7803a 	cmpltu	r3,r3,r11
2202c31c:	1211803a 	cmpltu	r8,r2,r8
2202c320:	48c6b03a 	or	r3,r9,r3
2202c324:	338d803a 	cmpltu	r6,r6,r14
2202c328:	19c7883a 	add	r3,r3,r7
2202c32c:	418cb03a 	or	r6,r8,r6
2202c330:	1987883a 	add	r3,r3,r6
2202c334:	2024927a 	slli	r18,r4,9
2202c338:	1c07883a 	add	r3,r3,r16
2202c33c:	1806927a 	slli	r3,r3,9
2202c340:	1020d5fa 	srli	r16,r2,23
2202c344:	2008d5fa 	srli	r4,r4,23
2202c348:	9294b03a 	or	r10,r18,r10
2202c34c:	1004927a 	slli	r2,r2,9
2202c350:	5024c03a 	cmpne	r18,r10,zero
2202c354:	1c20b03a 	or	r16,r3,r16
2202c358:	9108b03a 	or	r4,r18,r4
2202c35c:	80c0402c 	andhi	r3,r16,256
2202c360:	20a4b03a 	or	r18,r4,r2
2202c364:	18000726 	beq	r3,zero,2202c384 <__muldf3+0x4c8>
2202c368:	9006d07a 	srli	r3,r18,1
2202c36c:	800897fa 	slli	r4,r16,31
2202c370:	9080004c 	andi	r2,r18,1
2202c374:	8020d07a 	srli	r16,r16,1
2202c378:	10c4b03a 	or	r2,r2,r3
2202c37c:	1124b03a 	or	r18,r2,r4
2202c380:	600b883a 	mov	r5,r12
2202c384:	2900ffc4 	addi	r4,r5,1023
2202c388:	01004b0e 	bge	zero,r4,2202c4b8 <__muldf3+0x5fc>
2202c38c:	908001cc 	andi	r2,r18,7
2202c390:	10000726 	beq	r2,zero,2202c3b0 <__muldf3+0x4f4>
2202c394:	90c003cc 	andi	r3,r18,15
2202c398:	00800104 	movi	r2,4
2202c39c:	18800426 	beq	r3,r2,2202c3b0 <__muldf3+0x4f4>
2202c3a0:	9087883a 	add	r3,r18,r2
2202c3a4:	1c85803a 	cmpltu	r2,r3,r18
2202c3a8:	80a1883a 	add	r16,r16,r2
2202c3ac:	1825883a 	mov	r18,r3
2202c3b0:	8080402c 	andhi	r2,r16,256
2202c3b4:	10000426 	beq	r2,zero,2202c3c8 <__muldf3+0x50c>
2202c3b8:	00bfc034 	movhi	r2,65280
2202c3bc:	10bfffc4 	addi	r2,r2,-1
2202c3c0:	29010004 	addi	r4,r5,1024
2202c3c4:	80a0703a 	and	r16,r16,r2
2202c3c8:	0081ff84 	movi	r2,2046
2202c3cc:	1100320e 	bge	r2,r4,2202c498 <__muldf3+0x5dc>
2202c3d0:	b4c0004c 	andi	r19,r22,1
2202c3d4:	0101ffc4 	movi	r4,2047
2202c3d8:	0021883a 	mov	r16,zero
2202c3dc:	0025883a 	mov	r18,zero
2202c3e0:	003f1006 	br	2202c024 <__alt_data_end+0xfffecc24>
2202c3e4:	8080022c 	andhi	r2,r16,8
2202c3e8:	10000926 	beq	r2,zero,2202c410 <__muldf3+0x554>
2202c3ec:	8880022c 	andhi	r2,r17,8
2202c3f0:	1000071e 	bne	r2,zero,2202c410 <__muldf3+0x554>
2202c3f4:	00800434 	movhi	r2,16
2202c3f8:	8c000234 	orhi	r16,r17,8
2202c3fc:	10bfffc4 	addi	r2,r2,-1
2202c400:	1827883a 	mov	r19,r3
2202c404:	80a0703a 	and	r16,r16,r2
2202c408:	b825883a 	mov	r18,r23
2202c40c:	003f6a06 	br	2202c1b8 <__alt_data_end+0xfffecdb8>
2202c410:	00800434 	movhi	r2,16
2202c414:	84000234 	orhi	r16,r16,8
2202c418:	10bfffc4 	addi	r2,r2,-1
2202c41c:	80a0703a 	and	r16,r16,r2
2202c420:	003f6506 	br	2202c1b8 <__alt_data_end+0xfffecdb8>
2202c424:	3009883a 	mov	r4,r6
2202c428:	d8c00215 	stw	r3,8(sp)
2202c42c:	d9800315 	stw	r6,12(sp)
2202c430:	da800015 	stw	r10,0(sp)
2202c434:	dac00115 	stw	r11,4(sp)
2202c438:	202d0ac0 	call	2202d0ac <__clzsi2>
2202c43c:	11000804 	addi	r4,r2,32
2202c440:	014009c4 	movi	r5,39
2202c444:	d8c00217 	ldw	r3,8(sp)
2202c448:	d9800317 	ldw	r6,12(sp)
2202c44c:	da800017 	ldw	r10,0(sp)
2202c450:	dac00117 	ldw	r11,4(sp)
2202c454:	293f320e 	bge	r5,r4,2202c120 <__alt_data_end+0xfffecd20>
2202c458:	10bffe04 	addi	r2,r2,-8
2202c45c:	b8a2983a 	sll	r17,r23,r2
2202c460:	002f883a 	mov	r23,zero
2202c464:	003f3506 	br	2202c13c <__alt_data_end+0xfffecd3c>
2202c468:	d9800315 	stw	r6,12(sp)
2202c46c:	d9c00015 	stw	r7,0(sp)
2202c470:	202d0ac0 	call	2202d0ac <__clzsi2>
2202c474:	10c00804 	addi	r3,r2,32
2202c478:	010009c4 	movi	r4,39
2202c47c:	d9800317 	ldw	r6,12(sp)
2202c480:	d9c00017 	ldw	r7,0(sp)
2202c484:	20ff060e 	bge	r4,r3,2202c0a0 <__alt_data_end+0xfffecca0>
2202c488:	10bffe04 	addi	r2,r2,-8
2202c48c:	88a0983a 	sll	r16,r17,r2
2202c490:	0025883a 	mov	r18,zero
2202c494:	003f0906 	br	2202c0bc <__alt_data_end+0xfffeccbc>
2202c498:	9004d0fa 	srli	r2,r18,3
2202c49c:	8024977a 	slli	r18,r16,29
2202c4a0:	8020927a 	slli	r16,r16,9
2202c4a4:	2101ffcc 	andi	r4,r4,2047
2202c4a8:	90a4b03a 	or	r18,r18,r2
2202c4ac:	8020d33a 	srli	r16,r16,12
2202c4b0:	b4c0004c 	andi	r19,r22,1
2202c4b4:	003edb06 	br	2202c024 <__alt_data_end+0xfffecc24>
2202c4b8:	00ff0084 	movi	r3,-1022
2202c4bc:	1947c83a 	sub	r3,r3,r5
2202c4c0:	00800e04 	movi	r2,56
2202c4c4:	10c0080e 	bge	r2,r3,2202c4e8 <__muldf3+0x62c>
2202c4c8:	b4c0004c 	andi	r19,r22,1
2202c4cc:	0009883a 	mov	r4,zero
2202c4d0:	0021883a 	mov	r16,zero
2202c4d4:	0025883a 	mov	r18,zero
2202c4d8:	003ed206 	br	2202c024 <__alt_data_end+0xfffecc24>
2202c4dc:	600b883a 	mov	r5,r12
2202c4e0:	e02d883a 	mov	r22,fp
2202c4e4:	003fa706 	br	2202c384 <__alt_data_end+0xfffecf84>
2202c4e8:	008007c4 	movi	r2,31
2202c4ec:	10c01816 	blt	r2,r3,2202c550 <__muldf3+0x694>
2202c4f0:	29410784 	addi	r5,r5,1054
2202c4f4:	8144983a 	sll	r2,r16,r5
2202c4f8:	90c8d83a 	srl	r4,r18,r3
2202c4fc:	914a983a 	sll	r5,r18,r5
2202c500:	80c6d83a 	srl	r3,r16,r3
2202c504:	2088b03a 	or	r4,r4,r2
2202c508:	2804c03a 	cmpne	r2,r5,zero
2202c50c:	2084b03a 	or	r2,r4,r2
2202c510:	110001cc 	andi	r4,r2,7
2202c514:	20000726 	beq	r4,zero,2202c534 <__muldf3+0x678>
2202c518:	114003cc 	andi	r5,r2,15
2202c51c:	01000104 	movi	r4,4
2202c520:	29000426 	beq	r5,r4,2202c534 <__muldf3+0x678>
2202c524:	11000104 	addi	r4,r2,4
2202c528:	2085803a 	cmpltu	r2,r4,r2
2202c52c:	1887883a 	add	r3,r3,r2
2202c530:	2005883a 	mov	r2,r4
2202c534:	1900202c 	andhi	r4,r3,128
2202c538:	20001826 	beq	r4,zero,2202c59c <__muldf3+0x6e0>
2202c53c:	b4c0004c 	andi	r19,r22,1
2202c540:	01000044 	movi	r4,1
2202c544:	0021883a 	mov	r16,zero
2202c548:	0025883a 	mov	r18,zero
2202c54c:	003eb506 	br	2202c024 <__alt_data_end+0xfffecc24>
2202c550:	00bef884 	movi	r2,-1054
2202c554:	1145c83a 	sub	r2,r2,r5
2202c558:	8088d83a 	srl	r4,r16,r2
2202c55c:	00800804 	movi	r2,32
2202c560:	18801726 	beq	r3,r2,2202c5c0 <__muldf3+0x704>
2202c564:	28810f84 	addi	r2,r5,1086
2202c568:	8084983a 	sll	r2,r16,r2
2202c56c:	1484b03a 	or	r2,r2,r18
2202c570:	1004c03a 	cmpne	r2,r2,zero
2202c574:	1104b03a 	or	r2,r2,r4
2202c578:	10c001cc 	andi	r3,r2,7
2202c57c:	18000b1e 	bne	r3,zero,2202c5ac <__muldf3+0x6f0>
2202c580:	0021883a 	mov	r16,zero
2202c584:	1004d0fa 	srli	r2,r2,3
2202c588:	b4c0004c 	andi	r19,r22,1
2202c58c:	0009883a 	mov	r4,zero
2202c590:	10e4b03a 	or	r18,r2,r3
2202c594:	003ea306 	br	2202c024 <__alt_data_end+0xfffecc24>
2202c598:	0007883a 	mov	r3,zero
2202c59c:	1820927a 	slli	r16,r3,9
2202c5a0:	1806977a 	slli	r3,r3,29
2202c5a4:	8020d33a 	srli	r16,r16,12
2202c5a8:	003ff606 	br	2202c584 <__alt_data_end+0xfffed184>
2202c5ac:	110003cc 	andi	r4,r2,15
2202c5b0:	00c00104 	movi	r3,4
2202c5b4:	20fff826 	beq	r4,r3,2202c598 <__alt_data_end+0xfffed198>
2202c5b8:	0007883a 	mov	r3,zero
2202c5bc:	003fd906 	br	2202c524 <__alt_data_end+0xfffed124>
2202c5c0:	0005883a 	mov	r2,zero
2202c5c4:	003fe906 	br	2202c56c <__alt_data_end+0xfffed16c>
2202c5c8:	00800434 	movhi	r2,16
2202c5cc:	84000234 	orhi	r16,r16,8
2202c5d0:	10bfffc4 	addi	r2,r2,-1
2202c5d4:	e4c0004c 	andi	r19,fp,1
2202c5d8:	80a0703a 	and	r16,r16,r2
2202c5dc:	003ef606 	br	2202c1b8 <__alt_data_end+0xfffecdb8>

2202c5e0 <__subdf3>:
2202c5e0:	00c00434 	movhi	r3,16
2202c5e4:	18ffffc4 	addi	r3,r3,-1
2202c5e8:	defffb04 	addi	sp,sp,-20
2202c5ec:	28d2703a 	and	r9,r5,r3
2202c5f0:	3814d53a 	srli	r10,r7,20
2202c5f4:	38c6703a 	and	r3,r7,r3
2202c5f8:	3004d77a 	srli	r2,r6,29
2202c5fc:	dc800215 	stw	r18,8(sp)
2202c600:	dc000015 	stw	r16,0(sp)
2202c604:	2824d7fa 	srli	r18,r5,31
2202c608:	2820d53a 	srli	r16,r5,20
2202c60c:	481290fa 	slli	r9,r9,3
2202c610:	200ad77a 	srli	r5,r4,29
2202c614:	180690fa 	slli	r3,r3,3
2202c618:	dc400115 	stw	r17,4(sp)
2202c61c:	dfc00415 	stw	ra,16(sp)
2202c620:	202290fa 	slli	r17,r4,3
2202c624:	dcc00315 	stw	r19,12(sp)
2202c628:	5281ffcc 	andi	r10,r10,2047
2202c62c:	0101ffc4 	movi	r4,2047
2202c630:	9011883a 	mov	r8,r18
2202c634:	8401ffcc 	andi	r16,r16,2047
2202c638:	94803fcc 	andi	r18,r18,255
2202c63c:	494ab03a 	or	r5,r9,r5
2202c640:	380ed7fa 	srli	r7,r7,31
2202c644:	1886b03a 	or	r3,r3,r2
2202c648:	300c90fa 	slli	r6,r6,3
2202c64c:	51009026 	beq	r10,r4,2202c890 <__subdf3+0x2b0>
2202c650:	39c0005c 	xori	r7,r7,1
2202c654:	8285c83a 	sub	r2,r16,r10
2202c658:	91c06f26 	beq	r18,r7,2202c818 <__subdf3+0x238>
2202c65c:	0080b10e 	bge	zero,r2,2202c924 <__subdf3+0x344>
2202c660:	50002a1e 	bne	r10,zero,2202c70c <__subdf3+0x12c>
2202c664:	1988b03a 	or	r4,r3,r6
2202c668:	2000941e 	bne	r4,zero,2202c8bc <__subdf3+0x2dc>
2202c66c:	888001cc 	andi	r2,r17,7
2202c670:	10005b26 	beq	r2,zero,2202c7e0 <__subdf3+0x200>
2202c674:	88c003cc 	andi	r3,r17,15
2202c678:	00800104 	movi	r2,4
2202c67c:	18805826 	beq	r3,r2,2202c7e0 <__subdf3+0x200>
2202c680:	88c00104 	addi	r3,r17,4
2202c684:	1c63803a 	cmpltu	r17,r3,r17
2202c688:	2c4b883a 	add	r5,r5,r17
2202c68c:	2880202c 	andhi	r2,r5,128
2202c690:	9200004c 	andi	r8,r18,1
2202c694:	1823883a 	mov	r17,r3
2202c698:	10005426 	beq	r2,zero,2202c7ec <__subdf3+0x20c>
2202c69c:	84000044 	addi	r16,r16,1
2202c6a0:	0081ffc4 	movi	r2,2047
2202c6a4:	8080bf26 	beq	r16,r2,2202c9a4 <__subdf3+0x3c4>
2202c6a8:	013fe034 	movhi	r4,65408
2202c6ac:	213fffc4 	addi	r4,r4,-1
2202c6b0:	290a703a 	and	r5,r5,r4
2202c6b4:	2804977a 	slli	r2,r5,29
2202c6b8:	280a927a 	slli	r5,r5,9
2202c6bc:	8822d0fa 	srli	r17,r17,3
2202c6c0:	8401ffcc 	andi	r16,r16,2047
2202c6c4:	2808d33a 	srli	r4,r5,12
2202c6c8:	1444b03a 	or	r2,r2,r17
2202c6cc:	8401ffcc 	andi	r16,r16,2047
2202c6d0:	800a953a 	slli	r5,r16,20
2202c6d4:	40c03fcc 	andi	r3,r8,255
2202c6d8:	04000434 	movhi	r16,16
2202c6dc:	180697fa 	slli	r3,r3,31
2202c6e0:	843fffc4 	addi	r16,r16,-1
2202c6e4:	2420703a 	and	r16,r4,r16
2202c6e8:	8160b03a 	or	r16,r16,r5
2202c6ec:	80c6b03a 	or	r3,r16,r3
2202c6f0:	dfc00417 	ldw	ra,16(sp)
2202c6f4:	dcc00317 	ldw	r19,12(sp)
2202c6f8:	dc800217 	ldw	r18,8(sp)
2202c6fc:	dc400117 	ldw	r17,4(sp)
2202c700:	dc000017 	ldw	r16,0(sp)
2202c704:	dec00504 	addi	sp,sp,20
2202c708:	f800283a 	ret
2202c70c:	0101ffc4 	movi	r4,2047
2202c710:	813fd626 	beq	r16,r4,2202c66c <__alt_data_end+0xfffed26c>
2202c714:	18c02034 	orhi	r3,r3,128
2202c718:	01000e04 	movi	r4,56
2202c71c:	2080a416 	blt	r4,r2,2202c9b0 <__subdf3+0x3d0>
2202c720:	010007c4 	movi	r4,31
2202c724:	2080c716 	blt	r4,r2,2202ca44 <__subdf3+0x464>
2202c728:	01000804 	movi	r4,32
2202c72c:	2089c83a 	sub	r4,r4,r2
2202c730:	1910983a 	sll	r8,r3,r4
2202c734:	308ed83a 	srl	r7,r6,r2
2202c738:	3108983a 	sll	r4,r6,r4
2202c73c:	1884d83a 	srl	r2,r3,r2
2202c740:	41ccb03a 	or	r6,r8,r7
2202c744:	2008c03a 	cmpne	r4,r4,zero
2202c748:	310cb03a 	or	r6,r6,r4
2202c74c:	898dc83a 	sub	r6,r17,r6
2202c750:	89a3803a 	cmpltu	r17,r17,r6
2202c754:	288bc83a 	sub	r5,r5,r2
2202c758:	2c4bc83a 	sub	r5,r5,r17
2202c75c:	3023883a 	mov	r17,r6
2202c760:	2880202c 	andhi	r2,r5,128
2202c764:	10006b26 	beq	r2,zero,2202c914 <__subdf3+0x334>
2202c768:	04c02034 	movhi	r19,128
2202c76c:	9cffffc4 	addi	r19,r19,-1
2202c770:	2ce6703a 	and	r19,r5,r19
2202c774:	98007c26 	beq	r19,zero,2202c968 <__subdf3+0x388>
2202c778:	9809883a 	mov	r4,r19
2202c77c:	202d0ac0 	call	2202d0ac <__clzsi2>
2202c780:	10fffe04 	addi	r3,r2,-8
2202c784:	010007c4 	movi	r4,31
2202c788:	20c07d16 	blt	r4,r3,2202c980 <__subdf3+0x3a0>
2202c78c:	01400a04 	movi	r5,40
2202c790:	2885c83a 	sub	r2,r5,r2
2202c794:	888ad83a 	srl	r5,r17,r2
2202c798:	98e6983a 	sll	r19,r19,r3
2202c79c:	88e2983a 	sll	r17,r17,r3
2202c7a0:	2ce6b03a 	or	r19,r5,r19
2202c7a4:	1c007a16 	blt	r3,r16,2202c990 <__subdf3+0x3b0>
2202c7a8:	1c21c83a 	sub	r16,r3,r16
2202c7ac:	81400044 	addi	r5,r16,1
2202c7b0:	00c007c4 	movi	r3,31
2202c7b4:	19409616 	blt	r3,r5,2202ca10 <__subdf3+0x430>
2202c7b8:	1c21c83a 	sub	r16,r3,r16
2202c7bc:	8c08983a 	sll	r4,r17,r16
2202c7c0:	8946d83a 	srl	r3,r17,r5
2202c7c4:	9c20983a 	sll	r16,r19,r16
2202c7c8:	2008c03a 	cmpne	r4,r4,zero
2202c7cc:	994ad83a 	srl	r5,r19,r5
2202c7d0:	1c06b03a 	or	r3,r3,r16
2202c7d4:	1922b03a 	or	r17,r3,r4
2202c7d8:	0021883a 	mov	r16,zero
2202c7dc:	003fa306 	br	2202c66c <__alt_data_end+0xfffed26c>
2202c7e0:	2880202c 	andhi	r2,r5,128
2202c7e4:	9200004c 	andi	r8,r18,1
2202c7e8:	103fac1e 	bne	r2,zero,2202c69c <__alt_data_end+0xfffed29c>
2202c7ec:	2804977a 	slli	r2,r5,29
2202c7f0:	8822d0fa 	srli	r17,r17,3
2202c7f4:	00c1ffc4 	movi	r3,2047
2202c7f8:	280ad0fa 	srli	r5,r5,3
2202c7fc:	1444b03a 	or	r2,r2,r17
2202c800:	80c02726 	beq	r16,r3,2202c8a0 <__subdf3+0x2c0>
2202c804:	01000434 	movhi	r4,16
2202c808:	213fffc4 	addi	r4,r4,-1
2202c80c:	80e0703a 	and	r16,r16,r3
2202c810:	2908703a 	and	r4,r5,r4
2202c814:	003fad06 	br	2202c6cc <__alt_data_end+0xfffed2cc>
2202c818:	0080690e 	bge	zero,r2,2202c9c0 <__subdf3+0x3e0>
2202c81c:	50002f26 	beq	r10,zero,2202c8dc <__subdf3+0x2fc>
2202c820:	0101ffc4 	movi	r4,2047
2202c824:	813f9126 	beq	r16,r4,2202c66c <__alt_data_end+0xfffed26c>
2202c828:	18c02034 	orhi	r3,r3,128
2202c82c:	01000e04 	movi	r4,56
2202c830:	2080b00e 	bge	r4,r2,2202caf4 <__subdf3+0x514>
2202c834:	198cb03a 	or	r6,r3,r6
2202c838:	300ec03a 	cmpne	r7,r6,zero
2202c83c:	0005883a 	mov	r2,zero
2202c840:	3c4f883a 	add	r7,r7,r17
2202c844:	3c63803a 	cmpltu	r17,r7,r17
2202c848:	114b883a 	add	r5,r2,r5
2202c84c:	2c4b883a 	add	r5,r5,r17
2202c850:	3823883a 	mov	r17,r7
2202c854:	2880202c 	andhi	r2,r5,128
2202c858:	10002e26 	beq	r2,zero,2202c914 <__subdf3+0x334>
2202c85c:	84000044 	addi	r16,r16,1
2202c860:	0081ffc4 	movi	r2,2047
2202c864:	8080de26 	beq	r16,r2,2202cbe0 <__subdf3+0x600>
2202c868:	00bfe034 	movhi	r2,65408
2202c86c:	10bfffc4 	addi	r2,r2,-1
2202c870:	288a703a 	and	r5,r5,r2
2202c874:	880cd07a 	srli	r6,r17,1
2202c878:	280897fa 	slli	r4,r5,31
2202c87c:	88c0004c 	andi	r3,r17,1
2202c880:	30e2b03a 	or	r17,r6,r3
2202c884:	280ad07a 	srli	r5,r5,1
2202c888:	8922b03a 	or	r17,r17,r4
2202c88c:	003f7706 	br	2202c66c <__alt_data_end+0xfffed26c>
2202c890:	1984b03a 	or	r2,r3,r6
2202c894:	103f6e26 	beq	r2,zero,2202c650 <__alt_data_end+0xfffed250>
2202c898:	39c03fcc 	andi	r7,r7,255
2202c89c:	003f6d06 	br	2202c654 <__alt_data_end+0xfffed254>
2202c8a0:	1146b03a 	or	r3,r2,r5
2202c8a4:	18003f26 	beq	r3,zero,2202c9a4 <__subdf3+0x3c4>
2202c8a8:	00c00434 	movhi	r3,16
2202c8ac:	29000234 	orhi	r4,r5,8
2202c8b0:	18ffffc4 	addi	r3,r3,-1
2202c8b4:	20c8703a 	and	r4,r4,r3
2202c8b8:	003f8406 	br	2202c6cc <__alt_data_end+0xfffed2cc>
2202c8bc:	10bfffc4 	addi	r2,r2,-1
2202c8c0:	1000501e 	bne	r2,zero,2202ca04 <__subdf3+0x424>
2202c8c4:	898fc83a 	sub	r7,r17,r6
2202c8c8:	89e3803a 	cmpltu	r17,r17,r7
2202c8cc:	28cbc83a 	sub	r5,r5,r3
2202c8d0:	2c4bc83a 	sub	r5,r5,r17
2202c8d4:	3823883a 	mov	r17,r7
2202c8d8:	003fa106 	br	2202c760 <__alt_data_end+0xfffed360>
2202c8dc:	1988b03a 	or	r4,r3,r6
2202c8e0:	203f6226 	beq	r4,zero,2202c66c <__alt_data_end+0xfffed26c>
2202c8e4:	10bfffc4 	addi	r2,r2,-1
2202c8e8:	10009b1e 	bne	r2,zero,2202cb58 <__subdf3+0x578>
2202c8ec:	344d883a 	add	r6,r6,r17
2202c8f0:	3463803a 	cmpltu	r17,r6,r17
2202c8f4:	194b883a 	add	r5,r3,r5
2202c8f8:	2c4b883a 	add	r5,r5,r17
2202c8fc:	3023883a 	mov	r17,r6
2202c900:	003fd406 	br	2202c854 <__alt_data_end+0xfffed454>
2202c904:	1106b03a 	or	r3,r2,r4
2202c908:	1800b426 	beq	r3,zero,2202cbdc <__subdf3+0x5fc>
2202c90c:	100b883a 	mov	r5,r2
2202c910:	2023883a 	mov	r17,r4
2202c914:	888001cc 	andi	r2,r17,7
2202c918:	103f561e 	bne	r2,zero,2202c674 <__alt_data_end+0xfffed274>
2202c91c:	9200004c 	andi	r8,r18,1
2202c920:	003fb206 	br	2202c7ec <__alt_data_end+0xfffed3ec>
2202c924:	1000531e 	bne	r2,zero,2202ca74 <__subdf3+0x494>
2202c928:	80800044 	addi	r2,r16,1
2202c92c:	1081ffcc 	andi	r2,r2,2047
2202c930:	01000044 	movi	r4,1
2202c934:	2080a00e 	bge	r4,r2,2202cbb8 <__subdf3+0x5d8>
2202c938:	8985c83a 	sub	r2,r17,r6
2202c93c:	8889803a 	cmpltu	r4,r17,r2
2202c940:	28e7c83a 	sub	r19,r5,r3
2202c944:	9927c83a 	sub	r19,r19,r4
2202c948:	9900202c 	andhi	r4,r19,128
2202c94c:	20006226 	beq	r4,zero,2202cad8 <__subdf3+0x4f8>
2202c950:	3463c83a 	sub	r17,r6,r17
2202c954:	194bc83a 	sub	r5,r3,r5
2202c958:	344d803a 	cmpltu	r6,r6,r17
2202c95c:	29a7c83a 	sub	r19,r5,r6
2202c960:	3825883a 	mov	r18,r7
2202c964:	983f841e 	bne	r19,zero,2202c778 <__alt_data_end+0xfffed378>
2202c968:	8809883a 	mov	r4,r17
2202c96c:	202d0ac0 	call	2202d0ac <__clzsi2>
2202c970:	10800804 	addi	r2,r2,32
2202c974:	10fffe04 	addi	r3,r2,-8
2202c978:	010007c4 	movi	r4,31
2202c97c:	20ff830e 	bge	r4,r3,2202c78c <__alt_data_end+0xfffed38c>
2202c980:	14fff604 	addi	r19,r2,-40
2202c984:	8ce6983a 	sll	r19,r17,r19
2202c988:	0023883a 	mov	r17,zero
2202c98c:	1c3f860e 	bge	r3,r16,2202c7a8 <__alt_data_end+0xfffed3a8>
2202c990:	017fe034 	movhi	r5,65408
2202c994:	297fffc4 	addi	r5,r5,-1
2202c998:	80e1c83a 	sub	r16,r16,r3
2202c99c:	994a703a 	and	r5,r19,r5
2202c9a0:	003f3206 	br	2202c66c <__alt_data_end+0xfffed26c>
2202c9a4:	0009883a 	mov	r4,zero
2202c9a8:	0005883a 	mov	r2,zero
2202c9ac:	003f4706 	br	2202c6cc <__alt_data_end+0xfffed2cc>
2202c9b0:	198cb03a 	or	r6,r3,r6
2202c9b4:	300cc03a 	cmpne	r6,r6,zero
2202c9b8:	0005883a 	mov	r2,zero
2202c9bc:	003f6306 	br	2202c74c <__alt_data_end+0xfffed34c>
2202c9c0:	10009d1e 	bne	r2,zero,2202cc38 <__subdf3+0x658>
2202c9c4:	81c00044 	addi	r7,r16,1
2202c9c8:	3881ffcc 	andi	r2,r7,2047
2202c9cc:	02400044 	movi	r9,1
2202c9d0:	4880680e 	bge	r9,r2,2202cb74 <__subdf3+0x594>
2202c9d4:	0081ffc4 	movi	r2,2047
2202c9d8:	3880ae26 	beq	r7,r2,2202cc94 <__subdf3+0x6b4>
2202c9dc:	344d883a 	add	r6,r6,r17
2202c9e0:	3463803a 	cmpltu	r17,r6,r17
2202c9e4:	194b883a 	add	r5,r3,r5
2202c9e8:	2c4b883a 	add	r5,r5,r17
2202c9ec:	282297fa 	slli	r17,r5,31
2202c9f0:	300cd07a 	srli	r6,r6,1
2202c9f4:	280ad07a 	srli	r5,r5,1
2202c9f8:	3821883a 	mov	r16,r7
2202c9fc:	89a2b03a 	or	r17,r17,r6
2202ca00:	003f1a06 	br	2202c66c <__alt_data_end+0xfffed26c>
2202ca04:	0101ffc4 	movi	r4,2047
2202ca08:	813f431e 	bne	r16,r4,2202c718 <__alt_data_end+0xfffed318>
2202ca0c:	003f1706 	br	2202c66c <__alt_data_end+0xfffed26c>
2202ca10:	80bff844 	addi	r2,r16,-31
2202ca14:	00c00804 	movi	r3,32
2202ca18:	9884d83a 	srl	r2,r19,r2
2202ca1c:	28c05126 	beq	r5,r3,2202cb64 <__subdf3+0x584>
2202ca20:	00c00fc4 	movi	r3,63
2202ca24:	1c21c83a 	sub	r16,r3,r16
2202ca28:	9c26983a 	sll	r19,r19,r16
2202ca2c:	9c62b03a 	or	r17,r19,r17
2202ca30:	8822c03a 	cmpne	r17,r17,zero
2202ca34:	88a2b03a 	or	r17,r17,r2
2202ca38:	000b883a 	mov	r5,zero
2202ca3c:	0021883a 	mov	r16,zero
2202ca40:	003fb406 	br	2202c914 <__alt_data_end+0xfffed514>
2202ca44:	113ff804 	addi	r4,r2,-32
2202ca48:	01c00804 	movi	r7,32
2202ca4c:	1908d83a 	srl	r4,r3,r4
2202ca50:	11c04626 	beq	r2,r7,2202cb6c <__subdf3+0x58c>
2202ca54:	01c01004 	movi	r7,64
2202ca58:	3885c83a 	sub	r2,r7,r2
2202ca5c:	1884983a 	sll	r2,r3,r2
2202ca60:	118cb03a 	or	r6,r2,r6
2202ca64:	300cc03a 	cmpne	r6,r6,zero
2202ca68:	310cb03a 	or	r6,r6,r4
2202ca6c:	0005883a 	mov	r2,zero
2202ca70:	003f3606 	br	2202c74c <__alt_data_end+0xfffed34c>
2202ca74:	80002b26 	beq	r16,zero,2202cb24 <__subdf3+0x544>
2202ca78:	0101ffc4 	movi	r4,2047
2202ca7c:	51006926 	beq	r10,r4,2202cc24 <__subdf3+0x644>
2202ca80:	0085c83a 	sub	r2,zero,r2
2202ca84:	29402034 	orhi	r5,r5,128
2202ca88:	01000e04 	movi	r4,56
2202ca8c:	20807d16 	blt	r4,r2,2202cc84 <__subdf3+0x6a4>
2202ca90:	010007c4 	movi	r4,31
2202ca94:	2080d916 	blt	r4,r2,2202cdfc <__subdf3+0x81c>
2202ca98:	01000804 	movi	r4,32
2202ca9c:	2089c83a 	sub	r4,r4,r2
2202caa0:	2912983a 	sll	r9,r5,r4
2202caa4:	8890d83a 	srl	r8,r17,r2
2202caa8:	8908983a 	sll	r4,r17,r4
2202caac:	2884d83a 	srl	r2,r5,r2
2202cab0:	4a22b03a 	or	r17,r9,r8
2202cab4:	2008c03a 	cmpne	r4,r4,zero
2202cab8:	8922b03a 	or	r17,r17,r4
2202cabc:	3463c83a 	sub	r17,r6,r17
2202cac0:	1885c83a 	sub	r2,r3,r2
2202cac4:	344d803a 	cmpltu	r6,r6,r17
2202cac8:	118bc83a 	sub	r5,r2,r6
2202cacc:	5021883a 	mov	r16,r10
2202cad0:	3825883a 	mov	r18,r7
2202cad4:	003f2206 	br	2202c760 <__alt_data_end+0xfffed360>
2202cad8:	9886b03a 	or	r3,r19,r2
2202cadc:	18001c1e 	bne	r3,zero,2202cb50 <__subdf3+0x570>
2202cae0:	0011883a 	mov	r8,zero
2202cae4:	000b883a 	mov	r5,zero
2202cae8:	0023883a 	mov	r17,zero
2202caec:	0021883a 	mov	r16,zero
2202caf0:	003f3e06 	br	2202c7ec <__alt_data_end+0xfffed3ec>
2202caf4:	010007c4 	movi	r4,31
2202caf8:	20803c16 	blt	r4,r2,2202cbec <__subdf3+0x60c>
2202cafc:	01000804 	movi	r4,32
2202cb00:	2089c83a 	sub	r4,r4,r2
2202cb04:	1912983a 	sll	r9,r3,r4
2202cb08:	308ed83a 	srl	r7,r6,r2
2202cb0c:	3108983a 	sll	r4,r6,r4
2202cb10:	1884d83a 	srl	r2,r3,r2
2202cb14:	49ceb03a 	or	r7,r9,r7
2202cb18:	2008c03a 	cmpne	r4,r4,zero
2202cb1c:	390eb03a 	or	r7,r7,r4
2202cb20:	003f4706 	br	2202c840 <__alt_data_end+0xfffed440>
2202cb24:	2c48b03a 	or	r4,r5,r17
2202cb28:	20003e26 	beq	r4,zero,2202cc24 <__subdf3+0x644>
2202cb2c:	0084303a 	nor	r2,zero,r2
2202cb30:	10003a1e 	bne	r2,zero,2202cc1c <__subdf3+0x63c>
2202cb34:	3463c83a 	sub	r17,r6,r17
2202cb38:	194bc83a 	sub	r5,r3,r5
2202cb3c:	344d803a 	cmpltu	r6,r6,r17
2202cb40:	298bc83a 	sub	r5,r5,r6
2202cb44:	5021883a 	mov	r16,r10
2202cb48:	3825883a 	mov	r18,r7
2202cb4c:	003f0406 	br	2202c760 <__alt_data_end+0xfffed360>
2202cb50:	1023883a 	mov	r17,r2
2202cb54:	003f0706 	br	2202c774 <__alt_data_end+0xfffed374>
2202cb58:	0101ffc4 	movi	r4,2047
2202cb5c:	813f331e 	bne	r16,r4,2202c82c <__alt_data_end+0xfffed42c>
2202cb60:	003ec206 	br	2202c66c <__alt_data_end+0xfffed26c>
2202cb64:	0027883a 	mov	r19,zero
2202cb68:	003fb006 	br	2202ca2c <__alt_data_end+0xfffed62c>
2202cb6c:	0005883a 	mov	r2,zero
2202cb70:	003fbb06 	br	2202ca60 <__alt_data_end+0xfffed660>
2202cb74:	2c44b03a 	or	r2,r5,r17
2202cb78:	80008b1e 	bne	r16,zero,2202cda8 <__subdf3+0x7c8>
2202cb7c:	1000b526 	beq	r2,zero,2202ce54 <__subdf3+0x874>
2202cb80:	1984b03a 	or	r2,r3,r6
2202cb84:	103eb926 	beq	r2,zero,2202c66c <__alt_data_end+0xfffed26c>
2202cb88:	3449883a 	add	r4,r6,r17
2202cb8c:	2463803a 	cmpltu	r17,r4,r17
2202cb90:	194b883a 	add	r5,r3,r5
2202cb94:	2c4b883a 	add	r5,r5,r17
2202cb98:	2880202c 	andhi	r2,r5,128
2202cb9c:	2023883a 	mov	r17,r4
2202cba0:	103f5c26 	beq	r2,zero,2202c914 <__alt_data_end+0xfffed514>
2202cba4:	00bfe034 	movhi	r2,65408
2202cba8:	10bfffc4 	addi	r2,r2,-1
2202cbac:	4821883a 	mov	r16,r9
2202cbb0:	288a703a 	and	r5,r5,r2
2202cbb4:	003ead06 	br	2202c66c <__alt_data_end+0xfffed26c>
2202cbb8:	2c44b03a 	or	r2,r5,r17
2202cbbc:	8000291e 	bne	r16,zero,2202cc64 <__subdf3+0x684>
2202cbc0:	10004f1e 	bne	r2,zero,2202cd00 <__subdf3+0x720>
2202cbc4:	1984b03a 	or	r2,r3,r6
2202cbc8:	10000426 	beq	r2,zero,2202cbdc <__subdf3+0x5fc>
2202cbcc:	180b883a 	mov	r5,r3
2202cbd0:	3023883a 	mov	r17,r6
2202cbd4:	3825883a 	mov	r18,r7
2202cbd8:	003ea406 	br	2202c66c <__alt_data_end+0xfffed26c>
2202cbdc:	0011883a 	mov	r8,zero
2202cbe0:	000b883a 	mov	r5,zero
2202cbe4:	0023883a 	mov	r17,zero
2202cbe8:	003f0006 	br	2202c7ec <__alt_data_end+0xfffed3ec>
2202cbec:	11fff804 	addi	r7,r2,-32
2202cbf0:	19c8d83a 	srl	r4,r3,r7
2202cbf4:	01c00804 	movi	r7,32
2202cbf8:	11c07e26 	beq	r2,r7,2202cdf4 <__subdf3+0x814>
2202cbfc:	01c01004 	movi	r7,64
2202cc00:	3885c83a 	sub	r2,r7,r2
2202cc04:	1884983a 	sll	r2,r3,r2
2202cc08:	118cb03a 	or	r6,r2,r6
2202cc0c:	300ec03a 	cmpne	r7,r6,zero
2202cc10:	390eb03a 	or	r7,r7,r4
2202cc14:	0005883a 	mov	r2,zero
2202cc18:	003f0906 	br	2202c840 <__alt_data_end+0xfffed440>
2202cc1c:	0101ffc4 	movi	r4,2047
2202cc20:	513f991e 	bne	r10,r4,2202ca88 <__alt_data_end+0xfffed688>
2202cc24:	180b883a 	mov	r5,r3
2202cc28:	3023883a 	mov	r17,r6
2202cc2c:	5021883a 	mov	r16,r10
2202cc30:	3825883a 	mov	r18,r7
2202cc34:	003e8d06 	br	2202c66c <__alt_data_end+0xfffed26c>
2202cc38:	80001a1e 	bne	r16,zero,2202cca4 <__subdf3+0x6c4>
2202cc3c:	2c48b03a 	or	r4,r5,r17
2202cc40:	20005526 	beq	r4,zero,2202cd98 <__subdf3+0x7b8>
2202cc44:	0084303a 	nor	r2,zero,r2
2202cc48:	1000511e 	bne	r2,zero,2202cd90 <__subdf3+0x7b0>
2202cc4c:	89a3883a 	add	r17,r17,r6
2202cc50:	194b883a 	add	r5,r3,r5
2202cc54:	898d803a 	cmpltu	r6,r17,r6
2202cc58:	298b883a 	add	r5,r5,r6
2202cc5c:	5021883a 	mov	r16,r10
2202cc60:	003efc06 	br	2202c854 <__alt_data_end+0xfffed454>
2202cc64:	1000341e 	bne	r2,zero,2202cd38 <__subdf3+0x758>
2202cc68:	1984b03a 	or	r2,r3,r6
2202cc6c:	10006f26 	beq	r2,zero,2202ce2c <__subdf3+0x84c>
2202cc70:	180b883a 	mov	r5,r3
2202cc74:	3023883a 	mov	r17,r6
2202cc78:	3825883a 	mov	r18,r7
2202cc7c:	0401ffc4 	movi	r16,2047
2202cc80:	003e7a06 	br	2202c66c <__alt_data_end+0xfffed26c>
2202cc84:	2c62b03a 	or	r17,r5,r17
2202cc88:	8822c03a 	cmpne	r17,r17,zero
2202cc8c:	0005883a 	mov	r2,zero
2202cc90:	003f8a06 	br	2202cabc <__alt_data_end+0xfffed6bc>
2202cc94:	3821883a 	mov	r16,r7
2202cc98:	000b883a 	mov	r5,zero
2202cc9c:	0023883a 	mov	r17,zero
2202cca0:	003ed206 	br	2202c7ec <__alt_data_end+0xfffed3ec>
2202cca4:	0101ffc4 	movi	r4,2047
2202cca8:	51003b26 	beq	r10,r4,2202cd98 <__subdf3+0x7b8>
2202ccac:	0085c83a 	sub	r2,zero,r2
2202ccb0:	29402034 	orhi	r5,r5,128
2202ccb4:	01000e04 	movi	r4,56
2202ccb8:	20806216 	blt	r4,r2,2202ce44 <__subdf3+0x864>
2202ccbc:	010007c4 	movi	r4,31
2202ccc0:	20806b16 	blt	r4,r2,2202ce70 <__subdf3+0x890>
2202ccc4:	01000804 	movi	r4,32
2202ccc8:	2089c83a 	sub	r4,r4,r2
2202cccc:	2912983a 	sll	r9,r5,r4
2202ccd0:	888ed83a 	srl	r7,r17,r2
2202ccd4:	8908983a 	sll	r4,r17,r4
2202ccd8:	2884d83a 	srl	r2,r5,r2
2202ccdc:	49e2b03a 	or	r17,r9,r7
2202cce0:	2008c03a 	cmpne	r4,r4,zero
2202cce4:	8922b03a 	or	r17,r17,r4
2202cce8:	89a3883a 	add	r17,r17,r6
2202ccec:	10c5883a 	add	r2,r2,r3
2202ccf0:	898d803a 	cmpltu	r6,r17,r6
2202ccf4:	118b883a 	add	r5,r2,r6
2202ccf8:	5021883a 	mov	r16,r10
2202ccfc:	003ed506 	br	2202c854 <__alt_data_end+0xfffed454>
2202cd00:	1984b03a 	or	r2,r3,r6
2202cd04:	103e5926 	beq	r2,zero,2202c66c <__alt_data_end+0xfffed26c>
2202cd08:	8989c83a 	sub	r4,r17,r6
2202cd0c:	8911803a 	cmpltu	r8,r17,r4
2202cd10:	28c5c83a 	sub	r2,r5,r3
2202cd14:	1205c83a 	sub	r2,r2,r8
2202cd18:	1200202c 	andhi	r8,r2,128
2202cd1c:	403ef926 	beq	r8,zero,2202c904 <__alt_data_end+0xfffed504>
2202cd20:	3463c83a 	sub	r17,r6,r17
2202cd24:	194bc83a 	sub	r5,r3,r5
2202cd28:	344d803a 	cmpltu	r6,r6,r17
2202cd2c:	298bc83a 	sub	r5,r5,r6
2202cd30:	3825883a 	mov	r18,r7
2202cd34:	003e4d06 	br	2202c66c <__alt_data_end+0xfffed26c>
2202cd38:	1984b03a 	or	r2,r3,r6
2202cd3c:	10002b26 	beq	r2,zero,2202cdec <__subdf3+0x80c>
2202cd40:	2808d0fa 	srli	r4,r5,3
2202cd44:	8822d0fa 	srli	r17,r17,3
2202cd48:	280a977a 	slli	r5,r5,29
2202cd4c:	2080022c 	andhi	r2,r4,8
2202cd50:	2c62b03a 	or	r17,r5,r17
2202cd54:	10000826 	beq	r2,zero,2202cd78 <__subdf3+0x798>
2202cd58:	1810d0fa 	srli	r8,r3,3
2202cd5c:	4080022c 	andhi	r2,r8,8
2202cd60:	1000051e 	bne	r2,zero,2202cd78 <__subdf3+0x798>
2202cd64:	300cd0fa 	srli	r6,r6,3
2202cd68:	1804977a 	slli	r2,r3,29
2202cd6c:	4009883a 	mov	r4,r8
2202cd70:	3825883a 	mov	r18,r7
2202cd74:	11a2b03a 	or	r17,r2,r6
2202cd78:	880ad77a 	srli	r5,r17,29
2202cd7c:	200890fa 	slli	r4,r4,3
2202cd80:	882290fa 	slli	r17,r17,3
2202cd84:	0401ffc4 	movi	r16,2047
2202cd88:	290ab03a 	or	r5,r5,r4
2202cd8c:	003e3706 	br	2202c66c <__alt_data_end+0xfffed26c>
2202cd90:	0101ffc4 	movi	r4,2047
2202cd94:	513fc71e 	bne	r10,r4,2202ccb4 <__alt_data_end+0xfffed8b4>
2202cd98:	180b883a 	mov	r5,r3
2202cd9c:	3023883a 	mov	r17,r6
2202cda0:	5021883a 	mov	r16,r10
2202cda4:	003e3106 	br	2202c66c <__alt_data_end+0xfffed26c>
2202cda8:	10002d26 	beq	r2,zero,2202ce60 <__subdf3+0x880>
2202cdac:	1984b03a 	or	r2,r3,r6
2202cdb0:	10000e26 	beq	r2,zero,2202cdec <__subdf3+0x80c>
2202cdb4:	2808d0fa 	srli	r4,r5,3
2202cdb8:	8822d0fa 	srli	r17,r17,3
2202cdbc:	280a977a 	slli	r5,r5,29
2202cdc0:	2080022c 	andhi	r2,r4,8
2202cdc4:	2c62b03a 	or	r17,r5,r17
2202cdc8:	103feb26 	beq	r2,zero,2202cd78 <__alt_data_end+0xfffed978>
2202cdcc:	180ed0fa 	srli	r7,r3,3
2202cdd0:	3880022c 	andhi	r2,r7,8
2202cdd4:	103fe81e 	bne	r2,zero,2202cd78 <__alt_data_end+0xfffed978>
2202cdd8:	300cd0fa 	srli	r6,r6,3
2202cddc:	1804977a 	slli	r2,r3,29
2202cde0:	3809883a 	mov	r4,r7
2202cde4:	11a2b03a 	or	r17,r2,r6
2202cde8:	003fe306 	br	2202cd78 <__alt_data_end+0xfffed978>
2202cdec:	0401ffc4 	movi	r16,2047
2202cdf0:	003e1e06 	br	2202c66c <__alt_data_end+0xfffed26c>
2202cdf4:	0005883a 	mov	r2,zero
2202cdf8:	003f8306 	br	2202cc08 <__alt_data_end+0xfffed808>
2202cdfc:	113ff804 	addi	r4,r2,-32
2202ce00:	02000804 	movi	r8,32
2202ce04:	2908d83a 	srl	r4,r5,r4
2202ce08:	12002526 	beq	r2,r8,2202cea0 <__subdf3+0x8c0>
2202ce0c:	02001004 	movi	r8,64
2202ce10:	4085c83a 	sub	r2,r8,r2
2202ce14:	288a983a 	sll	r5,r5,r2
2202ce18:	2c62b03a 	or	r17,r5,r17
2202ce1c:	8822c03a 	cmpne	r17,r17,zero
2202ce20:	8922b03a 	or	r17,r17,r4
2202ce24:	0005883a 	mov	r2,zero
2202ce28:	003f2406 	br	2202cabc <__alt_data_end+0xfffed6bc>
2202ce2c:	01402034 	movhi	r5,128
2202ce30:	0011883a 	mov	r8,zero
2202ce34:	297fffc4 	addi	r5,r5,-1
2202ce38:	047ffe04 	movi	r17,-8
2202ce3c:	0401ffc4 	movi	r16,2047
2202ce40:	003e6a06 	br	2202c7ec <__alt_data_end+0xfffed3ec>
2202ce44:	2c62b03a 	or	r17,r5,r17
2202ce48:	8822c03a 	cmpne	r17,r17,zero
2202ce4c:	0005883a 	mov	r2,zero
2202ce50:	003fa506 	br	2202cce8 <__alt_data_end+0xfffed8e8>
2202ce54:	180b883a 	mov	r5,r3
2202ce58:	3023883a 	mov	r17,r6
2202ce5c:	003e0306 	br	2202c66c <__alt_data_end+0xfffed26c>
2202ce60:	180b883a 	mov	r5,r3
2202ce64:	3023883a 	mov	r17,r6
2202ce68:	0401ffc4 	movi	r16,2047
2202ce6c:	003dff06 	br	2202c66c <__alt_data_end+0xfffed26c>
2202ce70:	113ff804 	addi	r4,r2,-32
2202ce74:	01c00804 	movi	r7,32
2202ce78:	2908d83a 	srl	r4,r5,r4
2202ce7c:	11c00a26 	beq	r2,r7,2202cea8 <__subdf3+0x8c8>
2202ce80:	01c01004 	movi	r7,64
2202ce84:	3885c83a 	sub	r2,r7,r2
2202ce88:	288a983a 	sll	r5,r5,r2
2202ce8c:	2c62b03a 	or	r17,r5,r17
2202ce90:	8822c03a 	cmpne	r17,r17,zero
2202ce94:	8922b03a 	or	r17,r17,r4
2202ce98:	0005883a 	mov	r2,zero
2202ce9c:	003f9206 	br	2202cce8 <__alt_data_end+0xfffed8e8>
2202cea0:	000b883a 	mov	r5,zero
2202cea4:	003fdc06 	br	2202ce18 <__alt_data_end+0xfffeda18>
2202cea8:	000b883a 	mov	r5,zero
2202ceac:	003ff706 	br	2202ce8c <__alt_data_end+0xfffeda8c>

2202ceb0 <__fixdfsi>:
2202ceb0:	2806d53a 	srli	r3,r5,20
2202ceb4:	00800434 	movhi	r2,16
2202ceb8:	10bfffc4 	addi	r2,r2,-1
2202cebc:	18c1ffcc 	andi	r3,r3,2047
2202cec0:	0180ff84 	movi	r6,1022
2202cec4:	2884703a 	and	r2,r5,r2
2202cec8:	280ad7fa 	srli	r5,r5,31
2202cecc:	30c0130e 	bge	r6,r3,2202cf1c <__fixdfsi+0x6c>
2202ced0:	01810744 	movi	r6,1053
2202ced4:	30c00d16 	blt	r6,r3,2202cf0c <__fixdfsi+0x5c>
2202ced8:	01810cc4 	movi	r6,1075
2202cedc:	30cdc83a 	sub	r6,r6,r3
2202cee0:	01c007c4 	movi	r7,31
2202cee4:	10800434 	orhi	r2,r2,16
2202cee8:	39800e0e 	bge	r7,r6,2202cf24 <__fixdfsi+0x74>
2202ceec:	010104c4 	movi	r4,1043
2202cef0:	20c7c83a 	sub	r3,r4,r3
2202cef4:	10c6d83a 	srl	r3,r2,r3
2202cef8:	29403fcc 	andi	r5,r5,255
2202cefc:	0145c83a 	sub	r2,zero,r5
2202cf00:	1884f03a 	xor	r2,r3,r2
2202cf04:	1145883a 	add	r2,r2,r5
2202cf08:	f800283a 	ret
2202cf0c:	00a00034 	movhi	r2,32768
2202cf10:	10bfffc4 	addi	r2,r2,-1
2202cf14:	2885883a 	add	r2,r5,r2
2202cf18:	f800283a 	ret
2202cf1c:	0005883a 	mov	r2,zero
2202cf20:	f800283a 	ret
2202cf24:	18fefb44 	addi	r3,r3,-1043
2202cf28:	2188d83a 	srl	r4,r4,r6
2202cf2c:	10c6983a 	sll	r3,r2,r3
2202cf30:	20c6b03a 	or	r3,r4,r3
2202cf34:	003ff006 	br	2202cef8 <__alt_data_end+0xfffedaf8>

2202cf38 <__floatsidf>:
2202cf38:	defffd04 	addi	sp,sp,-12
2202cf3c:	dc400115 	stw	r17,4(sp)
2202cf40:	dfc00215 	stw	ra,8(sp)
2202cf44:	dc000015 	stw	r16,0(sp)
2202cf48:	2023883a 	mov	r17,r4
2202cf4c:	20001426 	beq	r4,zero,2202cfa0 <__floatsidf+0x68>
2202cf50:	2020d7fa 	srli	r16,r4,31
2202cf54:	80000126 	beq	r16,zero,2202cf5c <__floatsidf+0x24>
2202cf58:	0123c83a 	sub	r17,zero,r4
2202cf5c:	8809883a 	mov	r4,r17
2202cf60:	202d0ac0 	call	2202d0ac <__clzsi2>
2202cf64:	01410784 	movi	r5,1054
2202cf68:	00c00284 	movi	r3,10
2202cf6c:	288bc83a 	sub	r5,r5,r2
2202cf70:	18801c16 	blt	r3,r2,2202cfe4 <__floatsidf+0xac>
2202cf74:	00c002c4 	movi	r3,11
2202cf78:	1887c83a 	sub	r3,r3,r2
2202cf7c:	88c8d83a 	srl	r4,r17,r3
2202cf80:	00c00434 	movhi	r3,16
2202cf84:	18ffffc4 	addi	r3,r3,-1
2202cf88:	10800544 	addi	r2,r2,21
2202cf8c:	20c8703a 	and	r4,r4,r3
2202cf90:	8884983a 	sll	r2,r17,r2
2202cf94:	28c1ffcc 	andi	r3,r5,2047
2202cf98:	800d883a 	mov	r6,r16
2202cf9c:	00000406 	br	2202cfb0 <__floatsidf+0x78>
2202cfa0:	000d883a 	mov	r6,zero
2202cfa4:	0007883a 	mov	r3,zero
2202cfa8:	0009883a 	mov	r4,zero
2202cfac:	0005883a 	mov	r2,zero
2202cfb0:	180a953a 	slli	r5,r3,20
2202cfb4:	31803fcc 	andi	r6,r6,255
2202cfb8:	00c00434 	movhi	r3,16
2202cfbc:	300c97fa 	slli	r6,r6,31
2202cfc0:	18ffffc4 	addi	r3,r3,-1
2202cfc4:	20c6703a 	and	r3,r4,r3
2202cfc8:	1946b03a 	or	r3,r3,r5
2202cfcc:	1986b03a 	or	r3,r3,r6
2202cfd0:	dfc00217 	ldw	ra,8(sp)
2202cfd4:	dc400117 	ldw	r17,4(sp)
2202cfd8:	dc000017 	ldw	r16,0(sp)
2202cfdc:	dec00304 	addi	sp,sp,12
2202cfe0:	f800283a 	ret
2202cfe4:	10fffd44 	addi	r3,r2,-11
2202cfe8:	88c8983a 	sll	r4,r17,r3
2202cfec:	00800434 	movhi	r2,16
2202cff0:	10bfffc4 	addi	r2,r2,-1
2202cff4:	2088703a 	and	r4,r4,r2
2202cff8:	28c1ffcc 	andi	r3,r5,2047
2202cffc:	800d883a 	mov	r6,r16
2202d000:	0005883a 	mov	r2,zero
2202d004:	003fea06 	br	2202cfb0 <__alt_data_end+0xfffedbb0>

2202d008 <__floatunsidf>:
2202d008:	defffe04 	addi	sp,sp,-8
2202d00c:	dc000015 	stw	r16,0(sp)
2202d010:	dfc00115 	stw	ra,4(sp)
2202d014:	2021883a 	mov	r16,r4
2202d018:	20001026 	beq	r4,zero,2202d05c <__floatunsidf+0x54>
2202d01c:	202d0ac0 	call	2202d0ac <__clzsi2>
2202d020:	01410784 	movi	r5,1054
2202d024:	100d883a 	mov	r6,r2
2202d028:	288bc83a 	sub	r5,r5,r2
2202d02c:	00800284 	movi	r2,10
2202d030:	11801616 	blt	r2,r6,2202d08c <__floatunsidf+0x84>
2202d034:	008002c4 	movi	r2,11
2202d038:	1185c83a 	sub	r2,r2,r6
2202d03c:	8084d83a 	srl	r2,r16,r2
2202d040:	00c00434 	movhi	r3,16
2202d044:	31c00544 	addi	r7,r6,21
2202d048:	18ffffc4 	addi	r3,r3,-1
2202d04c:	81e0983a 	sll	r16,r16,r7
2202d050:	10cc703a 	and	r6,r2,r3
2202d054:	2941ffcc 	andi	r5,r5,2047
2202d058:	00000206 	br	2202d064 <__floatunsidf+0x5c>
2202d05c:	000b883a 	mov	r5,zero
2202d060:	000d883a 	mov	r6,zero
2202d064:	280a953a 	slli	r5,r5,20
2202d068:	00c00434 	movhi	r3,16
2202d06c:	18ffffc4 	addi	r3,r3,-1
2202d070:	30c6703a 	and	r3,r6,r3
2202d074:	8005883a 	mov	r2,r16
2202d078:	1946b03a 	or	r3,r3,r5
2202d07c:	dfc00117 	ldw	ra,4(sp)
2202d080:	dc000017 	ldw	r16,0(sp)
2202d084:	dec00204 	addi	sp,sp,8
2202d088:	f800283a 	ret
2202d08c:	31bffd44 	addi	r6,r6,-11
2202d090:	818c983a 	sll	r6,r16,r6
2202d094:	00800434 	movhi	r2,16
2202d098:	10bfffc4 	addi	r2,r2,-1
2202d09c:	2941ffcc 	andi	r5,r5,2047
2202d0a0:	0021883a 	mov	r16,zero
2202d0a4:	308c703a 	and	r6,r6,r2
2202d0a8:	003fee06 	br	2202d064 <__alt_data_end+0xfffedc64>

2202d0ac <__clzsi2>:
2202d0ac:	00bfffd4 	movui	r2,65535
2202d0b0:	11000b36 	bltu	r2,r4,2202d0e0 <__clzsi2+0x34>
2202d0b4:	00803fc4 	movi	r2,255
2202d0b8:	1100122e 	bgeu	r2,r4,2202d104 <__clzsi2+0x58>
2202d0bc:	00c00204 	movi	r3,8
2202d0c0:	01400604 	movi	r5,24
2202d0c4:	20c8d83a 	srl	r4,r4,r3
2202d0c8:	008880f4 	movhi	r2,8707
2202d0cc:	10bf8d04 	addi	r2,r2,-460
2202d0d0:	1109883a 	add	r4,r2,r4
2202d0d4:	20800003 	ldbu	r2,0(r4)
2202d0d8:	2885c83a 	sub	r2,r5,r2
2202d0dc:	f800283a 	ret
2202d0e0:	00804034 	movhi	r2,256
2202d0e4:	10bfffc4 	addi	r2,r2,-1
2202d0e8:	11000336 	bltu	r2,r4,2202d0f8 <__clzsi2+0x4c>
2202d0ec:	00c00404 	movi	r3,16
2202d0f0:	180b883a 	mov	r5,r3
2202d0f4:	003ff306 	br	2202d0c4 <__alt_data_end+0xfffedcc4>
2202d0f8:	00c00604 	movi	r3,24
2202d0fc:	01400204 	movi	r5,8
2202d100:	003ff006 	br	2202d0c4 <__alt_data_end+0xfffedcc4>
2202d104:	0007883a 	mov	r3,zero
2202d108:	01400804 	movi	r5,32
2202d10c:	003fed06 	br	2202d0c4 <__alt_data_end+0xfffedcc4>

2202d110 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2202d110:	defffe04 	addi	sp,sp,-8
2202d114:	dfc00115 	stw	ra,4(sp)
2202d118:	df000015 	stw	fp,0(sp)
2202d11c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2202d120:	008880f4 	movhi	r2,8707
2202d124:	10868e04 	addi	r2,r2,6712
2202d128:	10800017 	ldw	r2,0(r2)
2202d12c:	10000526 	beq	r2,zero,2202d144 <alt_get_errno+0x34>
2202d130:	008880f4 	movhi	r2,8707
2202d134:	10868e04 	addi	r2,r2,6712
2202d138:	10800017 	ldw	r2,0(r2)
2202d13c:	103ee83a 	callr	r2
2202d140:	00000206 	br	2202d14c <alt_get_errno+0x3c>
2202d144:	008880f4 	movhi	r2,8707
2202d148:	108d5404 	addi	r2,r2,13648
}
2202d14c:	e037883a 	mov	sp,fp
2202d150:	dfc00117 	ldw	ra,4(sp)
2202d154:	df000017 	ldw	fp,0(sp)
2202d158:	dec00204 	addi	sp,sp,8
2202d15c:	f800283a 	ret

2202d160 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
2202d160:	defffb04 	addi	sp,sp,-20
2202d164:	dfc00415 	stw	ra,16(sp)
2202d168:	df000315 	stw	fp,12(sp)
2202d16c:	df000304 	addi	fp,sp,12
2202d170:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
2202d174:	e0bfff17 	ldw	r2,-4(fp)
2202d178:	10000616 	blt	r2,zero,2202d194 <close+0x34>
2202d17c:	e0bfff17 	ldw	r2,-4(fp)
2202d180:	10c00324 	muli	r3,r2,12
2202d184:	008880f4 	movhi	r2,8707
2202d188:	10820b04 	addi	r2,r2,2092
2202d18c:	1885883a 	add	r2,r3,r2
2202d190:	00000106 	br	2202d198 <close+0x38>
2202d194:	0005883a 	mov	r2,zero
2202d198:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
2202d19c:	e0bffd17 	ldw	r2,-12(fp)
2202d1a0:	10001926 	beq	r2,zero,2202d208 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
2202d1a4:	e0bffd17 	ldw	r2,-12(fp)
2202d1a8:	10800017 	ldw	r2,0(r2)
2202d1ac:	10800417 	ldw	r2,16(r2)
2202d1b0:	10000626 	beq	r2,zero,2202d1cc <close+0x6c>
2202d1b4:	e0bffd17 	ldw	r2,-12(fp)
2202d1b8:	10800017 	ldw	r2,0(r2)
2202d1bc:	10800417 	ldw	r2,16(r2)
2202d1c0:	e13ffd17 	ldw	r4,-12(fp)
2202d1c4:	103ee83a 	callr	r2
2202d1c8:	00000106 	br	2202d1d0 <close+0x70>
2202d1cc:	0005883a 	mov	r2,zero
2202d1d0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
2202d1d4:	e13fff17 	ldw	r4,-4(fp)
2202d1d8:	202d8a00 	call	2202d8a0 <alt_release_fd>
    if (rval < 0)
2202d1dc:	e0bffe17 	ldw	r2,-8(fp)
2202d1e0:	1000070e 	bge	r2,zero,2202d200 <close+0xa0>
    {
      ALT_ERRNO = -rval;
2202d1e4:	202d1100 	call	2202d110 <alt_get_errno>
2202d1e8:	1007883a 	mov	r3,r2
2202d1ec:	e0bffe17 	ldw	r2,-8(fp)
2202d1f0:	0085c83a 	sub	r2,zero,r2
2202d1f4:	18800015 	stw	r2,0(r3)
      return -1;
2202d1f8:	00bfffc4 	movi	r2,-1
2202d1fc:	00000706 	br	2202d21c <close+0xbc>
    }
    return 0;
2202d200:	0005883a 	mov	r2,zero
2202d204:	00000506 	br	2202d21c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
2202d208:	202d1100 	call	2202d110 <alt_get_errno>
2202d20c:	1007883a 	mov	r3,r2
2202d210:	00801444 	movi	r2,81
2202d214:	18800015 	stw	r2,0(r3)
    return -1;
2202d218:	00bfffc4 	movi	r2,-1
  }
}
2202d21c:	e037883a 	mov	sp,fp
2202d220:	dfc00117 	ldw	ra,4(sp)
2202d224:	df000017 	ldw	fp,0(sp)
2202d228:	dec00204 	addi	sp,sp,8
2202d22c:	f800283a 	ret

2202d230 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
2202d230:	defffe04 	addi	sp,sp,-8
2202d234:	df000115 	stw	fp,4(sp)
2202d238:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
2202d23c:	e03fff15 	stw	zero,-4(fp)
2202d240:	00000506 	br	2202d258 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
2202d244:	e0bfff17 	ldw	r2,-4(fp)
2202d248:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
2202d24c:	e0bfff17 	ldw	r2,-4(fp)
2202d250:	10800804 	addi	r2,r2,32
2202d254:	e0bfff15 	stw	r2,-4(fp)
2202d258:	e0bfff17 	ldw	r2,-4(fp)
2202d25c:	10820030 	cmpltui	r2,r2,2048
2202d260:	103ff81e 	bne	r2,zero,2202d244 <__alt_data_end+0xfffede44>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
2202d264:	e037883a 	mov	sp,fp
2202d268:	df000017 	ldw	fp,0(sp)
2202d26c:	dec00104 	addi	sp,sp,4
2202d270:	f800283a 	ret

2202d274 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
2202d274:	defffc04 	addi	sp,sp,-16
2202d278:	df000315 	stw	fp,12(sp)
2202d27c:	df000304 	addi	fp,sp,12
2202d280:	e13ffd15 	stw	r4,-12(fp)
2202d284:	e17ffe15 	stw	r5,-8(fp)
2202d288:	e1bfff15 	stw	r6,-4(fp)
  return len;
2202d28c:	e0bfff17 	ldw	r2,-4(fp)
}
2202d290:	e037883a 	mov	sp,fp
2202d294:	df000017 	ldw	fp,0(sp)
2202d298:	dec00104 	addi	sp,sp,4
2202d29c:	f800283a 	ret

2202d2a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2202d2a0:	defffe04 	addi	sp,sp,-8
2202d2a4:	dfc00115 	stw	ra,4(sp)
2202d2a8:	df000015 	stw	fp,0(sp)
2202d2ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2202d2b0:	008880f4 	movhi	r2,8707
2202d2b4:	10868e04 	addi	r2,r2,6712
2202d2b8:	10800017 	ldw	r2,0(r2)
2202d2bc:	10000526 	beq	r2,zero,2202d2d4 <alt_get_errno+0x34>
2202d2c0:	008880f4 	movhi	r2,8707
2202d2c4:	10868e04 	addi	r2,r2,6712
2202d2c8:	10800017 	ldw	r2,0(r2)
2202d2cc:	103ee83a 	callr	r2
2202d2d0:	00000206 	br	2202d2dc <alt_get_errno+0x3c>
2202d2d4:	008880f4 	movhi	r2,8707
2202d2d8:	108d5404 	addi	r2,r2,13648
}
2202d2dc:	e037883a 	mov	sp,fp
2202d2e0:	dfc00117 	ldw	ra,4(sp)
2202d2e4:	df000017 	ldw	fp,0(sp)
2202d2e8:	dec00204 	addi	sp,sp,8
2202d2ec:	f800283a 	ret

2202d2f0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
2202d2f0:	defffb04 	addi	sp,sp,-20
2202d2f4:	dfc00415 	stw	ra,16(sp)
2202d2f8:	df000315 	stw	fp,12(sp)
2202d2fc:	df000304 	addi	fp,sp,12
2202d300:	e13ffe15 	stw	r4,-8(fp)
2202d304:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
2202d308:	e0bffe17 	ldw	r2,-8(fp)
2202d30c:	10000616 	blt	r2,zero,2202d328 <fstat+0x38>
2202d310:	e0bffe17 	ldw	r2,-8(fp)
2202d314:	10c00324 	muli	r3,r2,12
2202d318:	008880f4 	movhi	r2,8707
2202d31c:	10820b04 	addi	r2,r2,2092
2202d320:	1885883a 	add	r2,r3,r2
2202d324:	00000106 	br	2202d32c <fstat+0x3c>
2202d328:	0005883a 	mov	r2,zero
2202d32c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
2202d330:	e0bffd17 	ldw	r2,-12(fp)
2202d334:	10001026 	beq	r2,zero,2202d378 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
2202d338:	e0bffd17 	ldw	r2,-12(fp)
2202d33c:	10800017 	ldw	r2,0(r2)
2202d340:	10800817 	ldw	r2,32(r2)
2202d344:	10000726 	beq	r2,zero,2202d364 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
2202d348:	e0bffd17 	ldw	r2,-12(fp)
2202d34c:	10800017 	ldw	r2,0(r2)
2202d350:	10800817 	ldw	r2,32(r2)
2202d354:	e13ffd17 	ldw	r4,-12(fp)
2202d358:	e17fff17 	ldw	r5,-4(fp)
2202d35c:	103ee83a 	callr	r2
2202d360:	00000a06 	br	2202d38c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
2202d364:	e0bfff17 	ldw	r2,-4(fp)
2202d368:	00c80004 	movi	r3,8192
2202d36c:	10c00115 	stw	r3,4(r2)
      return 0;
2202d370:	0005883a 	mov	r2,zero
2202d374:	00000506 	br	2202d38c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
2202d378:	202d2a00 	call	2202d2a0 <alt_get_errno>
2202d37c:	1007883a 	mov	r3,r2
2202d380:	00801444 	movi	r2,81
2202d384:	18800015 	stw	r2,0(r3)
    return -1;
2202d388:	00bfffc4 	movi	r2,-1
  }
}
2202d38c:	e037883a 	mov	sp,fp
2202d390:	dfc00117 	ldw	ra,4(sp)
2202d394:	df000017 	ldw	fp,0(sp)
2202d398:	dec00204 	addi	sp,sp,8
2202d39c:	f800283a 	ret

2202d3a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2202d3a0:	defffe04 	addi	sp,sp,-8
2202d3a4:	dfc00115 	stw	ra,4(sp)
2202d3a8:	df000015 	stw	fp,0(sp)
2202d3ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2202d3b0:	008880f4 	movhi	r2,8707
2202d3b4:	10868e04 	addi	r2,r2,6712
2202d3b8:	10800017 	ldw	r2,0(r2)
2202d3bc:	10000526 	beq	r2,zero,2202d3d4 <alt_get_errno+0x34>
2202d3c0:	008880f4 	movhi	r2,8707
2202d3c4:	10868e04 	addi	r2,r2,6712
2202d3c8:	10800017 	ldw	r2,0(r2)
2202d3cc:	103ee83a 	callr	r2
2202d3d0:	00000206 	br	2202d3dc <alt_get_errno+0x3c>
2202d3d4:	008880f4 	movhi	r2,8707
2202d3d8:	108d5404 	addi	r2,r2,13648
}
2202d3dc:	e037883a 	mov	sp,fp
2202d3e0:	dfc00117 	ldw	ra,4(sp)
2202d3e4:	df000017 	ldw	fp,0(sp)
2202d3e8:	dec00204 	addi	sp,sp,8
2202d3ec:	f800283a 	ret

2202d3f0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
2202d3f0:	deffed04 	addi	sp,sp,-76
2202d3f4:	dfc01215 	stw	ra,72(sp)
2202d3f8:	df001115 	stw	fp,68(sp)
2202d3fc:	df001104 	addi	fp,sp,68
2202d400:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
2202d404:	e0bfff17 	ldw	r2,-4(fp)
2202d408:	10000616 	blt	r2,zero,2202d424 <isatty+0x34>
2202d40c:	e0bfff17 	ldw	r2,-4(fp)
2202d410:	10c00324 	muli	r3,r2,12
2202d414:	008880f4 	movhi	r2,8707
2202d418:	10820b04 	addi	r2,r2,2092
2202d41c:	1885883a 	add	r2,r3,r2
2202d420:	00000106 	br	2202d428 <isatty+0x38>
2202d424:	0005883a 	mov	r2,zero
2202d428:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
2202d42c:	e0bfef17 	ldw	r2,-68(fp)
2202d430:	10000e26 	beq	r2,zero,2202d46c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
2202d434:	e0bfef17 	ldw	r2,-68(fp)
2202d438:	10800017 	ldw	r2,0(r2)
2202d43c:	10800817 	ldw	r2,32(r2)
2202d440:	1000021e 	bne	r2,zero,2202d44c <isatty+0x5c>
    {
      return 1;
2202d444:	00800044 	movi	r2,1
2202d448:	00000d06 	br	2202d480 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
2202d44c:	e0bff004 	addi	r2,fp,-64
2202d450:	e13fff17 	ldw	r4,-4(fp)
2202d454:	100b883a 	mov	r5,r2
2202d458:	202d2f00 	call	2202d2f0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
2202d45c:	e0bff117 	ldw	r2,-60(fp)
2202d460:	10880020 	cmpeqi	r2,r2,8192
2202d464:	10803fcc 	andi	r2,r2,255
2202d468:	00000506 	br	2202d480 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
2202d46c:	202d3a00 	call	2202d3a0 <alt_get_errno>
2202d470:	1007883a 	mov	r3,r2
2202d474:	00801444 	movi	r2,81
2202d478:	18800015 	stw	r2,0(r3)
    return 0;
2202d47c:	0005883a 	mov	r2,zero
  }
}
2202d480:	e037883a 	mov	sp,fp
2202d484:	dfc00117 	ldw	ra,4(sp)
2202d488:	df000017 	ldw	fp,0(sp)
2202d48c:	dec00204 	addi	sp,sp,8
2202d490:	f800283a 	ret

2202d494 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
2202d494:	defffc04 	addi	sp,sp,-16
2202d498:	df000315 	stw	fp,12(sp)
2202d49c:	df000304 	addi	fp,sp,12
2202d4a0:	e13ffd15 	stw	r4,-12(fp)
2202d4a4:	e17ffe15 	stw	r5,-8(fp)
2202d4a8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
2202d4ac:	e0fffe17 	ldw	r3,-8(fp)
2202d4b0:	e0bffd17 	ldw	r2,-12(fp)
2202d4b4:	18800c26 	beq	r3,r2,2202d4e8 <alt_load_section+0x54>
  {
    while( to != end )
2202d4b8:	00000806 	br	2202d4dc <alt_load_section+0x48>
    {
      *to++ = *from++;
2202d4bc:	e0bffe17 	ldw	r2,-8(fp)
2202d4c0:	10c00104 	addi	r3,r2,4
2202d4c4:	e0fffe15 	stw	r3,-8(fp)
2202d4c8:	e0fffd17 	ldw	r3,-12(fp)
2202d4cc:	19000104 	addi	r4,r3,4
2202d4d0:	e13ffd15 	stw	r4,-12(fp)
2202d4d4:	18c00017 	ldw	r3,0(r3)
2202d4d8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
2202d4dc:	e0fffe17 	ldw	r3,-8(fp)
2202d4e0:	e0bfff17 	ldw	r2,-4(fp)
2202d4e4:	18bff51e 	bne	r3,r2,2202d4bc <__alt_data_end+0xfffee0bc>
    {
      *to++ = *from++;
    }
  }
}
2202d4e8:	e037883a 	mov	sp,fp
2202d4ec:	df000017 	ldw	fp,0(sp)
2202d4f0:	dec00104 	addi	sp,sp,4
2202d4f4:	f800283a 	ret

2202d4f8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
2202d4f8:	defffe04 	addi	sp,sp,-8
2202d4fc:	dfc00115 	stw	ra,4(sp)
2202d500:	df000015 	stw	fp,0(sp)
2202d504:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
2202d508:	010880f4 	movhi	r4,8707
2202d50c:	21069304 	addi	r4,r4,6732
2202d510:	014880f4 	movhi	r5,8707
2202d514:	297fd804 	addi	r5,r5,-160
2202d518:	018880f4 	movhi	r6,8707
2202d51c:	31869304 	addi	r6,r6,6732
2202d520:	202d4940 	call	2202d494 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
2202d524:	010880b4 	movhi	r4,8706
2202d528:	21000804 	addi	r4,r4,32
2202d52c:	014880b4 	movhi	r5,8706
2202d530:	29400804 	addi	r5,r5,32
2202d534:	018880b4 	movhi	r6,8706
2202d538:	31809004 	addi	r6,r6,576
2202d53c:	202d4940 	call	2202d494 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
2202d540:	010880f4 	movhi	r4,8707
2202d544:	213ec204 	addi	r4,r4,-1272
2202d548:	014880f4 	movhi	r5,8707
2202d54c:	297ec204 	addi	r5,r5,-1272
2202d550:	018880f4 	movhi	r6,8707
2202d554:	31bfd804 	addi	r6,r6,-160
2202d558:	202d4940 	call	2202d494 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
2202d55c:	202d2300 	call	2202d230 <alt_dcache_flush_all>
  alt_icache_flush_all();
2202d560:	202ed180 	call	2202ed18 <alt_icache_flush_all>
}
2202d564:	e037883a 	mov	sp,fp
2202d568:	dfc00117 	ldw	ra,4(sp)
2202d56c:	df000017 	ldw	fp,0(sp)
2202d570:	dec00204 	addi	sp,sp,8
2202d574:	f800283a 	ret

2202d578 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2202d578:	defffe04 	addi	sp,sp,-8
2202d57c:	dfc00115 	stw	ra,4(sp)
2202d580:	df000015 	stw	fp,0(sp)
2202d584:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2202d588:	008880f4 	movhi	r2,8707
2202d58c:	10868e04 	addi	r2,r2,6712
2202d590:	10800017 	ldw	r2,0(r2)
2202d594:	10000526 	beq	r2,zero,2202d5ac <alt_get_errno+0x34>
2202d598:	008880f4 	movhi	r2,8707
2202d59c:	10868e04 	addi	r2,r2,6712
2202d5a0:	10800017 	ldw	r2,0(r2)
2202d5a4:	103ee83a 	callr	r2
2202d5a8:	00000206 	br	2202d5b4 <alt_get_errno+0x3c>
2202d5ac:	008880f4 	movhi	r2,8707
2202d5b0:	108d5404 	addi	r2,r2,13648
}
2202d5b4:	e037883a 	mov	sp,fp
2202d5b8:	dfc00117 	ldw	ra,4(sp)
2202d5bc:	df000017 	ldw	fp,0(sp)
2202d5c0:	dec00204 	addi	sp,sp,8
2202d5c4:	f800283a 	ret

2202d5c8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
2202d5c8:	defff904 	addi	sp,sp,-28
2202d5cc:	dfc00615 	stw	ra,24(sp)
2202d5d0:	df000515 	stw	fp,20(sp)
2202d5d4:	df000504 	addi	fp,sp,20
2202d5d8:	e13ffd15 	stw	r4,-12(fp)
2202d5dc:	e17ffe15 	stw	r5,-8(fp)
2202d5e0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
2202d5e4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
2202d5e8:	e0bffd17 	ldw	r2,-12(fp)
2202d5ec:	10000616 	blt	r2,zero,2202d608 <lseek+0x40>
2202d5f0:	e0bffd17 	ldw	r2,-12(fp)
2202d5f4:	10c00324 	muli	r3,r2,12
2202d5f8:	008880f4 	movhi	r2,8707
2202d5fc:	10820b04 	addi	r2,r2,2092
2202d600:	1885883a 	add	r2,r3,r2
2202d604:	00000106 	br	2202d60c <lseek+0x44>
2202d608:	0005883a 	mov	r2,zero
2202d60c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
2202d610:	e0bffc17 	ldw	r2,-16(fp)
2202d614:	10001026 	beq	r2,zero,2202d658 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
2202d618:	e0bffc17 	ldw	r2,-16(fp)
2202d61c:	10800017 	ldw	r2,0(r2)
2202d620:	10800717 	ldw	r2,28(r2)
2202d624:	10000926 	beq	r2,zero,2202d64c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
2202d628:	e0bffc17 	ldw	r2,-16(fp)
2202d62c:	10800017 	ldw	r2,0(r2)
2202d630:	10800717 	ldw	r2,28(r2)
2202d634:	e13ffc17 	ldw	r4,-16(fp)
2202d638:	e17ffe17 	ldw	r5,-8(fp)
2202d63c:	e1bfff17 	ldw	r6,-4(fp)
2202d640:	103ee83a 	callr	r2
2202d644:	e0bffb15 	stw	r2,-20(fp)
2202d648:	00000506 	br	2202d660 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
2202d64c:	00bfde84 	movi	r2,-134
2202d650:	e0bffb15 	stw	r2,-20(fp)
2202d654:	00000206 	br	2202d660 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
2202d658:	00bfebc4 	movi	r2,-81
2202d65c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
2202d660:	e0bffb17 	ldw	r2,-20(fp)
2202d664:	1000070e 	bge	r2,zero,2202d684 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
2202d668:	202d5780 	call	2202d578 <alt_get_errno>
2202d66c:	1007883a 	mov	r3,r2
2202d670:	e0bffb17 	ldw	r2,-20(fp)
2202d674:	0085c83a 	sub	r2,zero,r2
2202d678:	18800015 	stw	r2,0(r3)
    rc = -1;
2202d67c:	00bfffc4 	movi	r2,-1
2202d680:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
2202d684:	e0bffb17 	ldw	r2,-20(fp)
}
2202d688:	e037883a 	mov	sp,fp
2202d68c:	dfc00117 	ldw	ra,4(sp)
2202d690:	df000017 	ldw	fp,0(sp)
2202d694:	dec00204 	addi	sp,sp,8
2202d698:	f800283a 	ret

2202d69c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
2202d69c:	defffd04 	addi	sp,sp,-12
2202d6a0:	dfc00215 	stw	ra,8(sp)
2202d6a4:	df000115 	stw	fp,4(sp)
2202d6a8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
2202d6ac:	0009883a 	mov	r4,zero
2202d6b0:	202dcfc0 	call	2202dcfc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
2202d6b4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
2202d6b8:	202dd300 	call	2202dd30 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
2202d6bc:	010880f4 	movhi	r4,8707
2202d6c0:	213fd004 	addi	r4,r4,-192
2202d6c4:	014880f4 	movhi	r5,8707
2202d6c8:	297fd004 	addi	r5,r5,-192
2202d6cc:	018880f4 	movhi	r6,8707
2202d6d0:	31bfd004 	addi	r6,r6,-192
2202d6d4:	202f0d80 	call	2202f0d8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
2202d6d8:	202ec600 	call	2202ec60 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
2202d6dc:	010880f4 	movhi	r4,8707
2202d6e0:	213b2f04 	addi	r4,r4,-4932
2202d6e4:	202f7640 	call	2202f764 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
2202d6e8:	d126d217 	ldw	r4,-25784(gp)
2202d6ec:	d0e6d317 	ldw	r3,-25780(gp)
2202d6f0:	d0a6d417 	ldw	r2,-25776(gp)
2202d6f4:	180b883a 	mov	r5,r3
2202d6f8:	100d883a 	mov	r6,r2
2202d6fc:	202028c0 	call	2202028c <main>
2202d700:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
2202d704:	01000044 	movi	r4,1
2202d708:	202d1600 	call	2202d160 <close>
  exit (result);
2202d70c:	e13fff17 	ldw	r4,-4(fp)
2202d710:	202f7780 	call	2202f778 <exit>

2202d714 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
2202d714:	defffe04 	addi	sp,sp,-8
2202d718:	df000115 	stw	fp,4(sp)
2202d71c:	df000104 	addi	fp,sp,4
2202d720:	e13fff15 	stw	r4,-4(fp)
}
2202d724:	e037883a 	mov	sp,fp
2202d728:	df000017 	ldw	fp,0(sp)
2202d72c:	dec00104 	addi	sp,sp,4
2202d730:	f800283a 	ret

2202d734 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
2202d734:	defffe04 	addi	sp,sp,-8
2202d738:	df000115 	stw	fp,4(sp)
2202d73c:	df000104 	addi	fp,sp,4
2202d740:	e13fff15 	stw	r4,-4(fp)
}
2202d744:	e037883a 	mov	sp,fp
2202d748:	df000017 	ldw	fp,0(sp)
2202d74c:	dec00104 	addi	sp,sp,4
2202d750:	f800283a 	ret

2202d754 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2202d754:	defffe04 	addi	sp,sp,-8
2202d758:	dfc00115 	stw	ra,4(sp)
2202d75c:	df000015 	stw	fp,0(sp)
2202d760:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2202d764:	008880f4 	movhi	r2,8707
2202d768:	10868e04 	addi	r2,r2,6712
2202d76c:	10800017 	ldw	r2,0(r2)
2202d770:	10000526 	beq	r2,zero,2202d788 <alt_get_errno+0x34>
2202d774:	008880f4 	movhi	r2,8707
2202d778:	10868e04 	addi	r2,r2,6712
2202d77c:	10800017 	ldw	r2,0(r2)
2202d780:	103ee83a 	callr	r2
2202d784:	00000206 	br	2202d790 <alt_get_errno+0x3c>
2202d788:	008880f4 	movhi	r2,8707
2202d78c:	108d5404 	addi	r2,r2,13648
}
2202d790:	e037883a 	mov	sp,fp
2202d794:	dfc00117 	ldw	ra,4(sp)
2202d798:	df000017 	ldw	fp,0(sp)
2202d79c:	dec00204 	addi	sp,sp,8
2202d7a0:	f800283a 	ret

2202d7a4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
2202d7a4:	defff904 	addi	sp,sp,-28
2202d7a8:	dfc00615 	stw	ra,24(sp)
2202d7ac:	df000515 	stw	fp,20(sp)
2202d7b0:	df000504 	addi	fp,sp,20
2202d7b4:	e13ffd15 	stw	r4,-12(fp)
2202d7b8:	e17ffe15 	stw	r5,-8(fp)
2202d7bc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
2202d7c0:	e0bffd17 	ldw	r2,-12(fp)
2202d7c4:	10000616 	blt	r2,zero,2202d7e0 <read+0x3c>
2202d7c8:	e0bffd17 	ldw	r2,-12(fp)
2202d7cc:	10c00324 	muli	r3,r2,12
2202d7d0:	008880f4 	movhi	r2,8707
2202d7d4:	10820b04 	addi	r2,r2,2092
2202d7d8:	1885883a 	add	r2,r3,r2
2202d7dc:	00000106 	br	2202d7e4 <read+0x40>
2202d7e0:	0005883a 	mov	r2,zero
2202d7e4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
2202d7e8:	e0bffb17 	ldw	r2,-20(fp)
2202d7ec:	10002226 	beq	r2,zero,2202d878 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
2202d7f0:	e0bffb17 	ldw	r2,-20(fp)
2202d7f4:	10800217 	ldw	r2,8(r2)
2202d7f8:	108000cc 	andi	r2,r2,3
2202d7fc:	10800060 	cmpeqi	r2,r2,1
2202d800:	1000181e 	bne	r2,zero,2202d864 <read+0xc0>
        (fd->dev->read))
2202d804:	e0bffb17 	ldw	r2,-20(fp)
2202d808:	10800017 	ldw	r2,0(r2)
2202d80c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
2202d810:	10001426 	beq	r2,zero,2202d864 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
2202d814:	e0bffb17 	ldw	r2,-20(fp)
2202d818:	10800017 	ldw	r2,0(r2)
2202d81c:	10800517 	ldw	r2,20(r2)
2202d820:	e0ffff17 	ldw	r3,-4(fp)
2202d824:	e13ffb17 	ldw	r4,-20(fp)
2202d828:	e17ffe17 	ldw	r5,-8(fp)
2202d82c:	180d883a 	mov	r6,r3
2202d830:	103ee83a 	callr	r2
2202d834:	e0bffc15 	stw	r2,-16(fp)
2202d838:	e0bffc17 	ldw	r2,-16(fp)
2202d83c:	1000070e 	bge	r2,zero,2202d85c <read+0xb8>
        {
          ALT_ERRNO = -rval;
2202d840:	202d7540 	call	2202d754 <alt_get_errno>
2202d844:	1007883a 	mov	r3,r2
2202d848:	e0bffc17 	ldw	r2,-16(fp)
2202d84c:	0085c83a 	sub	r2,zero,r2
2202d850:	18800015 	stw	r2,0(r3)
          return -1;
2202d854:	00bfffc4 	movi	r2,-1
2202d858:	00000c06 	br	2202d88c <read+0xe8>
        }
        return rval;
2202d85c:	e0bffc17 	ldw	r2,-16(fp)
2202d860:	00000a06 	br	2202d88c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
2202d864:	202d7540 	call	2202d754 <alt_get_errno>
2202d868:	1007883a 	mov	r3,r2
2202d86c:	00800344 	movi	r2,13
2202d870:	18800015 	stw	r2,0(r3)
2202d874:	00000406 	br	2202d888 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
2202d878:	202d7540 	call	2202d754 <alt_get_errno>
2202d87c:	1007883a 	mov	r3,r2
2202d880:	00801444 	movi	r2,81
2202d884:	18800015 	stw	r2,0(r3)
  }
  return -1;
2202d888:	00bfffc4 	movi	r2,-1
}
2202d88c:	e037883a 	mov	sp,fp
2202d890:	dfc00117 	ldw	ra,4(sp)
2202d894:	df000017 	ldw	fp,0(sp)
2202d898:	dec00204 	addi	sp,sp,8
2202d89c:	f800283a 	ret

2202d8a0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
2202d8a0:	defffe04 	addi	sp,sp,-8
2202d8a4:	df000115 	stw	fp,4(sp)
2202d8a8:	df000104 	addi	fp,sp,4
2202d8ac:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
2202d8b0:	e0bfff17 	ldw	r2,-4(fp)
2202d8b4:	108000d0 	cmplti	r2,r2,3
2202d8b8:	10000d1e 	bne	r2,zero,2202d8f0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
2202d8bc:	008880f4 	movhi	r2,8707
2202d8c0:	10820b04 	addi	r2,r2,2092
2202d8c4:	e0ffff17 	ldw	r3,-4(fp)
2202d8c8:	18c00324 	muli	r3,r3,12
2202d8cc:	10c5883a 	add	r2,r2,r3
2202d8d0:	10800204 	addi	r2,r2,8
2202d8d4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
2202d8d8:	008880f4 	movhi	r2,8707
2202d8dc:	10820b04 	addi	r2,r2,2092
2202d8e0:	e0ffff17 	ldw	r3,-4(fp)
2202d8e4:	18c00324 	muli	r3,r3,12
2202d8e8:	10c5883a 	add	r2,r2,r3
2202d8ec:	10000015 	stw	zero,0(r2)
  }
}
2202d8f0:	e037883a 	mov	sp,fp
2202d8f4:	df000017 	ldw	fp,0(sp)
2202d8f8:	dec00104 	addi	sp,sp,4
2202d8fc:	f800283a 	ret

2202d900 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
2202d900:	defff904 	addi	sp,sp,-28
2202d904:	df000615 	stw	fp,24(sp)
2202d908:	df000604 	addi	fp,sp,24
2202d90c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2202d910:	0005303a 	rdctl	r2,status
2202d914:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2202d918:	e0fffc17 	ldw	r3,-16(fp)
2202d91c:	00bfff84 	movi	r2,-2
2202d920:	1884703a 	and	r2,r3,r2
2202d924:	1001703a 	wrctl	status,r2
  
  return context;
2202d928:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
2202d92c:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
2202d930:	d0a00c17 	ldw	r2,-32720(gp)
2202d934:	10c000c4 	addi	r3,r2,3
2202d938:	00bfff04 	movi	r2,-4
2202d93c:	1884703a 	and	r2,r3,r2
2202d940:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
2202d944:	d0e00c17 	ldw	r3,-32720(gp)
2202d948:	e0bfff17 	ldw	r2,-4(fp)
2202d94c:	1887883a 	add	r3,r3,r2
2202d950:	00888134 	movhi	r2,8708
2202d954:	10bd0004 	addi	r2,r2,-3072
2202d958:	10c0062e 	bgeu	r2,r3,2202d974 <sbrk+0x74>
2202d95c:	e0bffa17 	ldw	r2,-24(fp)
2202d960:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2202d964:	e0bffd17 	ldw	r2,-12(fp)
2202d968:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
2202d96c:	00bfffc4 	movi	r2,-1
2202d970:	00000b06 	br	2202d9a0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
2202d974:	d0a00c17 	ldw	r2,-32720(gp)
2202d978:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
2202d97c:	d0e00c17 	ldw	r3,-32720(gp)
2202d980:	e0bfff17 	ldw	r2,-4(fp)
2202d984:	1885883a 	add	r2,r3,r2
2202d988:	d0a00c15 	stw	r2,-32720(gp)
2202d98c:	e0bffa17 	ldw	r2,-24(fp)
2202d990:	e0bffe15 	stw	r2,-8(fp)
2202d994:	e0bffe17 	ldw	r2,-8(fp)
2202d998:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
2202d99c:	e0bffb17 	ldw	r2,-20(fp)
} 
2202d9a0:	e037883a 	mov	sp,fp
2202d9a4:	df000017 	ldw	fp,0(sp)
2202d9a8:	dec00104 	addi	sp,sp,4
2202d9ac:	f800283a 	ret

2202d9b0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
2202d9b0:	defffa04 	addi	sp,sp,-24
2202d9b4:	df000515 	stw	fp,20(sp)
2202d9b8:	df000504 	addi	fp,sp,20
2202d9bc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2202d9c0:	0005303a 	rdctl	r2,status
2202d9c4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2202d9c8:	e0fffc17 	ldw	r3,-16(fp)
2202d9cc:	00bfff84 	movi	r2,-2
2202d9d0:	1884703a 	and	r2,r3,r2
2202d9d4:	1001703a 	wrctl	status,r2
  
  return context;
2202d9d8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
2202d9dc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
2202d9e0:	e0bfff17 	ldw	r2,-4(fp)
2202d9e4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
2202d9e8:	e0bffd17 	ldw	r2,-12(fp)
2202d9ec:	10800017 	ldw	r2,0(r2)
2202d9f0:	e0fffd17 	ldw	r3,-12(fp)
2202d9f4:	18c00117 	ldw	r3,4(r3)
2202d9f8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
2202d9fc:	e0bffd17 	ldw	r2,-12(fp)
2202da00:	10800117 	ldw	r2,4(r2)
2202da04:	e0fffd17 	ldw	r3,-12(fp)
2202da08:	18c00017 	ldw	r3,0(r3)
2202da0c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
2202da10:	e0bffd17 	ldw	r2,-12(fp)
2202da14:	e0fffd17 	ldw	r3,-12(fp)
2202da18:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
2202da1c:	e0bffd17 	ldw	r2,-12(fp)
2202da20:	e0fffd17 	ldw	r3,-12(fp)
2202da24:	10c00015 	stw	r3,0(r2)
2202da28:	e0bffb17 	ldw	r2,-20(fp)
2202da2c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2202da30:	e0bffe17 	ldw	r2,-8(fp)
2202da34:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
2202da38:	e037883a 	mov	sp,fp
2202da3c:	df000017 	ldw	fp,0(sp)
2202da40:	dec00104 	addi	sp,sp,4
2202da44:	f800283a 	ret

2202da48 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
2202da48:	defffb04 	addi	sp,sp,-20
2202da4c:	dfc00415 	stw	ra,16(sp)
2202da50:	df000315 	stw	fp,12(sp)
2202da54:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
2202da58:	d0a00d17 	ldw	r2,-32716(gp)
2202da5c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
2202da60:	d0a6d617 	ldw	r2,-25768(gp)
2202da64:	10800044 	addi	r2,r2,1
2202da68:	d0a6d615 	stw	r2,-25768(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
2202da6c:	00002e06 	br	2202db28 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
2202da70:	e0bffd17 	ldw	r2,-12(fp)
2202da74:	10800017 	ldw	r2,0(r2)
2202da78:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
2202da7c:	e0bffd17 	ldw	r2,-12(fp)
2202da80:	10800403 	ldbu	r2,16(r2)
2202da84:	10803fcc 	andi	r2,r2,255
2202da88:	10000426 	beq	r2,zero,2202da9c <alt_tick+0x54>
2202da8c:	d0a6d617 	ldw	r2,-25768(gp)
2202da90:	1000021e 	bne	r2,zero,2202da9c <alt_tick+0x54>
    {
      alarm->rollover = 0;
2202da94:	e0bffd17 	ldw	r2,-12(fp)
2202da98:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
2202da9c:	e0bffd17 	ldw	r2,-12(fp)
2202daa0:	10800217 	ldw	r2,8(r2)
2202daa4:	d0e6d617 	ldw	r3,-25768(gp)
2202daa8:	18801d36 	bltu	r3,r2,2202db20 <alt_tick+0xd8>
2202daac:	e0bffd17 	ldw	r2,-12(fp)
2202dab0:	10800403 	ldbu	r2,16(r2)
2202dab4:	10803fcc 	andi	r2,r2,255
2202dab8:	1000191e 	bne	r2,zero,2202db20 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
2202dabc:	e0bffd17 	ldw	r2,-12(fp)
2202dac0:	10800317 	ldw	r2,12(r2)
2202dac4:	e0fffd17 	ldw	r3,-12(fp)
2202dac8:	18c00517 	ldw	r3,20(r3)
2202dacc:	1809883a 	mov	r4,r3
2202dad0:	103ee83a 	callr	r2
2202dad4:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
2202dad8:	e0bfff17 	ldw	r2,-4(fp)
2202dadc:	1000031e 	bne	r2,zero,2202daec <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
2202dae0:	e13ffd17 	ldw	r4,-12(fp)
2202dae4:	202d9b00 	call	2202d9b0 <alt_alarm_stop>
2202dae8:	00000d06 	br	2202db20 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
2202daec:	e0bffd17 	ldw	r2,-12(fp)
2202daf0:	10c00217 	ldw	r3,8(r2)
2202daf4:	e0bfff17 	ldw	r2,-4(fp)
2202daf8:	1887883a 	add	r3,r3,r2
2202dafc:	e0bffd17 	ldw	r2,-12(fp)
2202db00:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
2202db04:	e0bffd17 	ldw	r2,-12(fp)
2202db08:	10c00217 	ldw	r3,8(r2)
2202db0c:	d0a6d617 	ldw	r2,-25768(gp)
2202db10:	1880032e 	bgeu	r3,r2,2202db20 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
2202db14:	e0bffd17 	ldw	r2,-12(fp)
2202db18:	00c00044 	movi	r3,1
2202db1c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
2202db20:	e0bffe17 	ldw	r2,-8(fp)
2202db24:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
2202db28:	e0fffd17 	ldw	r3,-12(fp)
2202db2c:	d0a00d04 	addi	r2,gp,-32716
2202db30:	18bfcf1e 	bne	r3,r2,2202da70 <__alt_data_end+0xfffee670>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
2202db34:	0001883a 	nop
}
2202db38:	e037883a 	mov	sp,fp
2202db3c:	dfc00117 	ldw	ra,4(sp)
2202db40:	df000017 	ldw	fp,0(sp)
2202db44:	dec00204 	addi	sp,sp,8
2202db48:	f800283a 	ret

2202db4c <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
2202db4c:	defffd04 	addi	sp,sp,-12
2202db50:	dfc00215 	stw	ra,8(sp)
2202db54:	df000115 	stw	fp,4(sp)
2202db58:	df000104 	addi	fp,sp,4
2202db5c:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
2202db60:	e13fff17 	ldw	r4,-4(fp)
2202db64:	202ea140 	call	2202ea14 <alt_busy_sleep>
}
2202db68:	e037883a 	mov	sp,fp
2202db6c:	dfc00117 	ldw	ra,4(sp)
2202db70:	df000017 	ldw	fp,0(sp)
2202db74:	dec00204 	addi	sp,sp,8
2202db78:	f800283a 	ret

2202db7c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2202db7c:	defffe04 	addi	sp,sp,-8
2202db80:	dfc00115 	stw	ra,4(sp)
2202db84:	df000015 	stw	fp,0(sp)
2202db88:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2202db8c:	008880f4 	movhi	r2,8707
2202db90:	10868e04 	addi	r2,r2,6712
2202db94:	10800017 	ldw	r2,0(r2)
2202db98:	10000526 	beq	r2,zero,2202dbb0 <alt_get_errno+0x34>
2202db9c:	008880f4 	movhi	r2,8707
2202dba0:	10868e04 	addi	r2,r2,6712
2202dba4:	10800017 	ldw	r2,0(r2)
2202dba8:	103ee83a 	callr	r2
2202dbac:	00000206 	br	2202dbb8 <alt_get_errno+0x3c>
2202dbb0:	008880f4 	movhi	r2,8707
2202dbb4:	108d5404 	addi	r2,r2,13648
}
2202dbb8:	e037883a 	mov	sp,fp
2202dbbc:	dfc00117 	ldw	ra,4(sp)
2202dbc0:	df000017 	ldw	fp,0(sp)
2202dbc4:	dec00204 	addi	sp,sp,8
2202dbc8:	f800283a 	ret

2202dbcc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
2202dbcc:	defff904 	addi	sp,sp,-28
2202dbd0:	dfc00615 	stw	ra,24(sp)
2202dbd4:	df000515 	stw	fp,20(sp)
2202dbd8:	df000504 	addi	fp,sp,20
2202dbdc:	e13ffd15 	stw	r4,-12(fp)
2202dbe0:	e17ffe15 	stw	r5,-8(fp)
2202dbe4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
2202dbe8:	e0bffd17 	ldw	r2,-12(fp)
2202dbec:	10000616 	blt	r2,zero,2202dc08 <write+0x3c>
2202dbf0:	e0bffd17 	ldw	r2,-12(fp)
2202dbf4:	10c00324 	muli	r3,r2,12
2202dbf8:	008880f4 	movhi	r2,8707
2202dbfc:	10820b04 	addi	r2,r2,2092
2202dc00:	1885883a 	add	r2,r3,r2
2202dc04:	00000106 	br	2202dc0c <write+0x40>
2202dc08:	0005883a 	mov	r2,zero
2202dc0c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
2202dc10:	e0bffb17 	ldw	r2,-20(fp)
2202dc14:	10002126 	beq	r2,zero,2202dc9c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
2202dc18:	e0bffb17 	ldw	r2,-20(fp)
2202dc1c:	10800217 	ldw	r2,8(r2)
2202dc20:	108000cc 	andi	r2,r2,3
2202dc24:	10001826 	beq	r2,zero,2202dc88 <write+0xbc>
2202dc28:	e0bffb17 	ldw	r2,-20(fp)
2202dc2c:	10800017 	ldw	r2,0(r2)
2202dc30:	10800617 	ldw	r2,24(r2)
2202dc34:	10001426 	beq	r2,zero,2202dc88 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
2202dc38:	e0bffb17 	ldw	r2,-20(fp)
2202dc3c:	10800017 	ldw	r2,0(r2)
2202dc40:	10800617 	ldw	r2,24(r2)
2202dc44:	e0ffff17 	ldw	r3,-4(fp)
2202dc48:	e13ffb17 	ldw	r4,-20(fp)
2202dc4c:	e17ffe17 	ldw	r5,-8(fp)
2202dc50:	180d883a 	mov	r6,r3
2202dc54:	103ee83a 	callr	r2
2202dc58:	e0bffc15 	stw	r2,-16(fp)
2202dc5c:	e0bffc17 	ldw	r2,-16(fp)
2202dc60:	1000070e 	bge	r2,zero,2202dc80 <write+0xb4>
      {
        ALT_ERRNO = -rval;
2202dc64:	202db7c0 	call	2202db7c <alt_get_errno>
2202dc68:	1007883a 	mov	r3,r2
2202dc6c:	e0bffc17 	ldw	r2,-16(fp)
2202dc70:	0085c83a 	sub	r2,zero,r2
2202dc74:	18800015 	stw	r2,0(r3)
        return -1;
2202dc78:	00bfffc4 	movi	r2,-1
2202dc7c:	00000c06 	br	2202dcb0 <write+0xe4>
      }
      return rval;
2202dc80:	e0bffc17 	ldw	r2,-16(fp)
2202dc84:	00000a06 	br	2202dcb0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
2202dc88:	202db7c0 	call	2202db7c <alt_get_errno>
2202dc8c:	1007883a 	mov	r3,r2
2202dc90:	00800344 	movi	r2,13
2202dc94:	18800015 	stw	r2,0(r3)
2202dc98:	00000406 	br	2202dcac <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
2202dc9c:	202db7c0 	call	2202db7c <alt_get_errno>
2202dca0:	1007883a 	mov	r3,r2
2202dca4:	00801444 	movi	r2,81
2202dca8:	18800015 	stw	r2,0(r3)
  }
  return -1;
2202dcac:	00bfffc4 	movi	r2,-1
}
2202dcb0:	e037883a 	mov	sp,fp
2202dcb4:	dfc00117 	ldw	ra,4(sp)
2202dcb8:	df000017 	ldw	fp,0(sp)
2202dcbc:	dec00204 	addi	sp,sp,8
2202dcc0:	f800283a 	ret

2202dcc4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
2202dcc4:	defffd04 	addi	sp,sp,-12
2202dcc8:	dfc00215 	stw	ra,8(sp)
2202dccc:	df000115 	stw	fp,4(sp)
2202dcd0:	df000104 	addi	fp,sp,4
2202dcd4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
2202dcd8:	e13fff17 	ldw	r4,-4(fp)
2202dcdc:	014880f4 	movhi	r5,8707
2202dce0:	29468b04 	addi	r5,r5,6700
2202dce4:	202ebbc0 	call	2202ebbc <alt_dev_llist_insert>
}
2202dce8:	e037883a 	mov	sp,fp
2202dcec:	dfc00117 	ldw	ra,4(sp)
2202dcf0:	df000017 	ldw	fp,0(sp)
2202dcf4:	dec00204 	addi	sp,sp,8
2202dcf8:	f800283a 	ret

2202dcfc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
2202dcfc:	defffd04 	addi	sp,sp,-12
2202dd00:	dfc00215 	stw	ra,8(sp)
2202dd04:	df000115 	stw	fp,4(sp)
2202dd08:	df000104 	addi	fp,sp,4
2202dd0c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2, nios2_gen2);
2202dd10:	202f3c40 	call	2202f3c4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
2202dd14:	00800044 	movi	r2,1
2202dd18:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
2202dd1c:	e037883a 	mov	sp,fp
2202dd20:	dfc00117 	ldw	ra,4(sp)
2202dd24:	df000017 	ldw	fp,0(sp)
2202dd28:	dec00204 	addi	sp,sp,8
2202dd2c:	f800283a 	ret

2202dd30 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
2202dd30:	defffe04 	addi	sp,sp,-8
2202dd34:	dfc00115 	stw	ra,4(sp)
2202dd38:	df000015 	stw	fp,0(sp)
2202dd3c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
2202dd40:	01080034 	movhi	r4,8192
2202dd44:	000b883a 	mov	r5,zero
2202dd48:	000d883a 	mov	r6,zero
2202dd4c:	01c0fa04 	movi	r7,1000
2202dd50:	202e84c0 	call	2202e84c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
2202dd54:	010880f4 	movhi	r4,8707
2202dd58:	21027504 	addi	r4,r4,2516
2202dd5c:	000b883a 	mov	r5,zero
2202dd60:	01800044 	movi	r6,1
2202dd64:	202def00 	call	2202def0 <altera_avalon_jtag_uart_init>
2202dd68:	010880f4 	movhi	r4,8707
2202dd6c:	21026b04 	addi	r4,r4,2476
2202dd70:	202dcc40 	call	2202dcc4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
2202dd74:	0001883a 	nop
}
2202dd78:	e037883a 	mov	sp,fp
2202dd7c:	dfc00117 	ldw	ra,4(sp)
2202dd80:	df000017 	ldw	fp,0(sp)
2202dd84:	dec00204 	addi	sp,sp,8
2202dd88:	f800283a 	ret

2202dd8c <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
2202dd8c:	defffa04 	addi	sp,sp,-24
2202dd90:	dfc00515 	stw	ra,20(sp)
2202dd94:	df000415 	stw	fp,16(sp)
2202dd98:	df000404 	addi	fp,sp,16
2202dd9c:	e13ffd15 	stw	r4,-12(fp)
2202dda0:	e17ffe15 	stw	r5,-8(fp)
2202dda4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
2202dda8:	e0bffd17 	ldw	r2,-12(fp)
2202ddac:	10800017 	ldw	r2,0(r2)
2202ddb0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
2202ddb4:	e0bffc17 	ldw	r2,-16(fp)
2202ddb8:	10c00a04 	addi	r3,r2,40
2202ddbc:	e0bffd17 	ldw	r2,-12(fp)
2202ddc0:	10800217 	ldw	r2,8(r2)
2202ddc4:	1809883a 	mov	r4,r3
2202ddc8:	e17ffe17 	ldw	r5,-8(fp)
2202ddcc:	e1bfff17 	ldw	r6,-4(fp)
2202ddd0:	100f883a 	mov	r7,r2
2202ddd4:	202e3b40 	call	2202e3b4 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
2202ddd8:	e037883a 	mov	sp,fp
2202dddc:	dfc00117 	ldw	ra,4(sp)
2202dde0:	df000017 	ldw	fp,0(sp)
2202dde4:	dec00204 	addi	sp,sp,8
2202dde8:	f800283a 	ret

2202ddec <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
2202ddec:	defffa04 	addi	sp,sp,-24
2202ddf0:	dfc00515 	stw	ra,20(sp)
2202ddf4:	df000415 	stw	fp,16(sp)
2202ddf8:	df000404 	addi	fp,sp,16
2202ddfc:	e13ffd15 	stw	r4,-12(fp)
2202de00:	e17ffe15 	stw	r5,-8(fp)
2202de04:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
2202de08:	e0bffd17 	ldw	r2,-12(fp)
2202de0c:	10800017 	ldw	r2,0(r2)
2202de10:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
2202de14:	e0bffc17 	ldw	r2,-16(fp)
2202de18:	10c00a04 	addi	r3,r2,40
2202de1c:	e0bffd17 	ldw	r2,-12(fp)
2202de20:	10800217 	ldw	r2,8(r2)
2202de24:	1809883a 	mov	r4,r3
2202de28:	e17ffe17 	ldw	r5,-8(fp)
2202de2c:	e1bfff17 	ldw	r6,-4(fp)
2202de30:	100f883a 	mov	r7,r2
2202de34:	202e5c00 	call	2202e5c0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
2202de38:	e037883a 	mov	sp,fp
2202de3c:	dfc00117 	ldw	ra,4(sp)
2202de40:	df000017 	ldw	fp,0(sp)
2202de44:	dec00204 	addi	sp,sp,8
2202de48:	f800283a 	ret

2202de4c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
2202de4c:	defffc04 	addi	sp,sp,-16
2202de50:	dfc00315 	stw	ra,12(sp)
2202de54:	df000215 	stw	fp,8(sp)
2202de58:	df000204 	addi	fp,sp,8
2202de5c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
2202de60:	e0bfff17 	ldw	r2,-4(fp)
2202de64:	10800017 	ldw	r2,0(r2)
2202de68:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
2202de6c:	e0bffe17 	ldw	r2,-8(fp)
2202de70:	10c00a04 	addi	r3,r2,40
2202de74:	e0bfff17 	ldw	r2,-4(fp)
2202de78:	10800217 	ldw	r2,8(r2)
2202de7c:	1809883a 	mov	r4,r3
2202de80:	100b883a 	mov	r5,r2
2202de84:	202e2600 	call	2202e260 <altera_avalon_jtag_uart_close>
}
2202de88:	e037883a 	mov	sp,fp
2202de8c:	dfc00117 	ldw	ra,4(sp)
2202de90:	df000017 	ldw	fp,0(sp)
2202de94:	dec00204 	addi	sp,sp,8
2202de98:	f800283a 	ret

2202de9c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
2202de9c:	defffa04 	addi	sp,sp,-24
2202dea0:	dfc00515 	stw	ra,20(sp)
2202dea4:	df000415 	stw	fp,16(sp)
2202dea8:	df000404 	addi	fp,sp,16
2202deac:	e13ffd15 	stw	r4,-12(fp)
2202deb0:	e17ffe15 	stw	r5,-8(fp)
2202deb4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
2202deb8:	e0bffd17 	ldw	r2,-12(fp)
2202debc:	10800017 	ldw	r2,0(r2)
2202dec0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
2202dec4:	e0bffc17 	ldw	r2,-16(fp)
2202dec8:	10800a04 	addi	r2,r2,40
2202decc:	1009883a 	mov	r4,r2
2202ded0:	e17ffe17 	ldw	r5,-8(fp)
2202ded4:	e1bfff17 	ldw	r6,-4(fp)
2202ded8:	202e2c80 	call	2202e2c8 <altera_avalon_jtag_uart_ioctl>
}
2202dedc:	e037883a 	mov	sp,fp
2202dee0:	dfc00117 	ldw	ra,4(sp)
2202dee4:	df000017 	ldw	fp,0(sp)
2202dee8:	dec00204 	addi	sp,sp,8
2202deec:	f800283a 	ret

2202def0 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
2202def0:	defffa04 	addi	sp,sp,-24
2202def4:	dfc00515 	stw	ra,20(sp)
2202def8:	df000415 	stw	fp,16(sp)
2202defc:	df000404 	addi	fp,sp,16
2202df00:	e13ffd15 	stw	r4,-12(fp)
2202df04:	e17ffe15 	stw	r5,-8(fp)
2202df08:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
2202df0c:	e0bffd17 	ldw	r2,-12(fp)
2202df10:	00c00044 	movi	r3,1
2202df14:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
2202df18:	e0bffd17 	ldw	r2,-12(fp)
2202df1c:	10800017 	ldw	r2,0(r2)
2202df20:	10800104 	addi	r2,r2,4
2202df24:	1007883a 	mov	r3,r2
2202df28:	e0bffd17 	ldw	r2,-12(fp)
2202df2c:	10800817 	ldw	r2,32(r2)
2202df30:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
2202df34:	e0fffe17 	ldw	r3,-8(fp)
2202df38:	e0bfff17 	ldw	r2,-4(fp)
2202df3c:	d8000015 	stw	zero,0(sp)
2202df40:	1809883a 	mov	r4,r3
2202df44:	100b883a 	mov	r5,r2
2202df48:	018880f4 	movhi	r6,8707
2202df4c:	31b7ed04 	addi	r6,r6,-8268
2202df50:	e1fffd17 	ldw	r7,-12(fp)
2202df54:	202ed480 	call	2202ed48 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
2202df58:	e0bffd17 	ldw	r2,-12(fp)
2202df5c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
2202df60:	e0bffd17 	ldw	r2,-12(fp)
2202df64:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
2202df68:	008880f4 	movhi	r2,8707
2202df6c:	108d5804 	addi	r2,r2,13664
2202df70:	10800017 	ldw	r2,0(r2)
2202df74:	1809883a 	mov	r4,r3
2202df78:	100b883a 	mov	r5,r2
2202df7c:	018880f4 	movhi	r6,8707
2202df80:	31b86e04 	addi	r6,r6,-7752
2202df84:	e1fffd17 	ldw	r7,-12(fp)
2202df88:	202e8d40 	call	2202e8d4 <alt_alarm_start>
2202df8c:	1000040e 	bge	r2,zero,2202dfa0 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
2202df90:	e0fffd17 	ldw	r3,-12(fp)
2202df94:	00a00034 	movhi	r2,32768
2202df98:	10bfffc4 	addi	r2,r2,-1
2202df9c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
2202dfa0:	e037883a 	mov	sp,fp
2202dfa4:	dfc00117 	ldw	ra,4(sp)
2202dfa8:	df000017 	ldw	fp,0(sp)
2202dfac:	dec00204 	addi	sp,sp,8
2202dfb0:	f800283a 	ret

2202dfb4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
2202dfb4:	defff804 	addi	sp,sp,-32
2202dfb8:	df000715 	stw	fp,28(sp)
2202dfbc:	df000704 	addi	fp,sp,28
2202dfc0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
2202dfc4:	e0bfff17 	ldw	r2,-4(fp)
2202dfc8:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
2202dfcc:	e0bffb17 	ldw	r2,-20(fp)
2202dfd0:	10800017 	ldw	r2,0(r2)
2202dfd4:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
2202dfd8:	e0bffc17 	ldw	r2,-16(fp)
2202dfdc:	10800104 	addi	r2,r2,4
2202dfe0:	10800037 	ldwio	r2,0(r2)
2202dfe4:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
2202dfe8:	e0bffd17 	ldw	r2,-12(fp)
2202dfec:	1080c00c 	andi	r2,r2,768
2202dff0:	1000011e 	bne	r2,zero,2202dff8 <altera_avalon_jtag_uart_irq+0x44>
      break;
2202dff4:	00006c06 	br	2202e1a8 <altera_avalon_jtag_uart_irq+0x1f4>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
2202dff8:	e0bffd17 	ldw	r2,-12(fp)
2202dffc:	1080400c 	andi	r2,r2,256
2202e000:	10003426 	beq	r2,zero,2202e0d4 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
2202e004:	00800074 	movhi	r2,1
2202e008:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
2202e00c:	e0bffb17 	ldw	r2,-20(fp)
2202e010:	10800a17 	ldw	r2,40(r2)
2202e014:	10800044 	addi	r2,r2,1
2202e018:	1081ffcc 	andi	r2,r2,2047
2202e01c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
2202e020:	e0bffb17 	ldw	r2,-20(fp)
2202e024:	10c00b17 	ldw	r3,44(r2)
2202e028:	e0bffe17 	ldw	r2,-8(fp)
2202e02c:	1880011e 	bne	r3,r2,2202e034 <altera_avalon_jtag_uart_irq+0x80>
          break;
2202e030:	00001606 	br	2202e08c <altera_avalon_jtag_uart_irq+0xd8>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
2202e034:	e0bffc17 	ldw	r2,-16(fp)
2202e038:	10800037 	ldwio	r2,0(r2)
2202e03c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
2202e040:	e0bff917 	ldw	r2,-28(fp)
2202e044:	10a0000c 	andi	r2,r2,32768
2202e048:	1000011e 	bne	r2,zero,2202e050 <altera_avalon_jtag_uart_irq+0x9c>
          break;
2202e04c:	00000f06 	br	2202e08c <altera_avalon_jtag_uart_irq+0xd8>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
2202e050:	e0bffb17 	ldw	r2,-20(fp)
2202e054:	10800a17 	ldw	r2,40(r2)
2202e058:	e0fff917 	ldw	r3,-28(fp)
2202e05c:	1809883a 	mov	r4,r3
2202e060:	e0fffb17 	ldw	r3,-20(fp)
2202e064:	1885883a 	add	r2,r3,r2
2202e068:	10800e04 	addi	r2,r2,56
2202e06c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
2202e070:	e0bffb17 	ldw	r2,-20(fp)
2202e074:	10800a17 	ldw	r2,40(r2)
2202e078:	10800044 	addi	r2,r2,1
2202e07c:	10c1ffcc 	andi	r3,r2,2047
2202e080:	e0bffb17 	ldw	r2,-20(fp)
2202e084:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
2202e088:	003fe006 	br	2202e00c <__alt_data_end+0xfffeec0c>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
2202e08c:	e0bff917 	ldw	r2,-28(fp)
2202e090:	10bfffec 	andhi	r2,r2,65535
2202e094:	10000f26 	beq	r2,zero,2202e0d4 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
2202e098:	e0bffb17 	ldw	r2,-20(fp)
2202e09c:	10c00817 	ldw	r3,32(r2)
2202e0a0:	00bfff84 	movi	r2,-2
2202e0a4:	1886703a 	and	r3,r3,r2
2202e0a8:	e0bffb17 	ldw	r2,-20(fp)
2202e0ac:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
2202e0b0:	e0bffc17 	ldw	r2,-16(fp)
2202e0b4:	10800104 	addi	r2,r2,4
2202e0b8:	1007883a 	mov	r3,r2
2202e0bc:	e0bffb17 	ldw	r2,-20(fp)
2202e0c0:	10800817 	ldw	r2,32(r2)
2202e0c4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
2202e0c8:	e0bffc17 	ldw	r2,-16(fp)
2202e0cc:	10800104 	addi	r2,r2,4
2202e0d0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
2202e0d4:	e0bffd17 	ldw	r2,-12(fp)
2202e0d8:	1080800c 	andi	r2,r2,512
2202e0dc:	10003126 	beq	r2,zero,2202e1a4 <altera_avalon_jtag_uart_irq+0x1f0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
2202e0e0:	e0bffd17 	ldw	r2,-12(fp)
2202e0e4:	1004d43a 	srli	r2,r2,16
2202e0e8:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
2202e0ec:	00001406 	br	2202e140 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
2202e0f0:	e0bffc17 	ldw	r2,-16(fp)
2202e0f4:	e0fffb17 	ldw	r3,-20(fp)
2202e0f8:	18c00d17 	ldw	r3,52(r3)
2202e0fc:	e13ffb17 	ldw	r4,-20(fp)
2202e100:	20c7883a 	add	r3,r4,r3
2202e104:	18c20e04 	addi	r3,r3,2104
2202e108:	18c00003 	ldbu	r3,0(r3)
2202e10c:	18c03fcc 	andi	r3,r3,255
2202e110:	18c0201c 	xori	r3,r3,128
2202e114:	18ffe004 	addi	r3,r3,-128
2202e118:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
2202e11c:	e0bffb17 	ldw	r2,-20(fp)
2202e120:	10800d17 	ldw	r2,52(r2)
2202e124:	10800044 	addi	r2,r2,1
2202e128:	10c1ffcc 	andi	r3,r2,2047
2202e12c:	e0bffb17 	ldw	r2,-20(fp)
2202e130:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
2202e134:	e0bffa17 	ldw	r2,-24(fp)
2202e138:	10bfffc4 	addi	r2,r2,-1
2202e13c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
2202e140:	e0bffa17 	ldw	r2,-24(fp)
2202e144:	10000526 	beq	r2,zero,2202e15c <altera_avalon_jtag_uart_irq+0x1a8>
2202e148:	e0bffb17 	ldw	r2,-20(fp)
2202e14c:	10c00d17 	ldw	r3,52(r2)
2202e150:	e0bffb17 	ldw	r2,-20(fp)
2202e154:	10800c17 	ldw	r2,48(r2)
2202e158:	18bfe51e 	bne	r3,r2,2202e0f0 <__alt_data_end+0xfffeecf0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
2202e15c:	e0bffa17 	ldw	r2,-24(fp)
2202e160:	10001026 	beq	r2,zero,2202e1a4 <altera_avalon_jtag_uart_irq+0x1f0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
2202e164:	e0bffb17 	ldw	r2,-20(fp)
2202e168:	10c00817 	ldw	r3,32(r2)
2202e16c:	00bfff44 	movi	r2,-3
2202e170:	1886703a 	and	r3,r3,r2
2202e174:	e0bffb17 	ldw	r2,-20(fp)
2202e178:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
2202e17c:	e0bffb17 	ldw	r2,-20(fp)
2202e180:	10800017 	ldw	r2,0(r2)
2202e184:	10800104 	addi	r2,r2,4
2202e188:	1007883a 	mov	r3,r2
2202e18c:	e0bffb17 	ldw	r2,-20(fp)
2202e190:	10800817 	ldw	r2,32(r2)
2202e194:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
2202e198:	e0bffc17 	ldw	r2,-16(fp)
2202e19c:	10800104 	addi	r2,r2,4
2202e1a0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
2202e1a4:	003f8c06 	br	2202dfd8 <__alt_data_end+0xfffeebd8>
}
2202e1a8:	e037883a 	mov	sp,fp
2202e1ac:	df000017 	ldw	fp,0(sp)
2202e1b0:	dec00104 	addi	sp,sp,4
2202e1b4:	f800283a 	ret

2202e1b8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
2202e1b8:	defff804 	addi	sp,sp,-32
2202e1bc:	df000715 	stw	fp,28(sp)
2202e1c0:	df000704 	addi	fp,sp,28
2202e1c4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
2202e1c8:	e0bffb17 	ldw	r2,-20(fp)
2202e1cc:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
2202e1d0:	e0bff917 	ldw	r2,-28(fp)
2202e1d4:	10800017 	ldw	r2,0(r2)
2202e1d8:	10800104 	addi	r2,r2,4
2202e1dc:	10800037 	ldwio	r2,0(r2)
2202e1e0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
2202e1e4:	e0bffa17 	ldw	r2,-24(fp)
2202e1e8:	1081000c 	andi	r2,r2,1024
2202e1ec:	10000b26 	beq	r2,zero,2202e21c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
2202e1f0:	e0bff917 	ldw	r2,-28(fp)
2202e1f4:	10800017 	ldw	r2,0(r2)
2202e1f8:	10800104 	addi	r2,r2,4
2202e1fc:	1007883a 	mov	r3,r2
2202e200:	e0bff917 	ldw	r2,-28(fp)
2202e204:	10800817 	ldw	r2,32(r2)
2202e208:	10810014 	ori	r2,r2,1024
2202e20c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
2202e210:	e0bff917 	ldw	r2,-28(fp)
2202e214:	10000915 	stw	zero,36(r2)
2202e218:	00000a06 	br	2202e244 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
2202e21c:	e0bff917 	ldw	r2,-28(fp)
2202e220:	10c00917 	ldw	r3,36(r2)
2202e224:	00a00034 	movhi	r2,32768
2202e228:	10bfff04 	addi	r2,r2,-4
2202e22c:	10c00536 	bltu	r2,r3,2202e244 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
2202e230:	e0bff917 	ldw	r2,-28(fp)
2202e234:	10800917 	ldw	r2,36(r2)
2202e238:	10c00044 	addi	r3,r2,1
2202e23c:	e0bff917 	ldw	r2,-28(fp)
2202e240:	10c00915 	stw	r3,36(r2)
2202e244:	008880f4 	movhi	r2,8707
2202e248:	108d5804 	addi	r2,r2,13664
2202e24c:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
2202e250:	e037883a 	mov	sp,fp
2202e254:	df000017 	ldw	fp,0(sp)
2202e258:	dec00104 	addi	sp,sp,4
2202e25c:	f800283a 	ret

2202e260 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
2202e260:	defffd04 	addi	sp,sp,-12
2202e264:	df000215 	stw	fp,8(sp)
2202e268:	df000204 	addi	fp,sp,8
2202e26c:	e13ffe15 	stw	r4,-8(fp)
2202e270:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
2202e274:	00000506 	br	2202e28c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
2202e278:	e0bfff17 	ldw	r2,-4(fp)
2202e27c:	1090000c 	andi	r2,r2,16384
2202e280:	10000226 	beq	r2,zero,2202e28c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
2202e284:	00bffd44 	movi	r2,-11
2202e288:	00000b06 	br	2202e2b8 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
2202e28c:	e0bffe17 	ldw	r2,-8(fp)
2202e290:	10c00d17 	ldw	r3,52(r2)
2202e294:	e0bffe17 	ldw	r2,-8(fp)
2202e298:	10800c17 	ldw	r2,48(r2)
2202e29c:	18800526 	beq	r3,r2,2202e2b4 <altera_avalon_jtag_uart_close+0x54>
2202e2a0:	e0bffe17 	ldw	r2,-8(fp)
2202e2a4:	10c00917 	ldw	r3,36(r2)
2202e2a8:	e0bffe17 	ldw	r2,-8(fp)
2202e2ac:	10800117 	ldw	r2,4(r2)
2202e2b0:	18bff136 	bltu	r3,r2,2202e278 <__alt_data_end+0xfffeee78>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
2202e2b4:	0005883a 	mov	r2,zero
}
2202e2b8:	e037883a 	mov	sp,fp
2202e2bc:	df000017 	ldw	fp,0(sp)
2202e2c0:	dec00104 	addi	sp,sp,4
2202e2c4:	f800283a 	ret

2202e2c8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
2202e2c8:	defffa04 	addi	sp,sp,-24
2202e2cc:	df000515 	stw	fp,20(sp)
2202e2d0:	df000504 	addi	fp,sp,20
2202e2d4:	e13ffd15 	stw	r4,-12(fp)
2202e2d8:	e17ffe15 	stw	r5,-8(fp)
2202e2dc:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
2202e2e0:	00bff9c4 	movi	r2,-25
2202e2e4:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
2202e2e8:	e0bffe17 	ldw	r2,-8(fp)
2202e2ec:	10da8060 	cmpeqi	r3,r2,27137
2202e2f0:	1800031e 	bne	r3,zero,2202e300 <altera_avalon_jtag_uart_ioctl+0x38>
2202e2f4:	109a80a0 	cmpeqi	r2,r2,27138
2202e2f8:	1000191e 	bne	r2,zero,2202e360 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
2202e2fc:	00002806 	br	2202e3a0 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
2202e300:	e0bffd17 	ldw	r2,-12(fp)
2202e304:	10c00117 	ldw	r3,4(r2)
2202e308:	00a00034 	movhi	r2,32768
2202e30c:	10bfffc4 	addi	r2,r2,-1
2202e310:	18801226 	beq	r3,r2,2202e35c <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
2202e314:	e0bfff17 	ldw	r2,-4(fp)
2202e318:	10800017 	ldw	r2,0(r2)
2202e31c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
2202e320:	e0bffc17 	ldw	r2,-16(fp)
2202e324:	10800090 	cmplti	r2,r2,2
2202e328:	1000061e 	bne	r2,zero,2202e344 <altera_avalon_jtag_uart_ioctl+0x7c>
2202e32c:	e0fffc17 	ldw	r3,-16(fp)
2202e330:	00a00034 	movhi	r2,32768
2202e334:	10bfffc4 	addi	r2,r2,-1
2202e338:	18800226 	beq	r3,r2,2202e344 <altera_avalon_jtag_uart_ioctl+0x7c>
2202e33c:	e0bffc17 	ldw	r2,-16(fp)
2202e340:	00000206 	br	2202e34c <altera_avalon_jtag_uart_ioctl+0x84>
2202e344:	00a00034 	movhi	r2,32768
2202e348:	10bfff84 	addi	r2,r2,-2
2202e34c:	e0fffd17 	ldw	r3,-12(fp)
2202e350:	18800115 	stw	r2,4(r3)
      rc = 0;
2202e354:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
2202e358:	00001106 	br	2202e3a0 <altera_avalon_jtag_uart_ioctl+0xd8>
2202e35c:	00001006 	br	2202e3a0 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
2202e360:	e0bffd17 	ldw	r2,-12(fp)
2202e364:	10c00117 	ldw	r3,4(r2)
2202e368:	00a00034 	movhi	r2,32768
2202e36c:	10bfffc4 	addi	r2,r2,-1
2202e370:	18800a26 	beq	r3,r2,2202e39c <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
2202e374:	e0bffd17 	ldw	r2,-12(fp)
2202e378:	10c00917 	ldw	r3,36(r2)
2202e37c:	e0bffd17 	ldw	r2,-12(fp)
2202e380:	10800117 	ldw	r2,4(r2)
2202e384:	1885803a 	cmpltu	r2,r3,r2
2202e388:	10c03fcc 	andi	r3,r2,255
2202e38c:	e0bfff17 	ldw	r2,-4(fp)
2202e390:	10c00015 	stw	r3,0(r2)
      rc = 0;
2202e394:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
2202e398:	00000006 	br	2202e39c <altera_avalon_jtag_uart_ioctl+0xd4>
2202e39c:	0001883a 	nop

  default:
    break;
  }

  return rc;
2202e3a0:	e0bffb17 	ldw	r2,-20(fp)
}
2202e3a4:	e037883a 	mov	sp,fp
2202e3a8:	df000017 	ldw	fp,0(sp)
2202e3ac:	dec00104 	addi	sp,sp,4
2202e3b0:	f800283a 	ret

2202e3b4 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
2202e3b4:	defff304 	addi	sp,sp,-52
2202e3b8:	dfc00c15 	stw	ra,48(sp)
2202e3bc:	df000b15 	stw	fp,44(sp)
2202e3c0:	df000b04 	addi	fp,sp,44
2202e3c4:	e13ffc15 	stw	r4,-16(fp)
2202e3c8:	e17ffd15 	stw	r5,-12(fp)
2202e3cc:	e1bffe15 	stw	r6,-8(fp)
2202e3d0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
2202e3d4:	e0bffd17 	ldw	r2,-12(fp)
2202e3d8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
2202e3dc:	00004906 	br	2202e504 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
2202e3e0:	e0bffc17 	ldw	r2,-16(fp)
2202e3e4:	10800a17 	ldw	r2,40(r2)
2202e3e8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
2202e3ec:	e0bffc17 	ldw	r2,-16(fp)
2202e3f0:	10800b17 	ldw	r2,44(r2)
2202e3f4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
2202e3f8:	e0fff717 	ldw	r3,-36(fp)
2202e3fc:	e0bff817 	ldw	r2,-32(fp)
2202e400:	18800536 	bltu	r3,r2,2202e418 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
2202e404:	e0fff717 	ldw	r3,-36(fp)
2202e408:	e0bff817 	ldw	r2,-32(fp)
2202e40c:	1885c83a 	sub	r2,r3,r2
2202e410:	e0bff615 	stw	r2,-40(fp)
2202e414:	00000406 	br	2202e428 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
2202e418:	00c20004 	movi	r3,2048
2202e41c:	e0bff817 	ldw	r2,-32(fp)
2202e420:	1885c83a 	sub	r2,r3,r2
2202e424:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
2202e428:	e0bff617 	ldw	r2,-40(fp)
2202e42c:	1000011e 	bne	r2,zero,2202e434 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
2202e430:	00001d06 	br	2202e4a8 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
2202e434:	e0fffe17 	ldw	r3,-8(fp)
2202e438:	e0bff617 	ldw	r2,-40(fp)
2202e43c:	1880022e 	bgeu	r3,r2,2202e448 <altera_avalon_jtag_uart_read+0x94>
        n = space;
2202e440:	e0bffe17 	ldw	r2,-8(fp)
2202e444:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
2202e448:	e0bff817 	ldw	r2,-32(fp)
2202e44c:	10800e04 	addi	r2,r2,56
2202e450:	e0fffc17 	ldw	r3,-16(fp)
2202e454:	1885883a 	add	r2,r3,r2
2202e458:	e13ff517 	ldw	r4,-44(fp)
2202e45c:	100b883a 	mov	r5,r2
2202e460:	e1bff617 	ldw	r6,-40(fp)
2202e464:	2020c780 	call	22020c78 <memcpy>
      ptr   += n;
2202e468:	e0fff517 	ldw	r3,-44(fp)
2202e46c:	e0bff617 	ldw	r2,-40(fp)
2202e470:	1885883a 	add	r2,r3,r2
2202e474:	e0bff515 	stw	r2,-44(fp)
      space -= n;
2202e478:	e0fffe17 	ldw	r3,-8(fp)
2202e47c:	e0bff617 	ldw	r2,-40(fp)
2202e480:	1885c83a 	sub	r2,r3,r2
2202e484:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
2202e488:	e0fff817 	ldw	r3,-32(fp)
2202e48c:	e0bff617 	ldw	r2,-40(fp)
2202e490:	1885883a 	add	r2,r3,r2
2202e494:	10c1ffcc 	andi	r3,r2,2047
2202e498:	e0bffc17 	ldw	r2,-16(fp)
2202e49c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
2202e4a0:	e0bffe17 	ldw	r2,-8(fp)
2202e4a4:	00bfce16 	blt	zero,r2,2202e3e0 <__alt_data_end+0xfffeefe0>

    /* If we read any data then return it */
    if (ptr != buffer)
2202e4a8:	e0fff517 	ldw	r3,-44(fp)
2202e4ac:	e0bffd17 	ldw	r2,-12(fp)
2202e4b0:	18800126 	beq	r3,r2,2202e4b8 <altera_avalon_jtag_uart_read+0x104>
      break;
2202e4b4:	00001506 	br	2202e50c <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
2202e4b8:	e0bfff17 	ldw	r2,-4(fp)
2202e4bc:	1090000c 	andi	r2,r2,16384
2202e4c0:	10000126 	beq	r2,zero,2202e4c8 <altera_avalon_jtag_uart_read+0x114>
      break;
2202e4c4:	00001106 	br	2202e50c <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
2202e4c8:	0001883a 	nop
2202e4cc:	e0bffc17 	ldw	r2,-16(fp)
2202e4d0:	10c00a17 	ldw	r3,40(r2)
2202e4d4:	e0bff717 	ldw	r2,-36(fp)
2202e4d8:	1880051e 	bne	r3,r2,2202e4f0 <altera_avalon_jtag_uart_read+0x13c>
2202e4dc:	e0bffc17 	ldw	r2,-16(fp)
2202e4e0:	10c00917 	ldw	r3,36(r2)
2202e4e4:	e0bffc17 	ldw	r2,-16(fp)
2202e4e8:	10800117 	ldw	r2,4(r2)
2202e4ec:	18bff736 	bltu	r3,r2,2202e4cc <__alt_data_end+0xfffef0cc>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
2202e4f0:	e0bffc17 	ldw	r2,-16(fp)
2202e4f4:	10c00a17 	ldw	r3,40(r2)
2202e4f8:	e0bff717 	ldw	r2,-36(fp)
2202e4fc:	1880011e 	bne	r3,r2,2202e504 <altera_avalon_jtag_uart_read+0x150>
      break;
2202e500:	00000206 	br	2202e50c <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
2202e504:	e0bffe17 	ldw	r2,-8(fp)
2202e508:	00bfb516 	blt	zero,r2,2202e3e0 <__alt_data_end+0xfffeefe0>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
2202e50c:	e0fff517 	ldw	r3,-44(fp)
2202e510:	e0bffd17 	ldw	r2,-12(fp)
2202e514:	18801826 	beq	r3,r2,2202e578 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2202e518:	0005303a 	rdctl	r2,status
2202e51c:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2202e520:	e0fffa17 	ldw	r3,-24(fp)
2202e524:	00bfff84 	movi	r2,-2
2202e528:	1884703a 	and	r2,r3,r2
2202e52c:	1001703a 	wrctl	status,r2
  
  return context;
2202e530:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
2202e534:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
2202e538:	e0bffc17 	ldw	r2,-16(fp)
2202e53c:	10800817 	ldw	r2,32(r2)
2202e540:	10c00054 	ori	r3,r2,1
2202e544:	e0bffc17 	ldw	r2,-16(fp)
2202e548:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
2202e54c:	e0bffc17 	ldw	r2,-16(fp)
2202e550:	10800017 	ldw	r2,0(r2)
2202e554:	10800104 	addi	r2,r2,4
2202e558:	1007883a 	mov	r3,r2
2202e55c:	e0bffc17 	ldw	r2,-16(fp)
2202e560:	10800817 	ldw	r2,32(r2)
2202e564:	18800035 	stwio	r2,0(r3)
2202e568:	e0bff917 	ldw	r2,-28(fp)
2202e56c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2202e570:	e0bffb17 	ldw	r2,-20(fp)
2202e574:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
2202e578:	e0fff517 	ldw	r3,-44(fp)
2202e57c:	e0bffd17 	ldw	r2,-12(fp)
2202e580:	18800426 	beq	r3,r2,2202e594 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
2202e584:	e0fff517 	ldw	r3,-44(fp)
2202e588:	e0bffd17 	ldw	r2,-12(fp)
2202e58c:	1885c83a 	sub	r2,r3,r2
2202e590:	00000606 	br	2202e5ac <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
2202e594:	e0bfff17 	ldw	r2,-4(fp)
2202e598:	1090000c 	andi	r2,r2,16384
2202e59c:	10000226 	beq	r2,zero,2202e5a8 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
2202e5a0:	00bffd44 	movi	r2,-11
2202e5a4:	00000106 	br	2202e5ac <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
2202e5a8:	00bffec4 	movi	r2,-5
}
2202e5ac:	e037883a 	mov	sp,fp
2202e5b0:	dfc00117 	ldw	ra,4(sp)
2202e5b4:	df000017 	ldw	fp,0(sp)
2202e5b8:	dec00204 	addi	sp,sp,8
2202e5bc:	f800283a 	ret

2202e5c0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
2202e5c0:	defff304 	addi	sp,sp,-52
2202e5c4:	dfc00c15 	stw	ra,48(sp)
2202e5c8:	df000b15 	stw	fp,44(sp)
2202e5cc:	df000b04 	addi	fp,sp,44
2202e5d0:	e13ffc15 	stw	r4,-16(fp)
2202e5d4:	e17ffd15 	stw	r5,-12(fp)
2202e5d8:	e1bffe15 	stw	r6,-8(fp)
2202e5dc:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
2202e5e0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
2202e5e4:	e0bffd17 	ldw	r2,-12(fp)
2202e5e8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
2202e5ec:	00003806 	br	2202e6d0 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
2202e5f0:	e0bffc17 	ldw	r2,-16(fp)
2202e5f4:	10800c17 	ldw	r2,48(r2)
2202e5f8:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
2202e5fc:	e0bffc17 	ldw	r2,-16(fp)
2202e600:	10800d17 	ldw	r2,52(r2)
2202e604:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
2202e608:	e0fff817 	ldw	r3,-32(fp)
2202e60c:	e0bff517 	ldw	r2,-44(fp)
2202e610:	1880062e 	bgeu	r3,r2,2202e62c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
2202e614:	e0fff517 	ldw	r3,-44(fp)
2202e618:	e0bff817 	ldw	r2,-32(fp)
2202e61c:	1885c83a 	sub	r2,r3,r2
2202e620:	10bfffc4 	addi	r2,r2,-1
2202e624:	e0bff615 	stw	r2,-40(fp)
2202e628:	00000b06 	br	2202e658 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
2202e62c:	e0bff517 	ldw	r2,-44(fp)
2202e630:	10000526 	beq	r2,zero,2202e648 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
2202e634:	00c20004 	movi	r3,2048
2202e638:	e0bff817 	ldw	r2,-32(fp)
2202e63c:	1885c83a 	sub	r2,r3,r2
2202e640:	e0bff615 	stw	r2,-40(fp)
2202e644:	00000406 	br	2202e658 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
2202e648:	00c1ffc4 	movi	r3,2047
2202e64c:	e0bff817 	ldw	r2,-32(fp)
2202e650:	1885c83a 	sub	r2,r3,r2
2202e654:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
2202e658:	e0bff617 	ldw	r2,-40(fp)
2202e65c:	1000011e 	bne	r2,zero,2202e664 <altera_avalon_jtag_uart_write+0xa4>
        break;
2202e660:	00001d06 	br	2202e6d8 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
2202e664:	e0fffe17 	ldw	r3,-8(fp)
2202e668:	e0bff617 	ldw	r2,-40(fp)
2202e66c:	1880022e 	bgeu	r3,r2,2202e678 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
2202e670:	e0bffe17 	ldw	r2,-8(fp)
2202e674:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
2202e678:	e0bff817 	ldw	r2,-32(fp)
2202e67c:	10820e04 	addi	r2,r2,2104
2202e680:	e0fffc17 	ldw	r3,-16(fp)
2202e684:	1885883a 	add	r2,r3,r2
2202e688:	1009883a 	mov	r4,r2
2202e68c:	e17ffd17 	ldw	r5,-12(fp)
2202e690:	e1bff617 	ldw	r6,-40(fp)
2202e694:	2020c780 	call	22020c78 <memcpy>
      ptr   += n;
2202e698:	e0fffd17 	ldw	r3,-12(fp)
2202e69c:	e0bff617 	ldw	r2,-40(fp)
2202e6a0:	1885883a 	add	r2,r3,r2
2202e6a4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
2202e6a8:	e0fffe17 	ldw	r3,-8(fp)
2202e6ac:	e0bff617 	ldw	r2,-40(fp)
2202e6b0:	1885c83a 	sub	r2,r3,r2
2202e6b4:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
2202e6b8:	e0fff817 	ldw	r3,-32(fp)
2202e6bc:	e0bff617 	ldw	r2,-40(fp)
2202e6c0:	1885883a 	add	r2,r3,r2
2202e6c4:	10c1ffcc 	andi	r3,r2,2047
2202e6c8:	e0bffc17 	ldw	r2,-16(fp)
2202e6cc:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
2202e6d0:	e0bffe17 	ldw	r2,-8(fp)
2202e6d4:	00bfc616 	blt	zero,r2,2202e5f0 <__alt_data_end+0xfffef1f0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2202e6d8:	0005303a 	rdctl	r2,status
2202e6dc:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2202e6e0:	e0fffa17 	ldw	r3,-24(fp)
2202e6e4:	00bfff84 	movi	r2,-2
2202e6e8:	1884703a 	and	r2,r3,r2
2202e6ec:	1001703a 	wrctl	status,r2
  
  return context;
2202e6f0:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
2202e6f4:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
2202e6f8:	e0bffc17 	ldw	r2,-16(fp)
2202e6fc:	10800817 	ldw	r2,32(r2)
2202e700:	10c00094 	ori	r3,r2,2
2202e704:	e0bffc17 	ldw	r2,-16(fp)
2202e708:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
2202e70c:	e0bffc17 	ldw	r2,-16(fp)
2202e710:	10800017 	ldw	r2,0(r2)
2202e714:	10800104 	addi	r2,r2,4
2202e718:	1007883a 	mov	r3,r2
2202e71c:	e0bffc17 	ldw	r2,-16(fp)
2202e720:	10800817 	ldw	r2,32(r2)
2202e724:	18800035 	stwio	r2,0(r3)
2202e728:	e0bff917 	ldw	r2,-28(fp)
2202e72c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2202e730:	e0bffb17 	ldw	r2,-20(fp)
2202e734:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
2202e738:	e0bffe17 	ldw	r2,-8(fp)
2202e73c:	0080120e 	bge	zero,r2,2202e788 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
2202e740:	e0bfff17 	ldw	r2,-4(fp)
2202e744:	1090000c 	andi	r2,r2,16384
2202e748:	10000126 	beq	r2,zero,2202e750 <altera_avalon_jtag_uart_write+0x190>
        break;
2202e74c:	00001006 	br	2202e790 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
2202e750:	0001883a 	nop
2202e754:	e0bffc17 	ldw	r2,-16(fp)
2202e758:	10c00d17 	ldw	r3,52(r2)
2202e75c:	e0bff517 	ldw	r2,-44(fp)
2202e760:	1880051e 	bne	r3,r2,2202e778 <altera_avalon_jtag_uart_write+0x1b8>
2202e764:	e0bffc17 	ldw	r2,-16(fp)
2202e768:	10c00917 	ldw	r3,36(r2)
2202e76c:	e0bffc17 	ldw	r2,-16(fp)
2202e770:	10800117 	ldw	r2,4(r2)
2202e774:	18bff736 	bltu	r3,r2,2202e754 <__alt_data_end+0xfffef354>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
2202e778:	e0bffc17 	ldw	r2,-16(fp)
2202e77c:	10800917 	ldw	r2,36(r2)
2202e780:	10000126 	beq	r2,zero,2202e788 <altera_avalon_jtag_uart_write+0x1c8>
         break;
2202e784:	00000206 	br	2202e790 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
2202e788:	e0bffe17 	ldw	r2,-8(fp)
2202e78c:	00bf9716 	blt	zero,r2,2202e5ec <__alt_data_end+0xfffef1ec>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
2202e790:	e0fffd17 	ldw	r3,-12(fp)
2202e794:	e0bff717 	ldw	r2,-36(fp)
2202e798:	18800426 	beq	r3,r2,2202e7ac <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
2202e79c:	e0fffd17 	ldw	r3,-12(fp)
2202e7a0:	e0bff717 	ldw	r2,-36(fp)
2202e7a4:	1885c83a 	sub	r2,r3,r2
2202e7a8:	00000606 	br	2202e7c4 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
2202e7ac:	e0bfff17 	ldw	r2,-4(fp)
2202e7b0:	1090000c 	andi	r2,r2,16384
2202e7b4:	10000226 	beq	r2,zero,2202e7c0 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
2202e7b8:	00bffd44 	movi	r2,-11
2202e7bc:	00000106 	br	2202e7c4 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
2202e7c0:	00bffec4 	movi	r2,-5
}
2202e7c4:	e037883a 	mov	sp,fp
2202e7c8:	dfc00117 	ldw	ra,4(sp)
2202e7cc:	df000017 	ldw	fp,0(sp)
2202e7d0:	dec00204 	addi	sp,sp,8
2202e7d4:	f800283a 	ret

2202e7d8 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
2202e7d8:	defffa04 	addi	sp,sp,-24
2202e7dc:	dfc00515 	stw	ra,20(sp)
2202e7e0:	df000415 	stw	fp,16(sp)
2202e7e4:	df000404 	addi	fp,sp,16
2202e7e8:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
2202e7ec:	0007883a 	mov	r3,zero
2202e7f0:	e0bfff17 	ldw	r2,-4(fp)
2202e7f4:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
2202e7f8:	e0bfff17 	ldw	r2,-4(fp)
2202e7fc:	10800104 	addi	r2,r2,4
2202e800:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2202e804:	0005303a 	rdctl	r2,status
2202e808:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2202e80c:	e0fffd17 	ldw	r3,-12(fp)
2202e810:	00bfff84 	movi	r2,-2
2202e814:	1884703a 	and	r2,r3,r2
2202e818:	1001703a 	wrctl	status,r2
  
  return context;
2202e81c:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
2202e820:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
2202e824:	202da480 	call	2202da48 <alt_tick>
2202e828:	e0bffc17 	ldw	r2,-16(fp)
2202e82c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2202e830:	e0bffe17 	ldw	r2,-8(fp)
2202e834:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
2202e838:	e037883a 	mov	sp,fp
2202e83c:	dfc00117 	ldw	ra,4(sp)
2202e840:	df000017 	ldw	fp,0(sp)
2202e844:	dec00204 	addi	sp,sp,8
2202e848:	f800283a 	ret

2202e84c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
2202e84c:	defff804 	addi	sp,sp,-32
2202e850:	dfc00715 	stw	ra,28(sp)
2202e854:	df000615 	stw	fp,24(sp)
2202e858:	df000604 	addi	fp,sp,24
2202e85c:	e13ffc15 	stw	r4,-16(fp)
2202e860:	e17ffd15 	stw	r5,-12(fp)
2202e864:	e1bffe15 	stw	r6,-8(fp)
2202e868:	e1ffff15 	stw	r7,-4(fp)
2202e86c:	e0bfff17 	ldw	r2,-4(fp)
2202e870:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
2202e874:	008880f4 	movhi	r2,8707
2202e878:	108d5804 	addi	r2,r2,13664
2202e87c:	10800017 	ldw	r2,0(r2)
2202e880:	1000041e 	bne	r2,zero,2202e894 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
2202e884:	008880f4 	movhi	r2,8707
2202e888:	108d5804 	addi	r2,r2,13664
2202e88c:	e0fffb17 	ldw	r3,-20(fp)
2202e890:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
2202e894:	e0bffc17 	ldw	r2,-16(fp)
2202e898:	10800104 	addi	r2,r2,4
2202e89c:	00c001c4 	movi	r3,7
2202e8a0:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
2202e8a4:	d8000015 	stw	zero,0(sp)
2202e8a8:	e13ffd17 	ldw	r4,-12(fp)
2202e8ac:	e17ffe17 	ldw	r5,-8(fp)
2202e8b0:	018880f4 	movhi	r6,8707
2202e8b4:	31b9f604 	addi	r6,r6,-6184
2202e8b8:	e1fffc17 	ldw	r7,-16(fp)
2202e8bc:	202ed480 	call	2202ed48 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
2202e8c0:	e037883a 	mov	sp,fp
2202e8c4:	dfc00117 	ldw	ra,4(sp)
2202e8c8:	df000017 	ldw	fp,0(sp)
2202e8cc:	dec00204 	addi	sp,sp,8
2202e8d0:	f800283a 	ret

2202e8d4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
2202e8d4:	defff504 	addi	sp,sp,-44
2202e8d8:	df000a15 	stw	fp,40(sp)
2202e8dc:	df000a04 	addi	fp,sp,40
2202e8e0:	e13ffc15 	stw	r4,-16(fp)
2202e8e4:	e17ffd15 	stw	r5,-12(fp)
2202e8e8:	e1bffe15 	stw	r6,-8(fp)
2202e8ec:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
2202e8f0:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
2202e8f4:	008880f4 	movhi	r2,8707
2202e8f8:	108d5804 	addi	r2,r2,13664
2202e8fc:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
2202e900:	10003f26 	beq	r2,zero,2202ea00 <alt_alarm_start+0x12c>
  {
    if (alarm)
2202e904:	e0bffc17 	ldw	r2,-16(fp)
2202e908:	10003b26 	beq	r2,zero,2202e9f8 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
2202e90c:	e0bffc17 	ldw	r2,-16(fp)
2202e910:	e0fffe17 	ldw	r3,-8(fp)
2202e914:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
2202e918:	e0bffc17 	ldw	r2,-16(fp)
2202e91c:	e0ffff17 	ldw	r3,-4(fp)
2202e920:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2202e924:	0005303a 	rdctl	r2,status
2202e928:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2202e92c:	e0fff817 	ldw	r3,-32(fp)
2202e930:	00bfff84 	movi	r2,-2
2202e934:	1884703a 	and	r2,r3,r2
2202e938:	1001703a 	wrctl	status,r2
  
  return context;
2202e93c:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
2202e940:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
2202e944:	008880f4 	movhi	r2,8707
2202e948:	108d5904 	addi	r2,r2,13668
2202e94c:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
2202e950:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
2202e954:	e0fffd17 	ldw	r3,-12(fp)
2202e958:	e0bff617 	ldw	r2,-40(fp)
2202e95c:	1885883a 	add	r2,r3,r2
2202e960:	10c00044 	addi	r3,r2,1
2202e964:	e0bffc17 	ldw	r2,-16(fp)
2202e968:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
2202e96c:	e0bffc17 	ldw	r2,-16(fp)
2202e970:	10c00217 	ldw	r3,8(r2)
2202e974:	e0bff617 	ldw	r2,-40(fp)
2202e978:	1880042e 	bgeu	r3,r2,2202e98c <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
2202e97c:	e0bffc17 	ldw	r2,-16(fp)
2202e980:	00c00044 	movi	r3,1
2202e984:	10c00405 	stb	r3,16(r2)
2202e988:	00000206 	br	2202e994 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
2202e98c:	e0bffc17 	ldw	r2,-16(fp)
2202e990:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
2202e994:	e0fffc17 	ldw	r3,-16(fp)
2202e998:	008880f4 	movhi	r2,8707
2202e99c:	10869004 	addi	r2,r2,6720
2202e9a0:	e0bff915 	stw	r2,-28(fp)
2202e9a4:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
2202e9a8:	e0bffa17 	ldw	r2,-24(fp)
2202e9ac:	e0fff917 	ldw	r3,-28(fp)
2202e9b0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
2202e9b4:	e0bff917 	ldw	r2,-28(fp)
2202e9b8:	10c00017 	ldw	r3,0(r2)
2202e9bc:	e0bffa17 	ldw	r2,-24(fp)
2202e9c0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
2202e9c4:	e0bff917 	ldw	r2,-28(fp)
2202e9c8:	10800017 	ldw	r2,0(r2)
2202e9cc:	e0fffa17 	ldw	r3,-24(fp)
2202e9d0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
2202e9d4:	e0bff917 	ldw	r2,-28(fp)
2202e9d8:	e0fffa17 	ldw	r3,-24(fp)
2202e9dc:	10c00015 	stw	r3,0(r2)
2202e9e0:	e0bff717 	ldw	r2,-36(fp)
2202e9e4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2202e9e8:	e0bffb17 	ldw	r2,-20(fp)
2202e9ec:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
2202e9f0:	0005883a 	mov	r2,zero
2202e9f4:	00000306 	br	2202ea04 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
2202e9f8:	00bffa84 	movi	r2,-22
2202e9fc:	00000106 	br	2202ea04 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
2202ea00:	00bfde84 	movi	r2,-134
  }
}
2202ea04:	e037883a 	mov	sp,fp
2202ea08:	df000017 	ldw	fp,0(sp)
2202ea0c:	dec00104 	addi	sp,sp,4
2202ea10:	f800283a 	ret

2202ea14 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
2202ea14:	defffa04 	addi	sp,sp,-24
2202ea18:	dfc00515 	stw	ra,20(sp)
2202ea1c:	df000415 	stw	fp,16(sp)
2202ea20:	df000404 	addi	fp,sp,16
2202ea24:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
2202ea28:	008000c4 	movi	r2,3
2202ea2c:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
2202ea30:	e0fffd17 	ldw	r3,-12(fp)
2202ea34:	008003f4 	movhi	r2,15
2202ea38:	10909004 	addi	r2,r2,16960
2202ea3c:	1885383a 	mul	r2,r3,r2
2202ea40:	0101dcf4 	movhi	r4,1907
2202ea44:	21165004 	addi	r4,r4,22848
2202ea48:	100b883a 	mov	r5,r2
2202ea4c:	2020c680 	call	22020c68 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
2202ea50:	01200034 	movhi	r4,32768
2202ea54:	213fffc4 	addi	r4,r4,-1
2202ea58:	100b883a 	mov	r5,r2
2202ea5c:	2020c680 	call	22020c68 <__udivsi3>
2202ea60:	e13fff17 	ldw	r4,-4(fp)
2202ea64:	100b883a 	mov	r5,r2
2202ea68:	2020c680 	call	22020c68 <__udivsi3>
2202ea6c:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
2202ea70:	e0bffe17 	ldw	r2,-8(fp)
2202ea74:	10002a26 	beq	r2,zero,2202eb20 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
2202ea78:	e03ffc15 	stw	zero,-16(fp)
2202ea7c:	00001706 	br	2202eadc <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
2202ea80:	00a00034 	movhi	r2,32768
2202ea84:	10bfffc4 	addi	r2,r2,-1
2202ea88:	10bfffc4 	addi	r2,r2,-1
2202ea8c:	103ffe1e 	bne	r2,zero,2202ea88 <__alt_data_end+0xfffef688>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
2202ea90:	e0fffd17 	ldw	r3,-12(fp)
2202ea94:	008003f4 	movhi	r2,15
2202ea98:	10909004 	addi	r2,r2,16960
2202ea9c:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
2202eaa0:	0101dcf4 	movhi	r4,1907
2202eaa4:	21165004 	addi	r4,r4,22848
2202eaa8:	100b883a 	mov	r5,r2
2202eaac:	2020c680 	call	22020c68 <__udivsi3>
2202eab0:	01200034 	movhi	r4,32768
2202eab4:	213fffc4 	addi	r4,r4,-1
2202eab8:	100b883a 	mov	r5,r2
2202eabc:	2020c680 	call	22020c68 <__udivsi3>
2202eac0:	1007883a 	mov	r3,r2
2202eac4:	e0bfff17 	ldw	r2,-4(fp)
2202eac8:	10c5c83a 	sub	r2,r2,r3
2202eacc:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
2202ead0:	e0bffc17 	ldw	r2,-16(fp)
2202ead4:	10800044 	addi	r2,r2,1
2202ead8:	e0bffc15 	stw	r2,-16(fp)
2202eadc:	e0fffc17 	ldw	r3,-16(fp)
2202eae0:	e0bffe17 	ldw	r2,-8(fp)
2202eae4:	18bfe616 	blt	r3,r2,2202ea80 <__alt_data_end+0xfffef680>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
2202eae8:	e0fffd17 	ldw	r3,-12(fp)
2202eaec:	008003f4 	movhi	r2,15
2202eaf0:	10909004 	addi	r2,r2,16960
2202eaf4:	1885383a 	mul	r2,r3,r2
2202eaf8:	0101dcf4 	movhi	r4,1907
2202eafc:	21165004 	addi	r4,r4,22848
2202eb00:	100b883a 	mov	r5,r2
2202eb04:	2020c680 	call	22020c68 <__udivsi3>
2202eb08:	1007883a 	mov	r3,r2
2202eb0c:	e0bfff17 	ldw	r2,-4(fp)
2202eb10:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
2202eb14:	10bfffc4 	addi	r2,r2,-1
2202eb18:	103ffe1e 	bne	r2,zero,2202eb14 <__alt_data_end+0xfffef714>
2202eb1c:	00000d06 	br	2202eb54 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
2202eb20:	e0fffd17 	ldw	r3,-12(fp)
2202eb24:	008003f4 	movhi	r2,15
2202eb28:	10909004 	addi	r2,r2,16960
2202eb2c:	1885383a 	mul	r2,r3,r2
2202eb30:	0101dcf4 	movhi	r4,1907
2202eb34:	21165004 	addi	r4,r4,22848
2202eb38:	100b883a 	mov	r5,r2
2202eb3c:	2020c680 	call	22020c68 <__udivsi3>
2202eb40:	1007883a 	mov	r3,r2
2202eb44:	e0bfff17 	ldw	r2,-4(fp)
2202eb48:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
2202eb4c:	10bfffc4 	addi	r2,r2,-1
2202eb50:	00bffe16 	blt	zero,r2,2202eb4c <__alt_data_end+0xfffef74c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
2202eb54:	0005883a 	mov	r2,zero
}
2202eb58:	e037883a 	mov	sp,fp
2202eb5c:	dfc00117 	ldw	ra,4(sp)
2202eb60:	df000017 	ldw	fp,0(sp)
2202eb64:	dec00204 	addi	sp,sp,8
2202eb68:	f800283a 	ret

2202eb6c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2202eb6c:	defffe04 	addi	sp,sp,-8
2202eb70:	dfc00115 	stw	ra,4(sp)
2202eb74:	df000015 	stw	fp,0(sp)
2202eb78:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2202eb7c:	008880f4 	movhi	r2,8707
2202eb80:	10868e04 	addi	r2,r2,6712
2202eb84:	10800017 	ldw	r2,0(r2)
2202eb88:	10000526 	beq	r2,zero,2202eba0 <alt_get_errno+0x34>
2202eb8c:	008880f4 	movhi	r2,8707
2202eb90:	10868e04 	addi	r2,r2,6712
2202eb94:	10800017 	ldw	r2,0(r2)
2202eb98:	103ee83a 	callr	r2
2202eb9c:	00000206 	br	2202eba8 <alt_get_errno+0x3c>
2202eba0:	008880f4 	movhi	r2,8707
2202eba4:	108d5404 	addi	r2,r2,13648
}
2202eba8:	e037883a 	mov	sp,fp
2202ebac:	dfc00117 	ldw	ra,4(sp)
2202ebb0:	df000017 	ldw	fp,0(sp)
2202ebb4:	dec00204 	addi	sp,sp,8
2202ebb8:	f800283a 	ret

2202ebbc <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
2202ebbc:	defffa04 	addi	sp,sp,-24
2202ebc0:	dfc00515 	stw	ra,20(sp)
2202ebc4:	df000415 	stw	fp,16(sp)
2202ebc8:	df000404 	addi	fp,sp,16
2202ebcc:	e13ffe15 	stw	r4,-8(fp)
2202ebd0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
2202ebd4:	e0bffe17 	ldw	r2,-8(fp)
2202ebd8:	10000326 	beq	r2,zero,2202ebe8 <alt_dev_llist_insert+0x2c>
2202ebdc:	e0bffe17 	ldw	r2,-8(fp)
2202ebe0:	10800217 	ldw	r2,8(r2)
2202ebe4:	1000061e 	bne	r2,zero,2202ec00 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
2202ebe8:	202eb6c0 	call	2202eb6c <alt_get_errno>
2202ebec:	1007883a 	mov	r3,r2
2202ebf0:	00800584 	movi	r2,22
2202ebf4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
2202ebf8:	00bffa84 	movi	r2,-22
2202ebfc:	00001306 	br	2202ec4c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
2202ec00:	e0bffe17 	ldw	r2,-8(fp)
2202ec04:	e0ffff17 	ldw	r3,-4(fp)
2202ec08:	e0fffc15 	stw	r3,-16(fp)
2202ec0c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
2202ec10:	e0bffd17 	ldw	r2,-12(fp)
2202ec14:	e0fffc17 	ldw	r3,-16(fp)
2202ec18:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
2202ec1c:	e0bffc17 	ldw	r2,-16(fp)
2202ec20:	10c00017 	ldw	r3,0(r2)
2202ec24:	e0bffd17 	ldw	r2,-12(fp)
2202ec28:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
2202ec2c:	e0bffc17 	ldw	r2,-16(fp)
2202ec30:	10800017 	ldw	r2,0(r2)
2202ec34:	e0fffd17 	ldw	r3,-12(fp)
2202ec38:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
2202ec3c:	e0bffc17 	ldw	r2,-16(fp)
2202ec40:	e0fffd17 	ldw	r3,-12(fp)
2202ec44:	10c00015 	stw	r3,0(r2)

  return 0;  
2202ec48:	0005883a 	mov	r2,zero
}
2202ec4c:	e037883a 	mov	sp,fp
2202ec50:	dfc00117 	ldw	ra,4(sp)
2202ec54:	df000017 	ldw	fp,0(sp)
2202ec58:	dec00204 	addi	sp,sp,8
2202ec5c:	f800283a 	ret

2202ec60 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
2202ec60:	defffd04 	addi	sp,sp,-12
2202ec64:	dfc00215 	stw	ra,8(sp)
2202ec68:	df000115 	stw	fp,4(sp)
2202ec6c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
2202ec70:	008880f4 	movhi	r2,8707
2202ec74:	10bec104 	addi	r2,r2,-1276
2202ec78:	e0bfff15 	stw	r2,-4(fp)
2202ec7c:	00000606 	br	2202ec98 <_do_ctors+0x38>
        (*ctor) (); 
2202ec80:	e0bfff17 	ldw	r2,-4(fp)
2202ec84:	10800017 	ldw	r2,0(r2)
2202ec88:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
2202ec8c:	e0bfff17 	ldw	r2,-4(fp)
2202ec90:	10bfff04 	addi	r2,r2,-4
2202ec94:	e0bfff15 	stw	r2,-4(fp)
2202ec98:	e0ffff17 	ldw	r3,-4(fp)
2202ec9c:	008880f4 	movhi	r2,8707
2202eca0:	10bec204 	addi	r2,r2,-1272
2202eca4:	18bff62e 	bgeu	r3,r2,2202ec80 <__alt_data_end+0xfffef880>
        (*ctor) (); 
}
2202eca8:	e037883a 	mov	sp,fp
2202ecac:	dfc00117 	ldw	ra,4(sp)
2202ecb0:	df000017 	ldw	fp,0(sp)
2202ecb4:	dec00204 	addi	sp,sp,8
2202ecb8:	f800283a 	ret

2202ecbc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
2202ecbc:	defffd04 	addi	sp,sp,-12
2202ecc0:	dfc00215 	stw	ra,8(sp)
2202ecc4:	df000115 	stw	fp,4(sp)
2202ecc8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
2202eccc:	008880f4 	movhi	r2,8707
2202ecd0:	10bec104 	addi	r2,r2,-1276
2202ecd4:	e0bfff15 	stw	r2,-4(fp)
2202ecd8:	00000606 	br	2202ecf4 <_do_dtors+0x38>
        (*dtor) (); 
2202ecdc:	e0bfff17 	ldw	r2,-4(fp)
2202ece0:	10800017 	ldw	r2,0(r2)
2202ece4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
2202ece8:	e0bfff17 	ldw	r2,-4(fp)
2202ecec:	10bfff04 	addi	r2,r2,-4
2202ecf0:	e0bfff15 	stw	r2,-4(fp)
2202ecf4:	e0ffff17 	ldw	r3,-4(fp)
2202ecf8:	008880f4 	movhi	r2,8707
2202ecfc:	10bec204 	addi	r2,r2,-1272
2202ed00:	18bff62e 	bgeu	r3,r2,2202ecdc <__alt_data_end+0xfffef8dc>
        (*dtor) (); 
}
2202ed04:	e037883a 	mov	sp,fp
2202ed08:	dfc00117 	ldw	ra,4(sp)
2202ed0c:	df000017 	ldw	fp,0(sp)
2202ed10:	dec00204 	addi	sp,sp,8
2202ed14:	f800283a 	ret

2202ed18 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
2202ed18:	defffe04 	addi	sp,sp,-8
2202ed1c:	dfc00115 	stw	ra,4(sp)
2202ed20:	df000015 	stw	fp,0(sp)
2202ed24:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
2202ed28:	0009883a 	mov	r4,zero
2202ed2c:	01440004 	movi	r5,4096
2202ed30:	202f63c0 	call	2202f63c <alt_icache_flush>
#endif
}
2202ed34:	e037883a 	mov	sp,fp
2202ed38:	dfc00117 	ldw	ra,4(sp)
2202ed3c:	df000017 	ldw	fp,0(sp)
2202ed40:	dec00204 	addi	sp,sp,8
2202ed44:	f800283a 	ret

2202ed48 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
2202ed48:	defff904 	addi	sp,sp,-28
2202ed4c:	dfc00615 	stw	ra,24(sp)
2202ed50:	df000515 	stw	fp,20(sp)
2202ed54:	df000504 	addi	fp,sp,20
2202ed58:	e13ffc15 	stw	r4,-16(fp)
2202ed5c:	e17ffd15 	stw	r5,-12(fp)
2202ed60:	e1bffe15 	stw	r6,-8(fp)
2202ed64:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
2202ed68:	e0800217 	ldw	r2,8(fp)
2202ed6c:	d8800015 	stw	r2,0(sp)
2202ed70:	e13ffc17 	ldw	r4,-16(fp)
2202ed74:	e17ffd17 	ldw	r5,-12(fp)
2202ed78:	e1bffe17 	ldw	r6,-8(fp)
2202ed7c:	e1ffff17 	ldw	r7,-4(fp)
2202ed80:	202ef280 	call	2202ef28 <alt_iic_isr_register>
}  
2202ed84:	e037883a 	mov	sp,fp
2202ed88:	dfc00117 	ldw	ra,4(sp)
2202ed8c:	df000017 	ldw	fp,0(sp)
2202ed90:	dec00204 	addi	sp,sp,8
2202ed94:	f800283a 	ret

2202ed98 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
2202ed98:	defff904 	addi	sp,sp,-28
2202ed9c:	df000615 	stw	fp,24(sp)
2202eda0:	df000604 	addi	fp,sp,24
2202eda4:	e13ffe15 	stw	r4,-8(fp)
2202eda8:	e17fff15 	stw	r5,-4(fp)
2202edac:	e0bfff17 	ldw	r2,-4(fp)
2202edb0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2202edb4:	0005303a 	rdctl	r2,status
2202edb8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2202edbc:	e0fffb17 	ldw	r3,-20(fp)
2202edc0:	00bfff84 	movi	r2,-2
2202edc4:	1884703a 	and	r2,r3,r2
2202edc8:	1001703a 	wrctl	status,r2
  
  return context;
2202edcc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
2202edd0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
2202edd4:	e0bffa17 	ldw	r2,-24(fp)
2202edd8:	00c00044 	movi	r3,1
2202eddc:	1884983a 	sll	r2,r3,r2
2202ede0:	1007883a 	mov	r3,r2
2202ede4:	008880f4 	movhi	r2,8707
2202ede8:	108d5a04 	addi	r2,r2,13672
2202edec:	10800017 	ldw	r2,0(r2)
2202edf0:	1886b03a 	or	r3,r3,r2
2202edf4:	008880f4 	movhi	r2,8707
2202edf8:	108d5a04 	addi	r2,r2,13672
2202edfc:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
2202ee00:	008880f4 	movhi	r2,8707
2202ee04:	108d5a04 	addi	r2,r2,13672
2202ee08:	10800017 	ldw	r2,0(r2)
2202ee0c:	100170fa 	wrctl	ienable,r2
2202ee10:	e0bffc17 	ldw	r2,-16(fp)
2202ee14:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2202ee18:	e0bffd17 	ldw	r2,-12(fp)
2202ee1c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
2202ee20:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
2202ee24:	0001883a 	nop
}
2202ee28:	e037883a 	mov	sp,fp
2202ee2c:	df000017 	ldw	fp,0(sp)
2202ee30:	dec00104 	addi	sp,sp,4
2202ee34:	f800283a 	ret

2202ee38 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
2202ee38:	defff904 	addi	sp,sp,-28
2202ee3c:	df000615 	stw	fp,24(sp)
2202ee40:	df000604 	addi	fp,sp,24
2202ee44:	e13ffe15 	stw	r4,-8(fp)
2202ee48:	e17fff15 	stw	r5,-4(fp)
2202ee4c:	e0bfff17 	ldw	r2,-4(fp)
2202ee50:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2202ee54:	0005303a 	rdctl	r2,status
2202ee58:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2202ee5c:	e0fffb17 	ldw	r3,-20(fp)
2202ee60:	00bfff84 	movi	r2,-2
2202ee64:	1884703a 	and	r2,r3,r2
2202ee68:	1001703a 	wrctl	status,r2
  
  return context;
2202ee6c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
2202ee70:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
2202ee74:	e0bffa17 	ldw	r2,-24(fp)
2202ee78:	00c00044 	movi	r3,1
2202ee7c:	1884983a 	sll	r2,r3,r2
2202ee80:	0084303a 	nor	r2,zero,r2
2202ee84:	1007883a 	mov	r3,r2
2202ee88:	008880f4 	movhi	r2,8707
2202ee8c:	108d5a04 	addi	r2,r2,13672
2202ee90:	10800017 	ldw	r2,0(r2)
2202ee94:	1886703a 	and	r3,r3,r2
2202ee98:	008880f4 	movhi	r2,8707
2202ee9c:	108d5a04 	addi	r2,r2,13672
2202eea0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
2202eea4:	008880f4 	movhi	r2,8707
2202eea8:	108d5a04 	addi	r2,r2,13672
2202eeac:	10800017 	ldw	r2,0(r2)
2202eeb0:	100170fa 	wrctl	ienable,r2
2202eeb4:	e0bffc17 	ldw	r2,-16(fp)
2202eeb8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2202eebc:	e0bffd17 	ldw	r2,-12(fp)
2202eec0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
2202eec4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
2202eec8:	0001883a 	nop
}
2202eecc:	e037883a 	mov	sp,fp
2202eed0:	df000017 	ldw	fp,0(sp)
2202eed4:	dec00104 	addi	sp,sp,4
2202eed8:	f800283a 	ret

2202eedc <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
2202eedc:	defffc04 	addi	sp,sp,-16
2202eee0:	df000315 	stw	fp,12(sp)
2202eee4:	df000304 	addi	fp,sp,12
2202eee8:	e13ffe15 	stw	r4,-8(fp)
2202eeec:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
2202eef0:	000530fa 	rdctl	r2,ienable
2202eef4:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
2202eef8:	e0bfff17 	ldw	r2,-4(fp)
2202eefc:	00c00044 	movi	r3,1
2202ef00:	1884983a 	sll	r2,r3,r2
2202ef04:	1007883a 	mov	r3,r2
2202ef08:	e0bffd17 	ldw	r2,-12(fp)
2202ef0c:	1884703a 	and	r2,r3,r2
2202ef10:	1004c03a 	cmpne	r2,r2,zero
2202ef14:	10803fcc 	andi	r2,r2,255
}
2202ef18:	e037883a 	mov	sp,fp
2202ef1c:	df000017 	ldw	fp,0(sp)
2202ef20:	dec00104 	addi	sp,sp,4
2202ef24:	f800283a 	ret

2202ef28 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
2202ef28:	defff504 	addi	sp,sp,-44
2202ef2c:	dfc00a15 	stw	ra,40(sp)
2202ef30:	df000915 	stw	fp,36(sp)
2202ef34:	df000904 	addi	fp,sp,36
2202ef38:	e13ffc15 	stw	r4,-16(fp)
2202ef3c:	e17ffd15 	stw	r5,-12(fp)
2202ef40:	e1bffe15 	stw	r6,-8(fp)
2202ef44:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
2202ef48:	00bffa84 	movi	r2,-22
2202ef4c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
2202ef50:	e0bffd17 	ldw	r2,-12(fp)
2202ef54:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
2202ef58:	e0bff817 	ldw	r2,-32(fp)
2202ef5c:	10800808 	cmpgei	r2,r2,32
2202ef60:	1000271e 	bne	r2,zero,2202f000 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
2202ef64:	0005303a 	rdctl	r2,status
2202ef68:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
2202ef6c:	e0fffa17 	ldw	r3,-24(fp)
2202ef70:	00bfff84 	movi	r2,-2
2202ef74:	1884703a 	and	r2,r3,r2
2202ef78:	1001703a 	wrctl	status,r2
  
  return context;
2202ef7c:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
2202ef80:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
2202ef84:	008880f4 	movhi	r2,8707
2202ef88:	108d6604 	addi	r2,r2,13720
2202ef8c:	e0fff817 	ldw	r3,-32(fp)
2202ef90:	180690fa 	slli	r3,r3,3
2202ef94:	10c5883a 	add	r2,r2,r3
2202ef98:	e0fffe17 	ldw	r3,-8(fp)
2202ef9c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
2202efa0:	008880f4 	movhi	r2,8707
2202efa4:	108d6604 	addi	r2,r2,13720
2202efa8:	e0fff817 	ldw	r3,-32(fp)
2202efac:	180690fa 	slli	r3,r3,3
2202efb0:	10c5883a 	add	r2,r2,r3
2202efb4:	10800104 	addi	r2,r2,4
2202efb8:	e0ffff17 	ldw	r3,-4(fp)
2202efbc:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
2202efc0:	e0bffe17 	ldw	r2,-8(fp)
2202efc4:	10000526 	beq	r2,zero,2202efdc <alt_iic_isr_register+0xb4>
2202efc8:	e0bff817 	ldw	r2,-32(fp)
2202efcc:	e13ffc17 	ldw	r4,-16(fp)
2202efd0:	100b883a 	mov	r5,r2
2202efd4:	202ed980 	call	2202ed98 <alt_ic_irq_enable>
2202efd8:	00000406 	br	2202efec <alt_iic_isr_register+0xc4>
2202efdc:	e0bff817 	ldw	r2,-32(fp)
2202efe0:	e13ffc17 	ldw	r4,-16(fp)
2202efe4:	100b883a 	mov	r5,r2
2202efe8:	202ee380 	call	2202ee38 <alt_ic_irq_disable>
2202efec:	e0bff715 	stw	r2,-36(fp)
2202eff0:	e0bff917 	ldw	r2,-28(fp)
2202eff4:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
2202eff8:	e0bffb17 	ldw	r2,-20(fp)
2202effc:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
2202f000:	e0bff717 	ldw	r2,-36(fp)
}
2202f004:	e037883a 	mov	sp,fp
2202f008:	dfc00117 	ldw	ra,4(sp)
2202f00c:	df000017 	ldw	fp,0(sp)
2202f010:	dec00204 	addi	sp,sp,8
2202f014:	f800283a 	ret

2202f018 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
2202f018:	defff904 	addi	sp,sp,-28
2202f01c:	dfc00615 	stw	ra,24(sp)
2202f020:	df000515 	stw	fp,20(sp)
2202f024:	df000504 	addi	fp,sp,20
2202f028:	e13ffc15 	stw	r4,-16(fp)
2202f02c:	e17ffd15 	stw	r5,-12(fp)
2202f030:	e1bffe15 	stw	r6,-8(fp)
2202f034:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
2202f038:	e13ffd17 	ldw	r4,-12(fp)
2202f03c:	e17ffe17 	ldw	r5,-8(fp)
2202f040:	e1bfff17 	ldw	r6,-4(fp)
2202f044:	202f26c0 	call	2202f26c <open>
2202f048:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
2202f04c:	e0bffb17 	ldw	r2,-20(fp)
2202f050:	10001c16 	blt	r2,zero,2202f0c4 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
2202f054:	008880f4 	movhi	r2,8707
2202f058:	10820b04 	addi	r2,r2,2092
2202f05c:	e0fffb17 	ldw	r3,-20(fp)
2202f060:	18c00324 	muli	r3,r3,12
2202f064:	10c5883a 	add	r2,r2,r3
2202f068:	10c00017 	ldw	r3,0(r2)
2202f06c:	e0bffc17 	ldw	r2,-16(fp)
2202f070:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
2202f074:	008880f4 	movhi	r2,8707
2202f078:	10820b04 	addi	r2,r2,2092
2202f07c:	e0fffb17 	ldw	r3,-20(fp)
2202f080:	18c00324 	muli	r3,r3,12
2202f084:	10c5883a 	add	r2,r2,r3
2202f088:	10800104 	addi	r2,r2,4
2202f08c:	10c00017 	ldw	r3,0(r2)
2202f090:	e0bffc17 	ldw	r2,-16(fp)
2202f094:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
2202f098:	008880f4 	movhi	r2,8707
2202f09c:	10820b04 	addi	r2,r2,2092
2202f0a0:	e0fffb17 	ldw	r3,-20(fp)
2202f0a4:	18c00324 	muli	r3,r3,12
2202f0a8:	10c5883a 	add	r2,r2,r3
2202f0ac:	10800204 	addi	r2,r2,8
2202f0b0:	10c00017 	ldw	r3,0(r2)
2202f0b4:	e0bffc17 	ldw	r2,-16(fp)
2202f0b8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
2202f0bc:	e13ffb17 	ldw	r4,-20(fp)
2202f0c0:	202d8a00 	call	2202d8a0 <alt_release_fd>
  }
} 
2202f0c4:	e037883a 	mov	sp,fp
2202f0c8:	dfc00117 	ldw	ra,4(sp)
2202f0cc:	df000017 	ldw	fp,0(sp)
2202f0d0:	dec00204 	addi	sp,sp,8
2202f0d4:	f800283a 	ret

2202f0d8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
2202f0d8:	defffb04 	addi	sp,sp,-20
2202f0dc:	dfc00415 	stw	ra,16(sp)
2202f0e0:	df000315 	stw	fp,12(sp)
2202f0e4:	df000304 	addi	fp,sp,12
2202f0e8:	e13ffd15 	stw	r4,-12(fp)
2202f0ec:	e17ffe15 	stw	r5,-8(fp)
2202f0f0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
2202f0f4:	010880f4 	movhi	r4,8707
2202f0f8:	21020e04 	addi	r4,r4,2104
2202f0fc:	e17ffd17 	ldw	r5,-12(fp)
2202f100:	01800044 	movi	r6,1
2202f104:	01c07fc4 	movi	r7,511
2202f108:	202f0180 	call	2202f018 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
2202f10c:	010880f4 	movhi	r4,8707
2202f110:	21020b04 	addi	r4,r4,2092
2202f114:	e17ffe17 	ldw	r5,-8(fp)
2202f118:	000d883a 	mov	r6,zero
2202f11c:	01c07fc4 	movi	r7,511
2202f120:	202f0180 	call	2202f018 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
2202f124:	010880f4 	movhi	r4,8707
2202f128:	21021104 	addi	r4,r4,2116
2202f12c:	e17fff17 	ldw	r5,-4(fp)
2202f130:	01800044 	movi	r6,1
2202f134:	01c07fc4 	movi	r7,511
2202f138:	202f0180 	call	2202f018 <alt_open_fd>
}  
2202f13c:	e037883a 	mov	sp,fp
2202f140:	dfc00117 	ldw	ra,4(sp)
2202f144:	df000017 	ldw	fp,0(sp)
2202f148:	dec00204 	addi	sp,sp,8
2202f14c:	f800283a 	ret

2202f150 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
2202f150:	defffe04 	addi	sp,sp,-8
2202f154:	dfc00115 	stw	ra,4(sp)
2202f158:	df000015 	stw	fp,0(sp)
2202f15c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
2202f160:	008880f4 	movhi	r2,8707
2202f164:	10868e04 	addi	r2,r2,6712
2202f168:	10800017 	ldw	r2,0(r2)
2202f16c:	10000526 	beq	r2,zero,2202f184 <alt_get_errno+0x34>
2202f170:	008880f4 	movhi	r2,8707
2202f174:	10868e04 	addi	r2,r2,6712
2202f178:	10800017 	ldw	r2,0(r2)
2202f17c:	103ee83a 	callr	r2
2202f180:	00000206 	br	2202f18c <alt_get_errno+0x3c>
2202f184:	008880f4 	movhi	r2,8707
2202f188:	108d5404 	addi	r2,r2,13648
}
2202f18c:	e037883a 	mov	sp,fp
2202f190:	dfc00117 	ldw	ra,4(sp)
2202f194:	df000017 	ldw	fp,0(sp)
2202f198:	dec00204 	addi	sp,sp,8
2202f19c:	f800283a 	ret

2202f1a0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
2202f1a0:	defffd04 	addi	sp,sp,-12
2202f1a4:	df000215 	stw	fp,8(sp)
2202f1a8:	df000204 	addi	fp,sp,8
2202f1ac:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
2202f1b0:	e0bfff17 	ldw	r2,-4(fp)
2202f1b4:	10800217 	ldw	r2,8(r2)
2202f1b8:	10d00034 	orhi	r3,r2,16384
2202f1bc:	e0bfff17 	ldw	r2,-4(fp)
2202f1c0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
2202f1c4:	e03ffe15 	stw	zero,-8(fp)
2202f1c8:	00001d06 	br	2202f240 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
2202f1cc:	008880f4 	movhi	r2,8707
2202f1d0:	10820b04 	addi	r2,r2,2092
2202f1d4:	e0fffe17 	ldw	r3,-8(fp)
2202f1d8:	18c00324 	muli	r3,r3,12
2202f1dc:	10c5883a 	add	r2,r2,r3
2202f1e0:	10c00017 	ldw	r3,0(r2)
2202f1e4:	e0bfff17 	ldw	r2,-4(fp)
2202f1e8:	10800017 	ldw	r2,0(r2)
2202f1ec:	1880111e 	bne	r3,r2,2202f234 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
2202f1f0:	008880f4 	movhi	r2,8707
2202f1f4:	10820b04 	addi	r2,r2,2092
2202f1f8:	e0fffe17 	ldw	r3,-8(fp)
2202f1fc:	18c00324 	muli	r3,r3,12
2202f200:	10c5883a 	add	r2,r2,r3
2202f204:	10800204 	addi	r2,r2,8
2202f208:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
2202f20c:	1000090e 	bge	r2,zero,2202f234 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
2202f210:	e0bffe17 	ldw	r2,-8(fp)
2202f214:	10c00324 	muli	r3,r2,12
2202f218:	008880f4 	movhi	r2,8707
2202f21c:	10820b04 	addi	r2,r2,2092
2202f220:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
2202f224:	e0bfff17 	ldw	r2,-4(fp)
2202f228:	18800226 	beq	r3,r2,2202f234 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
2202f22c:	00bffcc4 	movi	r2,-13
2202f230:	00000a06 	br	2202f25c <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
2202f234:	e0bffe17 	ldw	r2,-8(fp)
2202f238:	10800044 	addi	r2,r2,1
2202f23c:	e0bffe15 	stw	r2,-8(fp)
2202f240:	008880f4 	movhi	r2,8707
2202f244:	10868d04 	addi	r2,r2,6708
2202f248:	10800017 	ldw	r2,0(r2)
2202f24c:	1007883a 	mov	r3,r2
2202f250:	e0bffe17 	ldw	r2,-8(fp)
2202f254:	18bfdd2e 	bgeu	r3,r2,2202f1cc <__alt_data_end+0xfffefdcc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
2202f258:	0005883a 	mov	r2,zero
}
2202f25c:	e037883a 	mov	sp,fp
2202f260:	df000017 	ldw	fp,0(sp)
2202f264:	dec00104 	addi	sp,sp,4
2202f268:	f800283a 	ret

2202f26c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
2202f26c:	defff604 	addi	sp,sp,-40
2202f270:	dfc00915 	stw	ra,36(sp)
2202f274:	df000815 	stw	fp,32(sp)
2202f278:	df000804 	addi	fp,sp,32
2202f27c:	e13ffd15 	stw	r4,-12(fp)
2202f280:	e17ffe15 	stw	r5,-8(fp)
2202f284:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
2202f288:	00bfffc4 	movi	r2,-1
2202f28c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
2202f290:	00bffb44 	movi	r2,-19
2202f294:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
2202f298:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
2202f29c:	e13ffd17 	ldw	r4,-12(fp)
2202f2a0:	014880f4 	movhi	r5,8707
2202f2a4:	29468b04 	addi	r5,r5,6700
2202f2a8:	202f3e40 	call	2202f3e4 <alt_find_dev>
2202f2ac:	e0bff815 	stw	r2,-32(fp)
2202f2b0:	e0bff817 	ldw	r2,-32(fp)
2202f2b4:	1000051e 	bne	r2,zero,2202f2cc <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
2202f2b8:	e13ffd17 	ldw	r4,-12(fp)
2202f2bc:	202f4740 	call	2202f474 <alt_find_file>
2202f2c0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
2202f2c4:	00800044 	movi	r2,1
2202f2c8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
2202f2cc:	e0bff817 	ldw	r2,-32(fp)
2202f2d0:	10002926 	beq	r2,zero,2202f378 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
2202f2d4:	e13ff817 	ldw	r4,-32(fp)
2202f2d8:	202f5880 	call	2202f588 <alt_get_fd>
2202f2dc:	e0bff915 	stw	r2,-28(fp)
2202f2e0:	e0bff917 	ldw	r2,-28(fp)
2202f2e4:	1000030e 	bge	r2,zero,2202f2f4 <open+0x88>
    {
      status = index;
2202f2e8:	e0bff917 	ldw	r2,-28(fp)
2202f2ec:	e0bffa15 	stw	r2,-24(fp)
2202f2f0:	00002306 	br	2202f380 <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
2202f2f4:	e0bff917 	ldw	r2,-28(fp)
2202f2f8:	10c00324 	muli	r3,r2,12
2202f2fc:	008880f4 	movhi	r2,8707
2202f300:	10820b04 	addi	r2,r2,2092
2202f304:	1885883a 	add	r2,r3,r2
2202f308:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
2202f30c:	e0fffe17 	ldw	r3,-8(fp)
2202f310:	00900034 	movhi	r2,16384
2202f314:	10bfffc4 	addi	r2,r2,-1
2202f318:	1886703a 	and	r3,r3,r2
2202f31c:	e0bffc17 	ldw	r2,-16(fp)
2202f320:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
2202f324:	e0bffb17 	ldw	r2,-20(fp)
2202f328:	1000051e 	bne	r2,zero,2202f340 <open+0xd4>
2202f32c:	e13ffc17 	ldw	r4,-16(fp)
2202f330:	202f1a00 	call	2202f1a0 <alt_file_locked>
2202f334:	e0bffa15 	stw	r2,-24(fp)
2202f338:	e0bffa17 	ldw	r2,-24(fp)
2202f33c:	10001016 	blt	r2,zero,2202f380 <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
2202f340:	e0bff817 	ldw	r2,-32(fp)
2202f344:	10800317 	ldw	r2,12(r2)
2202f348:	10000826 	beq	r2,zero,2202f36c <open+0x100>
2202f34c:	e0bff817 	ldw	r2,-32(fp)
2202f350:	10800317 	ldw	r2,12(r2)
2202f354:	e13ffc17 	ldw	r4,-16(fp)
2202f358:	e17ffd17 	ldw	r5,-12(fp)
2202f35c:	e1bffe17 	ldw	r6,-8(fp)
2202f360:	e1ffff17 	ldw	r7,-4(fp)
2202f364:	103ee83a 	callr	r2
2202f368:	00000106 	br	2202f370 <open+0x104>
2202f36c:	0005883a 	mov	r2,zero
2202f370:	e0bffa15 	stw	r2,-24(fp)
2202f374:	00000206 	br	2202f380 <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
2202f378:	00bffb44 	movi	r2,-19
2202f37c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
2202f380:	e0bffa17 	ldw	r2,-24(fp)
2202f384:	1000090e 	bge	r2,zero,2202f3ac <open+0x140>
  {
    alt_release_fd (index);  
2202f388:	e13ff917 	ldw	r4,-28(fp)
2202f38c:	202d8a00 	call	2202d8a0 <alt_release_fd>
    ALT_ERRNO = -status;
2202f390:	202f1500 	call	2202f150 <alt_get_errno>
2202f394:	1007883a 	mov	r3,r2
2202f398:	e0bffa17 	ldw	r2,-24(fp)
2202f39c:	0085c83a 	sub	r2,zero,r2
2202f3a0:	18800015 	stw	r2,0(r3)
    return -1;
2202f3a4:	00bfffc4 	movi	r2,-1
2202f3a8:	00000106 	br	2202f3b0 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
2202f3ac:	e0bff917 	ldw	r2,-28(fp)
}
2202f3b0:	e037883a 	mov	sp,fp
2202f3b4:	dfc00117 	ldw	ra,4(sp)
2202f3b8:	df000017 	ldw	fp,0(sp)
2202f3bc:	dec00204 	addi	sp,sp,8
2202f3c0:	f800283a 	ret

2202f3c4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
2202f3c4:	deffff04 	addi	sp,sp,-4
2202f3c8:	df000015 	stw	fp,0(sp)
2202f3cc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
2202f3d0:	000170fa 	wrctl	ienable,zero
}
2202f3d4:	e037883a 	mov	sp,fp
2202f3d8:	df000017 	ldw	fp,0(sp)
2202f3dc:	dec00104 	addi	sp,sp,4
2202f3e0:	f800283a 	ret

2202f3e4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
2202f3e4:	defffa04 	addi	sp,sp,-24
2202f3e8:	dfc00515 	stw	ra,20(sp)
2202f3ec:	df000415 	stw	fp,16(sp)
2202f3f0:	df000404 	addi	fp,sp,16
2202f3f4:	e13ffe15 	stw	r4,-8(fp)
2202f3f8:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
2202f3fc:	e0bfff17 	ldw	r2,-4(fp)
2202f400:	10800017 	ldw	r2,0(r2)
2202f404:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
2202f408:	e13ffe17 	ldw	r4,-8(fp)
2202f40c:	2020f800 	call	22020f80 <strlen>
2202f410:	10800044 	addi	r2,r2,1
2202f414:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
2202f418:	00000d06 	br	2202f450 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
2202f41c:	e0bffc17 	ldw	r2,-16(fp)
2202f420:	10c00217 	ldw	r3,8(r2)
2202f424:	e0bffd17 	ldw	r2,-12(fp)
2202f428:	1809883a 	mov	r4,r3
2202f42c:	e17ffe17 	ldw	r5,-8(fp)
2202f430:	100d883a 	mov	r6,r2
2202f434:	202f7b00 	call	2202f7b0 <memcmp>
2202f438:	1000021e 	bne	r2,zero,2202f444 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
2202f43c:	e0bffc17 	ldw	r2,-16(fp)
2202f440:	00000706 	br	2202f460 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
2202f444:	e0bffc17 	ldw	r2,-16(fp)
2202f448:	10800017 	ldw	r2,0(r2)
2202f44c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
2202f450:	e0fffc17 	ldw	r3,-16(fp)
2202f454:	e0bfff17 	ldw	r2,-4(fp)
2202f458:	18bff01e 	bne	r3,r2,2202f41c <__alt_data_end+0xffff001c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
2202f45c:	0005883a 	mov	r2,zero
}
2202f460:	e037883a 	mov	sp,fp
2202f464:	dfc00117 	ldw	ra,4(sp)
2202f468:	df000017 	ldw	fp,0(sp)
2202f46c:	dec00204 	addi	sp,sp,8
2202f470:	f800283a 	ret

2202f474 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
2202f474:	defffb04 	addi	sp,sp,-20
2202f478:	dfc00415 	stw	ra,16(sp)
2202f47c:	df000315 	stw	fp,12(sp)
2202f480:	df000304 	addi	fp,sp,12
2202f484:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
2202f488:	008880f4 	movhi	r2,8707
2202f48c:	10868904 	addi	r2,r2,6692
2202f490:	10800017 	ldw	r2,0(r2)
2202f494:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
2202f498:	00003106 	br	2202f560 <alt_find_file+0xec>
  {
    len = strlen(next->name);
2202f49c:	e0bffd17 	ldw	r2,-12(fp)
2202f4a0:	10800217 	ldw	r2,8(r2)
2202f4a4:	1009883a 	mov	r4,r2
2202f4a8:	2020f800 	call	22020f80 <strlen>
2202f4ac:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
2202f4b0:	e0bffd17 	ldw	r2,-12(fp)
2202f4b4:	10c00217 	ldw	r3,8(r2)
2202f4b8:	e0bffe17 	ldw	r2,-8(fp)
2202f4bc:	10bfffc4 	addi	r2,r2,-1
2202f4c0:	1885883a 	add	r2,r3,r2
2202f4c4:	10800003 	ldbu	r2,0(r2)
2202f4c8:	10803fcc 	andi	r2,r2,255
2202f4cc:	1080201c 	xori	r2,r2,128
2202f4d0:	10bfe004 	addi	r2,r2,-128
2202f4d4:	10800bd8 	cmpnei	r2,r2,47
2202f4d8:	1000031e 	bne	r2,zero,2202f4e8 <alt_find_file+0x74>
    {
      len -= 1;
2202f4dc:	e0bffe17 	ldw	r2,-8(fp)
2202f4e0:	10bfffc4 	addi	r2,r2,-1
2202f4e4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
2202f4e8:	e0bffe17 	ldw	r2,-8(fp)
2202f4ec:	e0ffff17 	ldw	r3,-4(fp)
2202f4f0:	1885883a 	add	r2,r3,r2
2202f4f4:	10800003 	ldbu	r2,0(r2)
2202f4f8:	10803fcc 	andi	r2,r2,255
2202f4fc:	1080201c 	xori	r2,r2,128
2202f500:	10bfe004 	addi	r2,r2,-128
2202f504:	10800be0 	cmpeqi	r2,r2,47
2202f508:	1000081e 	bne	r2,zero,2202f52c <alt_find_file+0xb8>
2202f50c:	e0bffe17 	ldw	r2,-8(fp)
2202f510:	e0ffff17 	ldw	r3,-4(fp)
2202f514:	1885883a 	add	r2,r3,r2
2202f518:	10800003 	ldbu	r2,0(r2)
2202f51c:	10803fcc 	andi	r2,r2,255
2202f520:	1080201c 	xori	r2,r2,128
2202f524:	10bfe004 	addi	r2,r2,-128
2202f528:	10000a1e 	bne	r2,zero,2202f554 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
2202f52c:	e0bffd17 	ldw	r2,-12(fp)
2202f530:	10c00217 	ldw	r3,8(r2)
2202f534:	e0bffe17 	ldw	r2,-8(fp)
2202f538:	1809883a 	mov	r4,r3
2202f53c:	e17fff17 	ldw	r5,-4(fp)
2202f540:	100d883a 	mov	r6,r2
2202f544:	202f7b00 	call	2202f7b0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
2202f548:	1000021e 	bne	r2,zero,2202f554 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
2202f54c:	e0bffd17 	ldw	r2,-12(fp)
2202f550:	00000806 	br	2202f574 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
2202f554:	e0bffd17 	ldw	r2,-12(fp)
2202f558:	10800017 	ldw	r2,0(r2)
2202f55c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
2202f560:	e0fffd17 	ldw	r3,-12(fp)
2202f564:	008880f4 	movhi	r2,8707
2202f568:	10868904 	addi	r2,r2,6692
2202f56c:	18bfcb1e 	bne	r3,r2,2202f49c <__alt_data_end+0xffff009c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
2202f570:	0005883a 	mov	r2,zero
}
2202f574:	e037883a 	mov	sp,fp
2202f578:	dfc00117 	ldw	ra,4(sp)
2202f57c:	df000017 	ldw	fp,0(sp)
2202f580:	dec00204 	addi	sp,sp,8
2202f584:	f800283a 	ret

2202f588 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
2202f588:	defffc04 	addi	sp,sp,-16
2202f58c:	df000315 	stw	fp,12(sp)
2202f590:	df000304 	addi	fp,sp,12
2202f594:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
2202f598:	00bffa04 	movi	r2,-24
2202f59c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
2202f5a0:	e03ffd15 	stw	zero,-12(fp)
2202f5a4:	00001d06 	br	2202f61c <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
2202f5a8:	008880f4 	movhi	r2,8707
2202f5ac:	10820b04 	addi	r2,r2,2092
2202f5b0:	e0fffd17 	ldw	r3,-12(fp)
2202f5b4:	18c00324 	muli	r3,r3,12
2202f5b8:	10c5883a 	add	r2,r2,r3
2202f5bc:	10800017 	ldw	r2,0(r2)
2202f5c0:	1000131e 	bne	r2,zero,2202f610 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
2202f5c4:	008880f4 	movhi	r2,8707
2202f5c8:	10820b04 	addi	r2,r2,2092
2202f5cc:	e0fffd17 	ldw	r3,-12(fp)
2202f5d0:	18c00324 	muli	r3,r3,12
2202f5d4:	10c5883a 	add	r2,r2,r3
2202f5d8:	e0ffff17 	ldw	r3,-4(fp)
2202f5dc:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
2202f5e0:	008880f4 	movhi	r2,8707
2202f5e4:	10868d04 	addi	r2,r2,6708
2202f5e8:	10c00017 	ldw	r3,0(r2)
2202f5ec:	e0bffd17 	ldw	r2,-12(fp)
2202f5f0:	1880040e 	bge	r3,r2,2202f604 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
2202f5f4:	008880f4 	movhi	r2,8707
2202f5f8:	10868d04 	addi	r2,r2,6708
2202f5fc:	e0fffd17 	ldw	r3,-12(fp)
2202f600:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
2202f604:	e0bffd17 	ldw	r2,-12(fp)
2202f608:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
2202f60c:	00000606 	br	2202f628 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
2202f610:	e0bffd17 	ldw	r2,-12(fp)
2202f614:	10800044 	addi	r2,r2,1
2202f618:	e0bffd15 	stw	r2,-12(fp)
2202f61c:	e0bffd17 	ldw	r2,-12(fp)
2202f620:	10800810 	cmplti	r2,r2,32
2202f624:	103fe01e 	bne	r2,zero,2202f5a8 <__alt_data_end+0xffff01a8>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
2202f628:	e0bffe17 	ldw	r2,-8(fp)
}
2202f62c:	e037883a 	mov	sp,fp
2202f630:	df000017 	ldw	fp,0(sp)
2202f634:	dec00104 	addi	sp,sp,4
2202f638:	f800283a 	ret

2202f63c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
2202f63c:	defffb04 	addi	sp,sp,-20
2202f640:	df000415 	stw	fp,16(sp)
2202f644:	df000404 	addi	fp,sp,16
2202f648:	e13ffe15 	stw	r4,-8(fp)
2202f64c:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
2202f650:	e0bfff17 	ldw	r2,-4(fp)
2202f654:	10840070 	cmpltui	r2,r2,4097
2202f658:	1000021e 	bne	r2,zero,2202f664 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
2202f65c:	00840004 	movi	r2,4096
2202f660:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
2202f664:	e0fffe17 	ldw	r3,-8(fp)
2202f668:	e0bfff17 	ldw	r2,-4(fp)
2202f66c:	1885883a 	add	r2,r3,r2
2202f670:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
2202f674:	e0bffe17 	ldw	r2,-8(fp)
2202f678:	e0bffc15 	stw	r2,-16(fp)
2202f67c:	00000506 	br	2202f694 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
2202f680:	e0bffc17 	ldw	r2,-16(fp)
2202f684:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
2202f688:	e0bffc17 	ldw	r2,-16(fp)
2202f68c:	10800804 	addi	r2,r2,32
2202f690:	e0bffc15 	stw	r2,-16(fp)
2202f694:	e0fffc17 	ldw	r3,-16(fp)
2202f698:	e0bffd17 	ldw	r2,-12(fp)
2202f69c:	18bff836 	bltu	r3,r2,2202f680 <__alt_data_end+0xffff0280>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
2202f6a0:	e0bffe17 	ldw	r2,-8(fp)
2202f6a4:	108007cc 	andi	r2,r2,31
2202f6a8:	10000226 	beq	r2,zero,2202f6b4 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
2202f6ac:	e0bffc17 	ldw	r2,-16(fp)
2202f6b0:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
2202f6b4:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
2202f6b8:	e037883a 	mov	sp,fp
2202f6bc:	df000017 	ldw	fp,0(sp)
2202f6c0:	dec00104 	addi	sp,sp,4
2202f6c4:	f800283a 	ret

2202f6c8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
2202f6c8:	defffe04 	addi	sp,sp,-8
2202f6cc:	df000115 	stw	fp,4(sp)
2202f6d0:	df000104 	addi	fp,sp,4
2202f6d4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
2202f6d8:	e0bfff17 	ldw	r2,-4(fp)
2202f6dc:	10bffe84 	addi	r2,r2,-6
2202f6e0:	10c00428 	cmpgeui	r3,r2,16
2202f6e4:	18001a1e 	bne	r3,zero,2202f750 <alt_exception_cause_generated_bad_addr+0x88>
2202f6e8:	100690ba 	slli	r3,r2,2
2202f6ec:	008880f4 	movhi	r2,8707
2202f6f0:	10bdc004 	addi	r2,r2,-2304
2202f6f4:	1885883a 	add	r2,r3,r2
2202f6f8:	10800017 	ldw	r2,0(r2)
2202f6fc:	1000683a 	jmp	r2
2202f700:	2202f740 	call	22202f74 <__alt_data_end+0x1c3b74>
2202f704:	2202f740 	call	22202f74 <__alt_data_end+0x1c3b74>
2202f708:	2202f750 	cmplti	r8,r4,3037
2202f70c:	2202f750 	cmplti	r8,r4,3037
2202f710:	2202f750 	cmplti	r8,r4,3037
2202f714:	2202f740 	call	22202f74 <__alt_data_end+0x1c3b74>
2202f718:	2202f748 	cmpgei	r8,r4,3037
2202f71c:	2202f750 	cmplti	r8,r4,3037
2202f720:	2202f740 	call	22202f74 <__alt_data_end+0x1c3b74>
2202f724:	2202f740 	call	22202f74 <__alt_data_end+0x1c3b74>
2202f728:	2202f750 	cmplti	r8,r4,3037
2202f72c:	2202f740 	call	22202f74 <__alt_data_end+0x1c3b74>
2202f730:	2202f748 	cmpgei	r8,r4,3037
2202f734:	2202f750 	cmplti	r8,r4,3037
2202f738:	2202f750 	cmplti	r8,r4,3037
2202f73c:	2202f740 	call	22202f74 <__alt_data_end+0x1c3b74>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
2202f740:	00800044 	movi	r2,1
2202f744:	00000306 	br	2202f754 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
2202f748:	0005883a 	mov	r2,zero
2202f74c:	00000106 	br	2202f754 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
2202f750:	0005883a 	mov	r2,zero
  }
}
2202f754:	e037883a 	mov	sp,fp
2202f758:	df000017 	ldw	fp,0(sp)
2202f75c:	dec00104 	addi	sp,sp,4
2202f760:	f800283a 	ret

2202f764 <atexit>:
2202f764:	200b883a 	mov	r5,r4
2202f768:	000d883a 	mov	r6,zero
2202f76c:	0009883a 	mov	r4,zero
2202f770:	000f883a 	mov	r7,zero
2202f774:	202f82c1 	jmpi	2202f82c <__register_exitproc>

2202f778 <exit>:
2202f778:	defffe04 	addi	sp,sp,-8
2202f77c:	000b883a 	mov	r5,zero
2202f780:	dc000015 	stw	r16,0(sp)
2202f784:	dfc00115 	stw	ra,4(sp)
2202f788:	2021883a 	mov	r16,r4
2202f78c:	202f9400 	call	2202f940 <__call_exitprocs>
2202f790:	008880f4 	movhi	r2,8707
2202f794:	10868304 	addi	r2,r2,6668
2202f798:	11000017 	ldw	r4,0(r2)
2202f79c:	20800f17 	ldw	r2,60(r4)
2202f7a0:	10000126 	beq	r2,zero,2202f7a8 <exit+0x30>
2202f7a4:	103ee83a 	callr	r2
2202f7a8:	8009883a 	mov	r4,r16
2202f7ac:	202fad40 	call	2202fad4 <_exit>

2202f7b0 <memcmp>:
2202f7b0:	01c000c4 	movi	r7,3
2202f7b4:	3980192e 	bgeu	r7,r6,2202f81c <memcmp+0x6c>
2202f7b8:	2144b03a 	or	r2,r4,r5
2202f7bc:	11c4703a 	and	r2,r2,r7
2202f7c0:	10000f26 	beq	r2,zero,2202f800 <memcmp+0x50>
2202f7c4:	20800003 	ldbu	r2,0(r4)
2202f7c8:	28c00003 	ldbu	r3,0(r5)
2202f7cc:	10c0151e 	bne	r2,r3,2202f824 <memcmp+0x74>
2202f7d0:	31bfff84 	addi	r6,r6,-2
2202f7d4:	01ffffc4 	movi	r7,-1
2202f7d8:	00000406 	br	2202f7ec <memcmp+0x3c>
2202f7dc:	20800003 	ldbu	r2,0(r4)
2202f7e0:	28c00003 	ldbu	r3,0(r5)
2202f7e4:	31bfffc4 	addi	r6,r6,-1
2202f7e8:	10c00e1e 	bne	r2,r3,2202f824 <memcmp+0x74>
2202f7ec:	21000044 	addi	r4,r4,1
2202f7f0:	29400044 	addi	r5,r5,1
2202f7f4:	31fff91e 	bne	r6,r7,2202f7dc <__alt_data_end+0xffff03dc>
2202f7f8:	0005883a 	mov	r2,zero
2202f7fc:	f800283a 	ret
2202f800:	20c00017 	ldw	r3,0(r4)
2202f804:	28800017 	ldw	r2,0(r5)
2202f808:	1880041e 	bne	r3,r2,2202f81c <memcmp+0x6c>
2202f80c:	31bfff04 	addi	r6,r6,-4
2202f810:	21000104 	addi	r4,r4,4
2202f814:	29400104 	addi	r5,r5,4
2202f818:	39bff936 	bltu	r7,r6,2202f800 <__alt_data_end+0xffff0400>
2202f81c:	303fe91e 	bne	r6,zero,2202f7c4 <__alt_data_end+0xffff03c4>
2202f820:	003ff506 	br	2202f7f8 <__alt_data_end+0xffff03f8>
2202f824:	10c5c83a 	sub	r2,r2,r3
2202f828:	f800283a 	ret

2202f82c <__register_exitproc>:
2202f82c:	008880f4 	movhi	r2,8707
2202f830:	defffa04 	addi	sp,sp,-24
2202f834:	10868304 	addi	r2,r2,6668
2202f838:	dc000315 	stw	r16,12(sp)
2202f83c:	14000017 	ldw	r16,0(r2)
2202f840:	dc400415 	stw	r17,16(sp)
2202f844:	dfc00515 	stw	ra,20(sp)
2202f848:	80805217 	ldw	r2,328(r16)
2202f84c:	2023883a 	mov	r17,r4
2202f850:	10003626 	beq	r2,zero,2202f92c <__register_exitproc+0x100>
2202f854:	10c00117 	ldw	r3,4(r2)
2202f858:	010007c4 	movi	r4,31
2202f85c:	20c00e16 	blt	r4,r3,2202f898 <__register_exitproc+0x6c>
2202f860:	1a400044 	addi	r9,r3,1
2202f864:	8800211e 	bne	r17,zero,2202f8ec <__register_exitproc+0xc0>
2202f868:	18c00084 	addi	r3,r3,2
2202f86c:	18c7883a 	add	r3,r3,r3
2202f870:	18c7883a 	add	r3,r3,r3
2202f874:	12400115 	stw	r9,4(r2)
2202f878:	10c7883a 	add	r3,r2,r3
2202f87c:	19400015 	stw	r5,0(r3)
2202f880:	0005883a 	mov	r2,zero
2202f884:	dfc00517 	ldw	ra,20(sp)
2202f888:	dc400417 	ldw	r17,16(sp)
2202f88c:	dc000317 	ldw	r16,12(sp)
2202f890:	dec00604 	addi	sp,sp,24
2202f894:	f800283a 	ret
2202f898:	00800034 	movhi	r2,0
2202f89c:	10800004 	addi	r2,r2,0
2202f8a0:	10002526 	beq	r2,zero,2202f938 <__register_exitproc+0x10c>
2202f8a4:	01006404 	movi	r4,400
2202f8a8:	d9400015 	stw	r5,0(sp)
2202f8ac:	d9800115 	stw	r6,4(sp)
2202f8b0:	d9c00215 	stw	r7,8(sp)
2202f8b4:	00000000 	call	20000000 <__alt_mem_mem_if_ddr3_emif+0x20000000>
2202f8b8:	d9400017 	ldw	r5,0(sp)
2202f8bc:	d9800117 	ldw	r6,4(sp)
2202f8c0:	d9c00217 	ldw	r7,8(sp)
2202f8c4:	10001c26 	beq	r2,zero,2202f938 <__register_exitproc+0x10c>
2202f8c8:	80c05217 	ldw	r3,328(r16)
2202f8cc:	10000115 	stw	zero,4(r2)
2202f8d0:	02400044 	movi	r9,1
2202f8d4:	10c00015 	stw	r3,0(r2)
2202f8d8:	80805215 	stw	r2,328(r16)
2202f8dc:	10006215 	stw	zero,392(r2)
2202f8e0:	10006315 	stw	zero,396(r2)
2202f8e4:	0007883a 	mov	r3,zero
2202f8e8:	883fdf26 	beq	r17,zero,2202f868 <__alt_data_end+0xffff0468>
2202f8ec:	18d1883a 	add	r8,r3,r3
2202f8f0:	4211883a 	add	r8,r8,r8
2202f8f4:	1211883a 	add	r8,r2,r8
2202f8f8:	41802215 	stw	r6,136(r8)
2202f8fc:	01000044 	movi	r4,1
2202f900:	11806217 	ldw	r6,392(r2)
2202f904:	20c8983a 	sll	r4,r4,r3
2202f908:	310cb03a 	or	r6,r6,r4
2202f90c:	11806215 	stw	r6,392(r2)
2202f910:	41c04215 	stw	r7,264(r8)
2202f914:	01800084 	movi	r6,2
2202f918:	89bfd31e 	bne	r17,r6,2202f868 <__alt_data_end+0xffff0468>
2202f91c:	11806317 	ldw	r6,396(r2)
2202f920:	3108b03a 	or	r4,r6,r4
2202f924:	11006315 	stw	r4,396(r2)
2202f928:	003fcf06 	br	2202f868 <__alt_data_end+0xffff0468>
2202f92c:	80805304 	addi	r2,r16,332
2202f930:	80805215 	stw	r2,328(r16)
2202f934:	003fc706 	br	2202f854 <__alt_data_end+0xffff0454>
2202f938:	00bfffc4 	movi	r2,-1
2202f93c:	003fd106 	br	2202f884 <__alt_data_end+0xffff0484>

2202f940 <__call_exitprocs>:
2202f940:	008880f4 	movhi	r2,8707
2202f944:	10868304 	addi	r2,r2,6668
2202f948:	10800017 	ldw	r2,0(r2)
2202f94c:	defff404 	addi	sp,sp,-48
2202f950:	dd800815 	stw	r22,32(sp)
2202f954:	d8800015 	stw	r2,0(sp)
2202f958:	10805204 	addi	r2,r2,328
2202f95c:	dd000615 	stw	r20,24(sp)
2202f960:	dc800415 	stw	r18,16(sp)
2202f964:	dfc00b15 	stw	ra,44(sp)
2202f968:	df000a15 	stw	fp,40(sp)
2202f96c:	ddc00915 	stw	r23,36(sp)
2202f970:	dd400715 	stw	r21,28(sp)
2202f974:	dcc00515 	stw	r19,20(sp)
2202f978:	dc400315 	stw	r17,12(sp)
2202f97c:	dc000215 	stw	r16,8(sp)
2202f980:	2025883a 	mov	r18,r4
2202f984:	2829883a 	mov	r20,r5
2202f988:	d8800115 	stw	r2,4(sp)
2202f98c:	05bfffc4 	movi	r22,-1
2202f990:	d8800017 	ldw	r2,0(sp)
2202f994:	14c05217 	ldw	r19,328(r2)
2202f998:	98001d26 	beq	r19,zero,2202fa10 <__call_exitprocs+0xd0>
2202f99c:	dd400117 	ldw	r21,4(sp)
2202f9a0:	98800117 	ldw	r2,4(r19)
2202f9a4:	173fffc4 	addi	fp,r2,-1
2202f9a8:	e0000d16 	blt	fp,zero,2202f9e0 <__call_exitprocs+0xa0>
2202f9ac:	14000044 	addi	r16,r2,1
2202f9b0:	8421883a 	add	r16,r16,r16
2202f9b4:	8421883a 	add	r16,r16,r16
2202f9b8:	84402004 	addi	r17,r16,128
2202f9bc:	9c63883a 	add	r17,r19,r17
2202f9c0:	9c21883a 	add	r16,r19,r16
2202f9c4:	a0001e26 	beq	r20,zero,2202fa40 <__call_exitprocs+0x100>
2202f9c8:	80804017 	ldw	r2,256(r16)
2202f9cc:	15001c26 	beq	r2,r20,2202fa40 <__call_exitprocs+0x100>
2202f9d0:	e73fffc4 	addi	fp,fp,-1
2202f9d4:	843fff04 	addi	r16,r16,-4
2202f9d8:	8c7fff04 	addi	r17,r17,-4
2202f9dc:	e5bff91e 	bne	fp,r22,2202f9c4 <__alt_data_end+0xffff05c4>
2202f9e0:	00800034 	movhi	r2,0
2202f9e4:	10800004 	addi	r2,r2,0
2202f9e8:	10000926 	beq	r2,zero,2202fa10 <__call_exitprocs+0xd0>
2202f9ec:	98800117 	ldw	r2,4(r19)
2202f9f0:	1000311e 	bne	r2,zero,2202fab8 <__call_exitprocs+0x178>
2202f9f4:	98800017 	ldw	r2,0(r19)
2202f9f8:	10003426 	beq	r2,zero,2202facc <__call_exitprocs+0x18c>
2202f9fc:	9809883a 	mov	r4,r19
2202fa00:	a8800015 	stw	r2,0(r21)
2202fa04:	00000000 	call	20000000 <__alt_mem_mem_if_ddr3_emif+0x20000000>
2202fa08:	acc00017 	ldw	r19,0(r21)
2202fa0c:	983fe41e 	bne	r19,zero,2202f9a0 <__alt_data_end+0xffff05a0>
2202fa10:	dfc00b17 	ldw	ra,44(sp)
2202fa14:	df000a17 	ldw	fp,40(sp)
2202fa18:	ddc00917 	ldw	r23,36(sp)
2202fa1c:	dd800817 	ldw	r22,32(sp)
2202fa20:	dd400717 	ldw	r21,28(sp)
2202fa24:	dd000617 	ldw	r20,24(sp)
2202fa28:	dcc00517 	ldw	r19,20(sp)
2202fa2c:	dc800417 	ldw	r18,16(sp)
2202fa30:	dc400317 	ldw	r17,12(sp)
2202fa34:	dc000217 	ldw	r16,8(sp)
2202fa38:	dec00c04 	addi	sp,sp,48
2202fa3c:	f800283a 	ret
2202fa40:	98800117 	ldw	r2,4(r19)
2202fa44:	80c00017 	ldw	r3,0(r16)
2202fa48:	10bfffc4 	addi	r2,r2,-1
2202fa4c:	17001526 	beq	r2,fp,2202faa4 <__call_exitprocs+0x164>
2202fa50:	80000015 	stw	zero,0(r16)
2202fa54:	183fde26 	beq	r3,zero,2202f9d0 <__alt_data_end+0xffff05d0>
2202fa58:	00800044 	movi	r2,1
2202fa5c:	1708983a 	sll	r4,r2,fp
2202fa60:	98806217 	ldw	r2,392(r19)
2202fa64:	9dc00117 	ldw	r23,4(r19)
2202fa68:	2084703a 	and	r2,r4,r2
2202fa6c:	1000061e 	bne	r2,zero,2202fa88 <__call_exitprocs+0x148>
2202fa70:	183ee83a 	callr	r3
2202fa74:	98800117 	ldw	r2,4(r19)
2202fa78:	15ffc51e 	bne	r2,r23,2202f990 <__alt_data_end+0xffff0590>
2202fa7c:	a8800017 	ldw	r2,0(r21)
2202fa80:	14ffd326 	beq	r2,r19,2202f9d0 <__alt_data_end+0xffff05d0>
2202fa84:	003fc206 	br	2202f990 <__alt_data_end+0xffff0590>
2202fa88:	98806317 	ldw	r2,396(r19)
2202fa8c:	2084703a 	and	r2,r4,r2
2202fa90:	1000061e 	bne	r2,zero,2202faac <__call_exitprocs+0x16c>
2202fa94:	89400017 	ldw	r5,0(r17)
2202fa98:	9009883a 	mov	r4,r18
2202fa9c:	183ee83a 	callr	r3
2202faa0:	003ff406 	br	2202fa74 <__alt_data_end+0xffff0674>
2202faa4:	9f000115 	stw	fp,4(r19)
2202faa8:	003fea06 	br	2202fa54 <__alt_data_end+0xffff0654>
2202faac:	89000017 	ldw	r4,0(r17)
2202fab0:	183ee83a 	callr	r3
2202fab4:	003fef06 	br	2202fa74 <__alt_data_end+0xffff0674>
2202fab8:	98800017 	ldw	r2,0(r19)
2202fabc:	982b883a 	mov	r21,r19
2202fac0:	1027883a 	mov	r19,r2
2202fac4:	983fb61e 	bne	r19,zero,2202f9a0 <__alt_data_end+0xffff05a0>
2202fac8:	003fd106 	br	2202fa10 <__alt_data_end+0xffff0610>
2202facc:	0005883a 	mov	r2,zero
2202fad0:	003ffa06 	br	2202fabc <__alt_data_end+0xffff06bc>

2202fad4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
2202fad4:	defffd04 	addi	sp,sp,-12
2202fad8:	df000215 	stw	fp,8(sp)
2202fadc:	df000204 	addi	fp,sp,8
2202fae0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
2202fae4:	0001883a 	nop
2202fae8:	e0bfff17 	ldw	r2,-4(fp)
2202faec:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
2202faf0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
2202faf4:	10000226 	beq	r2,zero,2202fb00 <_exit+0x2c>
    ALT_SIM_FAIL();
2202faf8:	002af070 	cmpltui	zero,zero,43969
2202fafc:	00000106 	br	2202fb04 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
2202fb00:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
2202fb04:	003fff06 	br	2202fb04 <__alt_data_end+0xffff0704>
